//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/SExprParser.java
//

#ifndef SExprParser_H
#define SExprParser_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaIoInputStream;
@class LibOrgBouncycastleOpenpgpPGPPublicKey;
@class LibOrgBouncycastleOpenpgpPGPSecretKey;
@protocol LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator;
@protocol LibOrgBouncycastleOpenpgpOperatorPBEProtectionRemoverFactory;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;

@interface LibOrgBouncycastleGpgSExprParser : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)digestProvider;

- (LibOrgBouncycastleOpenpgpPGPSecretKey *)parseSecretKeyWithJavaIoInputStream:(JavaIoInputStream *)inputStream
              withLibOrgBouncycastleOpenpgpOperatorPBEProtectionRemoverFactory:(id<LibOrgBouncycastleOpenpgpOperatorPBEProtectionRemoverFactory>)keyProtectionRemoverFactory
                 withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator:(id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator>)fingerPrintCalculator;

- (LibOrgBouncycastleOpenpgpPGPSecretKey *)parseSecretKeyWithJavaIoInputStream:(JavaIoInputStream *)inputStream
              withLibOrgBouncycastleOpenpgpOperatorPBEProtectionRemoverFactory:(id<LibOrgBouncycastleOpenpgpOperatorPBEProtectionRemoverFactory>)keyProtectionRemoverFactory
                                     withLibOrgBouncycastleOpenpgpPGPPublicKey:(LibOrgBouncycastleOpenpgpPGPPublicKey *)pubKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleGpgSExprParser)

FOUNDATION_EXPORT void LibOrgBouncycastleGpgSExprParser_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleGpgSExprParser *self, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> digestProvider);

FOUNDATION_EXPORT LibOrgBouncycastleGpgSExprParser *new_LibOrgBouncycastleGpgSExprParser_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> digestProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleGpgSExprParser *create_LibOrgBouncycastleGpgSExprParser_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> digestProvider);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleGpgSExprParser)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SExprParser_H
