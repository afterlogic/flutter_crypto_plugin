//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSKeyGenerationParameters.java
//

#ifndef GMSSKeyGenerationParameters_H
#define GMSSKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoGmssGMSSParameters;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
         withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)params;

- (LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters *self, JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSKeyGenerationParameters_H
