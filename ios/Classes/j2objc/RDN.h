//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x500/RDN.java
//

#ifndef RDN_H
#define RDN_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X500AttributeTypeAndValue;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1X500RDN : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                     withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)value;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValue:(LibOrgBouncycastleAsn1X500AttributeTypeAndValue *)attrTAndV;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValueArray:(IOSObjectArray *)aAndVs;

- (LibOrgBouncycastleAsn1X500AttributeTypeAndValue *)getFirst;

+ (LibOrgBouncycastleAsn1X500RDN *)getInstanceWithId:(id)obj;

- (IOSObjectArray *)getTypesAndValues;

- (jboolean)isMultiValued;

- (jint)size;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X500RDN)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *LibOrgBouncycastleAsn1X500RDN_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1X500RDN *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *new_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *create_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValue_(LibOrgBouncycastleAsn1X500RDN *self, LibOrgBouncycastleAsn1X500AttributeTypeAndValue *attrTAndV);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *new_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValue_(LibOrgBouncycastleAsn1X500AttributeTypeAndValue *attrTAndV) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *create_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValue_(LibOrgBouncycastleAsn1X500AttributeTypeAndValue *attrTAndV);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValueArray_(LibOrgBouncycastleAsn1X500RDN *self, IOSObjectArray *aAndVs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *new_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValueArray_(IOSObjectArray *aAndVs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500RDN *create_LibOrgBouncycastleAsn1X500RDN_initWithLibOrgBouncycastleAsn1X500AttributeTypeAndValueArray_(IOSObjectArray *aAndVs);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X500RDN)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RDN_H
