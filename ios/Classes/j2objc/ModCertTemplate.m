//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/ModCertTemplate.java
//

#include "ASN1Boolean.h"
#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "BodyPartList.h"
#include "BodyPartPath.h"
#include "CertTemplate.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "ModCertTemplate.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmcModCertTemplate () {
 @public
  LibOrgBouncycastleAsn1CmcBodyPartPath *pkiDataReference_;
  LibOrgBouncycastleAsn1CmcBodyPartList *certReferences_;
  jboolean replace_;
  LibOrgBouncycastleAsn1CrmfCertTemplate *certTemplate_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcModCertTemplate, pkiDataReference_, LibOrgBouncycastleAsn1CmcBodyPartPath *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcModCertTemplate, certReferences_, LibOrgBouncycastleAsn1CmcBodyPartList *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcModCertTemplate, certTemplate_, LibOrgBouncycastleAsn1CrmfCertTemplate *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcModCertTemplate *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcModCertTemplate *new_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcModCertTemplate *create_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmcModCertTemplate

- (instancetype)initWithLibOrgBouncycastleAsn1CmcBodyPartPath:(LibOrgBouncycastleAsn1CmcBodyPartPath *)pkiDataReference
                    withLibOrgBouncycastleAsn1CmcBodyPartList:(LibOrgBouncycastleAsn1CmcBodyPartList *)certReferences
                                                  withBoolean:(jboolean)replace
                   withLibOrgBouncycastleAsn1CrmfCertTemplate:(LibOrgBouncycastleAsn1CrmfCertTemplate *)certTemplate {
  LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_(self, pkiDataReference, certReferences, replace, certTemplate);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmcModCertTemplate *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmcModCertTemplate_getInstanceWithId_(o);
}

- (LibOrgBouncycastleAsn1CmcBodyPartPath *)getPkiDataReference {
  return pkiDataReference_;
}

- (LibOrgBouncycastleAsn1CmcBodyPartList *)getCertReferences {
  return certReferences_;
}

- (jboolean)isReplacingFields {
  return replace_;
}

- (LibOrgBouncycastleAsn1CrmfCertTemplate *)getCertTemplate {
  return certTemplate_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:pkiDataReference_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:certReferences_];
  if (!replace_) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithBoolean_(replace_)];
  }
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:certTemplate_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmcModCertTemplate;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmcBodyPartPath;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmcBodyPartList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CrmfCertTemplate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1CmcBodyPartPath:withLibOrgBouncycastleAsn1CmcBodyPartList:withBoolean:withLibOrgBouncycastleAsn1CrmfCertTemplate:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getPkiDataReference);
  methods[4].selector = @selector(getCertReferences);
  methods[5].selector = @selector(isReplacingFields);
  methods[6].selector = @selector(getCertTemplate);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pkiDataReference_", "LLibOrgBouncycastleAsn1CmcBodyPartPath;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "certReferences_", "LLibOrgBouncycastleAsn1CmcBodyPartList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "replace_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "certTemplate_", "LLibOrgBouncycastleAsn1CrmfCertTemplate;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1CmcBodyPartPath;LLibOrgBouncycastleAsn1CmcBodyPartList;ZLLibOrgBouncycastleAsn1CrmfCertTemplate;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmcModCertTemplate = { "ModCertTemplate", "lib.org.bouncycastle.asn1.cmc", ptrTable, methods, fields, 7, 0x1, 8, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmcModCertTemplate;
}

@end

void LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_(LibOrgBouncycastleAsn1CmcModCertTemplate *self, LibOrgBouncycastleAsn1CmcBodyPartPath *pkiDataReference, LibOrgBouncycastleAsn1CmcBodyPartList *certReferences, jboolean replace, LibOrgBouncycastleAsn1CrmfCertTemplate *certTemplate) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->pkiDataReference_ = pkiDataReference;
  self->certReferences_ = certReferences;
  self->replace_ = replace;
  self->certTemplate_ = certTemplate;
}

LibOrgBouncycastleAsn1CmcModCertTemplate *new_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_(LibOrgBouncycastleAsn1CmcBodyPartPath *pkiDataReference, LibOrgBouncycastleAsn1CmcBodyPartList *certReferences, jboolean replace, LibOrgBouncycastleAsn1CrmfCertTemplate *certTemplate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcModCertTemplate, initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_, pkiDataReference, certReferences, replace, certTemplate)
}

LibOrgBouncycastleAsn1CmcModCertTemplate *create_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_(LibOrgBouncycastleAsn1CmcBodyPartPath *pkiDataReference, LibOrgBouncycastleAsn1CmcBodyPartList *certReferences, jboolean replace, LibOrgBouncycastleAsn1CrmfCertTemplate *certTemplate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcModCertTemplate, initWithLibOrgBouncycastleAsn1CmcBodyPartPath_withLibOrgBouncycastleAsn1CmcBodyPartList_withBoolean_withLibOrgBouncycastleAsn1CrmfCertTemplate_, pkiDataReference, certReferences, replace, certTemplate)
}

void LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcModCertTemplate *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 4 && [seq size] != 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"incorrect sequence size");
  }
  self->pkiDataReference_ = LibOrgBouncycastleAsn1CmcBodyPartPath_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->certReferences_ = LibOrgBouncycastleAsn1CmcBodyPartList_getInstanceWithId_([seq getObjectAtWithInt:1]);
  if ([seq size] == 4) {
    self->replace_ = [((LibOrgBouncycastleAsn1ASN1Boolean *) nil_chk(LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithId_([seq getObjectAtWithInt:2]))) isTrue];
    self->certTemplate_ = LibOrgBouncycastleAsn1CrmfCertTemplate_getInstanceWithId_([seq getObjectAtWithInt:3]);
  }
  else {
    self->replace_ = true;
    self->certTemplate_ = LibOrgBouncycastleAsn1CrmfCertTemplate_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
}

LibOrgBouncycastleAsn1CmcModCertTemplate *new_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcModCertTemplate, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmcModCertTemplate *create_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcModCertTemplate, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmcModCertTemplate *LibOrgBouncycastleAsn1CmcModCertTemplate_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmcModCertTemplate_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmcModCertTemplate class]]) {
    return (LibOrgBouncycastleAsn1CmcModCertTemplate *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmcModCertTemplate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmcModCertTemplate)
