//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/DistributionPoint.java
//

#ifndef DistributionPoint_H
#define DistributionPoint_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509DistributionPointName;
@class LibOrgBouncycastleAsn1X509GeneralNames;
@class LibOrgBouncycastleAsn1X509ReasonFlags;

@interface LibOrgBouncycastleAsn1X509DistributionPoint : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1X509DistributionPointName *distributionPoint_;
  LibOrgBouncycastleAsn1X509ReasonFlags *reasons_;
  LibOrgBouncycastleAsn1X509GeneralNames *cRLIssuer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509DistributionPointName:(LibOrgBouncycastleAsn1X509DistributionPointName *)distributionPoint
                                        withLibOrgBouncycastleAsn1X509ReasonFlags:(LibOrgBouncycastleAsn1X509ReasonFlags *)reasons
                                       withLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)cRLIssuer;

- (LibOrgBouncycastleAsn1X509GeneralNames *)getCRLIssuer;

- (LibOrgBouncycastleAsn1X509DistributionPointName *)getDistributionPoint;

+ (LibOrgBouncycastleAsn1X509DistributionPoint *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                           withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509DistributionPoint *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509ReasonFlags *)getReasons;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509DistributionPoint)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509DistributionPoint, distributionPoint_, LibOrgBouncycastleAsn1X509DistributionPointName *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509DistributionPoint, reasons_, LibOrgBouncycastleAsn1X509ReasonFlags *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509DistributionPoint, cRLIssuer_, LibOrgBouncycastleAsn1X509GeneralNames *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *LibOrgBouncycastleAsn1X509DistributionPoint_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *LibOrgBouncycastleAsn1X509DistributionPoint_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509DistributionPoint *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *new_LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *create_LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1X509DistributionPointName_withLibOrgBouncycastleAsn1X509ReasonFlags_withLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509DistributionPoint *self, LibOrgBouncycastleAsn1X509DistributionPointName *distributionPoint, LibOrgBouncycastleAsn1X509ReasonFlags *reasons, LibOrgBouncycastleAsn1X509GeneralNames *cRLIssuer);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *new_LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1X509DistributionPointName_withLibOrgBouncycastleAsn1X509ReasonFlags_withLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509DistributionPointName *distributionPoint, LibOrgBouncycastleAsn1X509ReasonFlags *reasons, LibOrgBouncycastleAsn1X509GeneralNames *cRLIssuer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DistributionPoint *create_LibOrgBouncycastleAsn1X509DistributionPoint_initWithLibOrgBouncycastleAsn1X509DistributionPointName_withLibOrgBouncycastleAsn1X509ReasonFlags_withLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509DistributionPointName *distributionPoint, LibOrgBouncycastleAsn1X509ReasonFlags *reasons, LibOrgBouncycastleAsn1X509GeneralNames *cRLIssuer);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509DistributionPoint)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DistributionPoint_H
