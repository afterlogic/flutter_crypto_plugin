//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/rainbow/RainbowKeyGenerationParameters.java
//

#ifndef RainbowKeyGenerationParameters_H
#define RainbowKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoRainbowRainbowParameters;

@interface LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
   withLibOrgBouncycastlePqcCryptoRainbowRainbowParameters:(LibOrgBouncycastlePqcCryptoRainbowRainbowParameters *)params;

- (LibOrgBouncycastlePqcCryptoRainbowRainbowParameters *)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoRainbowRainbowParameters_(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters *self, JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoRainbowRainbowParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoRainbowRainbowParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoRainbowRainbowParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoRainbowRainbowParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoRainbowRainbowParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RainbowKeyGenerationParameters_H
