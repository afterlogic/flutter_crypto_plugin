//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/Blake2sDigest.java
//

#ifndef Blake2sDigest_H
#define Blake2sDigest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ExtendedDigest.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoDigestsBlake2sDigest : NSObject < LibOrgBouncycastleCryptoExtendedDigest >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest:(LibOrgBouncycastleCryptoDigestsBlake2sDigest *)digest;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key
                                    withInt:(jint)digestBytes
                              withByteArray:(IOSByteArray *)salt
                              withByteArray:(IOSByteArray *)personalization;

- (instancetype __nonnull)initWithInt:(jint)digestBits;

- (void)clearKey;

- (void)clearSalt;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOffset;

- (NSString *)getAlgorithmName;

- (jint)getByteLength;

- (jint)getDigestSize;

- (void)reset;

- (void)updateWithByte:(jbyte)b;

- (void)updateWithByteArray:(IOSByteArray *)message
                    withInt:(jint)offset
                    withInt:(jint)len;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoDigestsBlake2sDigest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsBlake2sDigest_init(LibOrgBouncycastleCryptoDigestsBlake2sDigest *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *create_LibOrgBouncycastleCryptoDigestsBlake2sDigest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *self, LibOrgBouncycastleCryptoDigestsBlake2sDigest *digest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *create_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *digest);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *self, jint digestBits);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(jint digestBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *create_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(jint digestBits);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *self, IOSByteArray *key);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_(IOSByteArray *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *create_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_(IOSByteArray *key);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_withInt_withByteArray_withByteArray_(LibOrgBouncycastleCryptoDigestsBlake2sDigest *self, IOSByteArray *key, jint digestBytes, IOSByteArray *salt, IOSByteArray *personalization);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_withInt_withByteArray_withByteArray_(IOSByteArray *key, jint digestBytes, IOSByteArray *salt, IOSByteArray *personalization) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsBlake2sDigest *create_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithByteArray_withInt_withByteArray_withByteArray_(IOSByteArray *key, jint digestBytes, IOSByteArray *salt, IOSByteArray *personalization);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsBlake2sDigest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Blake2sDigest_H
