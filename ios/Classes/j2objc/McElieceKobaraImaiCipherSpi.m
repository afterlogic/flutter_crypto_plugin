//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKobaraImaiCipherSpi.java
//

#include "AsymmetricHybridCipher.h"
#include "AsymmetricKeyParameter.h"
#include "CipherParameters.h"
#include "CipherSpiExt.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "InvalidCipherTextException.h"
#include "J2ObjC_source.h"
#include "McElieceCCA2KeyParameters.h"
#include "McElieceCCA2KeysToParams.h"
#include "McElieceKobaraImaiCipher.h"
#include "McElieceKobaraImaiCipherSpi.h"
#include "ParametersWithRandom.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Key.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/BadPaddingException.h"

@interface LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi () {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *cipher_;
  JavaIoByteArrayOutputStream *buf_;
}

- (IOSByteArray *)pad;

- (IOSByteArray *)unpadWithByteArray:(IOSByteArray *)pmBytes;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, cipher_, LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, buf_, JavaIoByteArrayOutputStream *)

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_pad(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self);

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_unpadWithByteArray_(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self, IOSByteArray *pmBytes);

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *)cipher {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, digest, cipher);
  return self;
}

- (IOSByteArray *)updateWithByteArray:(IOSByteArray *)input
                              withInt:(jint)inOff
                              withInt:(jint)inLen {
  [((JavaIoByteArrayOutputStream *) nil_chk(buf_)) writeWithByteArray:input withInt:inOff withInt:inLen];
  return [IOSByteArray newArrayWithLength:0];
}

- (IOSByteArray *)doFinalWithByteArray:(IOSByteArray *)input
                               withInt:(jint)inOff
                               withInt:(jint)inLen {
  (void) [self updateWithByteArray:input withInt:inOff withInt:inLen];
  if (opMode_ == LibOrgBouncycastlePqcJcajceProviderUtilCipherSpiExt_ENCRYPT_MODE) {
    return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) messageEncryptWithByteArray:LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_pad(self)];
  }
  else if (opMode_ == LibOrgBouncycastlePqcJcajceProviderUtilCipherSpiExt_DECRYPT_MODE) {
    @try {
      IOSByteArray *inputOfDecr = [((JavaIoByteArrayOutputStream *) nil_chk(buf_)) toByteArray];
      [((JavaIoByteArrayOutputStream *) nil_chk(buf_)) reset];
      return LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_unpadWithByteArray_(self, [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) messageDecryptWithByteArray:inputOfDecr]);
    }
    @catch (LibOrgBouncycastleCryptoInvalidCipherTextException *e) {
      @throw new_JavaxCryptoBadPaddingException_initWithNSString_([e getMessage]);
    }
  }
  else {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"unknown mode in doFinal");
  }
}

- (jint)encryptOutputSizeWithInt:(jint)inLen {
  return 0;
}

- (jint)decryptOutputSizeWithInt:(jint)inLen {
  return 0;
}

- (void)initCipherEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
  withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr {
  [((JavaIoByteArrayOutputStream *) nil_chk(buf_)) reset];
  id<LibOrgBouncycastleCryptoCipherParameters> param;
  param = LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeysToParams_generatePublicKeyParameterWithJavaSecurityPublicKey_((id<JavaSecurityPublicKey>) cast_check(key, JavaSecurityPublicKey_class_()));
  param = new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, sr);
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)initCipherDecryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
  withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  [((JavaIoByteArrayOutputStream *) nil_chk(buf_)) reset];
  id<LibOrgBouncycastleCryptoCipherParameters> param;
  param = LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeysToParams_generatePrivateKeyParameterWithJavaSecurityPrivateKey_((id<JavaSecurityPrivateKey>) cast_check(key, JavaSecurityPrivateKey_class_()));
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (NSString *)getName {
  return @"McElieceKobaraImaiCipher";
}

- (jint)getKeySizeWithJavaSecurityKey:(id<JavaSecurityKey>)key {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *mcElieceCCA2KeyParameters;
  if ([JavaSecurityPublicKey_class_() isInstance:key]) {
    mcElieceCCA2KeyParameters = (LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *) cast_chk(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeysToParams_generatePublicKeyParameterWithJavaSecurityPublicKey_((id<JavaSecurityPublicKey>) cast_check(key, JavaSecurityPublicKey_class_())), [LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters class]);
    return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) getKeySizeWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters:mcElieceCCA2KeyParameters];
  }
  else if ([JavaSecurityPrivateKey_class_() isInstance:key]) {
    mcElieceCCA2KeyParameters = (LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *) cast_chk(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeysToParams_generatePrivateKeyParameterWithJavaSecurityPrivateKey_((id<JavaSecurityPrivateKey>) cast_check(key, JavaSecurityPrivateKey_class_())), [LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters class]);
    return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *) nil_chk(cipher_)) getKeySizeWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters:mcElieceCCA2KeyParameters];
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_init();
  }
}

- (IOSByteArray *)pad {
  return LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_pad(self);
}

- (IOSByteArray *)unpadWithByteArray:(IOSByteArray *)pmBytes {
  return LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_unpadWithByteArray_(self, pmBytes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 2, 4, -1, -1, -1 },
    { NULL, "I", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 12, 10, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, 14, 15, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 16, 17, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher:);
  methods[2].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(doFinalWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(encryptOutputSizeWithInt:);
  methods[5].selector = @selector(decryptOutputSizeWithInt:);
  methods[6].selector = @selector(initCipherEncryptWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[7].selector = @selector(initCipherDecryptWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:);
  methods[8].selector = @selector(getName);
  methods[9].selector = @selector(getKeySizeWithJavaSecurityKey:);
  methods[10].selector = @selector(pad);
  methods[11].selector = @selector(unpadWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cipher_", "LLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "buf_", "LJavaIoByteArrayOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;LLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher;", "update", "[BII", "doFinal", "LJavaxCryptoBadPaddingException;", "encryptOutputSize", "I", "decryptOutputSize", "initCipherEncrypt", "LJavaSecurityKey;LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;LJavaSecurityInvalidAlgorithmParameterException;", "initCipherDecrypt", "LJavaSecurityKey;LJavaSecuritySpecAlgorithmParameterSpec;", "getKeySize", "LJavaSecurityKey;", "LJavaSecurityInvalidKeyException;", "unpad", "[B", "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai;LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224;LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256;LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384;LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi = { "McElieceKobaraImaiCipherSpi", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, 18, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self) {
  LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher_init(self);
  self->buf_ = new_JavaIoByteArrayOutputStream_init();
  self->buf_ = new_JavaIoByteArrayOutputStream_init();
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, init)
}

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *cipher) {
  LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher_init(self);
  self->buf_ = new_JavaIoByteArrayOutputStream_init();
  self->digest_ = digest;
  self->cipher_ = cipher;
  self->buf_ = new_JavaIoByteArrayOutputStream_init();
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *cipher) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_, digest, cipher)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *cipher) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_, digest, cipher)
}

IOSByteArray *LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_pad(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self) {
  [((JavaIoByteArrayOutputStream *) nil_chk(self->buf_)) writeWithInt:(jint) 0x01];
  IOSByteArray *result = [((JavaIoByteArrayOutputStream *) nil_chk(self->buf_)) toByteArray];
  [((JavaIoByteArrayOutputStream *) nil_chk(self->buf_)) reset];
  return result;
}

IOSByteArray *LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_unpadWithByteArray_(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi *self, IOSByteArray *pmBytes) {
  jint index;
  for (index = ((IOSByteArray *) nil_chk(pmBytes))->size_ - 1; index >= 0 && IOSByteArray_Get(pmBytes, index) == 0; index--) {
    
    ;
  }
  if (IOSByteArray_Get(pmBytes, index) != (jint) 0x01) {
    @throw new_JavaxCryptoBadPaddingException_initWithNSString_(@"invalid ciphertext");
  }
  IOSByteArray *mBytes = [IOSByteArray newArrayWithLength:index];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(pmBytes, 0, mBytes, 0, index);
  return mBytes;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai = { "McElieceKobaraImai", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai *self) {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init());
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224 = { "McElieceKobaraImai224", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224 *self) {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init());
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224 *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224 *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai224)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256 = { "McElieceKobaraImai256", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256 *self) {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init());
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256 *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256 *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai256)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384 = { "McElieceKobaraImai384", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384 *self) {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init());
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384 *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384 *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai384)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512 = { "McElieceKobaraImai512", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512_init(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512 *self) {
  LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init());
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512 *new_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512, init)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512 *create_LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceMcElieceKobaraImaiCipherSpi_McElieceKobaraImai512)
