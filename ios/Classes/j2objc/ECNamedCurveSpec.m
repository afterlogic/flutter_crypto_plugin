//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECNamedCurveSpec.java
//

#include "Arrays.h"
#include "EC5Util.h"
#include "ECAlgorithms.h"
#include "ECCurve.h"
#include "ECFieldElement.h"
#include "ECNamedCurveSpec.h"
#include "ECPoint.h"
#include "FiniteField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Polynomial.h"
#include "PolynomialExtensionField.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"

@interface LibOrgBouncycastleJceSpecECNamedCurveSpec () {
 @public
  NSString *name_;
}

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                                                     withByteArray:(IOSByteArray *)seed;

+ (id<JavaSecuritySpecECField>)convertFieldWithLibOrgBouncycastleMathFieldFiniteField:(id<LibOrgBouncycastleMathFieldFiniteField>)field;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecECNamedCurveSpec, name_, NSString *)

__attribute__((unused)) static JavaSecuritySpecEllipticCurve *LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed);

__attribute__((unused)) static id<JavaSecuritySpecECField> LibOrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_(id<LibOrgBouncycastleMathFieldFiniteField> field);

@implementation LibOrgBouncycastleJceSpecECNamedCurveSpec

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                                                     withByteArray:(IOSByteArray *)seed {
  return LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, seed);
}

+ (id<JavaSecuritySpecECField>)convertFieldWithLibOrgBouncycastleMathFieldFiniteField:(id<LibOrgBouncycastleMathFieldFiniteField>)field {
  return LibOrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_(field);
}

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h
                   withByteArray:(IOSByteArray *)seed {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, name, curve, g, n, h, seed);
  return self;
}

- (NSString *)getName {
  return name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(convertCurveWithLibOrgBouncycastleMathEcECCurve:withByteArray:);
  methods[1].selector = @selector(convertFieldWithLibOrgBouncycastleMathFieldFiniteField:);
  methods[2].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[5].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[6].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[7].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "convertCurve", "LLibOrgBouncycastleMathEcECCurve;[B", "convertField", "LLibOrgBouncycastleMathFieldFiniteField;", "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;", "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceSpecECNamedCurveSpec = { "ECNamedCurveSpec", "lib.org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceSpecECNamedCurveSpec;
}

@end

JavaSecuritySpecEllipticCurve *LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed) {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initialize();
  id<JavaSecuritySpecECField> field = LibOrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_([((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  JavaMathBigInteger *b = [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, seed);
}

id<JavaSecuritySpecECField> LibOrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_(id<LibOrgBouncycastleMathFieldFiniteField> field) {
  LibOrgBouncycastleJceSpecECNamedCurveSpec_initialize();
  if (LibOrgBouncycastleMathEcECAlgorithms_isFpFieldWithLibOrgBouncycastleMathFieldFiniteField_(field)) {
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<LibOrgBouncycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    id<LibOrgBouncycastleMathFieldPolynomial> poly = [((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) cast_check(field, LibOrgBouncycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<LibOrgBouncycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = LibOrgBouncycastleUtilArrays_reverseWithIntArray_(LibOrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}

void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, nil), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_(g), n, 1);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, curve, g, n, 1);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}

void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, nil), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, curve, g, n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}

void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, LibOrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, seed), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}

LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceSpecECNamedCurveSpec)
