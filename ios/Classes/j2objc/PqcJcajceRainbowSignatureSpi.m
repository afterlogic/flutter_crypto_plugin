//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/rainbow/PqcJcajceRainbowSignatureSpi.java
//

#include "AsymmetricKeyParameter.h"
#include "CipherParameters.h"
#include "Digest.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParametersWithRandom.h"
#include "PqcJcajceRainbowSignatureSpi.h"
#include "RainbowKeysToParams.h"
#include "RainbowSigner.h"
#include "SHA224Digest.h"
#include "SHA256Digest.h"
#include "SHA384Digest.h"
#include "SHA512Digest.h"
#include "java/lang/Exception.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/SignatureException.h"
#include "java/security/SignatureSpi.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi () {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
  LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *signer_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi, signer_, LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi, random_, JavaSecuritySecureRandom *)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
   withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner:(LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *)signer {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(self, digest, signer);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param;
  param = LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_generatePublicKeyParameterWithJavaSecurityPublicKey_(publicKey);
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *) nil_chk(signer_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  self->random_ = random;
  [self engineInitSignWithJavaSecurityPrivateKey:privateKey];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param;
  param = LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(privateKey);
  if (random_ != nil) {
    param = new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, random_);
  }
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *) nil_chk(signer_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)engineUpdateWithByte:(jbyte)b {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByte:b];
}

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:b withInt:off withInt:len];
}

- (IOSByteArray *)engineSign {
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hash_ withInt:0];
  @try {
    IOSByteArray *sig = [((LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *) nil_chk(signer_)) generateSignatureWithByteArray:hash_];
    return sig;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hash_ withInt:0];
  return [((LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *) nil_chk(signer_)) verifySignatureWithByteArray:hash_ withByteArray:sigBytes];
}

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (id)engineGetParameterWithNSString:(NSString *)param {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 6, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 10, 9, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 9, -1, -1, -1 },
    { NULL, "Z", 0x4, 11, 12, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 15, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner:);
  methods[1].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[2].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  methods[4].selector = @selector(engineUpdateWithByte:);
  methods[5].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(engineSign);
  methods[7].selector = @selector(engineVerifyWithByteArray:);
  methods[8].selector = @selector(engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[9].selector = @selector(engineSetParameterWithNSString:withId:);
  methods[10].selector = @selector(engineGetParameterWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signer_", "LLibOrgBouncycastlePqcCryptoRainbowRainbowSigner;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;LLibOrgBouncycastlePqcCryptoRainbowRainbowSigner;", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;", "engineUpdate", "B", "LJavaSecuritySignatureException;", "[BII", "engineVerify", "[B", "engineSetParameter", "LJavaSecuritySpecAlgorithmParameterSpec;", "LNSString;LNSObject;", "engineGetParameter", "LNSString;", "LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224;LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256;LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384;LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi = { "PqcJcajceRainbowSignatureSpi", "lib.org.bouncycastle.pqc.jcajce.provider.rainbow", ptrTable, methods, fields, 7, 0x1, 11, 3, -1, 18, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi *self, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *signer) {
  JavaSecuritySignatureSpi_init(self);
  self->digest_ = digest;
  self->signer_ = signer;
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi *new_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *signer) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_, digest, signer)
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi *create_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoRainbowRainbowSigner *signer) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_, digest, signer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224 = { "withSha224", "lib.org.bouncycastle.pqc.jcajce.provider.rainbow", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224_init(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224 *self) {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(self, new_LibOrgBouncycastleCryptoDigestsSHA224Digest_init(), new_LibOrgBouncycastlePqcCryptoRainbowRainbowSigner_init());
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224 *new_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224 *create_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha224)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256 = { "withSha256", "lib.org.bouncycastle.pqc.jcajce.provider.rainbow", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256_init(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256 *self) {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(self, new_LibOrgBouncycastleCryptoDigestsSHA256Digest_init(), new_LibOrgBouncycastlePqcCryptoRainbowRainbowSigner_init());
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256 *new_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256 *create_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha256)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384 = { "withSha384", "lib.org.bouncycastle.pqc.jcajce.provider.rainbow", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384_init(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384 *self) {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(self, new_LibOrgBouncycastleCryptoDigestsSHA384Digest_init(), new_LibOrgBouncycastlePqcCryptoRainbowRainbowSigner_init());
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384 *new_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384 *create_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha384)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512 = { "withSha512", "lib.org.bouncycastle.pqc.jcajce.provider.rainbow", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512_init(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512 *self) {
  LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoRainbowRainbowSigner_(self, new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init(), new_LibOrgBouncycastlePqcCryptoRainbowRainbowSigner_init());
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512 *new_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512 *create_LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbowPqcJcajceRainbowSignatureSpi_withSha512)
