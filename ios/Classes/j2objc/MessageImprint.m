//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/tsp/MessageImprint.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MessageImprint.h"

@interface LibOrgBouncycastleAsn1TspMessageImprint ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1TspMessageImprint *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1TspMessageImprint *new_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1TspMessageImprint *create_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1TspMessageImprint

+ (LibOrgBouncycastleAsn1TspMessageImprint *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1TspMessageImprint_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                                                        withByteArray:(IOSByteArray *)hashedMessage {
  LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(self, hashAlgorithm, hashedMessage);
  return self;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  return hashAlgorithm_;
}

- (IOSByteArray *)getHashedMessage {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(hashedMessage_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:hashAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(hashedMessage_)];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1TspMessageImprint;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[3].selector = @selector(getHashAlgorithm);
  methods[4].selector = @selector(getHashedMessage);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hashedMessage_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1TspMessageImprint = { "MessageImprint", "lib.org.bouncycastle.asn1.tsp", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1TspMessageImprint;
}

@end

LibOrgBouncycastleAsn1TspMessageImprint *LibOrgBouncycastleAsn1TspMessageImprint_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1TspMessageImprint_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1TspMessageImprint class]]) {
    return (LibOrgBouncycastleAsn1TspMessageImprint *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1TspMessageImprint *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->hashAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->hashedMessage_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:1]))) getOctets];
}

LibOrgBouncycastleAsn1TspMessageImprint *new_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1TspMessageImprint, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1TspMessageImprint *create_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1TspMessageImprint, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1TspMessageImprint *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, IOSByteArray *hashedMessage) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->hashAlgorithm_ = hashAlgorithm;
  self->hashedMessage_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(hashedMessage);
}

LibOrgBouncycastleAsn1TspMessageImprint *new_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, IOSByteArray *hashedMessage) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1TspMessageImprint, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, hashAlgorithm, hashedMessage)
}

LibOrgBouncycastleAsn1TspMessageImprint *create_LibOrgBouncycastleAsn1TspMessageImprint_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, IOSByteArray *hashedMessage) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1TspMessageImprint, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, hashAlgorithm, hashedMessage)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1TspMessageImprint)
