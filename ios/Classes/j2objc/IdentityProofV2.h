//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/IdentityProofV2.java
//

#ifndef IdentityProofV2_H
#define IdentityProofV2_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmcIdentityProofV2 : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)proofAlgID
                              withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)macAlgId
                                                                  withByteArray:(IOSByteArray *)witness;

+ (LibOrgBouncycastleAsn1CmcIdentityProofV2 *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMacAlgId;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getProofAlgID;

- (IOSByteArray *)getWitness;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcIdentityProofV2)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcIdentityProofV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1CmcIdentityProofV2 *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *proofAlgID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgId, IOSByteArray *witness);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcIdentityProofV2 *new_LibOrgBouncycastleAsn1CmcIdentityProofV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *proofAlgID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgId, IOSByteArray *witness) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcIdentityProofV2 *create_LibOrgBouncycastleAsn1CmcIdentityProofV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *proofAlgID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgId, IOSByteArray *witness);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcIdentityProofV2 *LibOrgBouncycastleAsn1CmcIdentityProofV2_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcIdentityProofV2)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IdentityProofV2_H
