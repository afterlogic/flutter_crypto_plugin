//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/spec/McElieceKeyGenParameterSpec.java
//

#include "J2ObjC_source.h"
#include "McElieceKeyGenParameterSpec.h"
#include "PolynomialRingGF2.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec () {
 @public
  jint m_;
  jint t_;
  jint n_;
  jint fieldPoly_;
}

@end

@implementation LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec

+ (jint)DEFAULT_M {
  return LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_M;
}

+ (jint)DEFAULT_T {
  return LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_T;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)keysize {
  LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_(self, keysize);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t {
  LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_(self, m, t);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t
                    withInt:(jint)poly {
  LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_withInt_(self, m, t, poly);
  return self;
}

- (jint)getM {
  return m_;
}

- (jint)getN {
  return n_;
}

- (jint)getT {
  return t_;
}

- (jint)getFieldPoly {
  return fieldPoly_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithInt:withInt:);
  methods[3].selector = @selector(initWithInt:withInt:withInt:);
  methods[4].selector = @selector(getM);
  methods[5].selector = @selector(getN);
  methods[6].selector = @selector(getT);
  methods[7].selector = @selector(getFieldPoly);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_M", "I", .constantValue.asInt = LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_M, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_T", "I", .constantValue.asInt = LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_T, 0x19, -1, -1, -1, -1 },
    { "m_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "t_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldPoly_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "II", "LJavaSecurityInvalidParameterException;", "III" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec = { "McElieceKeyGenParameterSpec", "lib.org.bouncycastle.pqc.jcajce.spec", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec;
}

@end

void LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_init(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *self) {
  LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_(self, LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_M, LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_DEFAULT_T);
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *new_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, init)
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *create_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, init)
}

void LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *self, jint keysize) {
  NSObject_init(self);
  if (keysize < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"key size must be positive");
  }
  self->m_ = 0;
  self->n_ = 1;
  while (self->n_ < keysize) {
    JreLShiftAssignInt(&self->n_, 1);
    self->m_++;
  }
  self->t_ = JreURShift32(self->n_, 1);
  self->t_ /= self->m_;
  self->fieldPoly_ = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(self->m_);
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *new_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_(jint keysize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_, keysize)
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *create_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_(jint keysize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_, keysize)
}

void LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *self, jint m, jint t) {
  NSObject_init(self);
  if (m < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m must be positive");
  }
  if (m > 32) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m is too large");
  }
  self->m_ = m;
  self->n_ = JreLShift32(1, m);
  if (t < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be positive");
  }
  if (t > self->n_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be less than n = 2^m");
  }
  self->t_ = t;
  self->fieldPoly_ = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(m);
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *new_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_(jint m, jint t) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_withInt_, m, t)
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *create_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_(jint m, jint t) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_withInt_, m, t)
}

void LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_withInt_(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *self, jint m, jint t, jint poly) {
  NSObject_init(self);
  self->m_ = m;
  if (m < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m must be positive");
  }
  if (m > 32) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" m is too large");
  }
  self->n_ = JreLShift32(1, m);
  self->t_ = t;
  if (t < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be positive");
  }
  if (t > self->n_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be less than n = 2^m");
  }
  if ((LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(poly) == m) && (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(poly))) {
    self->fieldPoly_ = poly;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"polynomial is not a field polynomial for GF(2^m)");
  }
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *new_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_withInt_(jint m, jint t, jint poly) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_withInt_withInt_, m, t, poly)
}

LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec *create_LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec_initWithInt_withInt_withInt_(jint m, jint t, jint poly) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec, initWithInt_withInt_withInt_, m, t, poly)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceSpecMcElieceKeyGenParameterSpec)
