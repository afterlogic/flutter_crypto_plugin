//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ua/DSTU4145Params.java
//

#ifndef DSTU4145Params_H
#define DSTU4145Params_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1UaDSTU4145ECBinary;

@interface LibOrgBouncycastleAsn1UaDSTU4145Params : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)namedCurve;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)namedCurve
                                                               withByteArray:(IOSByteArray *)dke;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1UaDSTU4145ECBinary:(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *)ecbinary;

+ (IOSByteArray *)getDefaultDKE;

- (IOSByteArray *)getDKE;

- (LibOrgBouncycastleAsn1UaDSTU4145ECBinary *)getECBinary;

+ (LibOrgBouncycastleAsn1UaDSTU4145Params *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getNamedCurve;

- (jboolean)isNamedCurve;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1UaDSTU4145Params)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1UaDSTU4145Params *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *new_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *create_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1UaDSTU4145Params *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve, IOSByteArray *dke);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *new_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve, IOSByteArray *dke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *create_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *namedCurve, IOSByteArray *dke);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1UaDSTU4145ECBinary_(LibOrgBouncycastleAsn1UaDSTU4145Params *self, LibOrgBouncycastleAsn1UaDSTU4145ECBinary *ecbinary);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *new_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1UaDSTU4145ECBinary_(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *ecbinary) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *create_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1UaDSTU4145ECBinary_(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *ecbinary);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleAsn1UaDSTU4145Params_getDefaultDKE(void);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145Params *LibOrgBouncycastleAsn1UaDSTU4145Params_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1UaDSTU4145Params)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSTU4145Params_H
