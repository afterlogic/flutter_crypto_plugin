//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/MacData.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "DigestInfo.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MacData.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1PkcsMacData ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

inline JavaMathBigInteger *LibOrgBouncycastleAsn1PkcsMacData_get_ONE(void);
static JavaMathBigInteger *LibOrgBouncycastleAsn1PkcsMacData_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1PkcsMacData, ONE, JavaMathBigInteger *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsMacData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1PkcsMacData *new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1PkcsMacData *create_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1PkcsMacData)

@implementation LibOrgBouncycastleAsn1PkcsMacData

+ (LibOrgBouncycastleAsn1PkcsMacData *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1PkcsMacData_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509DigestInfo:(LibOrgBouncycastleAsn1X509DigestInfo *)digInfo
                                               withByteArray:(IOSByteArray *)salt
                                                     withInt:(jint)iterationCount {
  LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(self, digInfo, salt, iterationCount);
  return self;
}

- (LibOrgBouncycastleAsn1X509DigestInfo *)getMac {
  return digInfo_;
}

- (IOSByteArray *)getSalt {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(salt_);
}

- (JavaMathBigInteger *)getIterationCount {
  return iterationCount_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:digInfo_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(salt_)];
  if (![((JavaMathBigInteger *) nil_chk(iterationCount_)) isEqual:LibOrgBouncycastleAsn1PkcsMacData_ONE]) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(iterationCount_)];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1PkcsMacData;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509DigestInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509DigestInfo:withByteArray:withInt:);
  methods[3].selector = @selector(getMac);
  methods[4].selector = @selector(getSalt);
  methods[5].selector = @selector(getIterationCount);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "digInfo_", "LLibOrgBouncycastleAsn1X509DigestInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "salt_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "iterationCount_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509DigestInfo;[BI", &LibOrgBouncycastleAsn1PkcsMacData_ONE };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1PkcsMacData = { "MacData", "lib.org.bouncycastle.asn1.pkcs", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1PkcsMacData;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1PkcsMacData class]) {
    LibOrgBouncycastleAsn1PkcsMacData_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1PkcsMacData)
  }
}

@end

LibOrgBouncycastleAsn1PkcsMacData *LibOrgBouncycastleAsn1PkcsMacData_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1PkcsMacData_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1PkcsMacData class]]) {
    return (LibOrgBouncycastleAsn1PkcsMacData *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsMacData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->digInfo_ = LibOrgBouncycastleAsn1X509DigestInfo_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->salt_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:1]))) getOctets]);
  if ([seq size] == 3) {
    self->iterationCount_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:2]))) getValue];
  }
  else {
    self->iterationCount_ = LibOrgBouncycastleAsn1PkcsMacData_ONE;
  }
}

LibOrgBouncycastleAsn1PkcsMacData *new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsMacData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1PkcsMacData *create_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsMacData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1PkcsMacData *self, LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->digInfo_ = digInfo;
  self->salt_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(salt);
  self->iterationCount_ = JavaMathBigInteger_valueOfWithLong_(iterationCount);
}

LibOrgBouncycastleAsn1PkcsMacData *new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsMacData, initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_, digInfo, salt, iterationCount)
}

LibOrgBouncycastleAsn1PkcsMacData *create_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsMacData, initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_, digInfo, salt, iterationCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1PkcsMacData)
