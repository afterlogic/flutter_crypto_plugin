//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/X931RNG.java
//

#ifndef X931RNG_H
#define X931RNG_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoPrngEntropySource;

@interface LibOrgBouncycastleCryptoPrngX931RNG : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)engine
                                                        withByteArray:(IOSByteArray *)dateTimeVector
                        withLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource;

#pragma mark Package-Private

- (jint)generateWithByteArray:(IOSByteArray *)output
                  withBoolean:(jboolean)predictionResistant;

- (id<LibOrgBouncycastleCryptoPrngEntropySource>)getEntropySource;

- (void)reseed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngX931RNG)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngX931RNG_initWithLibOrgBouncycastleCryptoBlockCipher_withByteArray_withLibOrgBouncycastleCryptoPrngEntropySource_(LibOrgBouncycastleCryptoPrngX931RNG *self, id<LibOrgBouncycastleCryptoBlockCipher> engine, IOSByteArray *dateTimeVector, id<LibOrgBouncycastleCryptoPrngEntropySource> entropySource);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngX931RNG *new_LibOrgBouncycastleCryptoPrngX931RNG_initWithLibOrgBouncycastleCryptoBlockCipher_withByteArray_withLibOrgBouncycastleCryptoPrngEntropySource_(id<LibOrgBouncycastleCryptoBlockCipher> engine, IOSByteArray *dateTimeVector, id<LibOrgBouncycastleCryptoPrngEntropySource> entropySource) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngX931RNG *create_LibOrgBouncycastleCryptoPrngX931RNG_initWithLibOrgBouncycastleCryptoBlockCipher_withByteArray_withLibOrgBouncycastleCryptoPrngEntropySource_(id<LibOrgBouncycastleCryptoBlockCipher> engine, IOSByteArray *dateTimeVector, id<LibOrgBouncycastleCryptoPrngEntropySource> entropySource);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngX931RNG)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X931RNG_H
