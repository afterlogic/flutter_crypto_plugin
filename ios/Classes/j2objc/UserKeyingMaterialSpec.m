//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/UserKeyingMaterialSpec.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "UserKeyingMaterialSpec.h"

@interface LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec () {
 @public
  IOSByteArray *userKeyingMaterial_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec, userKeyingMaterial_, IOSByteArray *)

@implementation LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec

- (instancetype)initWithByteArray:(IOSByteArray *)userKeyingMaterial {
  LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec_initWithByteArray_(self, userKeyingMaterial);
  return self;
}

- (IOSByteArray *)getUserKeyingMaterial {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(userKeyingMaterial_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(getUserKeyingMaterial);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "userKeyingMaterial_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec = { "UserKeyingMaterialSpec", "lib.org.bouncycastle.jcajce.spec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec;
}

@end

void LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec_initWithByteArray_(LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *self, IOSByteArray *userKeyingMaterial) {
  NSObject_init(self);
  self->userKeyingMaterial_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(userKeyingMaterial);
}

LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *new_LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec_initWithByteArray_(IOSByteArray *userKeyingMaterial) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec, initWithByteArray_, userKeyingMaterial)
}

LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *create_LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec_initWithByteArray_(IOSByteArray *userKeyingMaterial) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec, initWithByteArray_, userKeyingMaterial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec)
