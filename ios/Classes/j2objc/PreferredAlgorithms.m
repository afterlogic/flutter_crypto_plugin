//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/PreferredAlgorithms.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PreferredAlgorithms.h"
#include "SignatureSubpacket.h"

@interface LibOrgBouncycastleBcpgSigPreferredAlgorithms ()

+ (IOSByteArray *)intToByteArrayWithIntArray:(IOSIntArray *)v;

@end

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleBcpgSigPreferredAlgorithms_intToByteArrayWithIntArray_(IOSIntArray *v);

@implementation LibOrgBouncycastleBcpgSigPreferredAlgorithms

+ (IOSByteArray *)intToByteArrayWithIntArray:(IOSIntArray *)v {
  return LibOrgBouncycastleBcpgSigPreferredAlgorithms_intToByteArrayWithIntArray_(v);
}

- (instancetype)initWithInt:(jint)type
                withBoolean:(jboolean)critical
                withBoolean:(jboolean)isLongLength
              withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(self, type, critical, isLongLength, data);
  return self;
}

- (instancetype)initWithInt:(jint)type
                withBoolean:(jboolean)critical
               withIntArray:(IOSIntArray *)preferrences {
  LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(self, type, critical, preferrences);
  return self;
}

- (IOSIntArray *)getPreferrences {
  return [self getPreferences];
}

- (IOSIntArray *)getPreferences {
  IOSIntArray *v = [IOSIntArray newArrayWithLength:((IOSByteArray *) nil_chk(data_))->size_];
  for (jint i = 0; i != v->size_; i++) {
    *IOSIntArray_GetRef(v, i) = IOSByteArray_Get(data_, i) & (jint) 0xff;
  }
  return v;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(intToByteArrayWithIntArray:);
  methods[1].selector = @selector(initWithInt:withBoolean:withBoolean:withByteArray:);
  methods[2].selector = @selector(initWithInt:withBoolean:withIntArray:);
  methods[3].selector = @selector(getPreferrences);
  methods[4].selector = @selector(getPreferences);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "intToByteArray", "[I", "IZZ[B", "IZ[I" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSigPreferredAlgorithms = { "PreferredAlgorithms", "lib.org.bouncycastle.bcpg.sig", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSigPreferredAlgorithms;
}

@end

IOSByteArray *LibOrgBouncycastleBcpgSigPreferredAlgorithms_intToByteArrayWithIntArray_(IOSIntArray *v) {
  LibOrgBouncycastleBcpgSigPreferredAlgorithms_initialize();
  IOSByteArray *data = [IOSByteArray newArrayWithLength:((IOSIntArray *) nil_chk(v))->size_];
  for (jint i = 0; i != v->size_; i++) {
    *IOSByteArray_GetRef(data, i) = (jbyte) IOSIntArray_Get(v, i);
  }
  return data;
}

void LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigPreferredAlgorithms *self, jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, type, critical, isLongLength, data);
}

LibOrgBouncycastleBcpgSigPreferredAlgorithms *new_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigPreferredAlgorithms, initWithInt_withBoolean_withBoolean_withByteArray_, type, critical, isLongLength, data)
}

LibOrgBouncycastleBcpgSigPreferredAlgorithms *create_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigPreferredAlgorithms, initWithInt_withBoolean_withBoolean_withByteArray_, type, critical, isLongLength, data)
}

void LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(LibOrgBouncycastleBcpgSigPreferredAlgorithms *self, jint type, jboolean critical, IOSIntArray *preferrences) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, type, critical, false, LibOrgBouncycastleBcpgSigPreferredAlgorithms_intToByteArrayWithIntArray_(preferrences));
}

LibOrgBouncycastleBcpgSigPreferredAlgorithms *new_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(jint type, jboolean critical, IOSIntArray *preferrences) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigPreferredAlgorithms, initWithInt_withBoolean_withIntArray_, type, critical, preferrences)
}

LibOrgBouncycastleBcpgSigPreferredAlgorithms *create_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(jint type, jboolean critical, IOSIntArray *preferrences) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigPreferredAlgorithms, initWithInt_withBoolean_withIntArray_, type, critical, preferrences)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSigPreferredAlgorithms)
