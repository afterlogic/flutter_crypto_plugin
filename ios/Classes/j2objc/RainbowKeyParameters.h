//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/rainbow/RainbowKeyParameters.java
//

#ifndef RainbowKeyParameters_H
#define RainbowKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_header.h"

@interface LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters : LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)isPrivate
                                  withInt:(jint)docLength;

- (jint)getDocLength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *self, jboolean isPrivate, jint docLength);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *new_LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(jboolean isPrivate, jint docLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *create_LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(jboolean isPrivate, jint docLength);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoRainbowRainbowKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RainbowKeyParameters_H
