//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/qtesla/QTESLASecurityCategory.java
//

#include "J2ObjC_source.h"
#include "PqcCryptoQteslaPolynomial.h"
#include "QTESLASecurityCategory.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *new_LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *create_LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init(void);

@implementation LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory

+ (jint)HEURISTIC_I {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I;
}

+ (jint)HEURISTIC_III_SIZE {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE;
}

+ (jint)HEURISTIC_III_SPEED {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED;
}

+ (jint)PROVABLY_SECURE_I {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I;
}

+ (jint)PROVABLY_SECURE_III {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)validateWithInt:(jint)securityCategory {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_validateWithInt_(securityCategory);
}

+ (jint)getPrivateSizeWithInt:(jint)securityCategory {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPrivateSizeWithInt_(securityCategory);
}

+ (jint)getPublicSizeWithInt:(jint)securityCategory {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPublicSizeWithInt_(securityCategory);
}

+ (jint)getSignatureSizeWithInt:(jint)securityCategory {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getSignatureSizeWithInt_(securityCategory);
}

+ (NSString *)getNameWithInt:(jint)securityCategory {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(securityCategory);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(validateWithInt:);
  methods[2].selector = @selector(getPrivateSizeWithInt:);
  methods[3].selector = @selector(getPublicSizeWithInt:);
  methods[4].selector = @selector(getSignatureSizeWithInt:);
  methods[5].selector = @selector(getNameWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HEURISTIC_I", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I, 0x19, -1, -1, -1, -1 },
    { "HEURISTIC_III_SIZE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE, 0x19, -1, -1, -1, -1 },
    { "HEURISTIC_III_SPEED", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED, 0x19, -1, -1, -1, -1 },
    { "PROVABLY_SECURE_I", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I, 0x19, -1, -1, -1, -1 },
    { "PROVABLY_SECURE_III", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "validate", "I", "getPrivateSize", "getPublicSize", "getSignatureSize", "getName" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory = { "QTESLASecurityCategory", "lib.org.bouncycastle.pqc.crypto.qtesla", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory;
}

@end

void LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *new_LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory, init)
}

LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory *create_LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory, init)
}

void LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_validateWithInt_(jint securityCategory) {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_initialize();
  switch (securityCategory) {
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I:
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE:
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED:
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I:
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III:
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown security category: ", securityCategory));
  }
}

jint LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPrivateSizeWithInt_(jint securityCategory) {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_initialize();
  switch (securityCategory) {
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PRIVATE_KEY_I;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PRIVATE_KEY_III_SIZE;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PRIVATE_KEY_III_SPEED;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PRIVATE_KEY_I_P;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PRIVATE_KEY_III_P;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown security category: ", securityCategory));
  }
}

jint LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPublicSizeWithInt_(jint securityCategory) {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_initialize();
  switch (securityCategory) {
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PUBLIC_KEY_I;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PUBLIC_KEY_III_SIZE;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PUBLIC_KEY_III_SPEED;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PUBLIC_KEY_I_P;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_PUBLIC_KEY_III_P;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown security category: ", securityCategory));
  }
}

jint LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getSignatureSizeWithInt_(jint securityCategory) {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_initialize();
  switch (securityCategory) {
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_SIGNATURE_I;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_SIGNATURE_III_SIZE;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_SIGNATURE_III_SPEED;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_SIGNATURE_I_P;
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III:
    return LibOrgBouncycastlePqcCryptoQteslaPqcCryptoQteslaPolynomial_SIGNATURE_III_P;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown security category: ", securityCategory));
  }
}

NSString *LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(jint securityCategory) {
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_initialize();
  switch (securityCategory) {
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I:
    return @"qTESLA-I";
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE:
    return @"qTESLA-III-size";
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED:
    return @"qTESLA-III-speed";
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I:
    return @"qTESLA-p-I";
    case LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III:
    return @"qTESLA-p-III";
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown security category: ", securityCategory));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory)
