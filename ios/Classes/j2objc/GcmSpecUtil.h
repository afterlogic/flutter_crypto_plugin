//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/GcmSpecUtil.java
//

#ifndef GcmSpecUtil_H
#define GcmSpecUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSClass;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CmsGCMParameters;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil : NSObject
@property (readonly, class) IOSClass *gcmSpecClass NS_SWIFT_NAME(gcmSpecClass);

+ (IOSClass *)gcmSpecClass;

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1CmsGCMParameters *)extractGcmParametersWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec;

+ (id<JavaSecuritySpecAlgorithmParameterSpec>)extractGcmSpecWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)spec;

+ (jboolean)gcmSpecExists;

+ (jboolean)isGcmSpecWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec;

+ (jboolean)isGcmSpecWithIOSClass:(IOSClass *)paramSpecClass;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil)

inline IOSClass *LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_get_gcmSpecClass(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSClass *LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_gcmSpecClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil, gcmSpecClass, IOSClass *)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_init(LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil *new_LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil *create_LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_init(void);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_gcmSpecExists(void);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithJavaSecuritySpecAlgorithmParameterSpec_(id<JavaSecuritySpecAlgorithmParameterSpec> paramSpec);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithIOSClass_(IOSClass *paramSpecClass);

FOUNDATION_EXPORT id<JavaSecuritySpecAlgorithmParameterSpec> LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmSpecWithLibOrgBouncycastleAsn1ASN1Primitive_(LibOrgBouncycastleAsn1ASN1Primitive *spec);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsGCMParameters *LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmParametersWithJavaSecuritySpecAlgorithmParameterSpec_(id<JavaSecuritySpecAlgorithmParameterSpec> paramSpec);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GcmSpecUtil_H
