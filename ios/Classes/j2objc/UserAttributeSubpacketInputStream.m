//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/UserAttributeSubpacketInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "ImageAttribute.h"
#include "J2ObjC_source.h"
#include "UserAttributeSubpacket.h"
#include "UserAttributeSubpacketInputStream.h"
#include "UserAttributeSubpacketTags.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"

@interface LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream ()

- (void)readFullyWithByteArray:(IOSByteArray *)buf
                       withInt:(jint)off
                       withInt:(jint)len;

@end

__attribute__((unused)) static void LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_readFullyWithByteArray_withInt_withInt_(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream *self, IOSByteArray *buf, jint off, jint len);

@implementation LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (jint)available {
  return [((JavaIoInputStream *) nil_chk(in_)) available];
}

- (jint)read {
  return [((JavaIoInputStream *) nil_chk(in_)) read];
}

- (void)readFullyWithByteArray:(IOSByteArray *)buf
                       withInt:(jint)off
                       withInt:(jint)len {
  LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_readFullyWithByteArray_withInt_withInt_(self, buf, off, len);
}

- (LibOrgBouncycastleBcpgUserAttributeSubpacket *)readPacket {
  jint l = [self read];
  jint bodyLen = 0;
  jboolean longLength = false;
  if (l < 0) {
    return nil;
  }
  if (l < 192) {
    bodyLen = l;
  }
  else if (l <= 223) {
    bodyLen = (JreLShift32((l - 192), 8)) + ([((JavaIoInputStream *) nil_chk(in_)) read]) + 192;
  }
  else if (l == 255) {
    bodyLen = (JreLShift32([((JavaIoInputStream *) nil_chk(in_)) read], 24)) | (JreLShift32([((JavaIoInputStream *) nil_chk(in_)) read], 16)) | (JreLShift32([((JavaIoInputStream *) nil_chk(in_)) read], 8)) | [((JavaIoInputStream *) nil_chk(in_)) read];
    longLength = true;
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(@"unrecognised length reading user attribute sub packet");
  }
  jint tag = [((JavaIoInputStream *) nil_chk(in_)) read];
  if (tag < 0) {
    @throw new_JavaIoEOFException_initWithNSString_(@"unexpected EOF reading user attribute sub packet");
  }
  IOSByteArray *data = [IOSByteArray newArrayWithLength:bodyLen - 1];
  LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_readFullyWithByteArray_withInt_withInt_(self, data, 0, data->size_);
  jint type = tag;
  switch (type) {
    case LibOrgBouncycastleBcpgUserAttributeSubpacketTags_IMAGE_ATTRIBUTE:
    return new_LibOrgBouncycastleBcpgAttrImageAttribute_initWithBoolean_withByteArray_(longLength, data);
  }
  return new_LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(type, longLength, data);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, 1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgUserAttributeSubpacket;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(available);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(readFullyWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(readPacket);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "LJavaIoIOException;", "readFully", "[BII" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream = { "UserAttributeSubpacketInputStream", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream;
}

@end

void LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_initWithJavaIoInputStream_(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream *self, JavaIoInputStream *inArg) {
  JavaIoInputStream_init(self);
  self->in_ = inArg;
}

LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream *new_LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream, initWithJavaIoInputStream_, inArg)
}

LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream *create_LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream, initWithJavaIoInputStream_, inArg)
}

void LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream_readFullyWithByteArray_withInt_withInt_(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream *self, IOSByteArray *buf, jint off, jint len) {
  if (len > 0) {
    jint b = [self read];
    if (b < 0) {
      @throw new_JavaIoEOFException_init();
    }
    *IOSByteArray_GetRef(nil_chk(buf), off) = (jbyte) b;
    off++;
    len--;
  }
  while (len > 0) {
    jint l = [((JavaIoInputStream *) nil_chk(self->in_)) readWithByteArray:buf withInt:off withInt:len];
    if (l < 0) {
      @throw new_JavaIoEOFException_init();
    }
    off += l;
    len -= l;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgUserAttributeSubpacketInputStream)
