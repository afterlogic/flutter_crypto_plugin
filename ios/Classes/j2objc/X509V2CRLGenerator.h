//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509V2CRLGenerator.java
//

#ifndef X509V2CRLGenerator_H
#define X509V2CRLGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecurityCertX509CRL;
@class JavaSecuritySecureRandom;
@class JavaUtilDate;
@class JavaxSecurityAuthX500X500Principal;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1X509X509Extensions;
@class LibOrgBouncycastleAsn1X509X509Name;
@protocol JavaSecurityPrivateKey;
@protocol JavaUtilIterator;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleX509X509V2CRLGenerator : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addCRLWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)other;

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
                                  withInt:(jint)reason;

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
                                  withInt:(jint)reason
                         withJavaUtilDate:(JavaUtilDate *)invalidityDate;

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
withLibOrgBouncycastleAsn1X509X509Extensions:(LibOrgBouncycastleAsn1X509X509Extensions *)extensions;

- (void)addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)critical
                           withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)value;

- (void)addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)critical
                                                     withByteArray:(IOSByteArray *)value;

- (void)addExtensionWithNSString:(NSString *)oid
                     withBoolean:(jboolean)critical
withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)value;

- (void)addExtensionWithNSString:(NSString *)oid
                     withBoolean:(jboolean)critical
                   withByteArray:(IOSByteArray *)value;

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key;

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                   withNSString:(NSString *)provider;

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                   withNSString:(NSString *)provider
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key;

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                          withNSString:(NSString *)provider;

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                          withNSString:(NSString *)provider
                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (id<JavaUtilIterator>)getSignatureAlgNames;

- (void)reset;

- (void)setIssuerDNWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)issuer;

- (void)setIssuerDNWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)issuer;

- (void)setNextUpdateWithJavaUtilDate:(JavaUtilDate *)date;

- (void)setSignatureAlgorithmWithNSString:(NSString *)signatureAlgorithm;

- (void)setThisUpdateWithJavaUtilDate:(JavaUtilDate *)date;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509X509V2CRLGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleX509X509V2CRLGenerator_init(LibOrgBouncycastleX509X509V2CRLGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2CRLGenerator *new_LibOrgBouncycastleX509X509V2CRLGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2CRLGenerator *create_LibOrgBouncycastleX509X509V2CRLGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509X509V2CRLGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X509V2CRLGenerator_H
