//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/MQVPublicParameters.java
//

#include "ECDomainParameters.h"
#include "ECPublicKeyParameters.h"
#include "J2ObjC_source.h"
#include "MQVPublicParameters.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"

@interface LibOrgBouncycastleCryptoParamsMQVPublicParameters () {
 @public
  LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey_;
  LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsMQVPublicParameters, staticPublicKey_, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsMQVPublicParameters, ephemeralPublicKey_, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)

@implementation LibOrgBouncycastleCryptoParamsMQVPublicParameters

- (instancetype)initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)staticPublicKey
                    withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)ephemeralPublicKey {
  LibOrgBouncycastleCryptoParamsMQVPublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(self, staticPublicKey, ephemeralPublicKey);
  return self;
}

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)getStaticPublicKey {
  return staticPublicKey_;
}

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)getEphemeralPublicKey {
  return ephemeralPublicKey_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters:withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:);
  methods[1].selector = @selector(getStaticPublicKey);
  methods[2].selector = @selector(getEphemeralPublicKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "staticPublicKey_", "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ephemeralPublicKey_", "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsMQVPublicParameters = { "MQVPublicParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsMQVPublicParameters;
}

@end

void LibOrgBouncycastleCryptoParamsMQVPublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsMQVPublicParameters *self, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey) {
  NSObject_init(self);
  if (staticPublicKey == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"staticPublicKey cannot be null");
  }
  if (ephemeralPublicKey == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"ephemeralPublicKey cannot be null");
  }
  if (![((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk([staticPublicKey getParameters])) isEqual:[ephemeralPublicKey getParameters]]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Static and ephemeral public keys have different domain parameters");
  }
  self->staticPublicKey_ = staticPublicKey;
  self->ephemeralPublicKey_ = ephemeralPublicKey;
}

LibOrgBouncycastleCryptoParamsMQVPublicParameters *new_LibOrgBouncycastleCryptoParamsMQVPublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsMQVPublicParameters, initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_, staticPublicKey, ephemeralPublicKey)
}

LibOrgBouncycastleCryptoParamsMQVPublicParameters *create_LibOrgBouncycastleCryptoParamsMQVPublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsMQVPublicParameters, initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_, staticPublicKey, ephemeralPublicKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsMQVPublicParameters)
