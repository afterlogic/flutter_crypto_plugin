//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/ObjectDigestInfo.java
//

#ifndef ObjectDigestInfo_H
#define ObjectDigestInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1Enumerated;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1X509ObjectDigestInfo : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1ASN1Enumerated *digestedObjectType_;
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm_;
  LibOrgBouncycastleAsn1DERBitString *objectDigest_;
}
@property (readonly, class) jint publicKey NS_SWIFT_NAME(publicKey);
@property (readonly, class) jint publicKeyCert NS_SWIFT_NAME(publicKeyCert);
@property (readonly, class) jint otherObjectDigest NS_SWIFT_NAME(otherObjectDigest);

+ (jint)publicKey;

+ (jint)publicKeyCert;

+ (jint)otherObjectDigest;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)digestedObjectType
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)otherObjectTypeID
withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)digestAlgorithm
                        withByteArray:(IOSByteArray *)objectDigest;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

- (LibOrgBouncycastleAsn1ASN1Enumerated *)getDigestedObjectType;

+ (LibOrgBouncycastleAsn1X509ObjectDigestInfo *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                          withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509ObjectDigestInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1DERBitString *)getObjectDigest;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOtherObjectTypeID;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509ObjectDigestInfo)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509ObjectDigestInfo, digestedObjectType_, LibOrgBouncycastleAsn1ASN1Enumerated *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509ObjectDigestInfo, otherObjectTypeID_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509ObjectDigestInfo, digestAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509ObjectDigestInfo, objectDigest_, LibOrgBouncycastleAsn1DERBitString *)

inline jint LibOrgBouncycastleAsn1X509ObjectDigestInfo_get_publicKey(void);
#define LibOrgBouncycastleAsn1X509ObjectDigestInfo_publicKey 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ObjectDigestInfo, publicKey, jint)

inline jint LibOrgBouncycastleAsn1X509ObjectDigestInfo_get_publicKeyCert(void);
#define LibOrgBouncycastleAsn1X509ObjectDigestInfo_publicKeyCert 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ObjectDigestInfo, publicKeyCert, jint)

inline jint LibOrgBouncycastleAsn1X509ObjectDigestInfo_get_otherObjectDigest(void);
#define LibOrgBouncycastleAsn1X509ObjectDigestInfo_otherObjectDigest 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ObjectDigestInfo, otherObjectDigest, jint)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ObjectDigestInfo *LibOrgBouncycastleAsn1X509ObjectDigestInfo_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ObjectDigestInfo *LibOrgBouncycastleAsn1X509ObjectDigestInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509ObjectDigestInfo_initWithInt_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509ObjectDigestInfo *self, jint digestedObjectType, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, IOSByteArray *objectDigest);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ObjectDigestInfo *new_LibOrgBouncycastleAsn1X509ObjectDigestInfo_initWithInt_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(jint digestedObjectType, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, IOSByteArray *objectDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ObjectDigestInfo *create_LibOrgBouncycastleAsn1X509ObjectDigestInfo_initWithInt_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(jint digestedObjectType, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, IOSByteArray *objectDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509ObjectDigestInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ObjectDigestInfo_H
