//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/jcajce/JcePBEDataDecryptorFactoryBuilder.java
//

#include "DefaultJcaJceHelper.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcePBEDataDecryptorFactoryBuilder.h"
#include "NamedJcaJceHelper.h"
#include "OperatorHelper.h"
#include "PBEDataDecryptorFactory.h"
#include "PGPDataDecryptor.h"
#include "PGPDigestCalculatorProvider.h"
#include "PGPException.h"
#include "PGPUtil.h"
#include "ProviderJcaJceHelper.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/security/Provider.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/spec/IvParameterSpec.h"
#include "javax/crypto/spec/SecretKeySpec.h"

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder () {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *helper_;
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder, helper_, LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder, calculatorProvider_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 : LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *this$0_;
}

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *)outer$
                                                                                   withCharArray:(IOSCharArray *)passPhrase
                                withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider;

- (IOSByteArray *)recoverSessionDataWithInt:(jint)keyAlgorithm
                              withByteArray:(IOSByteArray *)key
                              withByteArray:(IOSByteArray *)secKeyData;

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor>)createDataDecryptorWithBoolean:(jboolean)withIntegrityPacket
                                                                                withInt:(jint)encAlgorithm
                                                                          withByteArray:(IOSByteArray *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1)

__attribute__((unused)) static void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider);

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider);

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, calculatorProvider);
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *)setProviderWithNSString:(NSString *)providerName {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory *)buildWithCharArray:(IOSCharArray *)passPhrase {
  return new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, passPhrase, calculatorProvider_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:);
  methods[1].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[2].selector = @selector(setProviderWithNSString:);
  methods[3].selector = @selector(buildWithCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LLibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "calculatorProvider_", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", "setProvider", "LJavaSecurityProvider;", "LNSString;", "build", "[C" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder = { "JcePBEDataDecryptorFactoryBuilder", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *self, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  NSObject_init(self);
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilDefaultJcaJceHelper_init());
  self->calculatorProvider_ = calculatorProvider;
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, calculatorProvider)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, calculatorProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder)

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *)outer$
                                                                                   withCharArray:(IOSCharArray *)passPhrase
                                withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, outer$, passPhrase, calculatorProvider);
  return self;
}

- (IOSByteArray *)recoverSessionDataWithInt:(jint)keyAlgorithm
                              withByteArray:(IOSByteArray *)key
                              withByteArray:(IOSByteArray *)secKeyData {
  @try {
    if (secKeyData != nil && secKeyData->size_ > 0) {
      NSString *cipherName = LibOrgBouncycastleOpenpgpPGPUtil_getSymmetricCipherNameWithInt_(keyAlgorithm);
      JavaxCryptoCipher *keyCipher = [((LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *) nil_chk(this$0_->helper_)) createCipherWithNSString:JreStrcat("$$", cipherName, @"/CFB/NoPadding")];
      [((JavaxCryptoCipher *) nil_chk(keyCipher)) init__WithInt:JavaxCryptoCipher_DECRYPT_MODE withJavaSecurityKey:new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(key, cipherName) withJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_([IOSByteArray newArrayWithLength:[keyCipher getBlockSize]])];
      return [keyCipher doFinalWithByteArray:secKeyData];
    }
    else {
      IOSByteArray *keyBytes = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(key))->size_ + 1];
      *IOSByteArray_GetRef(keyBytes, 0) = (jbyte) keyAlgorithm;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(key, 0, keyBytes, 1, key->size_);
      return keyBytes;
    }
  }
  @catch (JavaLangException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(@"Exception recovering session info", e);
  }
}

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor>)createDataDecryptorWithBoolean:(jboolean)withIntegrityPacket
                                                                                withInt:(jint)encAlgorithm
                                                                          withByteArray:(IOSByteArray *)key {
  return [((LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *) nil_chk(this$0_->helper_)) createDataDecryptorWithBoolean:withIntegrityPacket withInt:encAlgorithm withByteArray:key];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor;", 0x1, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder:withCharArray:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:);
  methods[1].selector = @selector(recoverSessionDataWithInt:withByteArray:withByteArray:);
  methods[2].selector = @selector(createDataDecryptorWithBoolean:withInt:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CLLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", "recoverSessionData", "I[B[B", "LLibOrgBouncycastleOpenpgpPGPException;", "createDataDecryptor", "ZI[B", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder;", "buildWithCharArray:" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 = { "", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x8010, 3, 1, 6, -1, 7, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  self->this$0_ = outer$;
  LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, passPhrase, calculatorProvider);
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, outer$, passPhrase, calculatorProvider)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBEDataDecryptorFactoryBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, outer$, passPhrase, calculatorProvider)
}
