//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/IEKeySpec.java
//

#include "IEKeySpec.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"

@interface LibOrgBouncycastleJceSpecIEKeySpec () {
 @public
  id<JavaSecurityPublicKey> pubKey_;
  id<JavaSecurityPrivateKey> privKey_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecIEKeySpec, pubKey_, id<JavaSecurityPublicKey>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecIEKeySpec, privKey_, id<JavaSecurityPrivateKey>)

@implementation LibOrgBouncycastleJceSpecIEKeySpec

- (instancetype)initWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privKey
                     withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)pubKey {
  LibOrgBouncycastleJceSpecIEKeySpec_initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_(self, privKey, pubKey);
  return self;
}

- (id<JavaSecurityPublicKey>)getPublic {
  return pubKey_;
}

- (id<JavaSecurityPrivateKey>)getPrivate {
  return privKey_;
}

- (NSString *)getAlgorithm {
  return @"IES";
}

- (NSString *)getFormat {
  return nil;
}

- (IOSByteArray *)getEncoded {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPublicKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPrivateKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityPrivateKey:withJavaSecurityPublicKey:);
  methods[1].selector = @selector(getPublic);
  methods[2].selector = @selector(getPrivate);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getFormat);
  methods[5].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pubKey_", "LJavaSecurityPublicKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privKey_", "LJavaSecurityPrivateKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityPrivateKey;LJavaSecurityPublicKey;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceSpecIEKeySpec = { "IEKeySpec", "lib.org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceSpecIEKeySpec;
}

@end

void LibOrgBouncycastleJceSpecIEKeySpec_initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_(LibOrgBouncycastleJceSpecIEKeySpec *self, id<JavaSecurityPrivateKey> privKey, id<JavaSecurityPublicKey> pubKey) {
  NSObject_init(self);
  self->privKey_ = privKey;
  self->pubKey_ = pubKey;
}

LibOrgBouncycastleJceSpecIEKeySpec *new_LibOrgBouncycastleJceSpecIEKeySpec_initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_(id<JavaSecurityPrivateKey> privKey, id<JavaSecurityPublicKey> pubKey) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecIEKeySpec, initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_, privKey, pubKey)
}

LibOrgBouncycastleJceSpecIEKeySpec *create_LibOrgBouncycastleJceSpecIEKeySpec_initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_(id<JavaSecurityPrivateKey> privKey, id<JavaSecurityPublicKey> pubKey) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecIEKeySpec, initWithJavaSecurityPrivateKey_withJavaSecurityPublicKey_, privKey, pubKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceSpecIEKeySpec)
