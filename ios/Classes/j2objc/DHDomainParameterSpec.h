//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/DHDomainParameterSpec.java
//

#ifndef DHDomainParameterSpec_H
#define DHDomainParameterSpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "javax/crypto/spec/DHParameterSpec.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDHParameters;

@interface LibOrgBouncycastleJcajceSpecDHDomainParameterSpec : JavaxCryptoSpecDHParameterSpec

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)j
                                             withInt:(jint)l;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)j
                                             withInt:(jint)m
                                             withInt:(jint)l;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                                             withInt:(jint)l;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)domainParameters;

- (LibOrgBouncycastleCryptoParamsDHParameters *)getDomainParameters;

- (JavaMathBigInteger *)getJ;

- (jint)getM;

- (JavaMathBigInteger *)getQ;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)arg0
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)arg0
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg1
                                             withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithLibOrgBouncycastleCryptoParamsDHParameters_(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *self, LibOrgBouncycastleCryptoParamsDHParameters *domainParameters);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *new_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithLibOrgBouncycastleCryptoParamsDHParameters_(LibOrgBouncycastleCryptoParamsDHParameters *domainParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *create_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithLibOrgBouncycastleCryptoParamsDHParameters_(LibOrgBouncycastleCryptoParamsDHParameters *domainParameters);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *new_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *create_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *new_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *create_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, jint l);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *new_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *create_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint l);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint m, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *new_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint m, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *create_LibOrgBouncycastleJcajceSpecDHDomainParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *j, jint m, jint l);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceSpecDHDomainParameterSpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DHDomainParameterSpec_H
