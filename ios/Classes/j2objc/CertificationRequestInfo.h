//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/CertificationRequestInfo.java
//

#ifndef CertificationRequestInfo_H
#define CertificationRequestInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleAsn1X509X509Name;

@interface LibOrgBouncycastleAsn1PkcsCertificationRequestInfo : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1ASN1Integer *version__;
  LibOrgBouncycastleAsn1X500X500Name *subject_;
  LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *subjectPKInfo_;
  LibOrgBouncycastleAsn1ASN1Set *attributes_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)subject
                  withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)pkInfo
                                   withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)subject
                  withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)pkInfo
                                   withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes;

- (LibOrgBouncycastleAsn1ASN1Set *)getAttributes;

+ (LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X500X500Name *)getSubject;

- (LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo, version__, LibOrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo, subject_, LibOrgBouncycastleAsn1X500X500Name *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo, subjectPKInfo_, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo, attributes_, LibOrgBouncycastleAsn1ASN1Set *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *self, LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *new_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *create_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *self, LibOrgBouncycastleAsn1X509X509Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *new_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1X509X509Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *create_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1X509X509Name *subject, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pkInfo, LibOrgBouncycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *new_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *create_LibOrgBouncycastleAsn1PkcsCertificationRequestInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CertificationRequestInfo_H
