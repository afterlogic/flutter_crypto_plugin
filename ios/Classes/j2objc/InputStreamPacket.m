//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/InputStreamPacket.java
//

#include "BCPGInputStream.h"
#include "InputStreamPacket.h"
#include "J2ObjC_source.h"
#include "Packet.h"

@interface LibOrgBouncycastleBcpgInputStreamPacket () {
 @public
  LibOrgBouncycastleBcpgBCPGInputStream *in_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgInputStreamPacket, in_, LibOrgBouncycastleBcpgBCPGInputStream *)

@implementation LibOrgBouncycastleBcpgInputStreamPacket

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgInputStreamPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (LibOrgBouncycastleBcpgBCPGInputStream *)getInputStream {
  return in_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgBCPGInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(getInputStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LLibOrgBouncycastleBcpgBCPGInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgInputStreamPacket = { "InputStreamPacket", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgInputStreamPacket;
}

@end

void LibOrgBouncycastleBcpgInputStreamPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgInputStreamPacket *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgPacket_init(self);
  self->in_ = inArg;
}

LibOrgBouncycastleBcpgInputStreamPacket *new_LibOrgBouncycastleBcpgInputStreamPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgInputStreamPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleBcpgInputStreamPacket *create_LibOrgBouncycastleBcpgInputStreamPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgInputStreamPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgInputStreamPacket)
