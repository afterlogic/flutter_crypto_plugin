//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/WTauNafPreCompInfo.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "WTauNafPreCompInfo.h"

@implementation LibOrgBouncycastleMathEcWTauNafPreCompInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleMathEcWTauNafPreCompInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSObjectArray *)getPreComp {
  return preComp_;
}

- (void)setPreCompWithLibOrgBouncycastleMathEcECPoint_AbstractF2mArray:(IOSObjectArray *)preComp {
  self->preComp_ = preComp;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleMathEcECPoint_AbstractF2m;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPreComp);
  methods[2].selector = @selector(setPreCompWithLibOrgBouncycastleMathEcECPoint_AbstractF2mArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "preComp_", "[LLibOrgBouncycastleMathEcECPoint_AbstractF2m;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setPreComp", "[LLibOrgBouncycastleMathEcECPoint_AbstractF2m;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleMathEcWTauNafPreCompInfo = { "WTauNafPreCompInfo", "lib.org.bouncycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleMathEcWTauNafPreCompInfo;
}

@end

void LibOrgBouncycastleMathEcWTauNafPreCompInfo_init(LibOrgBouncycastleMathEcWTauNafPreCompInfo *self) {
  NSObject_init(self);
  self->preComp_ = nil;
}

LibOrgBouncycastleMathEcWTauNafPreCompInfo *new_LibOrgBouncycastleMathEcWTauNafPreCompInfo_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleMathEcWTauNafPreCompInfo, init)
}

LibOrgBouncycastleMathEcWTauNafPreCompInfo *create_LibOrgBouncycastleMathEcWTauNafPreCompInfo_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleMathEcWTauNafPreCompInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleMathEcWTauNafPreCompInfo)
