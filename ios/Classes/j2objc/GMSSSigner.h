//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSSigner.java
//

#ifndef GMSSSigner_H
#define GMSSSigner_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "MessageSigner.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSSigner : NSObject < LibOrgBouncycastlePqcCryptoMessageSigner > {
 @public
  LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters *key_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider:(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider>)digest;

- (IOSByteArray *)generateSignatureWithByteArray:(IOSByteArray *)message;

- (void)init__WithBoolean:(jboolean)forSigning
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                           withByteArray:(IOSByteArray *)signature;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSSigner)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoGmssGMSSSigner, key_, LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSSigner_initWithLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(LibOrgBouncycastlePqcCryptoGmssGMSSSigner *self, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSSigner *new_LibOrgBouncycastlePqcCryptoGmssGMSSSigner_initWithLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSSigner *create_LibOrgBouncycastlePqcCryptoGmssGMSSSigner_initWithLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSSigner)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSSigner_H
