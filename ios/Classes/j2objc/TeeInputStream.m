//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/io/TeeInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "TeeInputStream.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"

@interface LibOrgBouncycastleUtilIoTeeInputStream () {
 @public
  JavaIoInputStream *input_;
  JavaIoOutputStream *output_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoTeeInputStream, input_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoTeeInputStream, output_, JavaIoOutputStream *)

@implementation LibOrgBouncycastleUtilIoTeeInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input
                   withJavaIoOutputStream:(JavaIoOutputStream *)output {
  LibOrgBouncycastleUtilIoTeeInputStream_initWithJavaIoInputStream_withJavaIoOutputStream_(self, input, output);
  return self;
}

- (jint)readWithByteArray:(IOSByteArray *)buf {
  return [self readWithByteArray:buf withInt:0 withInt:((IOSByteArray *) nil_chk(buf))->size_];
}

- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len {
  jint i = [((JavaIoInputStream *) nil_chk(input_)) readWithByteArray:buf withInt:off withInt:len];
  if (i > 0) {
    [((JavaIoOutputStream *) nil_chk(output_)) writeWithByteArray:buf withInt:off withInt:i];
  }
  return i;
}

- (jint)read {
  jint i = [((JavaIoInputStream *) nil_chk(input_)) read];
  if (i >= 0) {
    [((JavaIoOutputStream *) nil_chk(output_)) writeWithInt:i];
  }
  return i;
}

- (void)close {
  [((JavaIoInputStream *) nil_chk(self->input_)) close];
  [((JavaIoOutputStream *) nil_chk(self->output_)) close];
}

- (JavaIoOutputStream *)getOutputStream {
  return output_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:withJavaIoOutputStream:);
  methods[1].selector = @selector(readWithByteArray:);
  methods[2].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(read);
  methods[4].selector = @selector(close);
  methods[5].selector = @selector(getOutputStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "input_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "output_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;LJavaIoOutputStream;", "read", "[B", "LJavaIoIOException;", "[BII" };
  static const J2ObjcClassInfo _LibOrgBouncycastleUtilIoTeeInputStream = { "TeeInputStream", "lib.org.bouncycastle.util.io", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleUtilIoTeeInputStream;
}

@end

void LibOrgBouncycastleUtilIoTeeInputStream_initWithJavaIoInputStream_withJavaIoOutputStream_(LibOrgBouncycastleUtilIoTeeInputStream *self, JavaIoInputStream *input, JavaIoOutputStream *output) {
  JavaIoInputStream_init(self);
  self->input_ = input;
  self->output_ = output;
}

LibOrgBouncycastleUtilIoTeeInputStream *new_LibOrgBouncycastleUtilIoTeeInputStream_initWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilIoTeeInputStream, initWithJavaIoInputStream_withJavaIoOutputStream_, input, output)
}

LibOrgBouncycastleUtilIoTeeInputStream *create_LibOrgBouncycastleUtilIoTeeInputStream_initWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilIoTeeInputStream, initWithJavaIoInputStream_withJavaIoOutputStream_, input, output)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleUtilIoTeeInputStream)
