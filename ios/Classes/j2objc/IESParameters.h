//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/IESParameters.java
//

#ifndef IESParameters_H
#define IESParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsIESParameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)derivation
                              withByteArray:(IOSByteArray *)encoding
                                    withInt:(jint)macKeySize;

- (IOSByteArray *)getDerivationV;

- (IOSByteArray *)getEncodingV;

- (jint)getMacKeySize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsIESParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsIESParameters_initWithByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoParamsIESParameters *self, IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsIESParameters *new_LibOrgBouncycastleCryptoParamsIESParameters_initWithByteArray_withByteArray_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsIESParameters *create_LibOrgBouncycastleCryptoParamsIESParameters_initWithByteArray_withByteArray_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsIESParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IESParameters_H
