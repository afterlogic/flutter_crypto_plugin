//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/SHA384.java
//

#ifndef SHA384_H
#define SHA384_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "DigestAlgorithmProvider.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoDigest;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderDigestSHA384 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384)

@interface LibOrgBouncycastleJcajceProviderDigestSHA384_Digest : LibOrgBouncycastleJcajceProviderDigestBCMessageDigest < NSCopying >

#pragma mark Public

- (instancetype __nonnull)init;

- (id)java_clone;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *new_LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *create_LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest)

@interface LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *new_LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *create_LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac)

@interface LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *new_LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *create_LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator)

@interface LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *new_LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *create_LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384)

@interface LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings : LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *new_LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *create_LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SHA384_H
