//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/DigestRandomGenerator.java
//

#ifndef DigestRandomGenerator_H
#define DigestRandomGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "RandomGenerator.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoPrngDigestRandomGenerator : NSObject < LibOrgBouncycastleCryptoPrngRandomGenerator >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (void)addSeedMaterialWithByteArray:(IOSByteArray *)inSeed;

- (void)addSeedMaterialWithLong:(jlong)rSeed;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)start
                       withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngDigestRandomGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngDigestRandomGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoPrngDigestRandomGenerator *self, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngDigestRandomGenerator *new_LibOrgBouncycastleCryptoPrngDigestRandomGenerator_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngDigestRandomGenerator *create_LibOrgBouncycastleCryptoPrngDigestRandomGenerator_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngDigestRandomGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DigestRandomGenerator_H
