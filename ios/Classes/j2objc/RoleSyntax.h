//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/RoleSyntax.java
//

#ifndef RoleSyntax_H
#define RoleSyntax_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509GeneralName;
@class LibOrgBouncycastleAsn1X509GeneralNames;

@interface LibOrgBouncycastleAsn1X509RoleSyntax : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)roleName;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)roleAuthority
                               withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)roleName;

- (instancetype __nonnull)initWithNSString:(NSString *)roleName;

+ (LibOrgBouncycastleAsn1X509RoleSyntax *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509GeneralNames *)getRoleAuthority;

- (IOSObjectArray *)getRoleAuthorityAsString;

- (LibOrgBouncycastleAsn1X509GeneralName *)getRoleName;

- (NSString *)getRoleNameAsString;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509RoleSyntax)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *LibOrgBouncycastleAsn1X509RoleSyntax_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509RoleSyntax *self, LibOrgBouncycastleAsn1X509GeneralNames *roleAuthority, LibOrgBouncycastleAsn1X509GeneralName *roleName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *new_LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralNames *roleAuthority, LibOrgBouncycastleAsn1X509GeneralName *roleName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *create_LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralNames *roleAuthority, LibOrgBouncycastleAsn1X509GeneralName *roleName);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509RoleSyntax *self, LibOrgBouncycastleAsn1X509GeneralName *roleName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *new_LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralName *roleName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *create_LibOrgBouncycastleAsn1X509RoleSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralName *roleName);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509RoleSyntax_initWithNSString_(LibOrgBouncycastleAsn1X509RoleSyntax *self, NSString *roleName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *new_LibOrgBouncycastleAsn1X509RoleSyntax_initWithNSString_(NSString *roleName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509RoleSyntax *create_LibOrgBouncycastleAsn1X509RoleSyntax_initWithNSString_(NSString *roleName);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509RoleSyntax)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RoleSyntax_H
