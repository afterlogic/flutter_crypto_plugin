//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/symmetric_encryption/SymmetricEncryptorDecryptor.java
//

#ifndef SymmetricEncryptorDecryptor_H
#define SymmetricEncryptorDecryptor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibComAfterlogicPgpAlgorithmCompressionAlgorithm;
@class LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm;
@class LibComAfterlogicPgpUtilPassphrase;

@interface LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSByteArray *)symmetricallyDecryptWithByteArray:(IOSByteArray *)data
              withLibComAfterlogicPgpUtilPassphrase:(LibComAfterlogicPgpUtilPassphrase *)password;

+ (IOSByteArray *)symmetricallyEncryptWithByteArray:(IOSByteArray *)data
              withLibComAfterlogicPgpUtilPassphrase:(LibComAfterlogicPgpUtilPassphrase *)password
withLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm:(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)encryptionAlgorithm
withLibComAfterlogicPgpAlgorithmCompressionAlgorithm:(LibComAfterlogicPgpAlgorithmCompressionAlgorithm *)compressionAlgorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor)

FOUNDATION_EXPORT void LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor_init(LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor *self);

FOUNDATION_EXPORT LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor *new_LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor *create_LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor_init(void);

FOUNDATION_EXPORT IOSByteArray *LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor_symmetricallyEncryptWithByteArray_withLibComAfterlogicPgpUtilPassphrase_withLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmCompressionAlgorithm_(IOSByteArray *data, LibComAfterlogicPgpUtilPassphrase *password, LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *encryptionAlgorithm, LibComAfterlogicPgpAlgorithmCompressionAlgorithm *compressionAlgorithm);

FOUNDATION_EXPORT IOSByteArray *LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor_symmetricallyDecryptWithByteArray_withLibComAfterlogicPgpUtilPassphrase_(IOSByteArray *data, LibComAfterlogicPgpUtilPassphrase *password);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpSymmetric_encryptionSymmetricEncryptorDecryptor)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SymmetricEncryptorDecryptor_H
