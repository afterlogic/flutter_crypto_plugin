//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/PKIXAttrCertPathBuilderSpi.java
//

#ifndef PKIXAttrCertPathBuilderSpi_H
#define PKIXAttrCertPathBuilderSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/CertPathBuilderSpi.h"

@class LibOrgBouncycastleX509X509AttributeCertStoreSelector;
@protocol JavaSecurityCertCertPathBuilderResult;
@protocol JavaSecurityCertCertPathParameters;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi : JavaSecurityCertCertPathBuilderSpi

#pragma mark Public

- (instancetype __nonnull)init;

- (id<JavaSecurityCertCertPathBuilderResult>)engineBuildWithJavaSecurityCertCertPathParameters:(id<JavaSecurityCertCertPathParameters>)params;

#pragma mark Protected

+ (id<JavaUtilCollection>)findCertificatesWithLibOrgBouncycastleX509X509AttributeCertStoreSelector:(LibOrgBouncycastleX509X509AttributeCertStoreSelector *)certSelect
                                                                                  withJavaUtilList:(id<JavaUtilList>)certStores;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi_init(LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi *new_LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi *create_LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi_init(void);

FOUNDATION_EXPORT id<JavaUtilCollection> LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi_findCertificatesWithLibOrgBouncycastleX509X509AttributeCertStoreSelector_withJavaUtilList_(LibOrgBouncycastleX509X509AttributeCertStoreSelector *certSelect, id<JavaUtilList> certStores);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderPKIXAttrCertPathBuilderSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIXAttrCertPathBuilderSpi_H
