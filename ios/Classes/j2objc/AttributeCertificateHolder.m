//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/AttributeCertificateHolder.java
//

#include "ASN1Encodable.h"
#include "ASN1Enumerated.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "AttributeCertificateHolder.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "Holder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "ObjectDigestInfo.h"
#include "PrincipalUtil.h"
#include "X509Principal.h"
#include "X509Util.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/MessageDigest.h"
#include "java/security/Principal.h"
#include "java/security/PublicKey.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/CertificateParsingException.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "javax/security/auth/x500/X500Principal.h"

@interface LibOrgBouncycastleX509AttributeCertificateHolder ()

- (LibOrgBouncycastleAsn1X509GeneralNames *)generateGeneralNamesWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)principal;

- (jboolean)matchesDNWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)subject
                 withLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)targets;

- (IOSObjectArray *)getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names;

- (IOSObjectArray *)getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)names;

@end

__attribute__((unused)) static LibOrgBouncycastleAsn1X509GeneralNames *LibOrgBouncycastleX509AttributeCertificateHolder_generateGeneralNamesWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *principal);

__attribute__((unused)) static jboolean LibOrgBouncycastleX509AttributeCertificateHolder_matchesDNWithLibOrgBouncycastleJceX509Principal_withLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *subject, LibOrgBouncycastleAsn1X509GeneralNames *targets);

__attribute__((unused)) static IOSObjectArray *LibOrgBouncycastleX509AttributeCertificateHolder_getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleX509AttributeCertificateHolder *self, IOSObjectArray *names);

__attribute__((unused)) static IOSObjectArray *LibOrgBouncycastleX509AttributeCertificateHolder_getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleAsn1X509GeneralNames *names);

@implementation LibOrgBouncycastleX509AttributeCertificateHolder

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)issuerName
                                    withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}

- (instancetype)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)issuerName
                                    withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}

- (instancetype)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(self, cert);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)principal {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(self, principal);
  return self;
}

- (instancetype)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)principal {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(self, principal);
  return self;
}

- (instancetype)initWithInt:(jint)digestedObjectType
               withNSString:(NSString *)digestAlgorithm
               withNSString:(NSString *)otherObjectTypeID
              withByteArray:(IOSByteArray *)objectDigest {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(self, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest);
  return self;
}

- (jint)getDigestedObjectType {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    return [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Enumerated *) nil_chk([((LibOrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestedObjectType])) getValue])) intValue];
  }
  return -1;
}

- (NSString *)getDigestAlgorithm {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    return [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm])) getAlgorithm])) getId];
  }
  return nil;
}

- (IOSByteArray *)getObjectDigest {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    return [((LibOrgBouncycastleAsn1DERBitString *) nil_chk([((LibOrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getObjectDigest])) getBytes];
  }
  return nil;
}

- (NSString *)getOtherObjectTypeID {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    (void) [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getOtherObjectTypeID])) getId];
  }
  return nil;
}

- (LibOrgBouncycastleAsn1X509GeneralNames *)generateGeneralNamesWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)principal {
  return LibOrgBouncycastleX509AttributeCertificateHolder_generateGeneralNamesWithLibOrgBouncycastleJceX509Principal_(self, principal);
}

- (jboolean)matchesDNWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)subject
                 withLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)targets {
  return LibOrgBouncycastleX509AttributeCertificateHolder_matchesDNWithLibOrgBouncycastleJceX509Principal_withLibOrgBouncycastleAsn1X509GeneralNames_(self, subject, targets);
}

- (IOSObjectArray *)getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names {
  return LibOrgBouncycastleX509AttributeCertificateHolder_getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray_(self, names);
}

- (IOSObjectArray *)getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)names {
  return LibOrgBouncycastleX509AttributeCertificateHolder_getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames_(self, names);
}

- (IOSObjectArray *)getEntityNames {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getEntityName] != nil) {
    return LibOrgBouncycastleX509AttributeCertificateHolder_getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames_(self, [holder_ getEntityName]);
  }
  return nil;
}

- (IOSObjectArray *)getIssuer {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    return LibOrgBouncycastleX509AttributeCertificateHolder_getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames_(self, [((LibOrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
  }
  return nil;
}

- (JavaMathBigInteger *)getSerialNumber {
  if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    return [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk([((LibOrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue];
  }
  return nil;
}

- (id)java_clone {
  return new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_((LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) toASN1Primitive], [LibOrgBouncycastleAsn1ASN1Sequence class]));
}

- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert {
  if (!([cert isKindOfClass:[JavaSecurityCertX509Certificate class]])) {
    return false;
  }
  JavaSecurityCertX509Certificate *x509Cert = (JavaSecurityCertX509Certificate *) cast_chk(cert, [JavaSecurityCertX509Certificate class]);
  @try {
    if ([((LibOrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
      return [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk([((LibOrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue])) isEqual:[((JavaSecurityCertX509Certificate *) nil_chk(x509Cert)) getSerialNumber]] && LibOrgBouncycastleX509AttributeCertificateHolder_matchesDNWithLibOrgBouncycastleJceX509Principal_withLibOrgBouncycastleAsn1X509GeneralNames_(self, LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(x509Cert), [((LibOrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
    }
    if ([holder_ getEntityName] != nil) {
      if (LibOrgBouncycastleX509AttributeCertificateHolder_matchesDNWithLibOrgBouncycastleJceX509Principal_withLibOrgBouncycastleAsn1X509GeneralNames_(self, LibOrgBouncycastleJcePrincipalUtil_getSubjectX509PrincipalWithJavaSecurityCertX509Certificate_(x509Cert), [holder_ getEntityName])) {
        return true;
      }
    }
    if ([holder_ getObjectDigestInfo] != nil) {
      JavaSecurityMessageDigest *md = nil;
      @try {
        md = JavaSecurityMessageDigest_getInstanceWithNSString_withNSString_([self getDigestAlgorithm], @"BC");
      }
      @catch (JavaLangException *e) {
        return false;
      }
      switch ([self getDigestedObjectType]) {
        case LibOrgBouncycastleAsn1X509ObjectDigestInfo_publicKey:
        [((JavaSecurityMessageDigest *) nil_chk(md)) updateWithByteArray:[((id<JavaSecurityPublicKey>) nil_chk([((JavaSecurityCertCertificate *) nil_chk(cert)) getPublicKey])) getEncoded]];
        break;
        case LibOrgBouncycastleAsn1X509ObjectDigestInfo_publicKeyCert:
        [((JavaSecurityMessageDigest *) nil_chk(md)) updateWithByteArray:[((JavaSecurityCertCertificate *) nil_chk(cert)) getEncoded]];
        break;
      }
      if (!LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((JavaSecurityMessageDigest *) nil_chk(md)) digest], [self getObjectDigest])) {
        return false;
      }
    }
  }
  @catch (JavaSecurityCertCertificateEncodingException *e) {
    return false;
  }
  return false;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  if (!([obj isKindOfClass:[LibOrgBouncycastleX509AttributeCertificateHolder class]])) {
    return false;
  }
  LibOrgBouncycastleX509AttributeCertificateHolder *other = (LibOrgBouncycastleX509AttributeCertificateHolder *) cast_chk(obj, [LibOrgBouncycastleX509AttributeCertificateHolder class]);
  return [((LibOrgBouncycastleAsn1X509Holder *) nil_chk(self->holder_)) isEqual:((LibOrgBouncycastleX509AttributeCertificateHolder *) nil_chk(other))->holder_];
}

- (NSUInteger)hash {
  return ((jint) [((LibOrgBouncycastleAsn1X509Holder *) nil_chk(self->holder_)) hash]);
}

- (jboolean)matchWithId:(id)obj {
  if (!([obj isKindOfClass:[JavaSecurityCertX509Certificate class]])) {
    return false;
  }
  return [self matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *) cast_chk(obj, [JavaSecurityCertCertificate class])];
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralNames;", 0x2, 8, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleJceX509Principal:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithJavaxSecurityAuthX500X500Principal:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithJavaSecurityCertX509Certificate:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleJceX509Principal:);
  methods[5].selector = @selector(initWithJavaxSecurityAuthX500X500Principal:);
  methods[6].selector = @selector(initWithInt:withNSString:withNSString:withByteArray:);
  methods[7].selector = @selector(getDigestedObjectType);
  methods[8].selector = @selector(getDigestAlgorithm);
  methods[9].selector = @selector(getObjectDigest);
  methods[10].selector = @selector(getOtherObjectTypeID);
  methods[11].selector = @selector(generateGeneralNamesWithLibOrgBouncycastleJceX509Principal:);
  methods[12].selector = @selector(matchesDNWithLibOrgBouncycastleJceX509Principal:withLibOrgBouncycastleAsn1X509GeneralNames:);
  methods[13].selector = @selector(getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray:);
  methods[14].selector = @selector(getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames:);
  methods[15].selector = @selector(getEntityNames);
  methods[16].selector = @selector(getIssuer);
  methods[17].selector = @selector(getSerialNumber);
  methods[18].selector = @selector(java_clone);
  methods[19].selector = @selector(matchWithJavaSecurityCertCertificate:);
  methods[20].selector = @selector(isEqual:);
  methods[21].selector = @selector(hash);
  methods[22].selector = @selector(matchWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "holder_", "LLibOrgBouncycastleAsn1X509Holder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleJceX509Principal;LJavaMathBigInteger;", "LJavaxSecurityAuthX500X500Principal;LJavaMathBigInteger;", "LJavaSecurityCertX509Certificate;", "LJavaSecurityCertCertificateParsingException;", "LLibOrgBouncycastleJceX509Principal;", "LJavaxSecurityAuthX500X500Principal;", "ILNSString;LNSString;[B", "generateGeneralNames", "matchesDN", "LLibOrgBouncycastleJceX509Principal;LLibOrgBouncycastleAsn1X509GeneralNames;", "getNames", "[LLibOrgBouncycastleAsn1X509GeneralName;", "getPrincipals", "LLibOrgBouncycastleAsn1X509GeneralNames;", "clone", "match", "LJavaSecurityCertCertificate;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509AttributeCertificateHolder = { "AttributeCertificateHolder", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0x1, 23, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509AttributeCertificateHolder;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  NSObject_init(self);
  self->holder_ = LibOrgBouncycastleAsn1X509Holder_getInstanceWithId_(seq);
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  NSObject_init(self);
  self->holder_ = new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_(new_LibOrgBouncycastleAsn1X509IssuerSerial_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_(new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509GeneralName_initWithLibOrgBouncycastleAsn1X509X509Name_(issuerName))), new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(serialNumber)));
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(self, LibOrgBouncycastleX509X509Util_convertPrincipalWithJavaxSecurityAuthX500X500Principal_(issuerName), serialNumber);
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaSecurityCertX509Certificate *cert) {
  NSObject_init(self);
  LibOrgBouncycastleJceX509Principal *name;
  @try {
    name = LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(cert);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_([e getMessage]);
  }
  self->holder_ = new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_(new_LibOrgBouncycastleAsn1X509IssuerSerial_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleX509AttributeCertificateHolder_generateGeneralNamesWithLibOrgBouncycastleJceX509Principal_(self, name), new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([((JavaSecurityCertX509Certificate *) nil_chk(cert)) getSerialNumber])));
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *principal) {
  NSObject_init(self);
  self->holder_ = new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleX509AttributeCertificateHolder_generateGeneralNamesWithLibOrgBouncycastleJceX509Principal_(self, principal));
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleJceX509Principal_, principal)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithLibOrgBouncycastleJceX509Principal_, principal)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *principal) {
  LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(self, LibOrgBouncycastleX509X509Util_convertPrincipalWithJavaxSecurityAuthX500X500Principal_(principal));
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_, principal)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_, principal)
}

void LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(LibOrgBouncycastleX509AttributeCertificateHolder *self, jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  NSObject_init(self);
  self->holder_ = new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509ObjectDigestInfo_(new_LibOrgBouncycastleAsn1X509ObjectDigestInfo_initWithInt_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(digestedObjectType, new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(otherObjectTypeID), new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(digestAlgorithm)), LibOrgBouncycastleUtilArrays_cloneWithByteArray_(objectDigest)));
}

LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithInt_withNSString_withNSString_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}

LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509AttributeCertificateHolder, initWithInt_withNSString_withNSString_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}

LibOrgBouncycastleAsn1X509GeneralNames *LibOrgBouncycastleX509AttributeCertificateHolder_generateGeneralNamesWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *principal) {
  return LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_(new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509GeneralName_initWithLibOrgBouncycastleAsn1X509X509Name_(principal)));
}

jboolean LibOrgBouncycastleX509AttributeCertificateHolder_matchesDNWithLibOrgBouncycastleJceX509Principal_withLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *subject, LibOrgBouncycastleAsn1X509GeneralNames *targets) {
  IOSObjectArray *names = [((LibOrgBouncycastleAsn1X509GeneralNames *) nil_chk(targets)) getNames];
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(names))->size_; i++) {
    LibOrgBouncycastleAsn1X509GeneralName *gn = IOSObjectArray_Get(names, i);
    if ([((LibOrgBouncycastleAsn1X509GeneralName *) nil_chk(gn)) getTagNo] == LibOrgBouncycastleAsn1X509GeneralName_directoryName) {
      @try {
        if ([new_LibOrgBouncycastleJceX509Principal_initWithByteArray_([((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(([gn getName]))) toASN1Primitive])) getEncoded]) isEqual:subject]) {
          return true;
        }
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
  return false;
}

IOSObjectArray *LibOrgBouncycastleX509AttributeCertificateHolder_getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleX509AttributeCertificateHolder *self, IOSObjectArray *names) {
  id<JavaUtilList> l = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(names))->size_);
  for (jint i = 0; i != names->size_; i++) {
    if ([((LibOrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == LibOrgBouncycastleAsn1X509GeneralName_directoryName) {
      @try {
        [l addWithId:new_JavaxSecurityAuthX500X500Principal_initWithByteArray_([((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(([((LibOrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName]))) toASN1Primitive])) getEncoded])];
      }
      @catch (JavaIoIOException *e) {
        @throw new_JavaLangRuntimeException_initWithNSString_(@"badly formed Name object");
      }
    }
  }
  return [l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:NSObject_class_()]];
}

IOSObjectArray *LibOrgBouncycastleX509AttributeCertificateHolder_getPrincipalsWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleAsn1X509GeneralNames *names) {
  IOSObjectArray *p = LibOrgBouncycastleX509AttributeCertificateHolder_getNamesWithLibOrgBouncycastleAsn1X509GeneralNameArray_(self, [((LibOrgBouncycastleAsn1X509GeneralNames *) nil_chk(names)) getNames]);
  id<JavaUtilList> l = new_JavaUtilArrayList_init();
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(p))->size_; i++) {
    if ([JavaSecurityPrincipal_class_() isInstance:IOSObjectArray_Get(p, i)]) {
      [l addWithId:IOSObjectArray_Get(p, i)];
    }
  }
  return (IOSObjectArray *) cast_check([l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:JavaSecurityPrincipal_class_()]], IOSClass_arrayType(JavaSecurityPrincipal_class_(), 1));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509AttributeCertificateHolder)
