//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/apache/bzip2/BZip2Constants.java
//

#ifndef BZip2Constants_H
#define BZip2Constants_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSIntArray;

@protocol LibOrgBouncycastleApacheBzip2BZip2Constants < JavaObject >

@end

@interface LibOrgBouncycastleApacheBzip2BZip2Constants : NSObject
@property (readonly, class) jint baseBlockSize NS_SWIFT_NAME(baseBlockSize);
@property (readonly, class) jint MAX_ALPHA_SIZE NS_SWIFT_NAME(MAX_ALPHA_SIZE);
@property (readonly, class) jint MAX_CODE_LEN NS_SWIFT_NAME(MAX_CODE_LEN);
@property (readonly, class) jint RUNA NS_SWIFT_NAME(RUNA);
@property (readonly, class) jint RUNB NS_SWIFT_NAME(RUNB);
@property (readonly, class) jint N_GROUPS NS_SWIFT_NAME(N_GROUPS);
@property (readonly, class) jint G_SIZE NS_SWIFT_NAME(G_SIZE);
@property (readonly, class) jint N_ITERS NS_SWIFT_NAME(N_ITERS);
@property (readonly, class) jint MAX_SELECTORS NS_SWIFT_NAME(MAX_SELECTORS);
@property (readonly, class) jint NUM_OVERSHOOT_BYTES NS_SWIFT_NAME(NUM_OVERSHOOT_BYTES);
@property (readonly, class) IOSIntArray *rNums NS_SWIFT_NAME(rNums);

+ (jint)baseBlockSize;

+ (jint)MAX_ALPHA_SIZE;

+ (jint)MAX_CODE_LEN;

+ (jint)RUNA;

+ (jint)RUNB;

+ (jint)N_GROUPS;

+ (jint)G_SIZE;

+ (jint)N_ITERS;

+ (jint)MAX_SELECTORS;

+ (jint)NUM_OVERSHOOT_BYTES;

+ (IOSIntArray *)rNums;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleApacheBzip2BZip2Constants)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_baseBlockSize(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_baseBlockSize 100000
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, baseBlockSize, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_MAX_ALPHA_SIZE(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_MAX_ALPHA_SIZE 258
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, MAX_ALPHA_SIZE, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_MAX_CODE_LEN(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_MAX_CODE_LEN 23
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, MAX_CODE_LEN, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_RUNA(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_RUNA 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, RUNA, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_RUNB(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_RUNB 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, RUNB, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_N_GROUPS(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_N_GROUPS 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, N_GROUPS, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_G_SIZE(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_G_SIZE 50
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, G_SIZE, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_N_ITERS(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_N_ITERS 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, N_ITERS, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_MAX_SELECTORS(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_MAX_SELECTORS 18002
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, MAX_SELECTORS, jint)

inline jint LibOrgBouncycastleApacheBzip2BZip2Constants_get_NUM_OVERSHOOT_BYTES(void);
#define LibOrgBouncycastleApacheBzip2BZip2Constants_NUM_OVERSHOOT_BYTES 20
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2BZip2Constants, NUM_OVERSHOOT_BYTES, jint)

inline IOSIntArray *LibOrgBouncycastleApacheBzip2BZip2Constants_get_rNums(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleApacheBzip2BZip2Constants_rNums;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleApacheBzip2BZip2Constants, rNums, IOSIntArray *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleApacheBzip2BZip2Constants)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BZip2Constants_H
