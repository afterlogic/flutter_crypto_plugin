//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/custom/sec/SecT409K1Curve.java
//

#ifndef SecT409K1Curve_H
#define SecT409K1Curve_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECCurve.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleMathEcCustomSecSecT409K1Point;
@class LibOrgBouncycastleMathEcECFieldElement;
@class LibOrgBouncycastleMathEcECPoint;
@protocol LibOrgBouncycastleMathEcECLookupTable;
@protocol LibOrgBouncycastleMathEcECMultiplier;

@interface LibOrgBouncycastleMathEcCustomSecSecT409K1Curve : LibOrgBouncycastleMathEcECCurve_AbstractF2m {
 @public
  LibOrgBouncycastleMathEcCustomSecSecT409K1Point *infinity_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id<LibOrgBouncycastleMathEcECLookupTable>)createCacheSafeLookupTableWithLibOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)points
                                                                                                        withInt:(jint)off
                                                                                                        withInt:(jint)len;

- (LibOrgBouncycastleMathEcECFieldElement *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x;

- (jint)getFieldSize;

- (LibOrgBouncycastleMathEcECPoint *)getInfinity;

- (jint)getK1;

- (jint)getK2;

- (jint)getK3;

- (jint)getM;

- (jboolean)isKoblitz;

- (jboolean)isTrinomial;

- (jboolean)supportsCoordinateSystemWithInt:(jint)coord;

#pragma mark Protected

- (LibOrgBouncycastleMathEcECCurve *)cloneCurve;

- (id<LibOrgBouncycastleMathEcECMultiplier>)createDefaultMultiplier;

- (LibOrgBouncycastleMathEcECPoint *)createRawPointWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)x
                                                   withLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)y
                                                                                  withBoolean:(jboolean)withCompression;

- (LibOrgBouncycastleMathEcECPoint *)createRawPointWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)x
                                                   withLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)y
                                              withLibOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs
                                                                                  withBoolean:(jboolean)withCompression;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                              withInt:(jint)arg1
                              withInt:(jint)arg2
                              withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcCustomSecSecT409K1Curve)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleMathEcCustomSecSecT409K1Curve, infinity_, LibOrgBouncycastleMathEcCustomSecSecT409K1Point *)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomSecSecT409K1Curve_init(LibOrgBouncycastleMathEcCustomSecSecT409K1Curve *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcCustomSecSecT409K1Curve *new_LibOrgBouncycastleMathEcCustomSecSecT409K1Curve_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcCustomSecSecT409K1Curve *create_LibOrgBouncycastleMathEcCustomSecSecT409K1Curve_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcCustomSecSecT409K1Curve)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SecT409K1Curve_H
