//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/config/ConfigurableProvider.java
//

#include "ConfigurableProvider.h"
#include "J2ObjC_source.h"

NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_EC_IMPLICITLY_CA = @"threadLocalEcImplicitlyCa";
NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_EC_IMPLICITLY_CA = @"ecImplicitlyCa";
NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_DH_DEFAULT_PARAMS = @"threadLocalDhDefaultParams";
NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_DH_DEFAULT_PARAMS = @"DhDefaultParams";
NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ACCEPTABLE_EC_CURVES = @"acceptableEcCurves";
NSString *LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ADDITIONAL_EC_PARAMETERS = @"additionalEcParameters";

@implementation LibOrgBouncycastleJcajceProviderConfigConfigurableProvider

+ (NSString *)THREAD_LOCAL_EC_IMPLICITLY_CA {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_EC_IMPLICITLY_CA;
}

+ (NSString *)EC_IMPLICITLY_CA {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_EC_IMPLICITLY_CA;
}

+ (NSString *)THREAD_LOCAL_DH_DEFAULT_PARAMS {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_DH_DEFAULT_PARAMS;
}

+ (NSString *)DH_DEFAULT_PARAMS {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_DH_DEFAULT_PARAMS;
}

+ (NSString *)ACCEPTABLE_EC_CURVES {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ACCEPTABLE_EC_CURVES;
}

+ (NSString *)ADDITIONAL_EC_PARAMETERS {
  return LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ADDITIONAL_EC_PARAMETERS;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 9, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setParameterWithNSString:withId:);
  methods[1].selector = @selector(addAlgorithmWithNSString:withNSString:);
  methods[2].selector = @selector(addAlgorithmWithNSString:withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[3].selector = @selector(hasAlgorithmWithNSString:withNSString:);
  methods[4].selector = @selector(addKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:);
  methods[5].selector = @selector(addAttributesWithNSString:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "THREAD_LOCAL_EC_IMPLICITLY_CA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "EC_IMPLICITLY_CA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "THREAD_LOCAL_DH_DEFAULT_PARAMS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "DH_DEFAULT_PARAMS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "ACCEPTABLE_EC_CURVES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "ADDITIONAL_EC_PARAMETERS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { "setParameter", "LNSString;LNSObject;", "addAlgorithm", "LNSString;LNSString;", "LNSString;LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "hasAlgorithm", "addKeyInfoConverter", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", "addAttributes", "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_EC_IMPLICITLY_CA, &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_EC_IMPLICITLY_CA, &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_DH_DEFAULT_PARAMS, &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_DH_DEFAULT_PARAMS, &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ACCEPTABLE_EC_CURVES, &LibOrgBouncycastleJcajceProviderConfigConfigurableProvider_ADDITIONAL_EC_PARAMETERS };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderConfigConfigurableProvider = { "ConfigurableProvider", "lib.org.bouncycastle.jcajce.provider.config", ptrTable, methods, fields, 7, 0x609, 6, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderConfigConfigurableProvider)
