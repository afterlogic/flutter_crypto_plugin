//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/GeneralNamesBuilder.java
//

#include "GeneralName.h"
#include "GeneralNames.h"
#include "GeneralNamesBuilder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Vector.h"

@interface LibOrgBouncycastleAsn1X509GeneralNamesBuilder () {
 @public
  JavaUtilVector *names_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509GeneralNamesBuilder, names_, JavaUtilVector *)

@implementation LibOrgBouncycastleAsn1X509GeneralNamesBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1X509GeneralNamesBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleAsn1X509GeneralNamesBuilder *)addNamesWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)names {
  IOSObjectArray *n = [((LibOrgBouncycastleAsn1X509GeneralNames *) nil_chk(names)) getNames];
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(n))->size_; i++) {
    [((JavaUtilVector *) nil_chk(self->names_)) addElementWithId:IOSObjectArray_Get(n, i)];
  }
  return self;
}

- (LibOrgBouncycastleAsn1X509GeneralNamesBuilder *)addNameWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)name {
  [((JavaUtilVector *) nil_chk(names_)) addElementWithId:name];
  return self;
}

- (LibOrgBouncycastleAsn1X509GeneralNames *)build {
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:[((JavaUtilVector *) nil_chk(names_)) size] type:LibOrgBouncycastleAsn1X509GeneralName_class_()];
  for (jint i = 0; i != tmp->size_; i++) {
    (void) IOSObjectArray_Set(tmp, i, (LibOrgBouncycastleAsn1X509GeneralName *) cast_chk([((JavaUtilVector *) nil_chk(names_)) elementAtWithInt:i], [LibOrgBouncycastleAsn1X509GeneralName class]));
  }
  return new_LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(tmp);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralNamesBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralNamesBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralNames;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addNamesWithLibOrgBouncycastleAsn1X509GeneralNames:);
  methods[2].selector = @selector(addNameWithLibOrgBouncycastleAsn1X509GeneralName:);
  methods[3].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "names_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addNames", "LLibOrgBouncycastleAsn1X509GeneralNames;", "addName", "LLibOrgBouncycastleAsn1X509GeneralName;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509GeneralNamesBuilder = { "GeneralNamesBuilder", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509GeneralNamesBuilder;
}

@end

void LibOrgBouncycastleAsn1X509GeneralNamesBuilder_init(LibOrgBouncycastleAsn1X509GeneralNamesBuilder *self) {
  NSObject_init(self);
  self->names_ = new_JavaUtilVector_init();
}

LibOrgBouncycastleAsn1X509GeneralNamesBuilder *new_LibOrgBouncycastleAsn1X509GeneralNamesBuilder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509GeneralNamesBuilder, init)
}

LibOrgBouncycastleAsn1X509GeneralNamesBuilder *create_LibOrgBouncycastleAsn1X509GeneralNamesBuilder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509GeneralNamesBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509GeneralNamesBuilder)
