//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/jcajce/SHA1PGPDigestCalculator.java
//

#include "HashAlgorithmTags.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OutputStreamFactory.h"
#include "SHA1PGPDigestCalculator.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"

@interface LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator () {
 @public
  JavaSecurityMessageDigest *digest_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator, digest_, JavaSecurityMessageDigest *)

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getAlgorithm {
  return LibOrgBouncycastleBcpgHashAlgorithmTags_SHA1;
}

- (JavaIoOutputStream *)getOutputStream {
  return LibOrgBouncycastleJcajceIoOutputStreamFactory_createStreamWithJavaSecurityMessageDigest_(digest_);
}

- (IOSByteArray *)getDigest {
  return [((JavaSecurityMessageDigest *) nil_chk(digest_)) digest];
}

- (void)reset {
  [((JavaSecurityMessageDigest *) nil_chk(digest_)) reset];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAlgorithm);
  methods[2].selector = @selector(getOutputStream);
  methods[3].selector = @selector(getDigest);
  methods[4].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LJavaSecurityMessageDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator = { "SHA1PGPDigestCalculator", "lib.org.bouncycastle.openpgp.operator.jcajce", NULL, methods, fields, 7, 0x0, 5, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator_init(LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator *self) {
  NSObject_init(self);
  @try {
    self->digest_ = JavaSecurityMessageDigest_getInstanceWithNSString_(@"SHA1");
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"cannot find SHA-1: ", [e getMessage]));
  }
}

LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator *new_LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator, init)
}

LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator *create_LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorJcajceSHA1PGPDigestCalculator)
