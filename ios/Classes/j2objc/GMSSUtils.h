//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSUtils.java
//

#ifndef GMSSUtils_H
#define GMSSUtils_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSUtils : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (IOSObjectArray *)cloneWithByteArray2:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithByteArray3:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastlePqcCryptoGmssTreehashArray:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithJavaUtilVectorArray:(IOSObjectArray *)data;

+ (IOSObjectArray *)cloneWithJavaUtilVectorArray2:(IOSObjectArray *)data;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSUtils)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSUtils_init(LibOrgBouncycastlePqcCryptoGmssGMSSUtils *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSUtils *new_LibOrgBouncycastlePqcCryptoGmssGMSSUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSUtils *create_LibOrgBouncycastlePqcCryptoGmssGMSSUtils_init(void);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithByteArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithByteArray3_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithLibOrgBouncycastlePqcCryptoGmssTreehashArray_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithLibOrgBouncycastlePqcCryptoGmssTreehashArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithJavaUtilVectorArray_(IOSObjectArray *data);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastlePqcCryptoGmssGMSSUtils_cloneWithJavaUtilVectorArray2_(IOSObjectArray *data);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSUtils)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSUtils_H
