//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x9/X9FieldID.java
//

#ifndef X9FieldID_H
#define X9FieldID_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"
#include "X9ObjectIdentifiers.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1X9X9FieldID : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1X9X9ObjectIdentifiers >

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)primeP;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)k1;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)k1
                              withInt:(jint)k2
                              withInt:(jint)k3;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getIdentifier;

+ (LibOrgBouncycastleAsn1X9X9FieldID *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)getParameters;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X9X9FieldID)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X9X9FieldID_initWithJavaMathBigInteger_(LibOrgBouncycastleAsn1X9X9FieldID *self, JavaMathBigInteger *primeP);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *new_LibOrgBouncycastleAsn1X9X9FieldID_initWithJavaMathBigInteger_(JavaMathBigInteger *primeP) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *create_LibOrgBouncycastleAsn1X9X9FieldID_initWithJavaMathBigInteger_(JavaMathBigInteger *primeP);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_(LibOrgBouncycastleAsn1X9X9FieldID *self, jint m, jint k1);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *new_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_(jint m, jint k1) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *create_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_(jint m, jint k1);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_withInt_withInt_(LibOrgBouncycastleAsn1X9X9FieldID *self, jint m, jint k1, jint k2, jint k3);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *new_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_withInt_withInt_(jint m, jint k1, jint k2, jint k3) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *create_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_withInt_withInt_(jint m, jint k1, jint k2, jint k3);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9FieldID *LibOrgBouncycastleAsn1X9X9FieldID_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X9X9FieldID)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X9FieldID_H
