//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/CRLReason.java
//

#ifndef CRLReason_H
#define CRLReason_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1X509CRLReason : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) jint UNSPECIFIED NS_SWIFT_NAME(UNSPECIFIED);
@property (readonly, class) jint KEY_COMPROMISE NS_SWIFT_NAME(KEY_COMPROMISE);
@property (readonly, class) jint CA_COMPROMISE NS_SWIFT_NAME(CA_COMPROMISE);
@property (readonly, class) jint AFFILIATION_CHANGED NS_SWIFT_NAME(AFFILIATION_CHANGED);
@property (readonly, class) jint SUPERSEDED NS_SWIFT_NAME(SUPERSEDED);
@property (readonly, class) jint CESSATION_OF_OPERATION NS_SWIFT_NAME(CESSATION_OF_OPERATION);
@property (readonly, class) jint CERTIFICATE_HOLD NS_SWIFT_NAME(CERTIFICATE_HOLD);
@property (readonly, class) jint REMOVE_FROM_CRL NS_SWIFT_NAME(REMOVE_FROM_CRL);
@property (readonly, class) jint PRIVILEGE_WITHDRAWN NS_SWIFT_NAME(PRIVILEGE_WITHDRAWN);
@property (readonly, class) jint AA_COMPROMISE NS_SWIFT_NAME(AA_COMPROMISE);
@property (readonly, class) jint unspecified NS_SWIFT_NAME(unspecified);
@property (readonly, class) jint keyCompromise NS_SWIFT_NAME(keyCompromise);
@property (readonly, class) jint cACompromise NS_SWIFT_NAME(cACompromise);
@property (readonly, class) jint affiliationChanged NS_SWIFT_NAME(affiliationChanged);
@property (readonly, class) jint superseded NS_SWIFT_NAME(superseded);
@property (readonly, class) jint cessationOfOperation NS_SWIFT_NAME(cessationOfOperation);
@property (readonly, class) jint certificateHold NS_SWIFT_NAME(certificateHold);
@property (readonly, class) jint removeFromCRL NS_SWIFT_NAME(removeFromCRL);
@property (readonly, class) jint privilegeWithdrawn NS_SWIFT_NAME(privilegeWithdrawn);
@property (readonly, class) jint aACompromise NS_SWIFT_NAME(aACompromise);

+ (jint)UNSPECIFIED;

+ (jint)KEY_COMPROMISE;

+ (jint)CA_COMPROMISE;

+ (jint)AFFILIATION_CHANGED;

+ (jint)SUPERSEDED;

+ (jint)CESSATION_OF_OPERATION;

+ (jint)CERTIFICATE_HOLD;

+ (jint)REMOVE_FROM_CRL;

+ (jint)PRIVILEGE_WITHDRAWN;

+ (jint)AA_COMPROMISE;

+ (jint)unspecified;

+ (jint)keyCompromise;

+ (jint)cACompromise;

+ (jint)affiliationChanged;

+ (jint)superseded;

+ (jint)cessationOfOperation;

+ (jint)certificateHold;

+ (jint)removeFromCRL;

+ (jint)privilegeWithdrawn;

+ (jint)aACompromise;

#pragma mark Public

+ (LibOrgBouncycastleAsn1X509CRLReason *)getInstanceWithId:(id)o;

- (JavaMathBigInteger *)getValue;

+ (LibOrgBouncycastleAsn1X509CRLReason *)lookupWithInt:(jint)value;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1X509CRLReason)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_UNSPECIFIED(void);
#define LibOrgBouncycastleAsn1X509CRLReason_UNSPECIFIED 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, UNSPECIFIED, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_KEY_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509CRLReason_KEY_COMPROMISE 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, KEY_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_CA_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509CRLReason_CA_COMPROMISE 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, CA_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_AFFILIATION_CHANGED(void);
#define LibOrgBouncycastleAsn1X509CRLReason_AFFILIATION_CHANGED 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, AFFILIATION_CHANGED, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_SUPERSEDED(void);
#define LibOrgBouncycastleAsn1X509CRLReason_SUPERSEDED 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, SUPERSEDED, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_CESSATION_OF_OPERATION(void);
#define LibOrgBouncycastleAsn1X509CRLReason_CESSATION_OF_OPERATION 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, CESSATION_OF_OPERATION, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_CERTIFICATE_HOLD(void);
#define LibOrgBouncycastleAsn1X509CRLReason_CERTIFICATE_HOLD 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, CERTIFICATE_HOLD, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_REMOVE_FROM_CRL(void);
#define LibOrgBouncycastleAsn1X509CRLReason_REMOVE_FROM_CRL 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, REMOVE_FROM_CRL, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_PRIVILEGE_WITHDRAWN(void);
#define LibOrgBouncycastleAsn1X509CRLReason_PRIVILEGE_WITHDRAWN 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, PRIVILEGE_WITHDRAWN, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_AA_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509CRLReason_AA_COMPROMISE 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, AA_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_unspecified(void);
#define LibOrgBouncycastleAsn1X509CRLReason_unspecified 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, unspecified, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_keyCompromise(void);
#define LibOrgBouncycastleAsn1X509CRLReason_keyCompromise 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, keyCompromise, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_cACompromise(void);
#define LibOrgBouncycastleAsn1X509CRLReason_cACompromise 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, cACompromise, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_affiliationChanged(void);
#define LibOrgBouncycastleAsn1X509CRLReason_affiliationChanged 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, affiliationChanged, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_superseded(void);
#define LibOrgBouncycastleAsn1X509CRLReason_superseded 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, superseded, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_cessationOfOperation(void);
#define LibOrgBouncycastleAsn1X509CRLReason_cessationOfOperation 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, cessationOfOperation, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_certificateHold(void);
#define LibOrgBouncycastleAsn1X509CRLReason_certificateHold 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, certificateHold, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_removeFromCRL(void);
#define LibOrgBouncycastleAsn1X509CRLReason_removeFromCRL 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, removeFromCRL, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_privilegeWithdrawn(void);
#define LibOrgBouncycastleAsn1X509CRLReason_privilegeWithdrawn 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, privilegeWithdrawn, jint)

inline jint LibOrgBouncycastleAsn1X509CRLReason_get_aACompromise(void);
#define LibOrgBouncycastleAsn1X509CRLReason_aACompromise 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509CRLReason, aACompromise, jint)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509CRLReason *LibOrgBouncycastleAsn1X509CRLReason_getInstanceWithId_(id o);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509CRLReason *LibOrgBouncycastleAsn1X509CRLReason_lookupWithInt_(jint value);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509CRLReason)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CRLReason_H
