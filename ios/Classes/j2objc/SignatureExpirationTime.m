//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/SignatureExpirationTime.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SignatureExpirationTime.h"
#include "SignatureSubpacket.h"
#include "SignatureSubpacketTags.h"

@implementation LibOrgBouncycastleBcpgSigSignatureExpirationTime

+ (IOSByteArray *)timeToBytesWithLong:(jlong)t {
  return LibOrgBouncycastleBcpgSigSignatureExpirationTime_timeToBytesWithLong_(t);
}

- (instancetype)initWithBoolean:(jboolean)critical
                    withBoolean:(jboolean)isLongLength
                  withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withBoolean_withByteArray_(self, critical, isLongLength, data);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)critical
                       withLong:(jlong)seconds {
  LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withLong_(self, critical, seconds);
  return self;
}

- (jlong)getTime {
  jlong time = (JreLShift64((jlong) (IOSByteArray_Get(nil_chk(data_), 0) & (jint) 0xff), 24)) | (JreLShift32((IOSByteArray_Get(data_, 1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(data_, 2) & (jint) 0xff), 8)) | (IOSByteArray_Get(data_, 3) & (jint) 0xff);
  return time;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0xc, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(timeToBytesWithLong:);
  methods[1].selector = @selector(initWithBoolean:withBoolean:withByteArray:);
  methods[2].selector = @selector(initWithBoolean:withLong:);
  methods[3].selector = @selector(getTime);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "timeToBytes", "J", "ZZ[B", "ZJ" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSigSignatureExpirationTime = { "SignatureExpirationTime", "lib.org.bouncycastle.bcpg.sig", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSigSignatureExpirationTime;
}

@end

IOSByteArray *LibOrgBouncycastleBcpgSigSignatureExpirationTime_timeToBytesWithLong_(jlong t) {
  LibOrgBouncycastleBcpgSigSignatureExpirationTime_initialize();
  IOSByteArray *data = [IOSByteArray newArrayWithLength:4];
  *IOSByteArray_GetRef(data, 0) = (jbyte) (JreRShift64(t, 24));
  *IOSByteArray_GetRef(data, 1) = (jbyte) (JreRShift64(t, 16));
  *IOSByteArray_GetRef(data, 2) = (jbyte) (JreRShift64(t, 8));
  *IOSByteArray_GetRef(data, 3) = (jbyte) t;
  return data;
}

void LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigSignatureExpirationTime *self, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_EXPIRE_TIME, critical, isLongLength, data);
}

LibOrgBouncycastleBcpgSigSignatureExpirationTime *new_LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigSignatureExpirationTime, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

LibOrgBouncycastleBcpgSigSignatureExpirationTime *create_LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigSignatureExpirationTime, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

void LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withLong_(LibOrgBouncycastleBcpgSigSignatureExpirationTime *self, jboolean critical, jlong seconds) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_EXPIRE_TIME, critical, false, LibOrgBouncycastleBcpgSigSignatureExpirationTime_timeToBytesWithLong_(seconds));
}

LibOrgBouncycastleBcpgSigSignatureExpirationTime *new_LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withLong_(jboolean critical, jlong seconds) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigSignatureExpirationTime, initWithBoolean_withLong_, critical, seconds)
}

LibOrgBouncycastleBcpgSigSignatureExpirationTime *create_LibOrgBouncycastleBcpgSigSignatureExpirationTime_initWithBoolean_withLong_(jboolean critical, jlong seconds) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigSignatureExpirationTime, initWithBoolean_withLong_, critical, seconds)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSigSignatureExpirationTime)
