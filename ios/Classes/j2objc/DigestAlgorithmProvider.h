//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/DigestAlgorithmProvider.java
//

#ifndef DigestAlgorithmProvider_H
#define DigestAlgorithmProvider_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Protected

- (void)addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                          withNSString:(NSString *)algorithm
                                                                          withNSString:(NSString *)algorithmClassName
                                                                          withNSString:(NSString *)keyGeneratorClassName;

- (void)addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                      withNSString:(NSString *)algorithm
                                    withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DigestAlgorithmProvider_H
