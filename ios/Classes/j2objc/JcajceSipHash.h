//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/JcajceSipHash.java
//

#ifndef JcajceSipHash_H
#define JcajceSipHash_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac24)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mac48)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSipHash_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajceSipHash_H
