//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/OpenPgpBcSHA1PGPDigestCalculator.java
//

#include "Digest.h"
#include "HashAlgorithmTags.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OpenPgpBcSHA1PGPDigestCalculator.h"
#include "SHA1Digest.h"
#include "java/io/OutputStream.h"

@interface LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator () {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator, digest_, id<LibOrgBouncycastleCryptoDigest>)

@interface LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream : JavaIoOutputStream {
 @public
  id<LibOrgBouncycastleCryptoDigest> dig_;
}

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator:(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *)outer$
                                                         withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)dig;

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithByteArray:(IOSByteArray *)bytes;

- (void)writeWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream, dig_, id<LibOrgBouncycastleCryptoDigest>)

__attribute__((unused)) static void LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *self, LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig);

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *create_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream)

@implementation LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getAlgorithm {
  return LibOrgBouncycastleBcpgHashAlgorithmTags_SHA1;
}

- (JavaIoOutputStream *)getOutputStream {
  return new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(self, digest_);
}

- (IOSByteArray *)getDigest {
  IOSByteArray *d = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:d withInt:0];
  return d;
}

- (void)reset {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAlgorithm);
  methods[2].selector = @selector(getOutputStream);
  methods[3].selector = @selector(getDigest);
  methods[4].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator = { "OpenPgpBcSHA1PGPDigestCalculator", "lib.org.bouncycastle.openpgp.operator.bc", ptrTable, methods, fields, 7, 0x0, 5, 1, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator;
}

@end

void LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *self) {
  NSObject_init(self);
  self->digest_ = new_LibOrgBouncycastleCryptoDigestsSHA1Digest_init();
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator, init)
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *create_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator)

@implementation LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator:(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *)outer$
                                                         withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)dig {
  LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(self, outer$, dig);
  return self;
}

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(dig_)) updateWithByteArray:bytes withInt:off withInt:len];
}

- (void)writeWithByteArray:(IOSByteArray *)bytes {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(dig_)) updateWithByteArray:bytes withInt:0 withInt:((IOSByteArray *) nil_chk(bytes))->size_];
}

- (void)writeWithInt:(jint)b {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(dig_)) updateWithByte:(jbyte) b];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator:withLibOrgBouncycastleCryptoDigest:);
  methods[1].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(writeWithByteArray:);
  methods[3].selector = @selector(writeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dig_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;", "write", "[BII", "LJavaIoIOException;", "[B", "I", "LLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream = { "DigestOutputStream", "lib.org.bouncycastle.openpgp.operator.bc", ptrTable, methods, fields, 7, 0x2, 4, 1, 6, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream;
}

@end

void LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *self, LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig) {
  JavaIoOutputStream_init(self);
  self->dig_ = dig;
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream, initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_, outer$, dig)
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream *create_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream_initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator *outer$, id<LibOrgBouncycastleCryptoDigest> dig) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream, initWithLibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_withLibOrgBouncycastleCryptoDigest_, outer$, dig)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_DigestOutputStream)
