//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/iso/ISOIECObjectIdentifiers.java
//

#ifndef ISOIECObjectIdentifiers_H
#define ISOIECObjectIdentifiers_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;

@protocol LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers < JavaObject >

@end

@interface LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers : NSObject
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *iso_encryption_algorithms NS_SWIFT_NAME(iso_encryption_algorithms);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *hash_algorithms NS_SWIFT_NAME(hash_algorithms);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *ripemd160 NS_SWIFT_NAME(ripemd160);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *ripemd128 NS_SWIFT_NAME(ripemd128);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *whirlpool NS_SWIFT_NAME(whirlpool);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *is18033_2 NS_SWIFT_NAME(is18033_2);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_ac_generic_hybrid NS_SWIFT_NAME(id_ac_generic_hybrid);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_kem_rsa NS_SWIFT_NAME(id_kem_rsa);

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)iso_encryption_algorithms;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)hash_algorithms;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)ripemd160;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)ripemd128;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)whirlpool;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)is18033_2;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_ac_generic_hybrid;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_kem_rsa;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_iso_encryption_algorithms(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_iso_encryption_algorithms;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, iso_encryption_algorithms, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_hash_algorithms(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_hash_algorithms;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, hash_algorithms, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_ripemd160(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_ripemd160;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, ripemd160, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_ripemd128(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_ripemd128;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, ripemd128, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_whirlpool(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_whirlpool;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, whirlpool, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_is18033_2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_is18033_2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, is18033_2, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_id_ac_generic_hybrid(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_id_ac_generic_hybrid;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, id_ac_generic_hybrid, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_get_id_kem_rsa(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers_id_kem_rsa;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers, id_kem_rsa, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1IsoISOIECObjectIdentifiers)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ISOIECObjectIdentifiers_H
