//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.java
//

#ifndef HashTreeAddress_H
#define HashTreeAddress_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "XMSSAddress.h"

@class IOSByteArray;

@interface LibOrgBouncycastlePqcCryptoXmssHashTreeAddress : LibOrgBouncycastlePqcCryptoXmssXMSSAddress

#pragma mark Protected

- (jint)getPadding;

- (jint)getTreeHeight;

- (jint)getTreeIndex;

- (IOSByteArray *)toByteArray;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssHashTreeAddress)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssHashTreeAddress)

@interface LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder : LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder

#pragma mark Protected

- (instancetype __nonnull)init;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress *)build;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)getThis;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)withKeyAndMaskWithInt:(jint)arg0;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)withLayerAddressWithInt:(jint)arg0;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)withTreeAddressWithLong:(jlong)arg0;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)withTreeHeightWithInt:(jint)val;

- (LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *)withTreeIndexWithInt:(jint)val;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init(LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *new_LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *create_LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // HashTreeAddress_H
