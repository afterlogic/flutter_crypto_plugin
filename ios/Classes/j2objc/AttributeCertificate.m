//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AttributeCertificate.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "AttributeCertificate.h"
#include "AttributeCertificateInfo.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"

@implementation LibOrgBouncycastleAsn1X509AttributeCertificate

+ (LibOrgBouncycastleAsn1X509AttributeCertificate *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1X509AttributeCertificate_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo:(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)acinfo
                         withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)signatureAlgorithm
                                    withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signatureValue {
  LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(self, acinfo, signatureAlgorithm, signatureValue);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)getAcinfo {
  return acinfo_;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  return signatureAlgorithm_;
}

- (LibOrgBouncycastleAsn1DERBitString *)getSignatureValue {
  return signatureValue_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:acinfo_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:signatureAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:signatureValue_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1X509AttributeCertificate;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AttributeCertificateInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo:withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withLibOrgBouncycastleAsn1DERBitString:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getAcinfo);
  methods[4].selector = @selector(getSignatureAlgorithm);
  methods[5].selector = @selector(getSignatureValue);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "acinfo_", "LLibOrgBouncycastleAsn1X509AttributeCertificateInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "signatureAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "signatureValue_", "LLibOrgBouncycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1X509AttributeCertificateInfo;LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;LLibOrgBouncycastleAsn1DERBitString;", "LLibOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509AttributeCertificate = { "AttributeCertificate", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509AttributeCertificate;
}

@end

LibOrgBouncycastleAsn1X509AttributeCertificate *LibOrgBouncycastleAsn1X509AttributeCertificate_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1X509AttributeCertificate_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1X509AttributeCertificate class]]) {
    return (LibOrgBouncycastleAsn1X509AttributeCertificate *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificate *self, LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->acinfo_ = acinfo;
  self->signatureAlgorithm_ = signatureAlgorithm;
  self->signatureValue_ = signatureValue;
}

LibOrgBouncycastleAsn1X509AttributeCertificate *new_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509AttributeCertificate, initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_, acinfo, signatureAlgorithm, signatureValue)
}

LibOrgBouncycastleAsn1X509AttributeCertificate *create_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509AttributeCertificate, initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_, acinfo, signatureAlgorithm, signatureValue)
}

void LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509AttributeCertificate *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  self->acinfo_ = LibOrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->signatureAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
  self->signatureValue_ = LibOrgBouncycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
}

LibOrgBouncycastleAsn1X509AttributeCertificate *new_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509AttributeCertificate, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X509AttributeCertificate *create_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509AttributeCertificate, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509AttributeCertificate)
