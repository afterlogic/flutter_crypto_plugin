//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509CollectionStoreParameters.java
//

#include "J2ObjC_source.h"
#include "X509CollectionStoreParameters.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"

@interface LibOrgBouncycastleX509X509CollectionStoreParameters () {
 @public
  id<JavaUtilCollection> collection_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509CollectionStoreParameters, collection_, id<JavaUtilCollection>)

@implementation LibOrgBouncycastleX509X509CollectionStoreParameters

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  LibOrgBouncycastleX509X509CollectionStoreParameters_initWithJavaUtilCollection_(self, collection);
  return self;
}

- (id)java_clone {
  return new_LibOrgBouncycastleX509X509CollectionStoreParameters_initWithJavaUtilCollection_(collection_);
}

- (id<JavaUtilCollection>)getCollection {
  return new_JavaUtilArrayList_initWithJavaUtilCollection_(collection_);
}

- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  (void) [sb appendWithNSString:@"X509CollectionStoreParameters: [\n"];
  (void) [sb appendWithNSString:JreStrcat("$@C", @"  collection: ", collection_, 0x000a)];
  (void) [sb appendWithNSString:@"]"];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(java_clone);
  methods[2].selector = @selector(getCollection);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "collection_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "clone", "toString" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509CollectionStoreParameters = { "X509CollectionStoreParameters", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509CollectionStoreParameters;
}

@end

void LibOrgBouncycastleX509X509CollectionStoreParameters_initWithJavaUtilCollection_(LibOrgBouncycastleX509X509CollectionStoreParameters *self, id<JavaUtilCollection> collection) {
  NSObject_init(self);
  if (collection == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"collection cannot be null");
  }
  self->collection_ = collection;
}

LibOrgBouncycastleX509X509CollectionStoreParameters *new_LibOrgBouncycastleX509X509CollectionStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509X509CollectionStoreParameters, initWithJavaUtilCollection_, collection)
}

LibOrgBouncycastleX509X509CollectionStoreParameters *create_LibOrgBouncycastleX509X509CollectionStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509X509CollectionStoreParameters, initWithJavaUtilCollection_, collection)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509CollectionStoreParameters)
