//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/rsa/PSSSignatureSpi.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricBlockCipher.h"
#include "BCJcaJceHelper.h"
#include "CryptoException.h"
#include "Digest.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaJceHelper.h"
#include "PKCSObjectIdentifiers.h"
#include "PSSSignatureSpi.h"
#include "PSSSigner.h"
#include "ParametersWithRandom.h"
#include "RSABlindedEngine.h"
#include "RSAKeyParameters.h"
#include "RSAUtil.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/PrivateKey.h"
#include "java/security/ProviderException.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/SignatureException.h"
#include "java/security/SignatureSpi.h"
#include "java/security/interfaces/RSAPrivateKey.h"
#include "java/security/interfaces/RSAPublicKey.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/MGF1ParameterSpec.h"
#include "java/security/spec/PSSParameterSpec.h"
#include "jcaJceUtilDigestFactory.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi () {
 @public
  id<LibOrgBouncycastleJcajceUtilJcaJceHelper> helper_;
  JavaSecurityAlgorithmParameters *engineParams_;
  JavaSecuritySpecPSSParameterSpec *paramSpec_;
  JavaSecuritySpecPSSParameterSpec *originalSpec_;
  id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer_;
  id<LibOrgBouncycastleCryptoDigest> contentDigest_;
  id<LibOrgBouncycastleCryptoDigest> mgfDigest_;
  jint saltLength_;
  jbyte trailer_;
  jboolean isRaw_;
  LibOrgBouncycastleCryptoParamsRSAKeyParameters *key_;
  LibOrgBouncycastleCryptoSignersPSSSigner *pss_;
  jboolean isInitState_;
}

- (jbyte)getTrailerWithInt:(jint)trailerField;

- (void)setupContentDigest;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, helper_, id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, engineParams_, JavaSecurityAlgorithmParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, paramSpec_, JavaSecuritySpecPSSParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, originalSpec_, JavaSecuritySpecPSSParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, signer_, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, contentDigest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, mgfDigest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, key_, LibOrgBouncycastleCryptoParamsRSAKeyParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, pss_, LibOrgBouncycastleCryptoSignersPSSSigner *)

__attribute__((unused)) static jbyte LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_getTrailerWithInt_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self, jint trailerField);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_setupContentDigest(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self);

@interface LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest : NSObject < LibOrgBouncycastleCryptoDigest > {
 @public
  JavaIoByteArrayOutputStream *bOut_;
  id<LibOrgBouncycastleCryptoDigest> baseDigest_;
  jboolean oddTime_;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi:(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *)outer$
                                                  withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)mgfDigest;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (void)reset;

- (jint)getByteLength;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest, bOut_, JavaIoByteArrayOutputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest, baseDigest_, id<LibOrgBouncycastleCryptoDigest>)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *self, LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi

- (jbyte)getTrailerWithInt:(jint)trailerField {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_getTrailerWithInt_(self, trailerField);
}

- (void)setupContentDigest {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_setupContentDigest(self);
}

- (instancetype)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)signer
                                 withJavaSecuritySpecPSSParameterSpec:(JavaSecuritySpecPSSParameterSpec *)paramSpecArg {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, signer, paramSpecArg);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)signer
                                 withJavaSecuritySpecPSSParameterSpec:(JavaSecuritySpecPSSParameterSpec *)baseParamSpec
                                                          withBoolean:(jboolean)isRaw {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(self, signer, baseParamSpec, isRaw);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  if (!([JavaSecurityInterfacesRSAPublicKey_class_() isInstance:publicKey])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"Supplied key is not a RSAPublicKey instance");
  }
  key_ = LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePublicKeyParameterWithJavaSecurityInterfacesRSAPublicKey_((id<JavaSecurityInterfacesRSAPublicKey>) cast_check(publicKey, JavaSecurityInterfacesRSAPublicKey_class_()));
  pss_ = new_LibOrgBouncycastleCryptoSignersPSSSigner_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withInt_withByte_(signer_, contentDigest_, mgfDigest_, saltLength_, trailer_);
  [pss_ init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:key_];
  isInitState_ = true;
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (!([JavaSecurityInterfacesRSAPrivateKey_class_() isInstance:privateKey])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"Supplied key is not a RSAPrivateKey instance");
  }
  key_ = LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey_((id<JavaSecurityInterfacesRSAPrivateKey>) cast_check(privateKey, JavaSecurityInterfacesRSAPrivateKey_class_()));
  pss_ = new_LibOrgBouncycastleCryptoSignersPSSSigner_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withInt_withByte_(signer_, contentDigest_, mgfDigest_, saltLength_, trailer_);
  [pss_ init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(key_, random)];
  isInitState_ = true;
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  if (!([JavaSecurityInterfacesRSAPrivateKey_class_() isInstance:privateKey])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"Supplied key is not a RSAPrivateKey instance");
  }
  key_ = LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey_((id<JavaSecurityInterfacesRSAPrivateKey>) cast_check(privateKey, JavaSecurityInterfacesRSAPrivateKey_class_()));
  pss_ = new_LibOrgBouncycastleCryptoSignersPSSSigner_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withInt_withByte_(signer_, contentDigest_, mgfDigest_, saltLength_, trailer_);
  [pss_ init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:key_];
  isInitState_ = true;
}

- (void)engineUpdateWithByte:(jbyte)b {
  [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) updateWithByte:b];
  isInitState_ = false;
}

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) updateWithByteArray:b withInt:off withInt:len];
  isInitState_ = false;
}

- (IOSByteArray *)engineSign {
  isInitState_ = true;
  @try {
    return [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) generateSignature];
  }
  @catch (LibOrgBouncycastleCryptoCryptoException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_([e getMessage]);
  }
}

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  isInitState_ = true;
  return [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) verifySignatureWithByteArray:sigBytes];
}

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  if (params == nil) {
    if (originalSpec_ != nil) {
      params = originalSpec_;
    }
    else {
      return;
    }
  }
  if (!isInitState_) {
    @throw new_JavaSecurityProviderException_initWithNSString_(@"cannot call setParameter in the middle of update");
  }
  if ([params isKindOfClass:[JavaSecuritySpecPSSParameterSpec class]]) {
    JavaSecuritySpecPSSParameterSpec *newParamSpec = (JavaSecuritySpecPSSParameterSpec *) params;
    if (originalSpec_ != nil) {
      if (!LibOrgBouncycastleJcajceProviderUtiljcaJceUtilDigestFactory_isSameDigestWithNSString_withNSString_([originalSpec_ getDigestAlgorithm], [newParamSpec getDigestAlgorithm])) {
        @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(JreStrcat("$$", @"parameter must be using ", [((JavaSecuritySpecPSSParameterSpec *) nil_chk(originalSpec_)) getDigestAlgorithm]));
      }
    }
    if (![((NSString *) nil_chk([newParamSpec getMGFAlgorithm])) java_equalsIgnoreCase:@"MGF1"] && ![((NSString *) nil_chk([newParamSpec getMGFAlgorithm])) isEqual:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_mgf1))) getId]]) {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"unknown mask generation function specified");
    }
    if (!([[newParamSpec getMGFParameters] isKindOfClass:[JavaSecuritySpecMGF1ParameterSpec class]])) {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"unknown MGF parameters");
    }
    JavaSecuritySpecMGF1ParameterSpec *mgfParams = (JavaSecuritySpecMGF1ParameterSpec *) cast_chk([newParamSpec getMGFParameters], [JavaSecuritySpecMGF1ParameterSpec class]);
    if (!LibOrgBouncycastleJcajceProviderUtiljcaJceUtilDigestFactory_isSameDigestWithNSString_withNSString_([((JavaSecuritySpecMGF1ParameterSpec *) nil_chk(mgfParams)) getDigestAlgorithm], [newParamSpec getDigestAlgorithm])) {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"digest algorithm for MGF should be the same as for PSS parameters.");
    }
    id<LibOrgBouncycastleCryptoDigest> newDigest = LibOrgBouncycastleJcajceProviderUtiljcaJceUtilDigestFactory_getDigestWithNSString_([mgfParams getDigestAlgorithm]);
    if (newDigest == nil) {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(JreStrcat("$$", @"no match on MGF digest algorithm: ", [mgfParams getDigestAlgorithm]));
    }
    self->engineParams_ = nil;
    self->paramSpec_ = newParamSpec;
    self->mgfDigest_ = newDigest;
    self->saltLength_ = [paramSpec_ getSaltLength];
    self->trailer_ = LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_getTrailerWithInt_(self, [((JavaSecuritySpecPSSParameterSpec *) nil_chk(paramSpec_)) getTrailerField]);
    LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_setupContentDigest(self);
    if (key_ != nil) {
      pss_ = new_LibOrgBouncycastleCryptoSignersPSSSigner_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withInt_withByte_(signer_, contentDigest_, mgfDigest_, saltLength_, trailer_);
      if ([((LibOrgBouncycastleCryptoParamsRSAKeyParameters *) nil_chk(key_)) isPrivate]) {
        [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:key_];
      }
      else {
        [((LibOrgBouncycastleCryptoSignersPSSSigner *) nil_chk(pss_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:key_];
      }
    }
  }
  else {
    @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"Only PSSParameterSpec supported");
  }
}

- (JavaSecurityAlgorithmParameters *)engineGetParameters {
  if (engineParams_ == nil) {
    if (paramSpec_ != nil) {
      @try {
        engineParams_ = [((id<LibOrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createAlgorithmParametersWithNSString:@"PSS"];
        [((JavaSecurityAlgorithmParameters *) nil_chk(engineParams_)) init__WithJavaSecuritySpecAlgorithmParameterSpec:paramSpec_];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangRuntimeException_initWithNSString_([e description]);
      }
    }
  }
  return engineParams_;
}

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (id)engineGetParameterWithNSString:(NSString *)param {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineGetParameter unsupported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "B", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, 6, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 9, 6, -1, -1, -1 },
    { NULL, "V", 0x4, 10, 11, 12, -1, -1, -1 },
    { NULL, "V", 0x4, 10, 13, 12, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 12, -1, -1, -1 },
    { NULL, "Z", 0x4, 14, 15, 12, -1, -1, -1 },
    { NULL, "V", 0x4, 16, 17, 18, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 16, 19, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 20, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getTrailerWithInt:);
  methods[1].selector = @selector(setupContentDigest);
  methods[2].selector = @selector(initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:withJavaSecuritySpecPSSParameterSpec:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:withJavaSecuritySpecPSSParameterSpec:withBoolean:);
  methods[4].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[5].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[6].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  methods[7].selector = @selector(engineUpdateWithByte:);
  methods[8].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[9].selector = @selector(engineSign);
  methods[10].selector = @selector(engineVerifyWithByteArray:);
  methods[11].selector = @selector(engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[12].selector = @selector(engineGetParameters);
  methods[13].selector = @selector(engineSetParameterWithNSString:withId:);
  methods[14].selector = @selector(engineGetParameterWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LLibOrgBouncycastleJcajceUtilJcaJceHelper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "engineParams_", "LJavaSecurityAlgorithmParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paramSpec_", "LJavaSecuritySpecPSSParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "originalSpec_", "LJavaSecuritySpecPSSParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signer_", "LLibOrgBouncycastleCryptoAsymmetricBlockCipher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentDigest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mgfDigest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "saltLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "trailer_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isRaw_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LLibOrgBouncycastleCryptoParamsRSAKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pss_", "LLibOrgBouncycastleCryptoSignersPSSSigner;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isInitState_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getTrailer", "I", "LLibOrgBouncycastleCryptoAsymmetricBlockCipher;LJavaSecuritySpecPSSParameterSpec;", "LLibOrgBouncycastleCryptoAsymmetricBlockCipher;LJavaSecuritySpecPSSParameterSpec;Z", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;", "engineUpdate", "B", "LJavaSecuritySignatureException;", "[BII", "engineVerify", "[B", "engineSetParameter", "LJavaSecuritySpecAlgorithmParameterSpec;", "LJavaSecurityInvalidAlgorithmParameterException;", "LNSString;LNSObject;", "engineGetParameter", "LNSString;", "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA;LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi = { "PSSSignatureSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, fields, 7, 0x1, 15, 13, -1, 22, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;
}

@end

jbyte LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_getTrailerWithInt_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self, jint trailerField) {
  if (trailerField == 1) {
    return LibOrgBouncycastleCryptoSignersPSSSigner_TRAILER_IMPLICIT;
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unknown trailer field");
}

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_setupContentDigest(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self) {
  if (self->isRaw_) {
    self->contentDigest_ = new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(self, self->mgfDigest_);
  }
  else {
    self->contentDigest_ = self->mgfDigest_;
  }
}

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *paramSpecArg) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(self, signer, paramSpecArg, false);
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *paramSpecArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_, signer, paramSpecArg)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *paramSpecArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_, signer, paramSpecArg)
}

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *baseParamSpec, jboolean isRaw) {
  JavaSecuritySignatureSpi_init(self);
  self->helper_ = new_LibOrgBouncycastleJcajceUtilBCJcaJceHelper_init();
  self->isInitState_ = true;
  self->signer_ = signer;
  self->originalSpec_ = baseParamSpec;
  if (baseParamSpec == nil) {
    self->paramSpec_ = JreLoadStatic(JavaSecuritySpecPSSParameterSpec, DEFAULT);
  }
  else {
    self->paramSpec_ = baseParamSpec;
  }
  self->mgfDigest_ = LibOrgBouncycastleJcajceProviderUtiljcaJceUtilDigestFactory_getDigestWithNSString_([((JavaSecuritySpecPSSParameterSpec *) nil_chk(self->paramSpec_)) getDigestAlgorithm]);
  self->saltLength_ = [((JavaSecuritySpecPSSParameterSpec *) nil_chk(self->paramSpec_)) getSaltLength];
  self->trailer_ = LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_getTrailerWithInt_(self, [((JavaSecuritySpecPSSParameterSpec *) nil_chk(self->paramSpec_)) getTrailerField]);
  self->isRaw_ = isRaw;
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_setupContentDigest(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *baseParamSpec, jboolean isRaw) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_, signer, baseParamSpec, isRaw)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> signer, JavaSecuritySpecPSSParameterSpec *baseParamSpec, jboolean isRaw) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi, initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_, signer, baseParamSpec, isRaw)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS = { "nonePSS", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_withBoolean_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), nil, true);
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_nonePSS)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA = { "PSSwithRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), nil);
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_PSSwithRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA = { "SHA1withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), JreLoadStatic(JavaSecuritySpecPSSParameterSpec, DEFAULT));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA1withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA = { "SHA224withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-224", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-224"), 28, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA224withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA = { "SHA256withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-256", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-256"), 32, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA256withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA = { "SHA384withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-384", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-384"), 48, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA384withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA = { "SHA512withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-512", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-512"), 64, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA = { "SHA512_224withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-512(224)", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-512(224)"), 28, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_224withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA = { "SHA512_256withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA-512(256)", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA-512(256)"), 32, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA512_256withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA = { "SHA3_224withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA3-224", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA3-224"), 28, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_224withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA = { "SHA3_256withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA3-256", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA3-256"), 32, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_256withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA = { "SHA3_384withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA3-384", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA3-384"), 48, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_384withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA = { "SHA3_512withRSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withJavaSecuritySpecPSSParameterSpec_(self, new_LibOrgBouncycastleCryptoEnginesRSABlindedEngine_init(), new_JavaSecuritySpecPSSParameterSpec_initWithNSString_withNSString_withJavaSecuritySpecAlgorithmParameterSpec_withInt_withInt_(@"SHA3-512", @"MGF1", new_JavaSecuritySpecMGF1ParameterSpec_initWithNSString_(@"SHA3-512"), 64, 1));
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_SHA3_512withRSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest

- (instancetype)initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi:(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *)outer$
                                                  withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)mgfDigest {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(self, outer$, mgfDigest);
  return self;
}

- (NSString *)getAlgorithmName {
  return @"NULL";
}

- (jint)getDigestSize {
  return [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(baseDigest_)) getDigestSize];
}

- (void)updateWithByte:(jbyte)inArg {
  [((JavaIoByteArrayOutputStream *) nil_chk(bOut_)) writeWithInt:inArg];
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  [((JavaIoByteArrayOutputStream *) nil_chk(bOut_)) writeWithByteArray:inArg withInt:inOff withInt:len];
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  IOSByteArray *res = [((JavaIoByteArrayOutputStream *) nil_chk(bOut_)) toByteArray];
  if (oddTime_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(res, 0, outArg, outOff, ((IOSByteArray *) nil_chk(res))->size_);
  }
  else {
    [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(baseDigest_)) updateWithByteArray:res withInt:0 withInt:((IOSByteArray *) nil_chk(res))->size_];
    [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(baseDigest_)) doFinalWithByteArray:outArg withInt:outOff];
  }
  [self reset];
  oddTime_ = !oddTime_;
  return res->size_;
}

- (void)reset {
  [((JavaIoByteArrayOutputStream *) nil_chk(bOut_)) reset];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(baseDigest_)) reset];
}

- (jint)getByteLength {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi:withLibOrgBouncycastleCryptoDigest:);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getDigestSize);
  methods[3].selector = @selector(updateWithByte:);
  methods[4].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(doFinalWithByteArray:withInt:);
  methods[6].selector = @selector(reset);
  methods[7].selector = @selector(getByteLength);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bOut_", "LJavaIoByteArrayOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "baseDigest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "oddTime_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;", "update", "B", "[BII", "doFinal", "[BI", "LLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest = { "NullPssDigest", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, fields, 7, 0x2, 8, 3, 6, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *self, LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest) {
  NSObject_init(self);
  self->bOut_ = new_JavaIoByteArrayOutputStream_init();
  self->oddTime_ = true;
  self->baseDigest_ = mgfDigest;
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest, initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_, outer$, mgfDigest)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest_initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi *outer$, id<LibOrgBouncycastleCryptoDigest> mgfDigest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest, initWithLibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_withLibOrgBouncycastleCryptoDigest_, outer$, mgfDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaPSSSignatureSpi_NullPssDigest)
