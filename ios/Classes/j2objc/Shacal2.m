//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Shacal2.java
//

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "CBCBlockCipher.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "Shacal2.h"
#include "Shacal2Engine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricShacal2 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricShacal2_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricShacal2 *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricShacal2 *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2 = { "Shacal2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2 *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2 *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesShacal2Engine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesShacal2Engine_init()), 256);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC = { "CMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesShacal2Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_CMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"SHACAL-2", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for Shacal2 parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:32];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"Shacal2"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"Shacal2 IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Mac.Shacal-2CMAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$CMAC")];
  [provider addAlgorithmWithNSString:@"Cipher.Shacal2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher.SHACAL-2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.Shacal2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.Shacal2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.Shacal2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.SHACAL-2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.SHACAL-2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.SHACAL-2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, @"$AlgParams")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricShacal2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricShacal2_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricShacal2_Mappings)
