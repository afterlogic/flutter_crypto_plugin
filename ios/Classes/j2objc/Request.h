//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/Request.java
//

#ifndef Request_H
#define Request_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1OcspOcspCertID;
@class LibOrgBouncycastleAsn1X509Extensions;

@interface LibOrgBouncycastleAsn1OcspRequest : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1OcspOcspCertID *reqCert_;
  LibOrgBouncycastleAsn1X509Extensions *singleRequestExtensions_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1OcspOcspCertID:(LibOrgBouncycastleAsn1OcspOcspCertID *)reqCert
                              withLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)singleRequestExtensions;

+ (LibOrgBouncycastleAsn1OcspRequest *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                 withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspRequest *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1OcspOcspCertID *)getReqCert;

- (LibOrgBouncycastleAsn1X509Extensions *)getSingleRequestExtensions;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspRequest)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1OcspRequest, reqCert_, LibOrgBouncycastleAsn1OcspOcspCertID *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1OcspRequest, singleRequestExtensions_, LibOrgBouncycastleAsn1X509Extensions *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspRequest_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspRequest *self, LibOrgBouncycastleAsn1OcspOcspCertID *reqCert, LibOrgBouncycastleAsn1X509Extensions *singleRequestExtensions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRequest *new_LibOrgBouncycastleAsn1OcspRequest_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *reqCert, LibOrgBouncycastleAsn1X509Extensions *singleRequestExtensions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRequest *create_LibOrgBouncycastleAsn1OcspRequest_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *reqCert, LibOrgBouncycastleAsn1X509Extensions *singleRequestExtensions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRequest *LibOrgBouncycastleAsn1OcspRequest_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRequest *LibOrgBouncycastleAsn1OcspRequest_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Request_H
