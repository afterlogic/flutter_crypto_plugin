//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/CertificateHolderAuthorization.java
//

#include "ASN1ApplicationSpecific.h"
#include "ASN1EncodableVector.h"
#include "ASN1InputStream.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "BidirectionalMap.h"
#include "CertificateHolderAuthorization.h"
#include "DERApplicationSpecific.h"
#include "EACObjectIdentifiers.h"
#include "EACTags.h"
#include "IOSPrimitiveArray.h"
#include "Integers.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Hashtable.h"

@interface LibOrgBouncycastleAsn1EacCertificateHolderAuthorization ()

- (void)setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream:(LibOrgBouncycastleAsn1ASN1InputStream *)cha;

- (void)setAccessRightsWithByte:(jbyte)rights;

- (void)setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1InputStream *cha);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setAccessRightsWithByte_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, jbyte rights);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization)

LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_id_role_EAC;
JavaUtilHashtable *LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap;
LibOrgBouncycastleAsn1EacBidirectionalMap *LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole;
JavaUtilHashtable *LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_ReverseMap;

@implementation LibOrgBouncycastleAsn1EacCertificateHolderAuthorization

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_role_EAC {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_id_role_EAC;
}

+ (jint)CVCA {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_CVCA;
}

+ (jint)DV_DOMESTIC {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_DOMESTIC;
}

+ (jint)DV_FOREIGN {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_FOREIGN;
}

+ (jint)IS {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_IS;
}

+ (jint)RADG4 {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG4;
}

+ (jint)RADG3 {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG3;
}

+ (JavaUtilHashtable *)RightsDecodeMap {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap;
}

+ (void)setRightsDecodeMap:(JavaUtilHashtable *)value {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap = value;
}

+ (LibOrgBouncycastleAsn1EacBidirectionalMap *)AuthorizationRole {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole;
}

+ (void)setAuthorizationRole:(LibOrgBouncycastleAsn1EacBidirectionalMap *)value {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole = value;
}

+ (JavaUtilHashtable *)ReverseMap {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_ReverseMap;
}

+ (void)setReverseMap:(JavaUtilHashtable *)value {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_ReverseMap = value;
}

+ (NSString *)getRoleDescriptionWithInt:(jint)i {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_getRoleDescriptionWithInt_(i);
}

+ (jint)getFlagWithNSString:(NSString *)description_ {
  return LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_getFlagWithNSString_(description_);
}

- (void)setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream:(LibOrgBouncycastleAsn1ASN1InputStream *)cha {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream_(self, cha);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                           withInt:(jint)rights {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_(self, oid, rights);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific:(LibOrgBouncycastleAsn1ASN1ApplicationSpecific *)aSpe {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_(self, aSpe);
  return self;
}

- (jint)getAccessRights {
  return IOSByteArray_Get(nil_chk([((LibOrgBouncycastleAsn1ASN1ApplicationSpecific *) nil_chk(accessRights_)) getContents]), 0) & (jint) 0xff;
}

- (void)setAccessRightsWithByte:(jbyte)rights {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setAccessRightsWithByte_(self, rights);
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOid {
  return oid_;
}

- (void)setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, oid);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:oid_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:accessRights_];
  return new_LibOrgBouncycastleAsn1DERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1EncodableVector_(LibOrgBouncycastleAsn1EacEACTags_CERTIFICATE_HOLDER_AUTHORIZATION_TEMPLATE, v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 6, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, 6, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, 6, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getRoleDescriptionWithInt:);
  methods[1].selector = @selector(getFlagWithNSString:);
  methods[2].selector = @selector(setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withInt:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific:);
  methods[5].selector = @selector(getAccessRights);
  methods[6].selector = @selector(setAccessRightsWithByte:);
  methods[7].selector = @selector(getOid);
  methods[8].selector = @selector(setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oid_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "accessRights_", "LLibOrgBouncycastleAsn1ASN1ApplicationSpecific;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "id_role_EAC", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "CVCA", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_CVCA, 0x19, -1, -1, -1, -1 },
    { "DV_DOMESTIC", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_DOMESTIC, 0x19, -1, -1, -1, -1 },
    { "DV_FOREIGN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_FOREIGN, 0x19, -1, -1, -1, -1 },
    { "IS", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_IS, 0x19, -1, -1, -1, -1 },
    { "RADG4", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG4, 0x19, -1, -1, -1, -1 },
    { "RADG3", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG3, 0x19, -1, -1, -1, -1 },
    { "RightsDecodeMap", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x8, -1, 14, -1, -1 },
    { "AuthorizationRole", "LLibOrgBouncycastleAsn1EacBidirectionalMap;", .constantValue.asLong = 0, 0x8, -1, 15, -1, -1 },
    { "ReverseMap", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x8, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { "getRoleDescription", "I", "getFlag", "LNSString;", "setPrivateData", "LLibOrgBouncycastleAsn1ASN1InputStream;", "LJavaIoIOException;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;I", "LLibOrgBouncycastleAsn1ASN1ApplicationSpecific;", "setAccessRights", "B", "setOid", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", &LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_id_role_EAC, &LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap, &LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole, &LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_ReverseMap };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EacCertificateHolderAuthorization = { "CertificateHolderAuthorization", "lib.org.bouncycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 10, 12, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EacCertificateHolderAuthorization;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1EacCertificateHolderAuthorization class]) {
    LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_id_role_EAC = [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1EacEACObjectIdentifiers, bsi_de))) branchWithNSString:@"3.1.2.1"];
    LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap = new_JavaUtilHashtable_init();
    LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole = new_LibOrgBouncycastleAsn1EacBidirectionalMap_init();
    LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_ReverseMap = new_JavaUtilHashtable_init();
    {
      (void) [((JavaUtilHashtable *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG4) withId:@"RADG4"];
      (void) [((JavaUtilHashtable *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RightsDecodeMap)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_RADG3) withId:@"RADG3"];
      (void) [((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_CVCA) withId:@"CVCA"];
      (void) [((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_DOMESTIC) withId:@"DV_DOMESTIC"];
      (void) [((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_DV_FOREIGN) withId:@"DV_FOREIGN"];
      (void) [((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) putWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_IS) withId:@"IS"];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization)
  }
}

@end

NSString *LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_getRoleDescriptionWithInt_(jint i) {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initialize();
  return (NSString *) cast_chk([((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) getWithId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(i)], [NSString class]);
}

jint LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_getFlagWithNSString_(NSString *description_) {
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initialize();
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((LibOrgBouncycastleAsn1EacBidirectionalMap *) nil_chk(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_AuthorizationRole)) getReverseWithId:description_], [JavaLangInteger class]);
  if (i == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unknown value ", description_));
  }
  return [i intValue];
}

void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1InputStream *cha) {
  LibOrgBouncycastleAsn1ASN1Primitive *obj;
  obj = [((LibOrgBouncycastleAsn1ASN1InputStream *) nil_chk(cha)) readObject];
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1ObjectIdentifier class]]) {
    self->oid_ = (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) obj;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"no Oid in CerticateHolderAuthorization");
  }
  obj = [cha readObject];
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1ApplicationSpecific class]]) {
    self->accessRights_ = (LibOrgBouncycastleAsn1ASN1ApplicationSpecific *) obj;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No access rights in CerticateHolderAuthorization");
  }
}

void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, jint rights) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, oid);
  LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setAccessRightsWithByte_(self, (jbyte) rights);
}

LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *new_LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, jint rights) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_, oid, rights)
}

LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *create_LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, jint rights) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_, oid, rights)
}

void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1ApplicationSpecific *aSpe) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1ApplicationSpecific *) nil_chk(aSpe)) getApplicationTag] == LibOrgBouncycastleAsn1EacEACTags_CERTIFICATE_HOLDER_AUTHORIZATION_TEMPLATE) {
    LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setPrivateDataWithLibOrgBouncycastleAsn1ASN1InputStream_(self, new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_([aSpe getContents]));
  }
}

LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *new_LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_(LibOrgBouncycastleAsn1ASN1ApplicationSpecific *aSpe) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization, initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_, aSpe)
}

LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *create_LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_(LibOrgBouncycastleAsn1ASN1ApplicationSpecific *aSpe) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization, initWithLibOrgBouncycastleAsn1ASN1ApplicationSpecific_, aSpe)
}

void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setAccessRightsWithByte_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, jbyte rights) {
  IOSByteArray *accessRights = [IOSByteArray newArrayWithLength:1];
  *IOSByteArray_GetRef(accessRights, 0) = rights;
  self->accessRights_ = new_LibOrgBouncycastleAsn1DERApplicationSpecific_initWithInt_withByteArray_(LibOrgBouncycastleAsn1EacEACTags_DISCRETIONARY_DATA, accessRights);
}

void LibOrgBouncycastleAsn1EacCertificateHolderAuthorization_setOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  self->oid_ = oid;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EacCertificateHolderAuthorization)
