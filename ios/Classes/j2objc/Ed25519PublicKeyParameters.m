//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/Ed25519PublicKeyParameters.java
//

#include "Arrays.h"
#include "AsymmetricKeyParameter.h"
#include "Ed25519PublicKeyParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Streams.h"
#include "java/io/EOFException.h"
#include "java/io/InputStream.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters () {
 @public
  IOSByteArray *data_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters, data_, IOSByteArray *)

@implementation LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters

+ (jint)KEY_SIZE {
  return LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE;
}

- (instancetype)initWithByteArray:(IOSByteArray *)buf
                          withInt:(jint)off {
  LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithByteArray_withInt_(self, buf, off);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input {
  LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithJavaIoInputStream_(self, input);
  return self;
}

- (void)encodeWithByteArray:(IOSByteArray *)buf
                    withInt:(jint)off {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data_, 0, buf, off, LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE);
}

- (IOSByteArray *)getEncoded {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(data_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withInt:);
  methods[1].selector = @selector(initWithJavaIoInputStream:);
  methods[2].selector = @selector(encodeWithByteArray:withInt:);
  methods[3].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "KEY_SIZE", "I", .constantValue.asInt = LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE, 0x19, -1, -1, -1, -1 },
    { "data_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[BI", "LJavaIoInputStream;", "LJavaIoIOException;", "encode" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters = { "Ed25519PublicKeyParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters;
}

@end

void LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithByteArray_withInt_(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *self, IOSByteArray *buf, jint off) {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, false);
  self->data_ = [IOSByteArray newArrayWithLength:LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buf, off, self->data_, 0, LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE);
}

LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *new_LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithByteArray_withInt_(IOSByteArray *buf, jint off) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters, initWithByteArray_withInt_, buf, off)
}

LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *create_LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithByteArray_withInt_(IOSByteArray *buf, jint off) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters, initWithByteArray_withInt_, buf, off)
}

void LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithJavaIoInputStream_(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *self, JavaIoInputStream *input) {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, false);
  self->data_ = [IOSByteArray newArrayWithLength:LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE];
  if (LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_KEY_SIZE != LibOrgBouncycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(input, self->data_)) {
    @throw new_JavaIoEOFException_initWithNSString_(@"EOF encountered in middle of Ed25519 public key");
  }
}

LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *new_LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithJavaIoInputStream_(JavaIoInputStream *input) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters, initWithJavaIoInputStream_, input)
}

LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *create_LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters_initWithJavaIoInputStream_(JavaIoInputStream *input) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters, initWithJavaIoInputStream_, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters)
