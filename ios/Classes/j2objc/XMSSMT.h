//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSMT.java
//

#ifndef XMSSMT_H
#define XMSSMT_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters;
@class LibOrgBouncycastlePqcCryptoXmssXMSSParameters;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSMT : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params
                                                     withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng;

- (IOSByteArray *)exportPrivateKey;

- (IOSByteArray *)exportPublicKey;

- (void)generateKeys;

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)getParams;

- (IOSByteArray *)getPublicSeed;

- (void)importStateWithByteArray:(IOSByteArray *)privateKey
                   withByteArray:(IOSByteArray *)publicKey;

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)message;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                           withByteArray:(IOSByteArray *)signature
                           withByteArray:(IOSByteArray *)publicKey;

#pragma mark Protected

- (LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)getXMSS;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSMT)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSMT_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSMT *self, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSMT *new_LibOrgBouncycastlePqcCryptoXmssXMSSMT_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSMT *create_LibOrgBouncycastlePqcCryptoXmssXMSSMT_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSMT)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSMT_H
