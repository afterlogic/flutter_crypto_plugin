//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECPublicKeySpec.java
//

#include "ECCurve.h"
#include "ECKeySpec.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "ECPublicKeySpec.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastleJceSpecECPublicKeySpec () {
 @public
  LibOrgBouncycastleMathEcECPoint *q_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecECPublicKeySpec, q_, LibOrgBouncycastleMathEcECPoint *)

@implementation LibOrgBouncycastleJceSpecECPublicKeySpec

- (instancetype)initWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)q
           withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  LibOrgBouncycastleJceSpecECPublicKeySpec_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_(self, q, spec);
  return self;
}

- (LibOrgBouncycastleMathEcECPoint *)getQ {
  return q_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleMathEcECPoint:withLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[1].selector = @selector(getQ);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "q_", "LLibOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleMathEcECPoint;LLibOrgBouncycastleJceSpecECParameterSpec;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceSpecECPublicKeySpec = { "ECPublicKeySpec", "lib.org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceSpecECPublicKeySpec;
}

@end

void LibOrgBouncycastleJceSpecECPublicKeySpec_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceSpecECPublicKeySpec *self, LibOrgBouncycastleMathEcECPoint *q, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  LibOrgBouncycastleJceSpecECKeySpec_initWithLibOrgBouncycastleJceSpecECParameterSpec_(self, spec);
  if ([((LibOrgBouncycastleMathEcECPoint *) nil_chk(q)) getCurve] != nil) {
    self->q_ = [q normalize];
  }
  else {
    self->q_ = q;
  }
}

LibOrgBouncycastleJceSpecECPublicKeySpec *new_LibOrgBouncycastleJceSpecECPublicKeySpec_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleMathEcECPoint *q, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECPublicKeySpec, initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_, q, spec)
}

LibOrgBouncycastleJceSpecECPublicKeySpec *create_LibOrgBouncycastleJceSpecECPublicKeySpec_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleMathEcECPoint *q, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECPublicKeySpec, initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_, q, spec)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceSpecECPublicKeySpec)
