//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/SymmetricKeyEncSessionPacket.java
//

#include "BCPGInputStream.h"
#include "BCPGOutputStream.h"
#include "ContainedPacket.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PacketTags.h"
#include "S2K.h"
#include "SymmetricKeyEncSessionPacket.h"
#include "java/io/ByteArrayOutputStream.h"

@interface LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket () {
 @public
  jint version__;
  jint encAlgorithm_;
  LibOrgBouncycastleBcpgS2K *s2k_;
  IOSByteArray *secKeyData_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, s2k_, LibOrgBouncycastleBcpgS2K *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, secKeyData_, IOSByteArray *)

@implementation LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithInt:(jint)encAlgorithm
withLibOrgBouncycastleBcpgS2K:(LibOrgBouncycastleBcpgS2K *)s2k
              withByteArray:(IOSByteArray *)secKeyData {
  LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_(self, encAlgorithm, s2k, secKeyData);
  return self;
}

- (jint)getEncAlgorithm {
  return encAlgorithm_;
}

- (LibOrgBouncycastleBcpgS2K *)getS2K {
  return s2k_;
}

- (IOSByteArray *)getSecKeyData {
  return secKeyData_;
}

- (jint)getVersion {
  return version__;
}

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg {
  JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
  LibOrgBouncycastleBcpgBCPGOutputStream *pOut = new_LibOrgBouncycastleBcpgBCPGOutputStream_initWithJavaIoOutputStream_(bOut);
  [pOut writeWithInt:version__];
  [pOut writeWithInt:encAlgorithm_];
  [pOut writeObjectWithLibOrgBouncycastleBcpgBCPGObject:s2k_];
  if (secKeyData_ != nil && secKeyData_->size_ > 0) {
    [pOut writeWithByteArray:secKeyData_];
  }
  [pOut close];
  [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(outArg)) writePacketWithInt:LibOrgBouncycastleBcpgPacketTags_SYMMETRIC_KEY_ENC_SESSION withByteArray:[bOut toByteArray] withBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgS2K;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(initWithInt:withLibOrgBouncycastleBcpgS2K:withByteArray:);
  methods[2].selector = @selector(getEncAlgorithm);
  methods[3].selector = @selector(getS2K);
  methods[4].selector = @selector(getSecKeyData);
  methods[5].selector = @selector(getVersion);
  methods[6].selector = @selector(encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "I", .constantValue.asLong = 0, 0x2, 5, -1, -1, -1 },
    { "encAlgorithm_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "s2k_", "LLibOrgBouncycastleBcpgS2K;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secKeyData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;", "ILLibOrgBouncycastleBcpgS2K;[B", "encode", "LLibOrgBouncycastleBcpgBCPGOutputStream;", "version" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket = { "SymmetricKeyEncSessionPacket", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket;
}

@end

void LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgContainedPacket_init(self);
  self->version__ = [((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(inArg)) read];
  self->encAlgorithm_ = [inArg read];
  self->s2k_ = new_LibOrgBouncycastleBcpgS2K_initWithJavaIoInputStream_(inArg);
  self->secKeyData_ = [inArg readAll];
}

LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *new_LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *create_LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

void LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *self, jint encAlgorithm, LibOrgBouncycastleBcpgS2K *s2k, IOSByteArray *secKeyData) {
  LibOrgBouncycastleBcpgContainedPacket_init(self);
  self->version__ = 4;
  self->encAlgorithm_ = encAlgorithm;
  self->s2k_ = s2k;
  self->secKeyData_ = secKeyData;
}

LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *new_LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_(jint encAlgorithm, LibOrgBouncycastleBcpgS2K *s2k, IOSByteArray *secKeyData) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_, encAlgorithm, s2k, secKeyData)
}

LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *create_LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_(jint encAlgorithm, LibOrgBouncycastleBcpgS2K *s2k, IOSByteArray *secKeyData) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket, initWithInt_withLibOrgBouncycastleBcpgS2K_withByteArray_, encAlgorithm, s2k, secKeyData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket)
