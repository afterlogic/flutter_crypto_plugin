//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/KeyPurposeId.java
//

#ifndef KeyPurposeId_H
#define KeyPurposeId_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1X509KeyPurposeId : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *anyExtendedKeyUsage NS_SWIFT_NAME(anyExtendedKeyUsage);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_serverAuth NS_SWIFT_NAME(id_kp_serverAuth);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_clientAuth NS_SWIFT_NAME(id_kp_clientAuth);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_codeSigning NS_SWIFT_NAME(id_kp_codeSigning);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_emailProtection NS_SWIFT_NAME(id_kp_emailProtection);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_ipsecEndSystem NS_SWIFT_NAME(id_kp_ipsecEndSystem);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_ipsecTunnel NS_SWIFT_NAME(id_kp_ipsecTunnel);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_ipsecUser NS_SWIFT_NAME(id_kp_ipsecUser);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_timeStamping NS_SWIFT_NAME(id_kp_timeStamping);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_OCSPSigning NS_SWIFT_NAME(id_kp_OCSPSigning);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_dvcs NS_SWIFT_NAME(id_kp_dvcs);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_sbgpCertAAServerAuth NS_SWIFT_NAME(id_kp_sbgpCertAAServerAuth);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_scvp_responder NS_SWIFT_NAME(id_kp_scvp_responder);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_eapOverPPP NS_SWIFT_NAME(id_kp_eapOverPPP);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_eapOverLAN NS_SWIFT_NAME(id_kp_eapOverLAN);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_scvpServer NS_SWIFT_NAME(id_kp_scvpServer);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_scvpClient NS_SWIFT_NAME(id_kp_scvpClient);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_ipsecIKE NS_SWIFT_NAME(id_kp_ipsecIKE);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_capwapAC NS_SWIFT_NAME(id_kp_capwapAC);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_capwapWTP NS_SWIFT_NAME(id_kp_capwapWTP);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_smartcardlogon NS_SWIFT_NAME(id_kp_smartcardlogon);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_macAddress NS_SWIFT_NAME(id_kp_macAddress);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_msSGC NS_SWIFT_NAME(id_kp_msSGC);
@property (readonly, class) LibOrgBouncycastleAsn1X509KeyPurposeId *id_kp_nsSGC NS_SWIFT_NAME(id_kp_nsSGC);

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)anyExtendedKeyUsage;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_serverAuth;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_clientAuth;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_codeSigning;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_emailProtection;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_ipsecEndSystem;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_ipsecTunnel;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_ipsecUser;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_timeStamping;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_OCSPSigning;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_dvcs;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_sbgpCertAAServerAuth;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_scvp_responder;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_eapOverPPP;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_eapOverLAN;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_scvpServer;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_scvpClient;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_ipsecIKE;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_capwapAC;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_capwapWTP;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_smartcardlogon;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_macAddress;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_msSGC;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)id_kp_nsSGC;

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)id_;

- (NSString *)getId;

+ (LibOrgBouncycastleAsn1X509KeyPurposeId *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)toOID;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1X509KeyPurposeId)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_anyExtendedKeyUsage(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_anyExtendedKeyUsage;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, anyExtendedKeyUsage, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_serverAuth(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_serverAuth;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_serverAuth, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_clientAuth(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_clientAuth;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_clientAuth, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_codeSigning(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_codeSigning;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_codeSigning, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_emailProtection(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_emailProtection;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_emailProtection, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_ipsecEndSystem(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_ipsecEndSystem;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_ipsecEndSystem, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_ipsecTunnel(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_ipsecTunnel;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_ipsecTunnel, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_ipsecUser(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_ipsecUser;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_ipsecUser, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_timeStamping(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_timeStamping;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_timeStamping, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_OCSPSigning(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_OCSPSigning;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_OCSPSigning, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_dvcs(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_dvcs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_dvcs, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_sbgpCertAAServerAuth(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_sbgpCertAAServerAuth;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_sbgpCertAAServerAuth, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_scvp_responder(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_scvp_responder;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_scvp_responder, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_eapOverPPP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_eapOverPPP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_eapOverPPP, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_eapOverLAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_eapOverLAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_eapOverLAN, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_scvpServer(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_scvpServer;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_scvpServer, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_scvpClient(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_scvpClient;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_scvpClient, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_ipsecIKE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_ipsecIKE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_ipsecIKE, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_capwapAC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_capwapAC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_capwapAC, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_capwapWTP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_capwapWTP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_capwapWTP, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_smartcardlogon(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_smartcardlogon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_smartcardlogon, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_macAddress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_macAddress;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_macAddress, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_msSGC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_msSGC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_msSGC, LibOrgBouncycastleAsn1X509KeyPurposeId *)

inline LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_get_id_kp_nsSGC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_id_kp_nsSGC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509KeyPurposeId, id_kp_nsSGC, LibOrgBouncycastleAsn1X509KeyPurposeId *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509KeyPurposeId_initWithNSString_(LibOrgBouncycastleAsn1X509KeyPurposeId *self, NSString *id_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *new_LibOrgBouncycastleAsn1X509KeyPurposeId_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *create_LibOrgBouncycastleAsn1X509KeyPurposeId_initWithNSString_(NSString *id_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509KeyPurposeId *LibOrgBouncycastleAsn1X509KeyPurposeId_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509KeyPurposeId)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyPurposeId_H
