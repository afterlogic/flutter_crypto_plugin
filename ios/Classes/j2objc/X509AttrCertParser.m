//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/X509AttrCertParser.java
//

#include "ASN1Encodable.h"
#include "ASN1InputStream.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1Set.h"
#include "ASN1TaggedObject.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PEMUtil.h"
#include "PKCSObjectIdentifiers.h"
#include "SignedData.h"
#include "X509AttrCertParser.h"
#include "X509AttributeCertificate.h"
#include "X509StreamParserSpi.h"
#include "X509StreamParsingException.h"
#include "X509V2AttributeCertificate.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

@interface LibOrgBouncycastleJceProviderX509AttrCertParser () {
 @public
  LibOrgBouncycastleAsn1ASN1Set *sData_;
  jint sDataObjectCount_;
  JavaIoInputStream *currentStream_;
}

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)readDERCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)getCertificate;

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderX509AttrCertParser, sData_, LibOrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderX509AttrCertParser, currentStream_, JavaIoInputStream *)

inline LibOrgBouncycastleJceProviderPEMUtil *LibOrgBouncycastleJceProviderX509AttrCertParser_get_PEM_PARSER(void);
static LibOrgBouncycastleJceProviderPEMUtil *LibOrgBouncycastleJceProviderX509AttrCertParser_PEM_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJceProviderX509AttrCertParser, PEM_PARSER, LibOrgBouncycastleJceProviderPEMUtil *)

__attribute__((unused)) static id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_readDERCertificateWithJavaIoInputStream_(LibOrgBouncycastleJceProviderX509AttrCertParser *self, JavaIoInputStream *inArg);

__attribute__((unused)) static id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_getCertificate(LibOrgBouncycastleJceProviderX509AttrCertParser *self);

__attribute__((unused)) static id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_readPEMCertificateWithJavaIoInputStream_(LibOrgBouncycastleJceProviderX509AttrCertParser *self, JavaIoInputStream *inArg);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJceProviderX509AttrCertParser)

@implementation LibOrgBouncycastleJceProviderX509AttrCertParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJceProviderX509AttrCertParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)readDERCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return LibOrgBouncycastleJceProviderX509AttrCertParser_readDERCertificateWithJavaIoInputStream_(self, inArg);
}

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)getCertificate {
  return LibOrgBouncycastleJceProviderX509AttrCertParser_getCertificate(self);
}

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return LibOrgBouncycastleJceProviderX509AttrCertParser_readPEMCertificateWithJavaIoInputStream_(self, inArg);
}

- (void)engineInitWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  currentStream_ = inArg;
  sData_ = nil;
  sDataObjectCount_ = 0;
  if (![((JavaIoInputStream *) nil_chk(currentStream_)) markSupported]) {
    currentStream_ = new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(currentStream_);
  }
}

- (id)engineRead {
  @try {
    if (sData_ != nil) {
      if (sDataObjectCount_ != [sData_ size]) {
        return LibOrgBouncycastleJceProviderX509AttrCertParser_getCertificate(self);
      }
      else {
        sData_ = nil;
        sDataObjectCount_ = 0;
        return nil;
      }
    }
    [((JavaIoInputStream *) nil_chk(currentStream_)) markWithInt:10];
    jint tag = [((JavaIoInputStream *) nil_chk(currentStream_)) read];
    if (tag == -1) {
      return nil;
    }
    if (tag != (jint) 0x30) {
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return LibOrgBouncycastleJceProviderX509AttrCertParser_readPEMCertificateWithJavaIoInputStream_(self, currentStream_);
    }
    else {
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return LibOrgBouncycastleJceProviderX509AttrCertParser_readDERCertificateWithJavaIoInputStream_(self, currentStream_);
    }
  }
  @catch (JavaLangException *e) {
    @throw new_LibOrgBouncycastleX509UtilX509StreamParsingException_initWithNSString_withJavaLangThrowable_([e description], e);
  }
}

- (id<JavaUtilCollection>)engineReadAll {
  id<LibOrgBouncycastleX509X509AttributeCertificate> cert;
  id<JavaUtilList> certs = new_JavaUtilArrayList_init();
  while ((cert = (id<LibOrgBouncycastleX509X509AttributeCertificate>) cast_check([self engineRead], LibOrgBouncycastleX509X509AttributeCertificate_class_())) != nil) {
    [certs addWithId:cert];
  }
  return certs;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509AttributeCertificate;", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509AttributeCertificate;", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509AttributeCertificate;", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readDERCertificateWithJavaIoInputStream:);
  methods[2].selector = @selector(getCertificate);
  methods[3].selector = @selector(readPEMCertificateWithJavaIoInputStream:);
  methods[4].selector = @selector(engineInitWithJavaIoInputStream:);
  methods[5].selector = @selector(engineRead);
  methods[6].selector = @selector(engineReadAll);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PEM_PARSER", "LLibOrgBouncycastleJceProviderPEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "sData_", "LLibOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sDataObjectCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readDERCertificate", "LJavaIoInputStream;", "LJavaIoIOException;", "readPEMCertificate", "engineInit", "LLibOrgBouncycastleX509UtilX509StreamParsingException;", &LibOrgBouncycastleJceProviderX509AttrCertParser_PEM_PARSER };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceProviderX509AttrCertParser = { "X509AttrCertParser", "lib.org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceProviderX509AttrCertParser;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJceProviderX509AttrCertParser class]) {
    LibOrgBouncycastleJceProviderX509AttrCertParser_PEM_PARSER = new_LibOrgBouncycastleJceProviderPEMUtil_initWithNSString_(@"ATTRIBUTE CERTIFICATE");
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJceProviderX509AttrCertParser)
  }
}

@end

void LibOrgBouncycastleJceProviderX509AttrCertParser_init(LibOrgBouncycastleJceProviderX509AttrCertParser *self) {
  LibOrgBouncycastleX509X509StreamParserSpi_init(self);
  self->sData_ = nil;
  self->sDataObjectCount_ = 0;
  self->currentStream_ = nil;
}

LibOrgBouncycastleJceProviderX509AttrCertParser *new_LibOrgBouncycastleJceProviderX509AttrCertParser_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderX509AttrCertParser, init)
}

LibOrgBouncycastleJceProviderX509AttrCertParser *create_LibOrgBouncycastleJceProviderX509AttrCertParser_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderX509AttrCertParser, init)
}

id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_readDERCertificateWithJavaIoInputStream_(LibOrgBouncycastleJceProviderX509AttrCertParser *self, JavaIoInputStream *inArg) {
  LibOrgBouncycastleAsn1ASN1InputStream *dIn = new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(inArg);
  LibOrgBouncycastleAsn1ASN1Sequence *seq = (LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk([dIn readObject], [LibOrgBouncycastleAsn1ASN1Sequence class]);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 1 && [[seq getObjectAtWithInt:0] isKindOfClass:[LibOrgBouncycastleAsn1ASN1ObjectIdentifier class]]) {
    if ([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      self->sData_ = [new_LibOrgBouncycastleAsn1PkcsSignedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:1], [LibOrgBouncycastleAsn1ASN1TaggedObject class]), true)) getCertificates];
      return LibOrgBouncycastleJceProviderX509AttrCertParser_getCertificate(self);
    }
  }
  return new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_([seq getEncoded]);
}

id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_getCertificate(LibOrgBouncycastleJceProviderX509AttrCertParser *self) {
  if (self->sData_ != nil) {
    while (self->sDataObjectCount_ < [((LibOrgBouncycastleAsn1ASN1Set *) nil_chk(self->sData_)) size]) {
      id obj = [((LibOrgBouncycastleAsn1ASN1Set *) nil_chk(self->sData_)) getObjectAtWithInt:self->sDataObjectCount_++];
      if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]] && [((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(((LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk(obj, [LibOrgBouncycastleAsn1ASN1TaggedObject class])))) getTagNo] == 2) {
        return new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk(obj, [LibOrgBouncycastleAsn1ASN1TaggedObject class]), false))) getEncoded]);
      }
    }
  }
  return nil;
}

id<LibOrgBouncycastleX509X509AttributeCertificate> LibOrgBouncycastleJceProviderX509AttrCertParser_readPEMCertificateWithJavaIoInputStream_(LibOrgBouncycastleJceProviderX509AttrCertParser *self, JavaIoInputStream *inArg) {
  LibOrgBouncycastleAsn1ASN1Sequence *seq = [((LibOrgBouncycastleJceProviderPEMUtil *) nil_chk(LibOrgBouncycastleJceProviderX509AttrCertParser_PEM_PARSER)) readPEMObjectWithJavaIoInputStream:inArg];
  if (seq != nil) {
    return new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_([seq getEncoded]);
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceProviderX509AttrCertParser)
