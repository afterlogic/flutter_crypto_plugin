//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Noekeon.java
//

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "Noekeon.h"
#include "NoekeonEngine.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricNoekeon ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricNoekeon *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricNoekeon *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon = { "Noekeon", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesNoekeonEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Noekeon", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC = { "GMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesNoekeonEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_GMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesNoekeonEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-Noekeon", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for Noekeon parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"Noekeon"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"Noekeon IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameters.NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"Cipher.NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$KeyGen")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$GMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$KeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"NOEKEON" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricNoekeon;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricNoekeon_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricNoekeon_Mappings)
