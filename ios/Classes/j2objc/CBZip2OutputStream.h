//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/apache/bzip2/CBZip2OutputStream.java
//

#ifndef CBZip2OutputStream_H
#define CBZip2OutputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BZip2Constants.h"
#include "J2ObjC_header.h"
#include "java/io/OutputStream.h"

@class IOSCharArray;
@class IOSIntArray;
@class LibOrgBouncycastleApacheBzip2CRC;

@interface LibOrgBouncycastleApacheBzip2CBZip2OutputStream : JavaIoOutputStream < LibOrgBouncycastleApacheBzip2BZip2Constants > {
 @public
  jint last_;
  jint origPtr_;
  jint blockSize100k_;
  jboolean blockRandomised_;
  jint bytesOut_;
  jint bsBuff_;
  jint bsLive_;
  LibOrgBouncycastleApacheBzip2CRC *mCrc_;
  jboolean closed_;
}
@property (readonly, class) jint SETMASK NS_SWIFT_NAME(SETMASK);
@property (readonly, class) jint CLEARMASK NS_SWIFT_NAME(CLEARMASK);
@property (readonly, class) jint GREATER_ICOST NS_SWIFT_NAME(GREATER_ICOST);
@property (readonly, class) jint LESSER_ICOST NS_SWIFT_NAME(LESSER_ICOST);
@property (readonly, class) jint SMALL_THRESH NS_SWIFT_NAME(SMALL_THRESH);
@property (readonly, class) jint DEPTH_THRESH NS_SWIFT_NAME(DEPTH_THRESH);
@property (readonly, class) jint QSORT_STACK_SIZE NS_SWIFT_NAME(QSORT_STACK_SIZE);

+ (jint)SETMASK;

+ (jint)CLEARMASK;

+ (jint)GREATER_ICOST;

+ (jint)LESSER_ICOST;

+ (jint)SMALL_THRESH;

+ (jint)DEPTH_THRESH;

+ (jint)QSORT_STACK_SIZE;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)inStream;

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)inStream
                                             withInt:(jint)inBlockSize;

- (void)close;

- (void)finish;

- (void)flush;

- (void)writeWithInt:(jint)bv;

#pragma mark Protected

- (void)java_finalize;

+ (void)hbMakeCodeLengthsWithCharArray:(IOSCharArray *)len
                          withIntArray:(IOSIntArray *)freq
                               withInt:(jint)alphaSize
                               withInt:(jint)maxLen;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, mCrc_, LibOrgBouncycastleApacheBzip2CRC *)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_SETMASK(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_SETMASK 2097152
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, SETMASK, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_CLEARMASK(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_CLEARMASK -2097153
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, CLEARMASK, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_GREATER_ICOST(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_GREATER_ICOST 15
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, GREATER_ICOST, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_LESSER_ICOST(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_LESSER_ICOST 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, LESSER_ICOST, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_SMALL_THRESH(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_SMALL_THRESH 20
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, SMALL_THRESH, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_DEPTH_THRESH(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_DEPTH_THRESH 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, DEPTH_THRESH, jint)

inline jint LibOrgBouncycastleApacheBzip2CBZip2OutputStream_get_QSORT_STACK_SIZE(void);
#define LibOrgBouncycastleApacheBzip2CBZip2OutputStream_QSORT_STACK_SIZE 1000
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleApacheBzip2CBZip2OutputStream, QSORT_STACK_SIZE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleApacheBzip2CBZip2OutputStream_hbMakeCodeLengthsWithCharArray_withIntArray_withInt_withInt_(IOSCharArray *len, IOSIntArray *freq, jint alphaSize, jint maxLen);

FOUNDATION_EXPORT void LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_(LibOrgBouncycastleApacheBzip2CBZip2OutputStream *self, JavaIoOutputStream *inStream);

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CBZip2OutputStream *new_LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *inStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CBZip2OutputStream *create_LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *inStream);

FOUNDATION_EXPORT void LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_withInt_(LibOrgBouncycastleApacheBzip2CBZip2OutputStream *self, JavaIoOutputStream *inStream, jint inBlockSize);

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CBZip2OutputStream *new_LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_withInt_(JavaIoOutputStream *inStream, jint inBlockSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CBZip2OutputStream *create_LibOrgBouncycastleApacheBzip2CBZip2OutputStream_initWithJavaIoOutputStream_withInt_(JavaIoOutputStream *inStream, jint inBlockSize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleApacheBzip2CBZip2OutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CBZip2OutputStream_H
