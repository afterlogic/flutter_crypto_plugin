//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/EncKeyWithID.java
//

#ifndef EncKeyWithID_H
#define EncKeyWithID_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1DERUTF8String;
@class LibOrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class LibOrgBouncycastleAsn1X509GeneralName;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1CrmfEncKeyWithID : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)privKeyInfo;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)privKeyInfo
                                   withLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)str;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)privKeyInfo
                                 withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)generalName;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getIdentifier;

+ (LibOrgBouncycastleAsn1CrmfEncKeyWithID *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)getPrivateKey;

- (jboolean)hasIdentifier;

- (jboolean)isIdentifierUTF8String;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CrmfEncKeyWithID)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *LibOrgBouncycastleAsn1CrmfEncKeyWithID_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1CrmfEncKeyWithID *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *new_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *create_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1CrmfEncKeyWithID *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1DERUTF8String *str);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *new_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1DERUTF8String *str) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *create_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1DERUTF8String *str);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1CrmfEncKeyWithID *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1X509GeneralName *generalName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *new_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1X509GeneralName *generalName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfEncKeyWithID *create_LibOrgBouncycastleAsn1CrmfEncKeyWithID_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privKeyInfo, LibOrgBouncycastleAsn1X509GeneralName *generalName);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfEncKeyWithID)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // EncKeyWithID_H
