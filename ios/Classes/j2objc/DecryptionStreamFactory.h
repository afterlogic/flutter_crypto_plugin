//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/decryption_verification/DecryptionStreamFactory.java
//

#ifndef DecryptionStreamFactory_H
#define DecryptionStreamFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaIoInputStream;
@class LibComAfterlogicPgpDecryption_verificationDecryptionStream;
@class LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection;
@protocol JavaUtilSet;
@protocol LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback;
@protocol LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;

@interface LibComAfterlogicPgpDecryption_verificationDecryptionStreamFactory : NSObject

#pragma mark Public

+ (LibComAfterlogicPgpDecryption_verificationDecryptionStream *)createWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                                    withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)decryptionKeys
                                 withLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:(id<LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector>)decryptor
                                                                            withJavaUtilSet:(id<JavaUtilSet>)verificationKeys
                     withLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback:(id<LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback>)missingPublicKeyCallback;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibComAfterlogicPgpDecryption_verificationDecryptionStreamFactory)

FOUNDATION_EXPORT LibComAfterlogicPgpDecryption_verificationDecryptionStream *LibComAfterlogicPgpDecryption_verificationDecryptionStreamFactory_createWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_withLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector_withJavaUtilSet_withLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback_(JavaIoInputStream *inputStream, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *decryptionKeys, id<LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector> decryptor, id<JavaUtilSet> verificationKeys, id<LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback> missingPublicKeyCallback);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpDecryption_verificationDecryptionStreamFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DecryptionStreamFactory_H
