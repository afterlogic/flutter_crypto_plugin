//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/util/PqcCryptoPublicKeyFactory.java
//

#include "ASN1Encodable.h"
#include "ASN1InputStream.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AlgorithmIdentifier.h"
#include "AsymmetricKeyParameter.h"
#include "DERBitString.h"
#include "Digest.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NHPublicKeyParameters.h"
#include "PQCObjectIdentifiers.h"
#include "PqcCryptoPublicKeyFactory.h"
#include "PqcCryptoUtilUtils.h"
#include "QTESLAPublicKeyParameters.h"
#include "SPHINCS256KeyParams.h"
#include "SPHINCSPublicKeyParameters.h"
#include "SubjectPublicKeyInfo.h"
#include "XMSSKeyParams.h"
#include "XMSSMTKeyParams.h"
#include "XMSSMTParameters.h"
#include "XMSSMTPublicKeyParameters.h"
#include "XMSSParameters.h"
#include "XMSSPublicKey.h"
#include "XMSSPublicKeyParameters.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

inline id<JavaUtilMap> LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_get_converters(void);
inline id<JavaUtilMap> LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_set_converters(id<JavaUtilMap> value);
static id<JavaUtilMap> LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory, converters, id<JavaUtilMap>)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter : NSObject

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter : LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter : LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter : LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter : LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter)

@interface LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter : LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *self);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithByteArray:(IOSByteArray *)keyInfoData {
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithByteArray_(keyInfoData);
}

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithJavaIoInputStream:(JavaIoInputStream *)inStr {
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithJavaIoInputStream_(inStr);
}

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(keyInfo);
}

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                               withId:(id)defaultParams {
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(keyInfo, defaultParams);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 4, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 5, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createKeyWithByteArray:);
  methods[2].selector = @selector(createKeyWithJavaIoInputStream:);
  methods[3].selector = @selector(createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[4].selector = @selector(createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "converters", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "createKey", "[B", "LJavaIoIOException;", "LJavaIoInputStream;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", &LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters, "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter;LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter;LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter;LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter;LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter;LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory = { "PqcCryptoPublicKeyFactory", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 7, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory class]) {
    LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters = new_JavaUtilHashMap_init();
    {
      (void) [LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_I) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_III_size) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_III_speed) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_I) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_III) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, newHope) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) putWithId:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss_mt) withId:new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init()];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory)
  }
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory, init)
}

LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithByteArray_(IOSByteArray *keyInfoData) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_initialize();
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(keyInfoData)));
}

LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithJavaIoInputStream_(JavaIoInputStream *inStr) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_initialize();
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_([new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(inStr) readObject]));
}

LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_initialize();
  return LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(keyInfo, nil);
}

LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo, id defaultParams) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_initialize();
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId = [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm];
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter *converter = (LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter *) cast_chk([((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_converters)) getWithId:[((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algId)) getAlgorithm]], [LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter class]);
  if (converter != nil) {
    return [converter getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:keyInfo withId:defaultParams];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"algorithm identifier in public key not recognised: ", [algId getAlgorithm]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x400, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter = { "SubjectPublicKeyInfoConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x40a, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  return new_LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(LibOrgBouncycastlePqcCryptoUtilPqcCryptoUtilUtils_qTeslaLookupSecurityCategoryWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm]), [((LibOrgBouncycastleAsn1DERBitString *) nil_chk([keyInfo getPublicKeyData])) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter = { "QTeslaConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *self) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_QTeslaConverter)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  return new_LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_withNSString_([((LibOrgBouncycastleAsn1DERBitString *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getPublicKeyData])) getBytes], LibOrgBouncycastlePqcCryptoUtilPqcCryptoUtilUtils_sphincs256LookupTreeAlgNameWithLibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_(LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getAlgorithm])) getParameters])));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter = { "SPHINCSConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *self) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SPHINCSConverter)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  return new_LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_([((LibOrgBouncycastleAsn1DERBitString *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getPublicKeyData])) getBytes]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter = { "NHConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *self) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_NHConverter)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  LibOrgBouncycastlePqcAsn1XMSSKeyParams *keyParams = LibOrgBouncycastlePqcAsn1XMSSKeyParams_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm])) getParameters]);
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest = [((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastlePqcAsn1XMSSKeyParams *) nil_chk(keyParams)) getTreeDigest])) getAlgorithm];
  LibOrgBouncycastlePqcAsn1XMSSPublicKey *xmssPublicKey = LibOrgBouncycastlePqcAsn1XMSSPublicKey_getInstanceWithId_([keyInfo parsePublicKey]);
  return [((LibOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([new_LibOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(new_LibOrgBouncycastlePqcCryptoXmssXMSSParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_([keyParams getHeight], LibOrgBouncycastlePqcCryptoUtilPqcCryptoUtilUtils_getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest))) withPublicSeedWithByteArray:[((LibOrgBouncycastlePqcAsn1XMSSPublicKey *) nil_chk(xmssPublicKey)) getPublicSeed]])) withRootWithByteArray:[xmssPublicKey getRoot]])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter = { "XMSSConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *self) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSConverter)

@implementation LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                            withId:(id)defaultParams {
  LibOrgBouncycastlePqcAsn1XMSSMTKeyParams *keyParams = LibOrgBouncycastlePqcAsn1XMSSMTKeyParams_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm])) getParameters]);
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest = [((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastlePqcAsn1XMSSMTKeyParams *) nil_chk(keyParams)) getTreeDigest])) getAlgorithm];
  LibOrgBouncycastlePqcAsn1XMSSPublicKey *xmssMtPublicKey = LibOrgBouncycastlePqcAsn1XMSSPublicKey_getInstanceWithId_([keyInfo parsePublicKey]);
  return [((LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk([new_LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_([keyParams getHeight], [keyParams getLayers], LibOrgBouncycastlePqcCryptoUtilPqcCryptoUtilUtils_getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest))) withPublicSeedWithByteArray:[((LibOrgBouncycastlePqcAsn1XMSSPublicKey *) nil_chk(xmssMtPublicKey)) getPublicSeed]])) withRootWithByteArray:[xmssMtPublicKey getRoot]])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LLibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter = { "XMSSMTConverter", "lib.org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter;
}

@end

void LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *self) {
  LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *new_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter, init)
}

LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter *create_LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_XMSSMTConverter)
