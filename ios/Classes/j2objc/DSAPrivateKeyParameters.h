//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DSAPrivateKeyParameters.java
//

#ifndef DSAPrivateKeyParameters_H
#define DSAPrivateKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DSAKeyParameters.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDSAParameters;

@interface LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters : LibOrgBouncycastleCryptoParamsDSAKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)x
     withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)params;

- (JavaMathBigInteger *)getX;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *self, JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDSAParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *new_LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDSAParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *create_LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDSAParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSAPrivateKeyParameters_H
