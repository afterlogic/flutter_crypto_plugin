//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cryptopro/Gost2814789KeyWrapParameters.java
//

#ifndef Gost2814789KeyWrapParameters_H
#define Gost2814789KeyWrapParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)encryptionParamSet;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)encryptionParamSet
                                                               withByteArray:(IOSByteArray *)ukm;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getEncryptionParamSet;

+ (LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getUkm;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *new_LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *create_LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, IOSByteArray *ukm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *new_LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, IOSByteArray *ukm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters *create_LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, IOSByteArray *ukm);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CryptoproGost2814789KeyWrapParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Gost2814789KeyWrapParameters_H
