//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/X509DefaultEntryConverter.java
//

#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "DERGeneralizedTime.h"
#include "DERIA5String.h"
#include "DERPrintableString.h"
#include "DERUTF8String.h"
#include "J2ObjC_source.h"
#include "X509DefaultEntryConverter.h"
#include "X509Name.h"
#include "X509NameEntryConverter.h"
#include "java/io/IOException.h"
#include "java/lang/RuntimeException.h"

@implementation LibOrgBouncycastleAsn1X509X509DefaultEntryConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1X509X509DefaultEntryConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleAsn1ASN1Primitive *)getConvertedValueWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                            withNSString:(NSString *)value {
  if ([((NSString *) nil_chk(value)) java_length] != 0 && [value charAtWithInt:0] == '#') {
    @try {
      return [self convertHexEncodedWithNSString:value withInt:1];
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", @"can't recode value for oid ", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]));
    }
  }
  else {
    if ([value java_length] != 0 && [value charAtWithInt:0] == '\\') {
      value = [value java_substring:1];
    }
    if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, EmailAddress)] || [oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, DC)]) {
      return new_LibOrgBouncycastleAsn1DERIA5String_initWithNSString_(value);
    }
    else if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, DATE_OF_BIRTH)]) {
      return new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(value);
    }
    else if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, C)] || [oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, SN)] || [oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, DN_QUALIFIER)] || [oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509X509Name, TELEPHONE_NUMBER)]) {
      return new_LibOrgBouncycastleAsn1DERPrintableString_initWithNSString_(value);
    }
  }
  return new_LibOrgBouncycastleAsn1DERUTF8String_initWithNSString_(value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getConvertedValueWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getConvertedValue", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509X509DefaultEntryConverter = { "X509DefaultEntryConverter", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509X509DefaultEntryConverter;
}

@end

void LibOrgBouncycastleAsn1X509X509DefaultEntryConverter_init(LibOrgBouncycastleAsn1X509X509DefaultEntryConverter *self) {
  LibOrgBouncycastleAsn1X509X509NameEntryConverter_init(self);
}

LibOrgBouncycastleAsn1X509X509DefaultEntryConverter *new_LibOrgBouncycastleAsn1X509X509DefaultEntryConverter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509X509DefaultEntryConverter, init)
}

LibOrgBouncycastleAsn1X509X509DefaultEntryConverter *create_LibOrgBouncycastleAsn1X509X509DefaultEntryConverter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509X509DefaultEntryConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509X509DefaultEntryConverter)
