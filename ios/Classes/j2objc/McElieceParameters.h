//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.java
//

#ifndef McElieceParameters_H
#define McElieceParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >
@property (readonly, class) jint DEFAULT_M NS_SWIFT_NAME(DEFAULT_M);
@property (readonly, class) jint DEFAULT_T NS_SWIFT_NAME(DEFAULT_T);

+ (jint)DEFAULT_M;

+ (jint)DEFAULT_T;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (instancetype __nonnull)initWithInt:(jint)keysize;

- (instancetype __nonnull)initWithInt:(jint)keysize
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)t;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)t
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)t
                              withInt:(jint)poly;

- (instancetype __nonnull)initWithInt:(jint)m
                              withInt:(jint)t
                              withInt:(jint)poly
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (jint)getFieldPoly;

- (jint)getM;

- (jint)getN;

- (jint)getT;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters)

inline jint LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_get_DEFAULT_M(void);
#define LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_M 11
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, DEFAULT_M, jint)

inline jint LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_get_DEFAULT_T(void);
#define LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_T 50
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, DEFAULT_T, jint)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint keysize);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(jint keysize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(jint keysize);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint keysize, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint keysize, id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint keysize, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(jint m, jint t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(jint m, jint t);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, jint poly);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(jint m, jint t, jint poly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(jint m, jint t, jint poly);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceParameters_H
