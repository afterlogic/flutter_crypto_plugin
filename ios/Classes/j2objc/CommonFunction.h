//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/qtesla/CommonFunction.java
//

#ifndef CommonFunction_H
#define CommonFunction_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastlePqcCryptoQteslaCommonFunction : NSObject

#pragma mark Public

+ (jshort)load16WithByteArray:(IOSByteArray *)load_
                      withInt:(jint)loadOffset;

+ (jint)load32WithByteArray:(IOSByteArray *)load_
                    withInt:(jint)loadOffset;

+ (jlong)load64WithByteArray:(IOSByteArray *)load_
                     withInt:(jint)loadOffset;

+ (jboolean)memoryEqualWithByteArray:(IOSByteArray *)left
                             withInt:(jint)leftOffset
                       withByteArray:(IOSByteArray *)right
                             withInt:(jint)rightOffset
                             withInt:(jint)length;

+ (void)store16WithByteArray:(IOSByteArray *)store
                     withInt:(jint)storeOffset
                   withShort:(jshort)number;

+ (void)store32WithByteArray:(IOSByteArray *)store
                     withInt:(jint)storeOffset
                     withInt:(jint)number;

+ (void)store64WithByteArray:(IOSByteArray *)store
                     withInt:(jint)storeOffset
                    withLong:(jlong)number;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoQteslaCommonFunction)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoQteslaCommonFunction_init(LibOrgBouncycastlePqcCryptoQteslaCommonFunction *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoQteslaCommonFunction *new_LibOrgBouncycastlePqcCryptoQteslaCommonFunction_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoQteslaCommonFunction *create_LibOrgBouncycastlePqcCryptoQteslaCommonFunction_init(void);

FOUNDATION_EXPORT jboolean LibOrgBouncycastlePqcCryptoQteslaCommonFunction_memoryEqualWithByteArray_withInt_withByteArray_withInt_withInt_(IOSByteArray *left, jint leftOffset, IOSByteArray *right, jint rightOffset, jint length);

FOUNDATION_EXPORT jshort LibOrgBouncycastlePqcCryptoQteslaCommonFunction_load16WithByteArray_withInt_(IOSByteArray *load_, jint loadOffset);

FOUNDATION_EXPORT jint LibOrgBouncycastlePqcCryptoQteslaCommonFunction_load32WithByteArray_withInt_(IOSByteArray *load_, jint loadOffset);

FOUNDATION_EXPORT jlong LibOrgBouncycastlePqcCryptoQteslaCommonFunction_load64WithByteArray_withInt_(IOSByteArray *load_, jint loadOffset);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoQteslaCommonFunction_store16WithByteArray_withInt_withShort_(IOSByteArray *store, jint storeOffset, jshort number);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoQteslaCommonFunction_store32WithByteArray_withInt_withInt_(IOSByteArray *store, jint storeOffset, jint number);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoQteslaCommonFunction_store64WithByteArray_withInt_withLong_(IOSByteArray *store, jint storeOffset, jlong number);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoQteslaCommonFunction)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CommonFunction_H
