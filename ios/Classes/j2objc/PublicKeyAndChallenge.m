//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/mozilla/PublicKeyAndChallenge.java
//

#include "ASN1Encodable.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERIA5String.h"
#include "J2ObjC_source.h"
#include "PublicKeyAndChallenge.h"
#include "SubjectPublicKeyInfo.h"

@interface LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge () {
 @public
  LibOrgBouncycastleAsn1ASN1Sequence *pkacSeq_;
  LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki_;
  LibOrgBouncycastleAsn1DERIA5String *challenge_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge, pkacSeq_, LibOrgBouncycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge, spki_, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge, challenge_, LibOrgBouncycastleAsn1DERIA5String *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *new_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *create_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge

+ (LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return pkacSeq_;
}

- (LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo {
  return spki_;
}

- (LibOrgBouncycastleAsn1DERIA5String *)getChallenge {
  return challenge_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERIA5String;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(toASN1Primitive);
  methods[3].selector = @selector(getSubjectPublicKeyInfo);
  methods[4].selector = @selector(getChallenge);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pkacSeq_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "spki_", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "challenge_", "LLibOrgBouncycastleAsn1DERIA5String;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge = { "PublicKeyAndChallenge", "lib.org.bouncycastle.asn1.mozilla", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge;
}

@end

LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge class]]) {
    return (LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->pkacSeq_ = seq;
  self->spki_ = LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->challenge_ = LibOrgBouncycastleAsn1DERIA5String_getInstanceWithId_([seq getObjectAtWithInt:1]);
}

LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *new_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge *create_LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1MozillaPublicKeyAndChallenge)
