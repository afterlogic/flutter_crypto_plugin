//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/RSAESOAEPparams.java
//

#ifndef RSAESOAEPparams_H
#define RSAESOAEPparams_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1PkcsRSAESOAEPparams : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) LibOrgBouncycastleAsn1X509AlgorithmIdentifier *DEFAULT_HASH_ALGORITHM NS_SWIFT_NAME(DEFAULT_HASH_ALGORITHM);
@property (readonly, class) LibOrgBouncycastleAsn1X509AlgorithmIdentifier *DEFAULT_MASK_GEN_FUNCTION NS_SWIFT_NAME(DEFAULT_MASK_GEN_FUNCTION);
@property (readonly, class) LibOrgBouncycastleAsn1X509AlgorithmIdentifier *DEFAULT_P_SOURCE_ALGORITHM NS_SWIFT_NAME(DEFAULT_P_SOURCE_ALGORITHM);

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)DEFAULT_HASH_ALGORITHM;

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)DEFAULT_MASK_GEN_FUNCTION;

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)DEFAULT_P_SOURCE_ALGORITHM;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                              withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)maskGenAlgorithm
                              withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)pSourceAlgorithm;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm;

+ (LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMaskGenAlgorithm;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getPSourceAlgorithm;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams)

inline LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_get_DEFAULT_HASH_ALGORITHM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_DEFAULT_HASH_ALGORITHM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams, DEFAULT_HASH_ALGORITHM, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

inline LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_get_DEFAULT_MASK_GEN_FUNCTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_DEFAULT_MASK_GEN_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams, DEFAULT_MASK_GEN_FUNCTION, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

inline LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_get_DEFAULT_P_SOURCE_ALGORITHM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_DEFAULT_P_SOURCE_ALGORITHM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams, DEFAULT_P_SOURCE_ALGORITHM, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_init(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *new_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *create_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *maskGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *pSourceAlgorithm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *new_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *maskGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *pSourceAlgorithm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *create_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *maskGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *pSourceAlgorithm);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *new_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsRSAESOAEPparams *create_LibOrgBouncycastleAsn1PkcsRSAESOAEPparams_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsRSAESOAEPparams)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RSAESOAEPparams_H
