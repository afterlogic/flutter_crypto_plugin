//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Threefish.java
//

#ifndef Threefish_H
#define Threefish_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoBufferedBlockCipher;
@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleCryptoModesAEADBlockCipher;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;
@protocol LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_256)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_512)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_ECB_1024)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_256)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_512)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_KeyGen_1024)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256 : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_256)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512 : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_512)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024 : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_AlgParams_1024)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_256)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_512)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024 *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024 *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_CMAC_1024)

@interface LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricThreefish_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Threefish_H
