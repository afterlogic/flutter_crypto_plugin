//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/ReasonFlags.java
//

#include "ASN1BitString.h"
#include "DERBitString.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReasonFlags.h"

@implementation LibOrgBouncycastleAsn1X509ReasonFlags

+ (jint)UNUSED {
  return LibOrgBouncycastleAsn1X509ReasonFlags_UNUSED;
}

+ (jint)KEY_COMPROMISE {
  return LibOrgBouncycastleAsn1X509ReasonFlags_KEY_COMPROMISE;
}

+ (jint)CA_COMPROMISE {
  return LibOrgBouncycastleAsn1X509ReasonFlags_CA_COMPROMISE;
}

+ (jint)AFFILIATION_CHANGED {
  return LibOrgBouncycastleAsn1X509ReasonFlags_AFFILIATION_CHANGED;
}

+ (jint)SUPERSEDED {
  return LibOrgBouncycastleAsn1X509ReasonFlags_SUPERSEDED;
}

+ (jint)CESSATION_OF_OPERATION {
  return LibOrgBouncycastleAsn1X509ReasonFlags_CESSATION_OF_OPERATION;
}

+ (jint)CERTIFICATE_HOLD {
  return LibOrgBouncycastleAsn1X509ReasonFlags_CERTIFICATE_HOLD;
}

+ (jint)PRIVILEGE_WITHDRAWN {
  return LibOrgBouncycastleAsn1X509ReasonFlags_PRIVILEGE_WITHDRAWN;
}

+ (jint)AA_COMPROMISE {
  return LibOrgBouncycastleAsn1X509ReasonFlags_AA_COMPROMISE;
}

+ (jint)unused {
  return LibOrgBouncycastleAsn1X509ReasonFlags_unused;
}

+ (jint)keyCompromise {
  return LibOrgBouncycastleAsn1X509ReasonFlags_keyCompromise;
}

+ (jint)cACompromise {
  return LibOrgBouncycastleAsn1X509ReasonFlags_cACompromise;
}

+ (jint)affiliationChanged {
  return LibOrgBouncycastleAsn1X509ReasonFlags_affiliationChanged;
}

+ (jint)superseded {
  return LibOrgBouncycastleAsn1X509ReasonFlags_superseded;
}

+ (jint)cessationOfOperation {
  return LibOrgBouncycastleAsn1X509ReasonFlags_cessationOfOperation;
}

+ (jint)certificateHold {
  return LibOrgBouncycastleAsn1X509ReasonFlags_certificateHold;
}

+ (jint)privilegeWithdrawn {
  return LibOrgBouncycastleAsn1X509ReasonFlags_privilegeWithdrawn;
}

+ (jint)aACompromise {
  return LibOrgBouncycastleAsn1X509ReasonFlags_aACompromise;
}

- (instancetype)initWithInt:(jint)reasons {
  LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(self, reasons);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)reasons {
  LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(self, reasons);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1DERBitString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNUSED", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_UNUSED, 0x19, -1, -1, -1, -1 },
    { "KEY_COMPROMISE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_KEY_COMPROMISE, 0x19, -1, -1, -1, -1 },
    { "CA_COMPROMISE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_CA_COMPROMISE, 0x19, -1, -1, -1, -1 },
    { "AFFILIATION_CHANGED", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_AFFILIATION_CHANGED, 0x19, -1, -1, -1, -1 },
    { "SUPERSEDED", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_SUPERSEDED, 0x19, -1, -1, -1, -1 },
    { "CESSATION_OF_OPERATION", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_CESSATION_OF_OPERATION, 0x19, -1, -1, -1, -1 },
    { "CERTIFICATE_HOLD", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_CERTIFICATE_HOLD, 0x19, -1, -1, -1, -1 },
    { "PRIVILEGE_WITHDRAWN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_PRIVILEGE_WITHDRAWN, 0x19, -1, -1, -1, -1 },
    { "AA_COMPROMISE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_AA_COMPROMISE, 0x19, -1, -1, -1, -1 },
    { "unused", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_unused, 0x19, -1, -1, -1, -1 },
    { "keyCompromise", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_keyCompromise, 0x19, -1, -1, -1, -1 },
    { "cACompromise", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_cACompromise, 0x19, -1, -1, -1, -1 },
    { "affiliationChanged", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_affiliationChanged, 0x19, -1, -1, -1, -1 },
    { "superseded", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_superseded, 0x19, -1, -1, -1, -1 },
    { "cessationOfOperation", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_cessationOfOperation, 0x19, -1, -1, -1, -1 },
    { "certificateHold", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_certificateHold, 0x19, -1, -1, -1, -1 },
    { "privilegeWithdrawn", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_privilegeWithdrawn, 0x19, -1, -1, -1, -1 },
    { "aACompromise", "I", .constantValue.asInt = LibOrgBouncycastleAsn1X509ReasonFlags_aACompromise, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleAsn1DERBitString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509ReasonFlags = { "ReasonFlags", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 2, 18, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509ReasonFlags;
}

@end

void LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(LibOrgBouncycastleAsn1X509ReasonFlags *self, jint reasons) {
  LibOrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(self, LibOrgBouncycastleAsn1ASN1BitString_getBytesWithInt_(reasons), LibOrgBouncycastleAsn1ASN1BitString_getPadBitsWithInt_(reasons));
}

LibOrgBouncycastleAsn1X509ReasonFlags *new_LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(jint reasons) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509ReasonFlags, initWithInt_, reasons)
}

LibOrgBouncycastleAsn1X509ReasonFlags *create_LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(jint reasons) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509ReasonFlags, initWithInt_, reasons)
}

void LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509ReasonFlags *self, LibOrgBouncycastleAsn1DERBitString *reasons) {
  LibOrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(self, [((LibOrgBouncycastleAsn1DERBitString *) nil_chk(reasons)) getBytes], [reasons getPadBits]);
}

LibOrgBouncycastleAsn1X509ReasonFlags *new_LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *reasons) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509ReasonFlags, initWithLibOrgBouncycastleAsn1DERBitString_, reasons)
}

LibOrgBouncycastleAsn1X509ReasonFlags *create_LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *reasons) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509ReasonFlags, initWithLibOrgBouncycastleAsn1DERBitString_, reasons)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509ReasonFlags)
