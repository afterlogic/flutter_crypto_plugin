//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Asn1CmsTime.java
//

#ifndef Asn1CmsTime_H
#define Asn1CmsTime_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaUtilDate;
@class JavaUtilLocale;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1CmsAsn1CmsTime : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice > {
 @public
  LibOrgBouncycastleAsn1ASN1Primitive *time_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)time;

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)time;

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)time
                            withJavaUtilLocale:(JavaUtilLocale *)locale;

- (JavaUtilDate *)getDate;

+ (LibOrgBouncycastleAsn1CmsAsn1CmsTime *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsAsn1CmsTime *)getInstanceWithId:(id)obj;

- (NSString *)getTime;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAsn1CmsTime)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmsAsn1CmsTime, time_, LibOrgBouncycastleAsn1ASN1Primitive *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *LibOrgBouncycastleAsn1CmsAsn1CmsTime_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithLibOrgBouncycastleAsn1ASN1Primitive_(LibOrgBouncycastleAsn1CmsAsn1CmsTime *self, LibOrgBouncycastleAsn1ASN1Primitive *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *new_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithLibOrgBouncycastleAsn1ASN1Primitive_(LibOrgBouncycastleAsn1ASN1Primitive *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *create_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithLibOrgBouncycastleAsn1ASN1Primitive_(LibOrgBouncycastleAsn1ASN1Primitive *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_(LibOrgBouncycastleAsn1CmsAsn1CmsTime *self, JavaUtilDate *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *new_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_(JavaUtilDate *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *create_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_(JavaUtilDate *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_withJavaUtilLocale_(LibOrgBouncycastleAsn1CmsAsn1CmsTime *self, JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *new_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *create_LibOrgBouncycastleAsn1CmsAsn1CmsTime_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsTime *LibOrgBouncycastleAsn1CmsAsn1CmsTime_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAsn1CmsTime)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1CmsTime_H
