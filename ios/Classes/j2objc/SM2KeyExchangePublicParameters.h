//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/SM2KeyExchangePublicParameters.java
//

#ifndef SM2KeyExchangePublicParameters_H
#define SM2KeyExchangePublicParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoParamsECPublicKeyParameters;

@interface LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)staticPublicKey
                              withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)ephemeralPublicKey;

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)getEphemeralPublicKey;

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)getStaticPublicKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters *self, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters *new_LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters *create_LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters_initWithLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *staticPublicKey, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ephemeralPublicKey);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsSM2KeyExchangePublicParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SM2KeyExchangePublicParameters_H
