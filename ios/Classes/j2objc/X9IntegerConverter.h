//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x9/X9IntegerConverter.java
//

#ifndef X9IntegerConverter_H
#define X9IntegerConverter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleMathEcECCurve;
@class LibOrgBouncycastleMathEcECFieldElement;

@interface LibOrgBouncycastleAsn1X9X9IntegerConverter : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)getByteLengthWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)c;

- (jint)getByteLengthWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)fe;

- (IOSByteArray *)integerToBytesWithJavaMathBigInteger:(JavaMathBigInteger *)s
                                               withInt:(jint)qLength;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X9X9IntegerConverter)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X9X9IntegerConverter_init(LibOrgBouncycastleAsn1X9X9IntegerConverter *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9IntegerConverter *new_LibOrgBouncycastleAsn1X9X9IntegerConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9IntegerConverter *create_LibOrgBouncycastleAsn1X9X9IntegerConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X9X9IntegerConverter)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X9IntegerConverter_H
