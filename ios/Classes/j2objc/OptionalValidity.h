//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/OptionalValidity.java
//

#ifndef OptionalValidity_H
#define OptionalValidity_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509Asn1X509Time;

@interface LibOrgBouncycastleAsn1CrmfOptionalValidity : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509Asn1X509Time:(LibOrgBouncycastleAsn1X509Asn1X509Time *)notBefore
                              withLibOrgBouncycastleAsn1X509Asn1X509Time:(LibOrgBouncycastleAsn1X509Asn1X509Time *)notAfter;

+ (LibOrgBouncycastleAsn1CrmfOptionalValidity *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getNotAfter;

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getNotBefore;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CrmfOptionalValidity)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfOptionalValidity *LibOrgBouncycastleAsn1CrmfOptionalValidity_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1CrmfOptionalValidity *self, LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfOptionalValidity *new_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfOptionalValidity *create_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfOptionalValidity)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OptionalValidity_H
