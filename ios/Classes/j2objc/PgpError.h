//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/PgpError.java
//

#ifndef PgpError_H
#define PgpError_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/Throwable.h"

@class LibComAfterlogicPgpPgpErrorCase;

@interface LibComAfterlogicPgpPgpError : JavaLangThrowable

#pragma mark Public

- (LibComAfterlogicPgpPgpErrorCase *)getErrorCase;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibComAfterlogicPgpPgpErrorCase:(LibComAfterlogicPgpPgpErrorCase *)errorCase;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpPgpError)

FOUNDATION_EXPORT void LibComAfterlogicPgpPgpError_initWithLibComAfterlogicPgpPgpErrorCase_(LibComAfterlogicPgpPgpError *self, LibComAfterlogicPgpPgpErrorCase *errorCase);

FOUNDATION_EXPORT LibComAfterlogicPgpPgpError *new_LibComAfterlogicPgpPgpError_initWithLibComAfterlogicPgpPgpErrorCase_(LibComAfterlogicPgpPgpErrorCase *errorCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpPgpError *create_LibComAfterlogicPgpPgpError_initWithLibComAfterlogicPgpPgpErrorCase_(LibComAfterlogicPgpPgpErrorCase *errorCase);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpPgpError)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PgpError_H
