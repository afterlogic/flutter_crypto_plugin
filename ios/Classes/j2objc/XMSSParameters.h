//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSParameters.java
//

#ifndef XMSSParameters_H
#define XMSSParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastlePqcCryptoXmssWOTSPlus;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSParameters : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)height
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (jint)getDigestSize;

- (jint)getHeight;

- (jint)getWinternitzParameter;

#pragma mark Protected

- (id<LibOrgBouncycastleCryptoDigest>)getDigest;

#pragma mark Package-Private

- (jint)getK;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlus *)getWOTSPlus;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *self, jint height, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSParameters *new_LibOrgBouncycastlePqcCryptoXmssXMSSParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint height, id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSParameters *create_LibOrgBouncycastlePqcCryptoXmssXMSSParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint height, id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSParameters_H
