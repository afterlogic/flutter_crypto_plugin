//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/CompressedData.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "AlgorithmIdentifier.h"
#include "Asn1CmsContentInfo.h"
#include "BERSequence.h"
#include "CompressedData.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastleAsn1CmsCompressedData () {
 @public
  LibOrgBouncycastleAsn1ASN1Integer *version__;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *compressionAlgorithm_;
  LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapContentInfo_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmsCompressedData, version__, LibOrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmsCompressedData, compressionAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmsCompressedData, encapContentInfo_, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsCompressedData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmsCompressedData *new_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmsCompressedData *create_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmsCompressedData

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)compressionAlgorithm
                      withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)encapContentInfo {
  LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(self, compressionAlgorithm, encapContentInfo);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmsCompressedData *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)ato
                                                                                       withBoolean:(jboolean)isExplicit {
  return LibOrgBouncycastleAsn1CmsCompressedData_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(ato, isExplicit);
}

+ (LibOrgBouncycastleAsn1CmsCompressedData *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1CmsCompressedData_getInstanceWithId_(obj);
}

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion {
  return version__;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getCompressionAlgorithmIdentifier {
  return compressionAlgorithm_;
}

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getEncapContentInfo {
  return encapContentInfo_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:version__];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:compressionAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:encapContentInfo_];
  return new_LibOrgBouncycastleAsn1BERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmsCompressedData;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmsCompressedData;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(getVersion);
  methods[5].selector = @selector(getCompressionAlgorithmIdentifier);
  methods[6].selector = @selector(getEncapContentInfo);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, 5, -1, -1, -1 },
    { "compressionAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "encapContentInfo_", "LLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;LLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "version" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmsCompressedData = { "CompressedData", "lib.org.bouncycastle.asn1.cms", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmsCompressedData;
}

@end

void LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsCompressedData *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *compressionAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapContentInfo) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(0);
  self->compressionAlgorithm_ = compressionAlgorithm;
  self->encapContentInfo_ = encapContentInfo;
}

LibOrgBouncycastleAsn1CmsCompressedData *new_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *compressionAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapContentInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmsCompressedData, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_, compressionAlgorithm, encapContentInfo)
}

LibOrgBouncycastleAsn1CmsCompressedData *create_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *compressionAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapContentInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmsCompressedData, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_, compressionAlgorithm, encapContentInfo)
}

void LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsCompressedData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = (LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0], [LibOrgBouncycastleAsn1ASN1Integer class]);
  self->compressionAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
  self->encapContentInfo_ = LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_getInstanceWithId_([seq getObjectAtWithInt:2]);
}

LibOrgBouncycastleAsn1CmsCompressedData *new_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmsCompressedData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmsCompressedData *create_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmsCompressedData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmsCompressedData *LibOrgBouncycastleAsn1CmsCompressedData_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *ato, jboolean isExplicit) {
  LibOrgBouncycastleAsn1CmsCompressedData_initialize();
  return LibOrgBouncycastleAsn1CmsCompressedData_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(ato, isExplicit));
}

LibOrgBouncycastleAsn1CmsCompressedData *LibOrgBouncycastleAsn1CmsCompressedData_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1CmsCompressedData_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1CmsCompressedData class]]) {
    return (LibOrgBouncycastleAsn1CmsCompressedData *) obj;
  }
  if (obj != nil) {
    return new_LibOrgBouncycastleAsn1CmsCompressedData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmsCompressedData)
