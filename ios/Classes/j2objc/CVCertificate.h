//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/CVCertificate.java
//

#ifndef CVCertificate_H
#define CVCertificate_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1InputStream;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1EacCertificateBody;
@class LibOrgBouncycastleAsn1EacCertificateHolderReference;
@class LibOrgBouncycastleAsn1EacCertificationAuthorityReference;
@class LibOrgBouncycastleAsn1EacFlags;
@class LibOrgBouncycastleAsn1EacPackedDate;

@interface LibOrgBouncycastleAsn1EacCVCertificate : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1InputStream:(LibOrgBouncycastleAsn1ASN1InputStream *)aIS;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1EacCertificateBody:(LibOrgBouncycastleAsn1EacCertificateBody *)body
                                                             withByteArray:(IOSByteArray *)signature;

- (LibOrgBouncycastleAsn1EacCertificationAuthorityReference *)getAuthorityReference;

- (LibOrgBouncycastleAsn1EacCertificateBody *)getBody;

- (jint)getCertificateType;

- (LibOrgBouncycastleAsn1EacPackedDate *)getEffectiveDate;

- (LibOrgBouncycastleAsn1EacPackedDate *)getExpirationDate;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getHolderAuthorization;

- (LibOrgBouncycastleAsn1EacFlags *)getHolderAuthorizationRights;

- (jint)getHolderAuthorizationRole;

- (LibOrgBouncycastleAsn1EacCertificateHolderReference *)getHolderReference;

+ (LibOrgBouncycastleAsn1EacCVCertificate *)getInstanceWithId:(id)obj;

- (jint)getRole;

- (IOSByteArray *)getSignature;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EacCVCertificate)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1ASN1InputStream_(LibOrgBouncycastleAsn1EacCVCertificate *self, LibOrgBouncycastleAsn1ASN1InputStream *aIS);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacCVCertificate *new_LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1ASN1InputStream_(LibOrgBouncycastleAsn1ASN1InputStream *aIS) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacCVCertificate *create_LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1ASN1InputStream_(LibOrgBouncycastleAsn1ASN1InputStream *aIS);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1EacCertificateBody_withByteArray_(LibOrgBouncycastleAsn1EacCVCertificate *self, LibOrgBouncycastleAsn1EacCertificateBody *body, IOSByteArray *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacCVCertificate *new_LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1EacCertificateBody_withByteArray_(LibOrgBouncycastleAsn1EacCertificateBody *body, IOSByteArray *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacCVCertificate *create_LibOrgBouncycastleAsn1EacCVCertificate_initWithLibOrgBouncycastleAsn1EacCertificateBody_withByteArray_(LibOrgBouncycastleAsn1EacCertificateBody *body, IOSByteArray *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacCVCertificate *LibOrgBouncycastleAsn1EacCVCertificate_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EacCVCertificate)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CVCertificate_H
