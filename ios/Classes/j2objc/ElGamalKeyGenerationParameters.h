//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ElGamalKeyGenerationParameters.java
//

#ifndef ElGamalKeyGenerationParameters_H
#define ElGamalKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoParamsElGamalParameters;

@interface LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
       withLibOrgBouncycastleCryptoParamsElGamalParameters:(LibOrgBouncycastleCryptoParamsElGamalParameters *)params;

- (LibOrgBouncycastleCryptoParamsElGamalParameters *)getParameters;

#pragma mark Package-Private

+ (jint)getStrengthWithLibOrgBouncycastleCryptoParamsElGamalParameters:(LibOrgBouncycastleCryptoParamsElGamalParameters *)params;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsElGamalParameters_(LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters *self, JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsElGamalParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters *new_LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsElGamalParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsElGamalParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters *create_LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsElGamalParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsElGamalParameters *params);

FOUNDATION_EXPORT jint LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters_getStrengthWithLibOrgBouncycastleCryptoParamsElGamalParameters_(LibOrgBouncycastleCryptoParamsElGamalParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsElGamalKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ElGamalKeyGenerationParameters_H
