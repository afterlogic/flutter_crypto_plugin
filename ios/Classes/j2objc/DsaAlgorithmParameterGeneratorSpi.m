//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dsa/DsaAlgorithmParameterGeneratorSpi.java
//

#include "BaseAlgorithmParameterGeneratorSpi.h"
#include "CryptoServicesRegistrar.h"
#include "DSAParameterGenerationParameters.h"
#include "DSAParameters.h"
#include "DSAParametersGenerator.h"
#include "DsaAlgorithmParameterGeneratorSpi.h"
#include "J2ObjC_source.h"
#include "PrimeCertaintyCalculator.h"
#include "SHA256Digest.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/DSAParameterSpec.h"

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (strength < 512 || strength > 3072) {
    @throw new_JavaSecurityInvalidParameterException_initWithNSString_(@"strength must be from 512 - 3072");
  }
  if (strength <= 1024 && strength % 64 != 0) {
    @throw new_JavaSecurityInvalidParameterException_initWithNSString_(@"strength must be a multiple of 64 below 1024 bits.");
  }
  if (strength > 1024 && strength % 1024 != 0) {
    @throw new_JavaSecurityInvalidParameterException_initWithNSString_(@"strength must be a multiple of 1024 above 1024 bits.");
  }
  self->strength_ = strength;
  self->random_ = random;
}

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for DSA parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  LibOrgBouncycastleCryptoGeneratorsDSAParametersGenerator *pGen;
  if (strength_ <= 1024) {
    pGen = new_LibOrgBouncycastleCryptoGeneratorsDSAParametersGenerator_init();
  }
  else {
    pGen = new_LibOrgBouncycastleCryptoGeneratorsDSAParametersGenerator_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSHA256Digest_init());
  }
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  jint certainty = LibOrgBouncycastleJcajceProviderAsymmetricUtilPrimeCertaintyCalculator_getDefaultCertaintyWithInt_(strength_);
  if (strength_ == 1024) {
    params_ = new_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(1024, 160, certainty, random_);
    [pGen init__WithLibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters:params_];
  }
  else if (strength_ > 1024) {
    params_ = new_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(strength_, 256, certainty, random_);
    [pGen init__WithLibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters:params_];
  }
  else {
    [pGen init__WithInt:strength_ withInt:certainty withJavaSecuritySecureRandom:random_];
  }
  LibOrgBouncycastleCryptoParamsDSAParameters *p = [pGen generateParameters];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"DSA"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleCryptoParamsDSAParameters *) nil_chk(p)) getP], [p getQ], [p getG])];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 2, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "strength_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "params_", "LLibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineInit", "ILJavaSecuritySecureRandom;", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi = { "DsaAlgorithmParameterGeneratorSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAlgorithmParameterGeneratorSpi_init(self);
  self->strength_ = 2048;
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaDsaAlgorithmParameterGeneratorSpi)
