//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/Holder.java
//

#ifndef Holder_H
#define Holder_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509GeneralNames;
@class LibOrgBouncycastleAsn1X509IssuerSerial;
@class LibOrgBouncycastleAsn1X509ObjectDigestInfo;

@interface LibOrgBouncycastleAsn1X509Holder : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID_;
  LibOrgBouncycastleAsn1X509GeneralNames *entityName_;
  LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo_;
}
@property (readonly, class) jint V1_CERTIFICATE_HOLDER NS_SWIFT_NAME(V1_CERTIFICATE_HOLDER);
@property (readonly, class) jint V2_CERTIFICATE_HOLDER NS_SWIFT_NAME(V2_CERTIFICATE_HOLDER);

+ (jint)V1_CERTIFICATE_HOLDER;

+ (jint)V2_CERTIFICATE_HOLDER;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)entityName;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)entityName
                                                                 withInt:(jint)version_;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID
                                                                 withInt:(jint)version_;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509ObjectDigestInfo:(LibOrgBouncycastleAsn1X509ObjectDigestInfo *)objectDigestInfo;

- (LibOrgBouncycastleAsn1X509IssuerSerial *)getBaseCertificateID;

- (LibOrgBouncycastleAsn1X509GeneralNames *)getEntityName;

+ (LibOrgBouncycastleAsn1X509Holder *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509ObjectDigestInfo *)getObjectDigestInfo;

- (jint)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509Holder)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509Holder, baseCertificateID_, LibOrgBouncycastleAsn1X509IssuerSerial *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509Holder, entityName_, LibOrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509Holder, objectDigestInfo_, LibOrgBouncycastleAsn1X509ObjectDigestInfo *)

inline jint LibOrgBouncycastleAsn1X509Holder_get_V1_CERTIFICATE_HOLDER(void);
#define LibOrgBouncycastleAsn1X509Holder_V1_CERTIFICATE_HOLDER 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509Holder, V1_CERTIFICATE_HOLDER, jint)

inline jint LibOrgBouncycastleAsn1X509Holder_get_V2_CERTIFICATE_HOLDER(void);
#define LibOrgBouncycastleAsn1X509Holder_V2_CERTIFICATE_HOLDER 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509Holder, V2_CERTIFICATE_HOLDER, jint)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *LibOrgBouncycastleAsn1X509Holder_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509Holder *self, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *create_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_withInt_(LibOrgBouncycastleAsn1X509Holder *self, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, jint version_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_withInt_(LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, jint version_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *create_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509IssuerSerial_withInt_(LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, jint version_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509Holder *self, LibOrgBouncycastleAsn1X509GeneralNames *entityName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *entityName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *create_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *entityName);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_withInt_(LibOrgBouncycastleAsn1X509Holder *self, LibOrgBouncycastleAsn1X509GeneralNames *entityName, jint version_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_withInt_(LibOrgBouncycastleAsn1X509GeneralNames *entityName, jint version_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *create_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509GeneralNames_withInt_(LibOrgBouncycastleAsn1X509GeneralNames *entityName, jint version_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509Holder *self, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *new_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509Holder *create_LibOrgBouncycastleAsn1X509Holder_initWithLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509Holder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Holder_H
