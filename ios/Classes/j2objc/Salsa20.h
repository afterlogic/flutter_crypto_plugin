//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Salsa20.java
//

#ifndef Salsa20_H
#define Salsa20_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseStreamCipher.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoStreamCipher;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricSalsa20 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSalsa20)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSalsa20)

@interface LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseStreamCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoStreamCipher:(id<LibOrgBouncycastleCryptoStreamCipher>)arg0
                                                               withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoStreamCipher:(id<LibOrgBouncycastleCryptoStreamCipher>)arg0
                                                               withInt:(jint)arg1
                                                               withInt:(jint)arg2
                                                               withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base_init(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base *new_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base *create_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Base)

@interface LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_AlgParams)

@interface LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSalsa20_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Salsa20_H
