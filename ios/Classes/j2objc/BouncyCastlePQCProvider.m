//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/BouncyCastlePQCProvider.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "AlgorithmProvider.h"
#include "AsymmetricKeyInfoConverter.h"
#include "BouncyCastlePQCProvider.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PrivateKeyInfo.h"
#include "ProviderConfiguration.h"
#include "SubjectPublicKeyInfo.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/InternalError.h"
#include "java/security/AccessController.h"
#include "java/security/PrivateKey.h"
#include "java/security/PrivilegedAction.h"
#include "java/security/Provider.h"
#include "java/security/PublicKey.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider ()

- (void)setup;

- (void)loadAlgorithmsWithNSString:(NSString *)packageName
                 withNSStringArray:(IOSObjectArray *)names;

+ (id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

@end

inline NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_get_info(void);
inline NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_set_info(NSString *value);
static NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_info = @"BouncyCastle Post-Quantum Security Provider v1.61";
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, info, NSString *)

inline id<JavaUtilMap> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_get_keyInfoConverters(void);
static id<JavaUtilMap> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, keyInfoConverters, id<JavaUtilMap>)

inline NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_get_ALGORITHM_PACKAGE(void);
static NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHM_PACKAGE = @"lib.org.bouncycastle.pqc.jcajce.provider.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, ALGORITHM_PACKAGE, NSString *)

inline IOSObjectArray *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_get_ALGORITHMS(void);
static IOSObjectArray *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, ALGORITHMS, IOSObjectArray *)

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_setup(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *self);

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadAlgorithmsWithNSString_withNSStringArray_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *self, NSString *packageName, IOSObjectArray *names);

__attribute__((unused)) static id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algorithm);

@interface LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *this$0_;
}

- (instancetype)initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider:(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *)outer$;

- (id)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1)

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *self, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$);

__attribute__((unused)) static LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *create_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$);

@interface LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  NSString *val$className_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (id)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2)

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *self, NSString *capture$0);

__attribute__((unused)) static LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *create_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(NSString *capture$0);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider)

NSString *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_PROVIDER_NAME = @"BCPQC";
id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_CONFIGURATION;

@implementation LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider

+ (NSString *)PROVIDER_NAME {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_PROVIDER_NAME;
}

+ (void)setPROVIDER_NAME:(NSString *)value {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_PROVIDER_NAME = value;
}

+ (id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)CONFIGURATION {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_CONFIGURATION;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setup {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_setup(self);
}

- (void)loadAlgorithmsWithNSString:(NSString *)packageName
                 withNSStringArray:(IOSObjectArray *)names {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, packageName, names);
}

- (void)setParameterWithNSString:(NSString *)parameterName
                          withId:(id)parameter {
  @synchronized(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_CONFIGURATION) {
  }
}

- (jboolean)hasAlgorithmWithNSString:(NSString *)type
                        withNSString:(NSString *)name {
  return [self containsKeyWithId:JreStrcat("$C$", type, '.', name)] || [self containsKeyWithId:JreStrcat("$$C$", @"Alg.Alias.", type, '.', name)];
}

- (void)addAlgorithmWithNSString:(NSString *)key
                    withNSString:(NSString *)value {
  if ([self containsKeyWithId:key]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"duplicate provider key (", key, @") found"));
  }
  (void) [self putWithId:key withId:value];
}

- (void)addAlgorithmWithNSString:(NSString *)type
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                    withNSString:(NSString *)className_ {
  if (![self containsKeyWithId:JreStrcat("$C$", type, '.', className_)]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$C$$", @"primary key (", type, '.', className_, @") not found"));
  }
  [self addAlgorithmWithNSString:JreStrcat("$C@", type, '.', oid) withNSString:className_];
  [self addAlgorithmWithNSString:JreStrcat("$$@", type, @".OID.", oid) withNSString:className_];
}

- (void)addKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
       withLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:(id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)keyInfoConverter {
  @synchronized(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters) {
    (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters)) putWithId:oid withId:keyInfoConverter];
  }
}

- (void)addAttributesWithNSString:(NSString *)key
                  withJavaUtilMap:(id<JavaUtilMap>)attributeMap {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(attributeMap)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    NSString *attributeName = (NSString *) cast_chk([it next], [NSString class]);
    NSString *attributeKey = JreStrcat("$C$", key, ' ', attributeName);
    if ([self containsKeyWithId:attributeKey]) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"duplicate provider attribute key (", attributeKey, @") found"));
    }
    (void) [self putWithId:attributeKey withId:[attributeMap getWithId:attributeName]];
  }
}

+ (id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(algorithm);
}

+ (id<JavaSecurityPublicKey>)getPublicKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)publicKeyInfo {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getPublicKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(publicKeyInfo);
}

+ (id<JavaSecurityPrivateKey>)getPrivateKeyWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)privateKeyInfo {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getPrivateKeyWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(privateKeyInfo);
}

+ (IOSClass *)loadClassWithIOSClass:(IOSClass *)sourceClass
                       withNSString:(NSString *)className_ {
  return LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadClassWithIOSClass_withNSString_(sourceClass, className_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPublicKey;", 0x9, 15, 16, 17, -1, -1, -1 },
    { NULL, "LJavaSecurityPrivateKey;", 0x9, 18, 19, 17, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x8, 20, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setup);
  methods[2].selector = @selector(loadAlgorithmsWithNSString:withNSStringArray:);
  methods[3].selector = @selector(setParameterWithNSString:withId:);
  methods[4].selector = @selector(hasAlgorithmWithNSString:withNSString:);
  methods[5].selector = @selector(addAlgorithmWithNSString:withNSString:);
  methods[6].selector = @selector(addAlgorithmWithNSString:withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[7].selector = @selector(addKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:);
  methods[8].selector = @selector(addAttributesWithNSString:withJavaUtilMap:);
  methods[9].selector = @selector(getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[10].selector = @selector(getPublicKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[11].selector = @selector(getPrivateKeyWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[12].selector = @selector(loadClassWithIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "info", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 22, -1, -1 },
    { "PROVIDER_NAME", "LNSString;", .constantValue.asLong = 0, 0x9, -1, 23, -1, -1 },
    { "CONFIGURATION", "LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "keyInfoConverters", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "ALGORITHM_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "ALGORITHMS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
  };
  static const void *ptrTable[] = { "loadAlgorithms", "LNSString;[LNSString;", "setParameter", "LNSString;LNSObject;", "hasAlgorithm", "LNSString;LNSString;", "addAlgorithm", "LNSString;LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "addKeyInfoConverter", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", "addAttributes", "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "getAsymmetricKeyInfoConverter", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getPublicKey", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LJavaIoIOException;", "getPrivateKey", "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "loadClass", "LIOSClass;LNSString;", &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_info, &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_PROVIDER_NAME, &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_CONFIGURATION, &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters, &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHM_PACKAGE, &LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHMS };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider = { "BouncyCastlePQCProvider", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, fields, 7, 0x1, 13, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider class]) {
    LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters = new_JavaUtilHashMap_init();
    LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHMS = [IOSObjectArray newArrayWithObjects:(id[]){ @"Rainbow", @"McEliece", @"SPHINCS", @"NH", @"XMSS", @"QTESLA" } count:6 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider)
  }
}

@end

void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_init(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *self) {
  JavaSecurityProvider_initWithNSString_withDouble_withNSString_(self, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_PROVIDER_NAME, 1.61, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_info);
  (void) JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(self));
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, init)
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *create_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider, init)
}

void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_setup(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *self) {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHM_PACKAGE, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_ALGORITHMS);
}

void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadAlgorithmsWithNSString_withNSStringArray_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *self, NSString *packageName, IOSObjectArray *names) {
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(names))->size_; i++) {
    IOSClass *clazz = LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadClassWithIOSClass_withNSString_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_class_(), JreStrcat("$$$", packageName, IOSObjectArray_Get(names, i), @"$Mappings"));
    if (clazz != nil) {
      @try {
        [((LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider *) nil_chk(((LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider *) cast_chk([clazz newInstance], [LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider class])))) configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:self];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangInternalError_initWithNSString_(JreStrcat("$$$$@", @"cannot create instance of ", packageName, IOSObjectArray_Get(names, i), @"$Mappings : ", e));
      }
    }
  }
}

id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algorithm) {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_initialize();
  @synchronized(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters) {
    return (id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>) cast_check([((id<JavaUtilMap>) nil_chk(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_keyInfoConverters)) getWithId:algorithm], LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter_class_());
  }
}

id<JavaSecurityPublicKey> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getPublicKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *publicKeyInfo) {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_initialize();
  id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> converter = LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(publicKeyInfo)) getAlgorithm])) getAlgorithm]);
  if (converter == nil) {
    return nil;
  }
  return [converter generatePublicWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:publicKeyInfo];
}

id<JavaSecurityPrivateKey> LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getPrivateKeyWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privateKeyInfo) {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_initialize();
  id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> converter = LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_getAsymmetricKeyInfoConverterWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(privateKeyInfo)) getPrivateKeyAlgorithm])) getAlgorithm]);
  if (converter == nil) {
    return nil;
  }
  return [converter generatePrivateWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:privateKeyInfo];
}

IOSClass *LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_loadClassWithIOSClass_withNSString_(IOSClass *sourceClass, NSString *className_) {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_initialize();
  @try {
    JavaLangClassLoader *loader = [((IOSClass *) nil_chk(sourceClass)) getClassLoader];
    if (loader != nil) {
      return [loader loadClassWithNSString:className_];
    }
    else {
      return (IOSClass *) cast_chk(JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(className_)), [IOSClass class]);
    }
  }
  @catch (JavaLangClassNotFoundException *e) {
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider)

@implementation LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1

- (instancetype)initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider:(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *)outer$ {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(self, outer$);
  return self;
}

- (id)run {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_setup(this$0_);
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 = { "", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1;
}

@end

void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *self, LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1, initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_, outer$)
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1 *create_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1_initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider *outer$) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_1, initWithLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_, outer$)
}

@implementation LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2

- (instancetype)initWithNSString:(NSString *)capture$0 {
  LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(self, capture$0);
  return self;
}

- (id)run {
  @try {
    return IOSClass_forName_(val$className_);
  }
  @catch (JavaLangException *e) {
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$className_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider;", "loadClassWithIOSClass:withNSString:" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 = { "", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2;
}

@end

void LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *self, NSString *capture$0) {
  self->val$className_ = capture$0;
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *new_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2, initWithNSString_, capture$0)
}

LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2 *create_LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderBouncyCastlePQCProvider_2, initWithNSString_, capture$0)
}
