//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/qtesla/PqcJcajceQteslaDigestUtil.java
//

#include "ASN1ObjectIdentifier.h"
#include "Digest.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "PqcJcajceQteslaDigestUtil.h"
#include "SHA256Digest.h"
#include "SHA512Digest.h"
#include "SHAKEDigest.h"
#include "Xof.h"
#include "java/lang/IllegalArgumentException.h"

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<LibOrgBouncycastleCryptoDigest>)getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}

+ (IOSByteArray *)getDigestResultWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  return LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestResultWithLibOrgBouncycastleCryptoDigest_(digest);
}

+ (jint)getDigestSizeWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  return LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestSizeWithLibOrgBouncycastleCryptoDigest_(digest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoDigest;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[2].selector = @selector(getDigestResultWithLibOrgBouncycastleCryptoDigest:);
  methods[3].selector = @selector(getDigestSizeWithLibOrgBouncycastleCryptoDigest:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getDigest", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getDigestResult", "LLibOrgBouncycastleCryptoDigest;", "getDigestSize" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil = { "PqcJcajceQteslaDigestUtil", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil, init)
}

id<LibOrgBouncycastleCryptoDigest> LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_initialize();
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256)]) {
    return new_LibOrgBouncycastleCryptoDigestsSHA256Digest_init();
  }
  if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512)]) {
    return new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init();
  }
  if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128)]) {
    return new_LibOrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(128);
  }
  if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256)]) {
    return new_LibOrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(256);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"unrecognized digest OID: ", oid));
}

IOSByteArray *LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestResultWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_initialize();
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestSizeWithLibOrgBouncycastleCryptoDigest_(digest)];
  if ([LibOrgBouncycastleCryptoXof_class_() isInstance:digest]) {
    [((id<LibOrgBouncycastleCryptoXof>) nil_chk(((id<LibOrgBouncycastleCryptoXof>) cast_check(digest, LibOrgBouncycastleCryptoXof_class_())))) doFinalWithByteArray:hash_ withInt:0 withInt:hash_->size_];
  }
  else {
    [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest)) doFinalWithByteArray:hash_ withInt:0];
  }
  return hash_;
}

jint LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestSizeWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_initialize();
  if ([LibOrgBouncycastleCryptoXof_class_() isInstance:digest]) {
    return [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest)) getDigestSize] * 2;
  }
  return [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest)) getDigestSize];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil)
