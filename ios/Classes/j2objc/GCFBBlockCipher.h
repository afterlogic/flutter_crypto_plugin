//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/modes/GCFBBlockCipher.java
//

#ifndef GCFBBlockCipher_H
#define GCFBBlockCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "StreamBlockCipher.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoModesGCFBBlockCipher : LibOrgBouncycastleCryptoStreamBlockCipher

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)engine;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (jbyte)calculateByteWithByte:(jbyte)b;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoModesGCFBBlockCipher)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(LibOrgBouncycastleCryptoModesGCFBBlockCipher *self, id<LibOrgBouncycastleCryptoBlockCipher> engine);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoModesGCFBBlockCipher *new_LibOrgBouncycastleCryptoModesGCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> engine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoModesGCFBBlockCipher *create_LibOrgBouncycastleCryptoModesGCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> engine);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoModesGCFBBlockCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GCFBBlockCipher_H
