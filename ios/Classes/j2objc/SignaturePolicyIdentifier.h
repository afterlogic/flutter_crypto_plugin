//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/SignaturePolicyIdentifier.java
//

#ifndef SignaturePolicyIdentifier_H
#define SignaturePolicyIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1EsfSignaturePolicyId;

@interface LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1EsfSignaturePolicyId:(LibOrgBouncycastleAsn1EsfSignaturePolicyId *)signaturePolicyId;

+ (LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1EsfSignaturePolicyId *)getSignaturePolicyId;

- (jboolean)isSignaturePolicyImplied;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_init(LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *new_LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *create_LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_initWithLibOrgBouncycastleAsn1EsfSignaturePolicyId_(LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *self, LibOrgBouncycastleAsn1EsfSignaturePolicyId *signaturePolicyId);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *new_LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_initWithLibOrgBouncycastleAsn1EsfSignaturePolicyId_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *signaturePolicyId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier *create_LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier_initWithLibOrgBouncycastleAsn1EsfSignaturePolicyId_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *signaturePolicyId);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfSignaturePolicyIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SignaturePolicyIdentifier_H
