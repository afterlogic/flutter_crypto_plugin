//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/custom/djb/Curve25519Field.java
//

#ifndef Curve25519Field_H
#define Curve25519Field_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSIntArray;
@class JavaMathBigInteger;

@interface LibOrgBouncycastleMathEcCustomDjbCurve25519Field : NSObject
@property (readonly, class) IOSIntArray *P NS_SWIFT_NAME(P);

+ (IOSIntArray *)P;

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)addExtWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)yy
              withIntArray:(IOSIntArray *)zz;

+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x;

+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)multiplyAddToExtWithIntArray:(IOSIntArray *)x
                        withIntArray:(IOSIntArray *)y
                        withIntArray:(IOSIntArray *)zz;

+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z;

+ (void)reduce27WithInt:(jint)x
           withIntArray:(IOSIntArray *)z;

+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z;

+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)subtractExtWithIntArray:(IOSIntArray *)xx
                   withIntArray:(IOSIntArray *)yy
                   withIntArray:(IOSIntArray *)zz;

+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleMathEcCustomDjbCurve25519Field)

inline IOSIntArray *LibOrgBouncycastleMathEcCustomDjbCurve25519Field_get_P(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleMathEcCustomDjbCurve25519Field_P;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleMathEcCustomDjbCurve25519Field, P, IOSIntArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_init(LibOrgBouncycastleMathEcCustomDjbCurve25519Field *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcCustomDjbCurve25519Field *new_LibOrgBouncycastleMathEcCustomDjbCurve25519Field_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcCustomDjbCurve25519Field *create_LibOrgBouncycastleMathEcCustomDjbCurve25519Field_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_addExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleMathEcCustomDjbCurve25519Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_reduce27WithInt_withIntArray_(jint x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_subtractExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcCustomDjbCurve25519Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcCustomDjbCurve25519Field)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Curve25519Field_H
