//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsNullCipher.java
//

#ifndef TlsNullCipher_H
#define TlsNullCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TlsCipher.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoTlsTlsMac;
@protocol LibOrgBouncycastleCryptoDigest;
@protocol LibOrgBouncycastleCryptoTlsTlsContext;

@interface LibOrgBouncycastleCryptoTlsTlsNullCipher : NSObject < LibOrgBouncycastleCryptoTlsTlsCipher > {
 @public
  id<LibOrgBouncycastleCryptoTlsTlsContext> context_;
  LibOrgBouncycastleCryptoTlsTlsMac *writeMac_;
  LibOrgBouncycastleCryptoTlsTlsMac *readMac_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context
                                     withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)clientWriteDigest
                                     withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)serverWriteDigest;

- (IOSByteArray *)decodeCiphertextWithLong:(jlong)seqNo
                                 withShort:(jshort)type
                             withByteArray:(IOSByteArray *)ciphertext
                                   withInt:(jint)offset
                                   withInt:(jint)len;

- (IOSByteArray *)encodePlaintextWithLong:(jlong)seqNo
                                withShort:(jshort)type
                            withByteArray:(IOSByteArray *)plaintext
                                  withInt:(jint)offset
                                  withInt:(jint)len;

- (jint)getPlaintextLimitWithInt:(jint)ciphertextLimit;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsNullCipher)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsTlsNullCipher, context_, id<LibOrgBouncycastleCryptoTlsTlsContext>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsTlsNullCipher, writeMac_, LibOrgBouncycastleCryptoTlsTlsMac *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsTlsNullCipher, readMac_, LibOrgBouncycastleCryptoTlsTlsMac *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_(LibOrgBouncycastleCryptoTlsTlsNullCipher *self, id<LibOrgBouncycastleCryptoTlsTlsContext> context);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCipher *new_LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_(id<LibOrgBouncycastleCryptoTlsTlsContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCipher *create_LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_(id<LibOrgBouncycastleCryptoTlsTlsContext> context);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoTlsTlsNullCipher *self, id<LibOrgBouncycastleCryptoTlsTlsContext> context, id<LibOrgBouncycastleCryptoDigest> clientWriteDigest, id<LibOrgBouncycastleCryptoDigest> serverWriteDigest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCipher *new_LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoTlsTlsContext> context, id<LibOrgBouncycastleCryptoDigest> clientWriteDigest, id<LibOrgBouncycastleCryptoDigest> serverWriteDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCipher *create_LibOrgBouncycastleCryptoTlsTlsNullCipher_initWithLibOrgBouncycastleCryptoTlsTlsContext_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoTlsTlsContext> context, id<LibOrgBouncycastleCryptoDigest> clientWriteDigest, id<LibOrgBouncycastleCryptoDigest> serverWriteDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsNullCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsNullCipher_H
