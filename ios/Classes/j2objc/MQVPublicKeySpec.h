//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/MQVPublicKeySpec.java
//

#ifndef MQVPublicKeySpec_H
#define MQVPublicKeySpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "MQVPublicKey.h"
#include "java/security/spec/KeySpec.h"

@class IOSByteArray;
@protocol JavaSecurityPublicKey;

@interface LibOrgBouncycastleJceSpecMQVPublicKeySpec : NSObject < JavaSecuritySpecKeySpec, LibOrgBouncycastleJceInterfacesMQVPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)staticKey
                              withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)ephemeralKey;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (id<JavaSecurityPublicKey>)getEphemeralKey;

- (NSString *)getFormat;

- (id<JavaSecurityPublicKey>)getStaticKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceSpecMQVPublicKeySpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecMQVPublicKeySpec_initWithJavaSecurityPublicKey_withJavaSecurityPublicKey_(LibOrgBouncycastleJceSpecMQVPublicKeySpec *self, id<JavaSecurityPublicKey> staticKey, id<JavaSecurityPublicKey> ephemeralKey);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecMQVPublicKeySpec *new_LibOrgBouncycastleJceSpecMQVPublicKeySpec_initWithJavaSecurityPublicKey_withJavaSecurityPublicKey_(id<JavaSecurityPublicKey> staticKey, id<JavaSecurityPublicKey> ephemeralKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecMQVPublicKeySpec *create_LibOrgBouncycastleJceSpecMQVPublicKeySpec_initWithJavaSecurityPublicKey_withJavaSecurityPublicKey_(id<JavaSecurityPublicKey> staticKey, id<JavaSecurityPublicKey> ephemeralKey);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceSpecMQVPublicKeySpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MQVPublicKeySpec_H
