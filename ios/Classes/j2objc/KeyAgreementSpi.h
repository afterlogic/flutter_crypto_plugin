//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/newhope/KeyAgreementSpi.java
//

#ifndef KeyAgreementSpi_H
#define KeyAgreementSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BaseAgreementSpi.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@protocol JavaSecurityKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoDerivationFunction;

@interface LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi : LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (IOSByteArray *)calcSecret;

- (id<JavaSecurityKey>)engineDoPhaseWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                            withBoolean:(jboolean)lastPhase;

- (IOSByteArray *)engineGenerateSecret;

- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)bytes
                                  withInt:(jint)offset;

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)algorithmParameterSpec
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom;

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi_init(LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi *new_LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi *create_LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderNewhopeKeyAgreementSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyAgreementSpi_H
