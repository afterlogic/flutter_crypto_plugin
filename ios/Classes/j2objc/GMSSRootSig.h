//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSRootSig.java
//

#ifndef GMSSRootSig_H
#define GMSSRootSig_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSRootSig : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                  withByteArray2:(IOSObjectArray *)statByte
                                                    withIntArray:(IOSIntArray *)statInt;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                         withInt:(jint)w
                                                         withInt:(jint)height;

- (jint)getLogWithInt:(jint)intValue;

- (IOSByteArray *)getSig;

- (IOSObjectArray *)getStatByte;

- (IOSIntArray *)getStatInt;

- (IOSByteArray *)getStatLong;

- (void)initSignWithByteArray:(IOSByteArray *)seed0
                withByteArray:(IOSByteArray *)message OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

- (jboolean)updateSign;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSRootSig)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *self, id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *statByte, IOSIntArray *statInt);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *new_LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *statByte, IOSIntArray *statInt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *create_LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *statByte, IOSIntArray *statInt);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *self, id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint height);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *new_LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootSig *create_LibOrgBouncycastlePqcCryptoGmssGMSSRootSig_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint height);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSRootSig)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSRootSig_H
