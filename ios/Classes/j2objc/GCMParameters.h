//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/GCMParameters.java
//

#ifndef GCMParameters_H
#define GCMParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CmsGCMParameters : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)nonce
                                    withInt:(jint)icvLen;

- (jint)getIcvLen;

+ (LibOrgBouncycastleAsn1CmsGCMParameters *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getNonce;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsGCMParameters)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsGCMParameters *LibOrgBouncycastleAsn1CmsGCMParameters_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsGCMParameters_initWithByteArray_withInt_(LibOrgBouncycastleAsn1CmsGCMParameters *self, IOSByteArray *nonce, jint icvLen);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsGCMParameters *new_LibOrgBouncycastleAsn1CmsGCMParameters_initWithByteArray_withInt_(IOSByteArray *nonce, jint icvLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsGCMParameters *create_LibOrgBouncycastleAsn1CmsGCMParameters_initWithByteArray_withInt_(IOSByteArray *nonce, jint icvLen);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsGCMParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GCMParameters_H
