//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x9/ECNamedCurveTable.java
//

#include "ANSSINamedCurves.h"
#include "ASN1ObjectIdentifier.h"
#include "CustomNamedCurves.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECGOST3410NamedCurves.h"
#include "ECNamedCurveTable.h"
#include "ECPoint.h"
#include "GMNamedCurves.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NISTNamedCurves.h"
#include "SECNamedCurves.h"
#include "TeleTrusTNamedCurves.h"
#include "X962NamedCurves.h"
#include "X9ECParameters.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "java/util/Vector.h"

@interface LibOrgBouncycastleAsn1X9ECNamedCurveTable ()

+ (void)addEnumerationWithJavaUtilVector:(JavaUtilVector *)v
                 withJavaUtilEnumeration:(id<JavaUtilEnumeration>)e;

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)dp;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(JavaUtilVector *v, id<JavaUtilEnumeration> e);

__attribute__((unused)) static LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1X9ECNamedCurveTable_fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECDomainParameters *dp);

@implementation LibOrgBouncycastleAsn1X9ECNamedCurveTable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
}

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(name);
}

+ (NSString *)getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}

+ (id<JavaUtilEnumeration>)getNames {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getNames();
}

+ (void)addEnumerationWithJavaUtilVector:(JavaUtilVector *)v
                 withJavaUtilEnumeration:(id<JavaUtilEnumeration>)e {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, e);
}

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)dp {
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters_(dp);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 5, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9ECParameters;", 0xa, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getByNameWithNSString:);
  methods[2].selector = @selector(getOIDWithNSString:);
  methods[3].selector = @selector(getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[4].selector = @selector(getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[5].selector = @selector(getNames);
  methods[6].selector = @selector(addEnumerationWithJavaUtilVector:withJavaUtilEnumeration:);
  methods[7].selector = @selector(fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getByName", "LNSString;", "getOID", "getName", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getByOID", "addEnumeration", "LJavaUtilVector;LJavaUtilEnumeration;", "fromDomainParameters", "LLibOrgBouncycastleCryptoParamsECDomainParameters;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X9ECNamedCurveTable = { "ECNamedCurveTable", "lib.org.bouncycastle.asn1.x9", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X9ECNamedCurveTable;
}

@end

void LibOrgBouncycastleAsn1X9ECNamedCurveTable_init(LibOrgBouncycastleAsn1X9ECNamedCurveTable *self) {
  NSObject_init(self);
}

LibOrgBouncycastleAsn1X9ECNamedCurveTable *new_LibOrgBouncycastleAsn1X9ECNamedCurveTable_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9ECNamedCurveTable, init)
}

LibOrgBouncycastleAsn1X9ECNamedCurveTable *create_LibOrgBouncycastleAsn1X9ECNamedCurveTable_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9ECNamedCurveTable, init)
}

LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(NSString *name) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleAsn1X9X962NamedCurves_getByNameWithNSString_(name);
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1SecSECNamedCurves_getByNameWithNSString_(name);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1NistNISTNamedCurves_getByNameWithNSString_(name);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByNameWithNSString_(name);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameWithNSString_(name);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1X9ECNamedCurveTable_fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByNameWithNSString_(name));
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1GmGMNamedCurves_getByNameWithNSString_(name);
  }
  return ecP;
}

LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(NSString *name) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = LibOrgBouncycastleAsn1X9X962NamedCurves_getOIDWithNSString_(name);
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1SecSECNamedCurves_getOIDWithNSString_(name);
  }
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1NistNISTNamedCurves_getOIDWithNSString_(name);
  }
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getOIDWithNSString_(name);
  }
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
  }
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getOIDWithNSString_(name);
  }
  if (oid == nil) {
    oid = LibOrgBouncycastleAsn1GmGMNamedCurves_getOIDWithNSString_(name);
  }
  return oid;
}

NSString *LibOrgBouncycastleAsn1X9ECNamedCurveTable_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  NSString *name = LibOrgBouncycastleAsn1X9X962NamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  if (name == nil) {
    name = LibOrgBouncycastleAsn1SecSECNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleAsn1NistNISTNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleAsn1AnssiANSSINamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleAsn1GmGMNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (name == nil) {
    name = LibOrgBouncycastleCryptoEcCustomNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  return name;
}

LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleAsn1X9X962NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1SecSECNamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1X9ECNamedCurveTable_fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid));
  }
  if (ecP == nil) {
    ecP = LibOrgBouncycastleAsn1GmGMNamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  return ecP;
}

id<JavaUtilEnumeration> LibOrgBouncycastleAsn1X9ECNamedCurveTable_getNames() {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  JavaUtilVector *v = new_JavaUtilVector_init();
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1X9X962NamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1SecSECNamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1NistNISTNamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1AnssiANSSINamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNames());
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, LibOrgBouncycastleAsn1GmGMNamedCurves_getNames());
  return [v elements];
}

void LibOrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(JavaUtilVector *v, id<JavaUtilEnumeration> e) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    [((JavaUtilVector *) nil_chk(v)) addElementWithId:[e nextElement]];
  }
}

LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1X9ECNamedCurveTable_fromDomainParametersWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECDomainParameters *dp) {
  LibOrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  return dp == nil ? nil : new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([dp getCurve], [dp getG], [dp getN], [dp getH], [dp getSeed]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X9ECNamedCurveTable)
