//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/tools/F2mSqrtOptimizer.java
//

#ifndef F2mSqrtOptimizer_H
#define F2mSqrtOptimizer_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1X9X9ECParameters;

@interface LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (void)printRootZWithLibOrgBouncycastleAsn1X9X9ECParameters:(LibOrgBouncycastleAsn1X9X9ECParameters *)x9;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer_init(LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer *new_LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer *create_LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer_printRootZWithLibOrgBouncycastleAsn1X9X9ECParameters_(LibOrgBouncycastleAsn1X9X9ECParameters *x9);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcToolsF2mSqrtOptimizer)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // F2mSqrtOptimizer_H
