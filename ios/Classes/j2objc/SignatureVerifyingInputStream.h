//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/decryption_verification/SignatureVerifyingInputStream.java
//

#ifndef SignatureVerifyingInputStream_H
#define SignatureVerifyingInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder;
@class LibOrgBouncycastleOpenpgpPGPObjectFactory;
@protocol JavaUtilMap;

@interface LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream : JavaIoFilterInputStream

#pragma mark Public

- (void)markWithInt:(jint)readlimit;

- (jboolean)markSupported;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)reset;

- (jlong)skipWithLong:(jlong)n;

#pragma mark Protected

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inputStream
      withLibOrgBouncycastleOpenpgpPGPObjectFactory:(LibOrgBouncycastleOpenpgpPGPObjectFactory *)objectFactory
                                    withJavaUtilMap:(id<JavaUtilMap>)onePassSignatures
withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder:(LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *)resultBuilder;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream)

FOUNDATION_EXPORT void LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpPGPObjectFactory_withJavaUtilMap_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream *self, JavaIoInputStream *inputStream, LibOrgBouncycastleOpenpgpPGPObjectFactory *objectFactory, id<JavaUtilMap> onePassSignatures, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder);

FOUNDATION_EXPORT LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream *new_LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpPGPObjectFactory_withJavaUtilMap_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(JavaIoInputStream *inputStream, LibOrgBouncycastleOpenpgpPGPObjectFactory *objectFactory, id<JavaUtilMap> onePassSignatures, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream *create_LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpPGPObjectFactory_withJavaUtilMap_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(JavaIoInputStream *inputStream, LibOrgBouncycastleOpenpgpPGPObjectFactory *objectFactory, id<JavaUtilMap> onePassSignatures, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpDecryption_verificationSignatureVerifyingInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SignatureVerifyingInputStream_H
