//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/qtesla/Const.java
//

#include "Const.h"
#include "J2ObjC_source.h"

@implementation LibOrgBouncycastlePqcCryptoQteslaConst

+ (jint)BC_BYTE_SIZE {
  return LibOrgBouncycastlePqcCryptoQteslaConst_BC_BYTE_SIZE;
}

+ (jint)SHORT_SIZE {
  return LibOrgBouncycastlePqcCryptoQteslaConst_SHORT_SIZE;
}

+ (jint)INT_SIZE {
  return LibOrgBouncycastlePqcCryptoQteslaConst_INT_SIZE;
}

+ (jint)LONG_SIZE {
  return LibOrgBouncycastlePqcCryptoQteslaConst_LONG_SIZE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoQteslaConst_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BC_BYTE_SIZE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaConst_BC_BYTE_SIZE, 0x18, -1, -1, -1, -1 },
    { "SHORT_SIZE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaConst_SHORT_SIZE, 0x18, -1, -1, -1, -1 },
    { "INT_SIZE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaConst_INT_SIZE, 0x18, -1, -1, -1, -1 },
    { "LONG_SIZE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoQteslaConst_LONG_SIZE, 0x18, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoQteslaConst = { "Const", "lib.org.bouncycastle.pqc.crypto.qtesla", NULL, methods, fields, 7, 0x0, 1, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoQteslaConst;
}

@end

void LibOrgBouncycastlePqcCryptoQteslaConst_init(LibOrgBouncycastlePqcCryptoQteslaConst *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcCryptoQteslaConst *new_LibOrgBouncycastlePqcCryptoQteslaConst_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoQteslaConst, init)
}

LibOrgBouncycastlePqcCryptoQteslaConst *create_LibOrgBouncycastlePqcCryptoQteslaConst_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoQteslaConst, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoQteslaConst)
