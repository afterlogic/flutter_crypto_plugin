//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/OcspResponsesID.java
//

#ifndef OcspResponsesID_H
#define OcspResponsesID_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1EsfOcspIdentifier;
@class LibOrgBouncycastleAsn1EsfOtherHash;

@interface LibOrgBouncycastleAsn1EsfOcspResponsesID : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1EsfOcspIdentifier:(LibOrgBouncycastleAsn1EsfOcspIdentifier *)ocspIdentifier;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1EsfOcspIdentifier:(LibOrgBouncycastleAsn1EsfOcspIdentifier *)ocspIdentifier
                                   withLibOrgBouncycastleAsn1EsfOtherHash:(LibOrgBouncycastleAsn1EsfOtherHash *)ocspRepHash;

+ (LibOrgBouncycastleAsn1EsfOcspResponsesID *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1EsfOcspIdentifier *)getOcspIdentifier;

- (LibOrgBouncycastleAsn1EsfOtherHash *)getOcspRepHash;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfOcspResponsesID)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOcspResponsesID *LibOrgBouncycastleAsn1EsfOcspResponsesID_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_(LibOrgBouncycastleAsn1EsfOcspResponsesID *self, LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOcspResponsesID *new_LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_(LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOcspResponsesID *create_LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_(LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_withLibOrgBouncycastleAsn1EsfOtherHash_(LibOrgBouncycastleAsn1EsfOcspResponsesID *self, LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier, LibOrgBouncycastleAsn1EsfOtherHash *ocspRepHash);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOcspResponsesID *new_LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_withLibOrgBouncycastleAsn1EsfOtherHash_(LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier, LibOrgBouncycastleAsn1EsfOtherHash *ocspRepHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOcspResponsesID *create_LibOrgBouncycastleAsn1EsfOcspResponsesID_initWithLibOrgBouncycastleAsn1EsfOcspIdentifier_withLibOrgBouncycastleAsn1EsfOtherHash_(LibOrgBouncycastleAsn1EsfOcspIdentifier *ocspIdentifier, LibOrgBouncycastleAsn1EsfOtherHash *ocspRepHash);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfOcspResponsesID)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OcspResponsesID_H
