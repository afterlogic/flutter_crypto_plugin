//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/JceECNamedCurveTable.java
//

#include "ASN1ObjectIdentifier.h"
#include "CustomNamedCurves.h"
#include "ECCurve.h"
#include "ECNamedCurveParameterSpec.h"
#include "ECNamedCurveTable.h"
#include "ECPoint.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JceECNamedCurveTable.h"
#include "X9ECParameters.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"

@implementation LibOrgBouncycastleJceJceECNamedCurveTable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJceJceECNamedCurveTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *)getParameterSpecWithNSString:(NSString *)name {
  return LibOrgBouncycastleJceJceECNamedCurveTable_getParameterSpecWithNSString_(name);
}

+ (id<JavaUtilEnumeration>)getNames {
  return LibOrgBouncycastleJceJceECNamedCurveTable_getNames();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECNamedCurveParameterSpec;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getParameterSpecWithNSString:);
  methods[2].selector = @selector(getNames);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getParameterSpec", "LNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceJceECNamedCurveTable = { "JceECNamedCurveTable", "lib.org.bouncycastle.jce", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceJceECNamedCurveTable;
}

@end

void LibOrgBouncycastleJceJceECNamedCurveTable_init(LibOrgBouncycastleJceJceECNamedCurveTable *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJceJceECNamedCurveTable *new_LibOrgBouncycastleJceJceECNamedCurveTable_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceJceECNamedCurveTable, init)
}

LibOrgBouncycastleJceJceECNamedCurveTable *create_LibOrgBouncycastleJceJceECNamedCurveTable_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceJceECNamedCurveTable, init)
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *LibOrgBouncycastleJceJceECNamedCurveTable_getParameterSpecWithNSString_(NSString *name) {
  LibOrgBouncycastleJceJceECNamedCurveTable_initialize();
  LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(name);
  if (ecP == nil) {
    @try {
      ecP = LibOrgBouncycastleCryptoEcCustomNamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name));
    }
    @catch (JavaLangIllegalArgumentException *e) {
    }
    if (ecP == nil) {
      ecP = LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
      if (ecP == nil) {
        @try {
          ecP = LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name));
        }
        @catch (JavaLangIllegalArgumentException *e) {
        }
      }
    }
  }
  if (ecP == nil) {
    return nil;
  }
  return new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(name, [ecP getCurve], [ecP getG], [ecP getN], [ecP getH], [ecP getSeed]);
}

id<JavaUtilEnumeration> LibOrgBouncycastleJceJceECNamedCurveTable_getNames() {
  LibOrgBouncycastleJceJceECNamedCurveTable_initialize();
  return LibOrgBouncycastleAsn1X9ECNamedCurveTable_getNames();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceJceECNamedCurveTable)
