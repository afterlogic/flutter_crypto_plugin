//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/io/MacOutputStream.java
//

#ifndef MacOutputStream_H
#define MacOutputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/OutputStream.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoMac;

@interface LibOrgBouncycastleCryptoIoMacOutputStream : JavaIoOutputStream {
 @public
  id<LibOrgBouncycastleCryptoMac> mac_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)mac;

- (IOSByteArray *)getMac;

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoIoMacOutputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoIoMacOutputStream, mac_, id<LibOrgBouncycastleCryptoMac>)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoIoMacOutputStream_initWithLibOrgBouncycastleCryptoMac_(LibOrgBouncycastleCryptoIoMacOutputStream *self, id<LibOrgBouncycastleCryptoMac> mac);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoMacOutputStream *new_LibOrgBouncycastleCryptoIoMacOutputStream_initWithLibOrgBouncycastleCryptoMac_(id<LibOrgBouncycastleCryptoMac> mac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoMacOutputStream *create_LibOrgBouncycastleCryptoIoMacOutputStream_initWithLibOrgBouncycastleCryptoMac_(id<LibOrgBouncycastleCryptoMac> mac);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoIoMacOutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MacOutputStream_H
