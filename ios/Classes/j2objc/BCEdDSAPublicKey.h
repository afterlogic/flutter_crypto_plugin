//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/edec/BCEdDSAPublicKey.java
//

#ifndef BCEdDSAPublicKey_H
#define BCEdDSAPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "EdDSAKey.h"
#include "J2ObjC_header.h"
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey : NSObject < LibOrgBouncycastleJcajceInterfacesEdDSAKey, JavaSecurityPublicKey >
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)pubKey;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)prefix
                              withByteArray:(IOSByteArray *)rawData;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)engineGetKeyParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey)

inline jlong LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *self, LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *pubKey);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *pubKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *pubKey);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithByteArray_withByteArray_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *self, IOSByteArray *prefix, IOSByteArray *rawData);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithByteArray_withByteArray_(IOSByteArray *prefix, IOSByteArray *rawData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey_initWithByteArray_withByteArray_(IOSByteArray *prefix, IOSByteArray *rawData);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCEdDSAPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCEdDSAPublicKey_H
