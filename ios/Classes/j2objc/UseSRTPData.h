//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/UseSRTPData.java
//

#ifndef UseSRTPData_H
#define UseSRTPData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;

@interface LibOrgBouncycastleCryptoTlsUseSRTPData : NSObject {
 @public
  IOSIntArray *protectionProfiles_;
  IOSByteArray *mki_;
}

#pragma mark Public

- (instancetype __nonnull)initWithIntArray:(IOSIntArray *)protectionProfiles
                             withByteArray:(IOSByteArray *)mki;

- (IOSByteArray *)getMki;

- (IOSIntArray *)getProtectionProfiles;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsUseSRTPData)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsUseSRTPData, protectionProfiles_, IOSIntArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsUseSRTPData, mki_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsUseSRTPData_initWithIntArray_withByteArray_(LibOrgBouncycastleCryptoTlsUseSRTPData *self, IOSIntArray *protectionProfiles, IOSByteArray *mki);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsUseSRTPData *new_LibOrgBouncycastleCryptoTlsUseSRTPData_initWithIntArray_withByteArray_(IOSIntArray *protectionProfiles, IOSByteArray *mki) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsUseSRTPData *create_LibOrgBouncycastleCryptoTlsUseSRTPData_initWithIntArray_withByteArray_(IOSIntArray *protectionProfiles, IOSByteArray *mki);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsUseSRTPData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // UseSRTPData_H
