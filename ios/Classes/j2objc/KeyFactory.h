//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/x509/KeyFactory.java
//

#ifndef KeyFactory_H
#define KeyFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/KeyFactorySpi.h"

@class IOSClass;
@protocol JavaSecurityKey;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol JavaSecuritySpecKeySpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory : JavaSecurityKeyFactorySpi

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (id<JavaSecurityPrivateKey>)engineGeneratePrivateWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec;

- (id<JavaSecurityPublicKey>)engineGeneratePublicWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec;

- (id<JavaSecuritySpecKeySpec>)engineGetKeySpecWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                                      withIOSClass:(IOSClass *)keySpec;

- (id<JavaSecurityKey>)engineTranslateKeyWithJavaSecurityKey:(id<JavaSecurityKey>)key;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory_init(LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory *new_LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory *create_LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricX509KeyFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyFactory_H
