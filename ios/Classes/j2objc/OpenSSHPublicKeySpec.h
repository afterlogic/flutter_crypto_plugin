//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/OpenSSHPublicKeySpec.java
//

#ifndef OpenSSHPublicKeySpec_H
#define OpenSSHPublicKeySpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/spec/EncodedKeySpec.h"

@class IOSByteArray;

@interface LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec : JavaSecuritySpecEncodedKeySpec

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)encodedKey;

- (NSString *)getFormat;

- (NSString *)getType;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec_initWithByteArray_(LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec *self, IOSByteArray *encodedKey);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec *new_LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec_initWithByteArray_(IOSByteArray *encodedKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec *create_LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec_initWithByteArray_(IOSByteArray *encodedKey);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceSpecOpenSSHPublicKeySpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OpenSSHPublicKeySpec_H
