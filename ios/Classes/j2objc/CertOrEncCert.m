//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/CertOrEncCert.java
//

#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "CMPCertificate.h"
#include "CertOrEncCert.h"
#include "DERTaggedObject.h"
#include "EncryptedValue.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmpCertOrEncCert () {
 @public
  LibOrgBouncycastleAsn1CmpCMPCertificate *certificate_;
  LibOrgBouncycastleAsn1CrmfEncryptedValue *encryptedCert_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpCertOrEncCert, certificate_, LibOrgBouncycastleAsn1CmpCMPCertificate *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpCertOrEncCert, encryptedCert_, LibOrgBouncycastleAsn1CrmfEncryptedValue *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmpCertOrEncCert *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpCertOrEncCert *new_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpCertOrEncCert *create_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

@implementation LibOrgBouncycastleAsn1CmpCertOrEncCert

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

+ (LibOrgBouncycastleAsn1CmpCertOrEncCert *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpCertOrEncCert_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpCMPCertificate:(LibOrgBouncycastleAsn1CmpCMPCertificate *)certificate {
  LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CmpCMPCertificate_(self, certificate);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1CrmfEncryptedValue:(LibOrgBouncycastleAsn1CrmfEncryptedValue *)encryptedCert {
  LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_(self, encryptedCert);
  return self;
}

- (LibOrgBouncycastleAsn1CmpCMPCertificate *)getCertificate {
  return certificate_;
}

- (LibOrgBouncycastleAsn1CrmfEncryptedValue *)getEncryptedCert {
  return encryptedCert_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (certificate_ != nil) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 0, certificate_);
  }
  return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 1, encryptedCert_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpCertOrEncCert;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpCMPCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CrmfEncryptedValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1CmpCMPCertificate:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1CrmfEncryptedValue:);
  methods[4].selector = @selector(getCertificate);
  methods[5].selector = @selector(getEncryptedCert);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certificate_", "LLibOrgBouncycastleAsn1CmpCMPCertificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "encryptedCert_", "LLibOrgBouncycastleAsn1CrmfEncryptedValue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1TaggedObject;", "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1CmpCMPCertificate;", "LLibOrgBouncycastleAsn1CrmfEncryptedValue;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpCertOrEncCert = { "CertOrEncCert", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpCertOrEncCert;
}

@end

void LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmpCertOrEncCert *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 0) {
    self->certificate_ = LibOrgBouncycastleAsn1CmpCMPCertificate_getInstanceWithId_([tagged getObject]);
  }
  else if ([tagged getTagNo] == 1) {
    self->encryptedCert_ = LibOrgBouncycastleAsn1CrmfEncryptedValue_getInstanceWithId_([tagged getObject]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag: ", [tagged getTagNo]));
  }
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *new_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *create_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *LibOrgBouncycastleAsn1CmpCertOrEncCert_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpCertOrEncCert_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmpCertOrEncCert class]]) {
    return (LibOrgBouncycastleAsn1CmpCertOrEncCert *) o;
  }
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return new_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_((LibOrgBouncycastleAsn1ASN1TaggedObject *) o);
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CmpCMPCertificate_(LibOrgBouncycastleAsn1CmpCertOrEncCert *self, LibOrgBouncycastleAsn1CmpCMPCertificate *certificate) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (certificate == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'certificate' cannot be null");
  }
  self->certificate_ = certificate;
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *new_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CmpCMPCertificate_(LibOrgBouncycastleAsn1CmpCMPCertificate *certificate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1CmpCMPCertificate_, certificate)
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *create_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CmpCMPCertificate_(LibOrgBouncycastleAsn1CmpCMPCertificate *certificate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1CmpCMPCertificate_, certificate)
}

void LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_(LibOrgBouncycastleAsn1CmpCertOrEncCert *self, LibOrgBouncycastleAsn1CrmfEncryptedValue *encryptedCert) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (encryptedCert == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'encryptedCert' cannot be null");
  }
  self->encryptedCert_ = encryptedCert;
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *new_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_(LibOrgBouncycastleAsn1CrmfEncryptedValue *encryptedCert) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_, encryptedCert)
}

LibOrgBouncycastleAsn1CmpCertOrEncCert *create_LibOrgBouncycastleAsn1CmpCertOrEncCert_initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_(LibOrgBouncycastleAsn1CrmfEncryptedValue *encryptedCert) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpCertOrEncCert, initWithLibOrgBouncycastleAsn1CrmfEncryptedValue_, encryptedCert)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpCertOrEncCert)
