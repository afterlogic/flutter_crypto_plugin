//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/bc/EncryptedSecretKeyData.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "EncryptedSecretKeyData.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastleAsn1BcEncryptedSecretKeyData () {
 @public
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm_;
  LibOrgBouncycastleAsn1ASN1OctetString *encryptedKeyData_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, keyEncryptionAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, encryptedKeyData_, LibOrgBouncycastleAsn1ASN1OctetString *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *new_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *create_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1BcEncryptedSecretKeyData

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                                        withByteArray:(IOSByteArray *)encryptedKeyData {
  LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(self, keyEncryptionAlgorithm, encryptedKeyData);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_getInstanceWithId_(o);
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getKeyEncryptionAlgorithm {
  return keyEncryptionAlgorithm_;
}

- (IOSByteArray *)getEncryptedKeyData {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(encryptedKeyData_)) getOctets]);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:keyEncryptionAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:encryptedKeyData_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1BcEncryptedSecretKeyData;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getKeyEncryptionAlgorithm);
  methods[4].selector = @selector(getEncryptedKeyData);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyEncryptionAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "encryptedKeyData_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1BcEncryptedSecretKeyData = { "EncryptedSecretKeyData", "lib.org.bouncycastle.asn1.bc", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData;
}

@end

void LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, IOSByteArray *encryptedKeyData) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->keyEncryptionAlgorithm_ = keyEncryptionAlgorithm;
  self->encryptedKeyData_ = new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(LibOrgBouncycastleUtilArrays_cloneWithByteArray_(encryptedKeyData));
}

LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *new_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, IOSByteArray *encryptedKeyData) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, keyEncryptionAlgorithm, encryptedKeyData)
}

LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *create_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, IOSByteArray *encryptedKeyData) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, keyEncryptionAlgorithm, encryptedKeyData)
}

void LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->keyEncryptionAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->encryptedKeyData_ = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:1]);
}

LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *new_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *create_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1BcEncryptedSecretKeyData class]]) {
    return (LibOrgBouncycastleAsn1BcEncryptedSecretKeyData *) o;
  }
  else if (o != nil) {
    return new_LibOrgBouncycastleAsn1BcEncryptedSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1BcEncryptedSecretKeyData)
