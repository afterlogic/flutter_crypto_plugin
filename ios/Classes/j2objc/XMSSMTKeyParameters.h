//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSMTKeyParameters.java
//

#ifndef XMSSMTKeyParameters_H
#define XMSSMTKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_header.h"

@interface LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters : LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)isPrivateKey
                             withNSString:(NSString *)treeDigest;

- (NSString *)getTreeDigest;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters_initWithBoolean_withNSString_(LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters *self, jboolean isPrivateKey, NSString *treeDigest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters *new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters *create_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSMTKeyParameters_H
