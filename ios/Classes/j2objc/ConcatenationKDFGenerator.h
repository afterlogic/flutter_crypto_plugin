//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/kdf/ConcatenationKDFGenerator.java
//

#ifndef ConcatenationKDFGenerator_H
#define ConcatenationKDFGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DerivationFunction.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoDerivationParameters;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator : NSObject < LibOrgBouncycastleCryptoDerivationFunction >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (jint)generateBytesWithByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOff
                           withInt:(jint)len;

- (id<LibOrgBouncycastleCryptoDigest>)getDigest;

- (void)init__WithLibOrgBouncycastleCryptoDerivationParameters:(id<LibOrgBouncycastleCryptoDerivationParameters>)param OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator *self, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator *new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator *create_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ConcatenationKDFGenerator_H
