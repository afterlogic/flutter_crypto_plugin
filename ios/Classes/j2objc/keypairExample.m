//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/example/keypairExample.java
//

#include "BouncyCastleProvider.h"
#include "HashAlgorithmTags.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaPGPContentSignerBuilder.h"
#include "JcaPGPDigestCalculatorProviderBuilder.h"
#include "JcaPGPKeyPair.h"
#include "JcePBESecretKeyEncryptorBuilder.h"
#include "PBESecretKeyEncryptor.h"
#include "PGPDigestCalculator.h"
#include "PGPDigestCalculatorProvider.h"
#include "PGPKeyPair.h"
#include "PGPKeyRingGenerator.h"
#include "PGPPublicKey.h"
#include "PGPPublicKeyRing.h"
#include "PGPSecretKeyRing.h"
#include "PGPSignature.h"
#include "PublicKeyAlgorithmTags.h"
#include "SymmetricKeyAlgorithmTags.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/security/KeyPair.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/Security.h"
#include "java/util/Date.h"
#include "keypairExample.h"

@implementation LibOrgBouncycastleExamplekeypairExample

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleExamplekeypairExample_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSObjectArray *)generateKeyRingWithNSString:(NSString *)identity
                                  withCharArray:(IOSCharArray *)passphrase {
  return LibOrgBouncycastleExamplekeypairExample_generateKeyRingWithNSString_withCharArray_(identity, passphrase);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  LibOrgBouncycastleExamplekeypairExample_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[B", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(generateKeyRingWithNSString:withCharArray:);
  methods[2].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "generateKeyRing", "LNSString;[C", "LJavaSecurityGeneralSecurityException;LLibOrgBouncycastleOpenpgpPGPException;LJavaIoIOException;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleExamplekeypairExample = { "keypairExample", "lib.org.bouncycastle.example", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleExamplekeypairExample;
}

@end

void LibOrgBouncycastleExamplekeypairExample_init(LibOrgBouncycastleExamplekeypairExample *self) {
  NSObject_init(self);
}

LibOrgBouncycastleExamplekeypairExample *new_LibOrgBouncycastleExamplekeypairExample_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleExamplekeypairExample, init)
}

LibOrgBouncycastleExamplekeypairExample *create_LibOrgBouncycastleExamplekeypairExample_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleExamplekeypairExample, init)
}

IOSObjectArray *LibOrgBouncycastleExamplekeypairExample_generateKeyRingWithNSString_withCharArray_(NSString *identity, IOSCharArray *passphrase) {
  LibOrgBouncycastleExamplekeypairExample_initialize();
  JavaSecuritySecurity_addProviderWithJavaSecurityProvider_(new_LibOrgBouncycastleJceProviderBouncyCastleProvider_init());
  JavaSecurityKeyPairGenerator *kpg = JavaSecurityKeyPairGenerator_getInstanceWithNSString_withNSString_(@"RSA", @"BC");
  [((JavaSecurityKeyPairGenerator *) nil_chk(kpg)) initialize__WithInt:1024];
  JavaSecurityKeyPair *rsaKp = [kpg generateKeyPair];
  JavaSecurityKeyPairGenerator *dpg = JavaSecurityKeyPairGenerator_getInstanceWithNSString_(@"DSA");
  [((JavaSecurityKeyPairGenerator *) nil_chk(dpg)) initialize__WithInt:1024];
  JavaSecurityKeyPair *dsaKp = [dpg generateKeyPair];
  LibOrgBouncycastleOpenpgpPGPKeyPair *dsaKeyPair = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyPair_initWithInt_withJavaSecurityKeyPair_withJavaUtilDate_(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_DSA, dsaKp, new_JavaUtilDate_init());
  LibOrgBouncycastleOpenpgpPGPKeyPair *rsaKeyPair = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyPair_initWithInt_withJavaSecurityKeyPair_withJavaUtilDate_(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_RSA_ENCRYPT, rsaKp, new_JavaUtilDate_init());
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> sha1Calc = [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>) nil_chk([new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder_init() build])) getWithInt:LibOrgBouncycastleBcpgHashAlgorithmTags_SHA1];
  LibOrgBouncycastleOpenpgpPGPKeyRingGenerator *keyRingGen = new_LibOrgBouncycastleOpenpgpPGPKeyRingGenerator_initWithInt_withLibOrgBouncycastleOpenpgpPGPKeyPair_withNSString_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder_withLibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor_(LibOrgBouncycastleOpenpgpPGPSignature_POSITIVE_CERTIFICATION, dsaKeyPair, identity, sha1Calc, nil, nil, new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_initWithInt_withInt_([((LibOrgBouncycastleOpenpgpPGPPublicKey *) nil_chk([dsaKeyPair getPublicKey])) getAlgorithm], LibOrgBouncycastleBcpgHashAlgorithmTags_SHA384), [((LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *) nil_chk([new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleBcpgSymmetricKeyAlgorithmTags_AES_256, sha1Calc) setProviderWithNSString:@"BCFIPS"])) buildWithCharArray:passphrase]);
  [keyRingGen addSubKeyWithLibOrgBouncycastleOpenpgpPGPKeyPair:rsaKeyPair];
  JavaIoByteArrayOutputStream *secretOut = new_JavaIoByteArrayOutputStream_init();
  [((LibOrgBouncycastleOpenpgpPGPSecretKeyRing *) nil_chk([keyRingGen generateSecretKeyRing])) encodeWithJavaIoOutputStream:secretOut];
  [secretOut close];
  JavaIoByteArrayOutputStream *publicOut = new_JavaIoByteArrayOutputStream_init();
  [((LibOrgBouncycastleOpenpgpPGPPublicKeyRing *) nil_chk([keyRingGen generatePublicKeyRing])) encodeWithJavaIoOutputStream:publicOut];
  [publicOut close];
  return [IOSObjectArray newArrayWithObjects:(id[]){ [secretOut toByteArray], [publicOut toByteArray] } count:2 type:IOSClass_byteArray(1)];
}

void LibOrgBouncycastleExamplekeypairExample_mainWithNSStringArray_(IOSObjectArray *args) {
  LibOrgBouncycastleExamplekeypairExample_initialize();
  @try {
    NSString *ressult = [((IOSObjectArray *) nil_chk(LibOrgBouncycastleExamplekeypairExample_generateKeyRingWithNSString_withCharArray_(@"username", [@"password" java_toCharArray]))) description];
  }
  @catch (JavaLangException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"sss"];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleExamplekeypairExample)

J2OBJC_NAME_MAPPING(LibOrgBouncycastleExamplekeypairExample, "lib.org.bouncycastle.example", "LibOrgBouncycastleExample")
