//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/tsp/ArchiveTimeStampSequence.java
//

#ifndef ArchiveTimeStampSequence_H
#define ArchiveTimeStampSequence_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1TspArchiveTimeStampChain;

@interface LibOrgBouncycastleAsn1TspArchiveTimeStampSequence : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChain:(LibOrgBouncycastleAsn1TspArchiveTimeStampChain *)archiveTimeStampChain;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChainArray:(IOSObjectArray *)archiveTimeStampChains;

- (LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *)appendWithLibOrgBouncycastleAsn1TspArchiveTimeStampChain:(LibOrgBouncycastleAsn1TspArchiveTimeStampChain *)chain;

- (IOSObjectArray *)getArchiveTimeStampChains;

+ (LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *)getInstanceWithId:(id)obj;

- (jint)size;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1TspArchiveTimeStampSequence)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChain_(LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *self, LibOrgBouncycastleAsn1TspArchiveTimeStampChain *archiveTimeStampChain);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *new_LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChain_(LibOrgBouncycastleAsn1TspArchiveTimeStampChain *archiveTimeStampChain) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *create_LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChain_(LibOrgBouncycastleAsn1TspArchiveTimeStampChain *archiveTimeStampChain);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChainArray_(LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *self, IOSObjectArray *archiveTimeStampChains);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *new_LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChainArray_(IOSObjectArray *archiveTimeStampChains) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspArchiveTimeStampSequence *create_LibOrgBouncycastleAsn1TspArchiveTimeStampSequence_initWithLibOrgBouncycastleAsn1TspArchiveTimeStampChainArray_(IOSObjectArray *archiveTimeStampChains);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1TspArchiveTimeStampSequence)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ArchiveTimeStampSequence_H
