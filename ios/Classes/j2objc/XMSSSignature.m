//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSSignature.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pack.h"
#include "WOTSPlus.h"
#include "WOTSPlusParameters.h"
#include "WOTSPlusSignature.h"
#include "XMSSNode.h"
#include "XMSSParameters.h"
#include "XMSSReducedSignature.h"
#include "XMSSSignature.h"
#include "XMSSUtil.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/util/List.h"

@interface LibOrgBouncycastlePqcCryptoXmssXMSSSignature () {
 @public
  jint index_;
  IOSByteArray *random_;
}

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSSignature, random_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature *self, LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssXMSSSignature *new_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssXMSSSignature *create_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder);

@interface LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder () {
 @public
  LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params_Builder_;
  jint index_;
  IOSByteArray *random_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, params_Builder_, LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, random_, IOSByteArray *)

@implementation LibOrgBouncycastlePqcCryptoXmssXMSSSignature

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)builder {
  LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(self, builder);
  return self;
}

- (IOSByteArray *)toByteArray {
  jint n = [((LibOrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getDigestSize];
  jint indexSize = 4;
  jint randomSize = n;
  jint signatureSize = [((LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getWOTSPlus])) getParams])) getLen] * n;
  jint authPathSize = [((LibOrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getHeight] * n;
  jint totalSize = indexSize + randomSize + signatureSize + authPathSize;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:totalSize];
  jint position = 0;
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(index_, out, position);
  position += indexSize;
  LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, random_, position);
  position += randomSize;
  IOSObjectArray *signature = [((LibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature *) nil_chk([self getWOTSPlusSignature])) toByteArray];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(signature))->size_; i++) {
    LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, IOSObjectArray_Get(signature, i), position);
    position += n;
  }
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk([self getAuthPath])) size]; i++) {
    IOSByteArray *value = [((LibOrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk([((id<JavaUtilList>) nil_chk([self getAuthPath])) getWithInt:i])) getValue];
    LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, value, position);
    position += n;
  }
  return out;
}

- (jint)getIndex {
  return index_;
}

- (IOSByteArray *)getRandom {
  return LibOrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(random_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getIndex);
  methods[3].selector = @selector(getRandom);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "index_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssXMSSSignature = { "XMSSSignature", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssXMSSSignature;
}

@end

void LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature *self, LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder_(self, builder);
  self->index_ = ((LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *) nil_chk(builder))->index_;
  jint n = [((LibOrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getDigestSize];
  IOSByteArray *tmpRandom = builder->random_;
  if (tmpRandom != nil) {
    if (tmpRandom->size_ != n) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of random needs to be equal to size of digest");
    }
    self->random_ = tmpRandom;
  }
  else {
    self->random_ = [IOSByteArray newArrayWithLength:n];
  }
}

LibOrgBouncycastlePqcCryptoXmssXMSSSignature *new_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSSignature, initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_, builder)
}

LibOrgBouncycastlePqcCryptoXmssXMSSSignature *create_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSSignature, initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssXMSSSignature)

@implementation LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)params {
  LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(self, params);
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withIndexWithInt:(jint)val {
  index_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withRandomWithByteArray:(IOSByteArray *)val {
  random_ = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withSignatureWithByteArray:(IOSByteArray *)val {
  if (val == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"signature == null");
  }
  jint n = [((LibOrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_Builder_)) getDigestSize];
  jint len = [((LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([params_Builder_ getWOTSPlus])) getParams])) getLen];
  jint height = [params_Builder_ getHeight];
  jint indexSize = 4;
  jint randomSize = n;
  jint signatureSize = len * n;
  jint authPathSize = height * n;
  jint position = 0;
  index_ = LibOrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(val, position);
  position += indexSize;
  random_ = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(val, position, randomSize);
  position += randomSize;
  (void) [self withReducedSignatureWithByteArray:LibOrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(val, position, signatureSize + authPathSize)];
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSSignature *)build {
  return new_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters:);
  methods[1].selector = @selector(withIndexWithInt:);
  methods[2].selector = @selector(withRandomWithByteArray:);
  methods[3].selector = @selector(withSignatureWithByteArray:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_Builder_", "LLibOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, 6, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssXMSSParameters;", "withIndex", "I", "withRandom", "[B", "withSignature", "params", "LLibOrgBouncycastlePqcCryptoXmssXMSSSignature;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder = { "Builder", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 5, 3, 7, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;
}

@end

void LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *self, LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(self, params);
  self->index_ = 0;
  self->random_ = nil;
  self->params_Builder_ = params;
}

LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *new_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}

LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *create_LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder)
