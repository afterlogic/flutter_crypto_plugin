//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/Tiger.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "HMac.h"
#include "IANAObjectIdentifiers.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "PBE.h"
#include "PBESecretKeyFactory.h"
#include "Tiger.h"
#include "TigerDigest.h"

@interface LibOrgBouncycastleJcajceProviderDigestTiger ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestTiger_init(LibOrgBouncycastleJcajceProviderDigestTiger *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestTiger *new_LibOrgBouncycastleJcajceProviderDigestTiger_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestTiger *create_LibOrgBouncycastleJcajceProviderDigestTiger_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger_Digest;LLibOrgBouncycastleJcajceProviderDigestTiger_HashMac;LLibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator;LLibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac;LLibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory;LLibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac;LLibOrgBouncycastleJcajceProviderDigestTiger_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger = { "Tiger", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_init(LibOrgBouncycastleJcajceProviderDigestTiger *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestTiger *new_LibOrgBouncycastleJcajceProviderDigestTiger_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger *create_LibOrgBouncycastleJcajceProviderDigestTiger_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestTiger_Digest *d = (LibOrgBouncycastleJcajceProviderDigestTiger_Digest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestTiger_Digest class]);
  ((LibOrgBouncycastleJcajceProviderDigestTiger_Digest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsTigerDigest_initWithLibOrgBouncycastleCryptoDigestsTigerDigest_((LibOrgBouncycastleCryptoDigestsTigerDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsTigerDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_Digest = { "Digest", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_Digest_init(LibOrgBouncycastleJcajceProviderDigestTiger_Digest *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsTigerDigest_init());
}

LibOrgBouncycastleJcajceProviderDigestTiger_Digest *new_LibOrgBouncycastleJcajceProviderDigestTiger_Digest_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_Digest, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_Digest *create_LibOrgBouncycastleJcajceProviderDigestTiger_Digest_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_Digest)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_HashMac = { "HashMac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_HashMac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_HashMac_init(LibOrgBouncycastleJcajceProviderDigestTiger_HashMac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsTigerDigest_init()));
}

LibOrgBouncycastleJcajceProviderDigestTiger_HashMac *new_LibOrgBouncycastleJcajceProviderDigestTiger_HashMac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_HashMac, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_HashMac *create_LibOrgBouncycastleJcajceProviderDigestTiger_HashMac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_HashMac)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator = { "KeyGenerator", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator_init(LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACTIGER", 192, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator *new_LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator *create_LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_KeyGenerator)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac = { "TigerHmac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac_init(LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsTigerDigest_init()));
}

LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac *new_LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac *create_LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_TigerHmac)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory = { "PBEWithMacKeyFactory", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory_init(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithHmacTiger", nil, false, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_TIGER, 192, 0);
}

LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory *new_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory *create_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithMacKeyFactory)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac = { "PBEWithHashMac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac_init(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsTigerDigest_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_TIGER, 192);
}

LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac *new_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac *create_LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_PBEWithHashMac)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestTiger_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.TIGER" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Tiger" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, @"$Digest")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"TIGER" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, @"$KeyGenerator")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"TIGER" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacTIGER)];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHHMACTIGER" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, @"$PBEWithMacKeyFactory")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestTiger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestTiger_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestTiger_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestTiger_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestTiger_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_init(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestTiger_Mappings *new_LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestTiger_Mappings *create_LibOrgBouncycastleJcajceProviderDigestTiger_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestTiger_Mappings)
