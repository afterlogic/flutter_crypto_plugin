//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ntt/NTTObjectIdentifiers.java
//

#ifndef NTTObjectIdentifiers_H
#define NTTObjectIdentifiers_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;

@protocol LibOrgBouncycastleAsn1NttNTTObjectIdentifiers < JavaObject >

@end

@interface LibOrgBouncycastleAsn1NttNTTObjectIdentifiers : NSObject
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia128_cbc NS_SWIFT_NAME(id_camellia128_cbc);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia192_cbc NS_SWIFT_NAME(id_camellia192_cbc);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia256_cbc NS_SWIFT_NAME(id_camellia256_cbc);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia128_wrap NS_SWIFT_NAME(id_camellia128_wrap);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia192_wrap NS_SWIFT_NAME(id_camellia192_wrap);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_camellia256_wrap NS_SWIFT_NAME(id_camellia256_wrap);

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia128_cbc;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia192_cbc;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia256_cbc;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia128_wrap;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia192_wrap;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_camellia256_wrap;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia128_cbc(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia128_cbc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia192_cbc(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia192_cbc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia256_cbc(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia256_cbc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia128_wrap(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia128_wrap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia192_wrap(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia192_wrap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_get_id_camellia256_wrap(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1NttNTTObjectIdentifiers_id_camellia256_wrap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NTTObjectIdentifiers_H
