//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/SignatureTarget.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SignatureSubpacket.h"
#include "SignatureSubpacketTags.h"
#include "SignatureTarget.h"

@implementation LibOrgBouncycastleBcpgSigSignatureTarget

- (instancetype)initWithBoolean:(jboolean)critical
                    withBoolean:(jboolean)isLongLength
                  withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withBoolean_withByteArray_(self, critical, isLongLength, data);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)critical
                        withInt:(jint)publicKeyAlgorithm
                        withInt:(jint)hashAlgorithm
                  withByteArray:(IOSByteArray *)hashData {
  LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withInt_withInt_withByteArray_(self, critical, publicKeyAlgorithm, hashAlgorithm, hashData);
  return self;
}

- (jint)getPublicKeyAlgorithm {
  return IOSByteArray_Get(nil_chk(data_), 0) & (jint) 0xff;
}

- (jint)getHashAlgorithm {
  return IOSByteArray_Get(nil_chk(data_), 1) & (jint) 0xff;
}

- (IOSByteArray *)getHashData {
  return LibOrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(data_, 2, ((IOSByteArray *) nil_chk(data_))->size_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withBoolean:withByteArray:);
  methods[1].selector = @selector(initWithBoolean:withInt:withInt:withByteArray:);
  methods[2].selector = @selector(getPublicKeyAlgorithm);
  methods[3].selector = @selector(getHashAlgorithm);
  methods[4].selector = @selector(getHashData);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "ZZ[B", "ZII[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSigSignatureTarget = { "SignatureTarget", "lib.org.bouncycastle.bcpg.sig", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSigSignatureTarget;
}

@end

void LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigSignatureTarget *self, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_SIGNATURE_TARGET, critical, isLongLength, data);
}

LibOrgBouncycastleBcpgSigSignatureTarget *new_LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigSignatureTarget, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

LibOrgBouncycastleBcpgSigSignatureTarget *create_LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigSignatureTarget, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

void LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withInt_withInt_withByteArray_(LibOrgBouncycastleBcpgSigSignatureTarget *self, jboolean critical, jint publicKeyAlgorithm, jint hashAlgorithm, IOSByteArray *hashData) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_SIGNATURE_TARGET, critical, false, LibOrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_([IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) publicKeyAlgorithm, (jbyte) hashAlgorithm } count:2], hashData));
}

LibOrgBouncycastleBcpgSigSignatureTarget *new_LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withInt_withInt_withByteArray_(jboolean critical, jint publicKeyAlgorithm, jint hashAlgorithm, IOSByteArray *hashData) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigSignatureTarget, initWithBoolean_withInt_withInt_withByteArray_, critical, publicKeyAlgorithm, hashAlgorithm, hashData)
}

LibOrgBouncycastleBcpgSigSignatureTarget *create_LibOrgBouncycastleBcpgSigSignatureTarget_initWithBoolean_withInt_withInt_withByteArray_(jboolean critical, jint publicKeyAlgorithm, jint hashAlgorithm, IOSByteArray *hashData) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigSignatureTarget, initWithBoolean_withInt_withInt_withByteArray_, critical, publicKeyAlgorithm, hashAlgorithm, hashData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSigSignatureTarget)
