//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ies/IesAlgorithmParametersSpi.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Encoding.h"
#include "ASN1Integer.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "IESParameterSpec.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IesAlgorithmParametersSpi.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/AlgorithmParametersSpi.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/InvalidParameterSpecException.h"

@implementation LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isASN1FormatStringWithNSString:(NSString *)format {
  return format == nil || [format isEqual:@"ASN.1"];
}

- (id<JavaSecuritySpecAlgorithmParameterSpec>)engineGetParameterSpecWithIOSClass:(IOSClass *)paramSpec {
  if (paramSpec == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"argument to getParameterSpec must not be null");
  }
  return [self localEngineGetParameterSpecWithIOSClass:paramSpec];
}

- (IOSByteArray *)engineGetEncoded {
  @try {
    LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
    if ([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getDerivationV] != nil) {
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 0, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getDerivationV]))];
    }
    if ([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getEncodingV] != nil) {
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 1, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getEncodingV]))];
    }
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getMacKeySize])];
    if ([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getNonce] != nil) {
      LibOrgBouncycastleAsn1ASN1EncodableVector *cV = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
      [cV addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getCipherKeySize])];
      [cV addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithByteArray_([((LibOrgBouncycastleJceSpecIESParameterSpec *) nil_chk(currentSpec_)) getNonce])];
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(cV)];
    }
    return [new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v) getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Error encoding IESParameters");
  }
}

- (IOSByteArray *)engineGetEncodedWithNSString:(NSString *)format {
  if ([self isASN1FormatStringWithNSString:format] || [((NSString *) nil_chk(format)) java_equalsIgnoreCase:@"X.509"]) {
    return [self engineGetEncoded];
  }
  return nil;
}

- (id<JavaSecuritySpecAlgorithmParameterSpec>)localEngineGetParameterSpecWithIOSClass:(IOSClass *)paramSpec {
  if (paramSpec == LibOrgBouncycastleJceSpecIESParameterSpec_class_() || paramSpec == JavaSecuritySpecAlgorithmParameterSpec_class_()) {
    return currentSpec_;
  }
  @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(@"unknown parameter spec passed to ElGamal parameters object.");
}

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec {
  if (!([paramSpec isKindOfClass:[LibOrgBouncycastleJceSpecIESParameterSpec class]])) {
    @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(@"IESParameterSpec required to initialise a IES algorithm parameters object");
  }
  self->currentSpec_ = (LibOrgBouncycastleJceSpecIESParameterSpec *) cast_chk(paramSpec, [LibOrgBouncycastleJceSpecIESParameterSpec class]);
}

- (void)engineInitWithByteArray:(IOSByteArray *)params {
  @try {
    LibOrgBouncycastleAsn1ASN1Sequence *s = (LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(params), [LibOrgBouncycastleAsn1ASN1Sequence class]);
    if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(s)) size] == 1) {
      self->currentSpec_ = new_LibOrgBouncycastleJceSpecIESParameterSpec_initWithByteArray_withByteArray_withInt_(nil, nil, [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([s getObjectAtWithInt:0]))) getValue])) intValue]);
    }
    else if ([s size] == 2) {
      LibOrgBouncycastleAsn1ASN1TaggedObject *tagged = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([s getObjectAtWithInt:0]);
      if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 0) {
        self->currentSpec_ = new_LibOrgBouncycastleJceSpecIESParameterSpec_initWithByteArray_withByteArray_withInt_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false))) getOctets], nil, [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([s getObjectAtWithInt:1]))) getValue])) intValue]);
      }
      else {
        self->currentSpec_ = new_LibOrgBouncycastleJceSpecIESParameterSpec_initWithByteArray_withByteArray_withInt_(nil, [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false))) getOctets], [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([s getObjectAtWithInt:1]))) getValue])) intValue]);
      }
    }
    else if ([s size] == 3) {
      LibOrgBouncycastleAsn1ASN1TaggedObject *tagged1 = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([s getObjectAtWithInt:0]);
      LibOrgBouncycastleAsn1ASN1TaggedObject *tagged2 = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([s getObjectAtWithInt:1]);
      self->currentSpec_ = new_LibOrgBouncycastleJceSpecIESParameterSpec_initWithByteArray_withByteArray_withInt_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged1, false))) getOctets], [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged2, false))) getOctets], [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([s getObjectAtWithInt:2]))) getValue])) intValue]);
    }
    else if ([s size] == 4) {
      LibOrgBouncycastleAsn1ASN1TaggedObject *tagged1 = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([s getObjectAtWithInt:0]);
      LibOrgBouncycastleAsn1ASN1TaggedObject *tagged2 = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([s getObjectAtWithInt:1]);
      LibOrgBouncycastleAsn1ASN1Sequence *cipherDet = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([s getObjectAtWithInt:3]);
      self->currentSpec_ = new_LibOrgBouncycastleJceSpecIESParameterSpec_initWithByteArray_withByteArray_withInt_withInt_withByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged1, false))) getOctets], [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged2, false))) getOctets], [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([s getObjectAtWithInt:2]))) getValue])) intValue], [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(cipherDet)) getObjectAtWithInt:0]))) getValue])) intValue], [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([cipherDet getObjectAtWithInt:1]))) getOctets]);
    }
  }
  @catch (JavaLangClassCastException *e) {
    @throw new_JavaIoIOException_initWithNSString_(@"Not a valid IES Parameter encoding.");
  }
  @catch (JavaLangArrayIndexOutOfBoundsException *e) {
    @throw new_JavaIoIOException_initWithNSString_(@"Not a valid IES Parameter encoding.");
  }
}

- (void)engineInitWithByteArray:(IOSByteArray *)params
                   withNSString:(NSString *)format {
  if ([self isASN1FormatStringWithNSString:format] || [((NSString *) nil_chk(format)) java_equalsIgnoreCase:@"X.509"]) {
    [self engineInitWithByteArray:params];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", @"Unknown parameter format ", format));
  }
}

- (NSString *)engineToString {
  return @"IES Parameters";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecAlgorithmParameterSpec;", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 5, 1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecAlgorithmParameterSpec;", 0x4, 6, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 11, 10, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isASN1FormatStringWithNSString:);
  methods[2].selector = @selector(engineGetParameterSpecWithIOSClass:);
  methods[3].selector = @selector(engineGetEncoded);
  methods[4].selector = @selector(engineGetEncodedWithNSString:);
  methods[5].selector = @selector(localEngineGetParameterSpecWithIOSClass:);
  methods[6].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[7].selector = @selector(engineInitWithByteArray:);
  methods[8].selector = @selector(engineInitWithByteArray:withNSString:);
  methods[9].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentSpec_", "LLibOrgBouncycastleJceSpecIESParameterSpec;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "isASN1FormatString", "LNSString;", "engineGetParameterSpec", "LIOSClass;", "LJavaSecuritySpecInvalidParameterSpecException;", "engineGetEncoded", "localEngineGetParameterSpec", "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;", "[B", "LJavaIoIOException;", "[BLNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi = { "IesAlgorithmParametersSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.ies", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi *self) {
  JavaSecurityAlgorithmParametersSpi_init(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricIesIesAlgorithmParametersSpi)
