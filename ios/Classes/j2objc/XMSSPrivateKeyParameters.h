//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java
//

#ifndef XMSSPrivateKeyParameters_H
#define XMSSPrivateKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "XMSSKeyParameters.h"
#include "XMSSStoreableObjectInterface.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoXmssBDS;
@class LibOrgBouncycastlePqcCryptoXmssXMSSParameters;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters : LibOrgBouncycastlePqcCryptoXmssXMSSKeyParameters < LibOrgBouncycastlePqcCryptoXmssXMSSStoreableObjectInterface >

#pragma mark Public

- (jint)getIndex;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)getNextKey;

- (LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)getParameters;

- (IOSByteArray *)getPublicSeed;

- (IOSByteArray *)getRoot;

- (IOSByteArray *)getSecretKeyPRF;

- (IOSByteArray *)getSecretKeySeed;

- (jlong)getUsagesRemaining;

- (IOSByteArray *)toByteArray;

#pragma mark Package-Private

- (LibOrgBouncycastlePqcCryptoXmssBDS *)getBDSState;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
                             withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters)

@interface LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)params;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)build;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withBDSStateWithLibOrgBouncycastlePqcCryptoXmssBDS:(LibOrgBouncycastlePqcCryptoXmssBDS *)valBDS;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withIndexWithInt:(jint)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPrivateKeyWithByteArray:(IOSByteArray *)privateKeyVal
                                               withLibOrgBouncycastlePqcCryptoXmssXMSSParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)xmssParameters;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeyPRFWithByteArray:(IOSByteArray *)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeySeedWithByteArray:(IOSByteArray *)val;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *self, LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *new_LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *create_LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSPrivateKeyParameters_H
