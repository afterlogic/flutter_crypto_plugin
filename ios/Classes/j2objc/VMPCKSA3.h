//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/VMPCKSA3.java
//

#ifndef VMPCKSA3_H
#define VMPCKSA3_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseStreamCipher.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoStreamCipher;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3)

@interface LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseStreamCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoStreamCipher:(id<LibOrgBouncycastleCryptoStreamCipher>)arg0
                                                               withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoStreamCipher:(id<LibOrgBouncycastleCryptoStreamCipher>)arg0
                                                               withInt:(jint)arg1
                                                               withInt:(jint)arg2
                                                               withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base)

@interface LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // VMPCKSA3_H
