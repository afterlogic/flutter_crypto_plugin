//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionPublicKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "IntegerPolynomial.h"
#include "J2ObjC_source.h"
#include "NTRUEncryptionKeyParameters.h"
#include "NTRUEncryptionParameters.h"
#include "NTRUEncryptionPublicKeyParameters.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"

@implementation LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters

- (instancetype)initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)h
                     withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, h, params);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)b
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, b, params);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, is, params);
  return self;
}

- (IOSByteArray *)getEncoded {
  return [((LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(h_)) toBinaryWithInt:((LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *) nil_chk(params_))->q_];
}

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)os {
  [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:[self getEncoded]];
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((h_ == nil) ? 0 : ((jint) [((LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(h_)) hash]));
  result = prime * result + ((params_ == nil) ? 0 : ((jint) [((LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *) nil_chk(params_)) hash]));
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if (obj == nil) {
    return false;
  }
  if (!([obj isKindOfClass:[LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters class]])) {
    return false;
  }
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *other = (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *) cast_chk(obj, [LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters class]);
  if (h_ == nil) {
    if (other->h_ != nil) {
      return false;
    }
  }
  else if (![h_ isEqual:other->h_]) {
    return false;
  }
  if (params_ == nil) {
    if (other->params_ != nil) {
      return false;
    }
  }
  else if (![params_ isEqual:other->params_]) {
    return false;
  }
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:);
  methods[1].selector = @selector(initWithByteArray:withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:);
  methods[2].selector = @selector(initWithJavaIoInputStream:withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:);
  methods[3].selector = @selector(getEncoded);
  methods[4].selector = @selector(writeToWithJavaIoOutputStream:);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "h_", "LLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;LLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;", "[BLLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;", "LJavaIoInputStream;LLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;", "LJavaIoIOException;", "writeTo", "LJavaIoOutputStream;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters = { "NTRUEncryptionPublicKeyParameters", "lib.org.bouncycastle.pqc.crypto.ntru", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters;
}

@end

void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, false, params);
  self->h_ = h;
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, h, params)
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, h, params)
}

void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, false, params);
  self->h_ = LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinaryWithByteArray_withInt_withInt_(b, ((LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *) nil_chk(params))->N_, params->q_);
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, b, params)
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, b, params)
}

void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(self, false, params);
  self->h_ = LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_(is, ((LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *) nil_chk(params))->N_, params->q_);
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, is, params)
}

LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_, is, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters)
