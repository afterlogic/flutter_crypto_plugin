//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Evidence.java
//

#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "DERTaggedObject.h"
#include "Evidence.h"
#include "J2ObjC_source.h"
#include "TimeStampTokenEvidence.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmsEvidence () {
 @public
  LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *tstEvidence_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmsEvidence, tstEvidence_, LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmsEvidence *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmsEvidence *new_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmsEvidence *create_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

@implementation LibOrgBouncycastleAsn1CmsEvidence

- (instancetype)initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence:(LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *)tstEvidence {
  LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_(self, tstEvidence);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

+ (LibOrgBouncycastleAsn1CmsEvidence *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1CmsEvidence_getInstanceWithId_(obj);
}

- (LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *)getTstEvidence {
  return tstEvidence_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (tstEvidence_ != nil) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 0, tstEvidence_);
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmsEvidence;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getTstEvidence);
  methods[4].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tstEvidence_", "LLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence;", "LLibOrgBouncycastleAsn1ASN1TaggedObject;", "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmsEvidence = { "Evidence", "lib.org.bouncycastle.asn1.cms", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmsEvidence;
}

@end

void LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_(LibOrgBouncycastleAsn1CmsEvidence *self, LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *tstEvidence) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->tstEvidence_ = tstEvidence;
}

LibOrgBouncycastleAsn1CmsEvidence *new_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_(LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *tstEvidence) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmsEvidence, initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_, tstEvidence)
}

LibOrgBouncycastleAsn1CmsEvidence *create_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_(LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence *tstEvidence) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmsEvidence, initWithLibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_, tstEvidence)
}

void LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmsEvidence *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 0) {
    self->tstEvidence_ = LibOrgBouncycastleAsn1CmsTimeStampTokenEvidence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
  }
}

LibOrgBouncycastleAsn1CmsEvidence *new_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmsEvidence, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CmsEvidence *create_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmsEvidence, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CmsEvidence *LibOrgBouncycastleAsn1CmsEvidence_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1CmsEvidence_initialize();
  if (obj == nil || [obj isKindOfClass:[LibOrgBouncycastleAsn1CmsEvidence class]]) {
    return (LibOrgBouncycastleAsn1CmsEvidence *) cast_chk(obj, [LibOrgBouncycastleAsn1CmsEvidence class]);
  }
  else if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return new_LibOrgBouncycastleAsn1CmsEvidence_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_(obj));
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"unknown object in getInstance");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmsEvidence)
