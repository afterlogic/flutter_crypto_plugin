//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AuthorityInformationAccess.java
//

#ifndef AuthorityInformationAccess_H
#define AuthorityInformationAccess_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AccessDescription;
@class LibOrgBouncycastleAsn1X509Extensions;
@class LibOrgBouncycastleAsn1X509GeneralName;

@interface LibOrgBouncycastleAsn1X509AuthorityInformationAccess : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AccessDescription:(LibOrgBouncycastleAsn1X509AccessDescription *)description_;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AccessDescriptionArray:(IOSObjectArray *)descriptions;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                   withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)location;

+ (LibOrgBouncycastleAsn1X509AuthorityInformationAccess *)fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)extensions;

- (IOSObjectArray *)getAccessDescriptions;

+ (LibOrgBouncycastleAsn1X509AuthorityInformationAccess *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509AuthorityInformationAccess)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *LibOrgBouncycastleAsn1X509AuthorityInformationAccess_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *LibOrgBouncycastleAsn1X509AuthorityInformationAccess_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescription_(LibOrgBouncycastleAsn1X509AuthorityInformationAccess *self, LibOrgBouncycastleAsn1X509AccessDescription *description_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *new_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescription_(LibOrgBouncycastleAsn1X509AccessDescription *description_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *create_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescription_(LibOrgBouncycastleAsn1X509AccessDescription *description_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescriptionArray_(LibOrgBouncycastleAsn1X509AuthorityInformationAccess *self, IOSObjectArray *descriptions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *new_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescriptionArray_(IOSObjectArray *descriptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *create_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1X509AccessDescriptionArray_(IOSObjectArray *descriptions);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509AuthorityInformationAccess *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *new_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityInformationAccess *create_LibOrgBouncycastleAsn1X509AuthorityInformationAccess_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509AuthorityInformationAccess)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AuthorityInformationAccess_H
