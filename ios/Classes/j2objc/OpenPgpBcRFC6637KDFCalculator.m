//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/OpenPgpBcRFC6637KDFCalculator.java
//

#include "ECFieldElement.h"
#include "ECPoint.h"
#include "Hex.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OpenPgpBcRFC6637KDFCalculator.h"
#include "PGPDigestCalculator.h"
#include "PGPException.h"
#include "SymmetricKeyAlgorithmTags.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator () {
 @public
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc_;
  jint keyAlgorithm_;
}

+ (IOSByteArray *)KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)digCalc
                                          withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)s
                                                                      withInt:(jint)keyLen
                                                                withByteArray:(IOSByteArray *)param;

+ (jint)getKeyLenWithInt:(jint)algID;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator, digCalc_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)

inline IOSByteArray *LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_get_ANONYMOUS_SENDER(void);
static IOSByteArray *LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_ANONYMOUS_SENDER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator, ANONYMOUS_SENDER, IOSByteArray *)

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleMathEcECPoint_withInt_withByteArray_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc, LibOrgBouncycastleMathEcECPoint *s, jint keyLen, IOSByteArray *param);

__attribute__((unused)) static jint LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_getKeyLenWithInt_(jint algID);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator)

@implementation LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)digCalc
                                                                     withInt:(jint)keyAlgorithm {
  LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(self, digCalc, keyAlgorithm);
  return self;
}

- (IOSByteArray *)createKeyWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)s
                                                 withByteArray:(IOSByteArray *)userKeyingMaterial {
  @try {
    return LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleMathEcECPoint_withInt_withByteArray_(digCalc_, s, LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_getKeyLenWithInt_(keyAlgorithm_), userKeyingMaterial);
  }
  @catch (JavaIoIOException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"Exception performing KDF: ", [e getMessage]), e);
  }
}

+ (IOSByteArray *)KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)digCalc
                                          withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)s
                                                                      withInt:(jint)keyLen
                                                                withByteArray:(IOSByteArray *)param {
  return LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleMathEcECPoint_withInt_withByteArray_(digCalc, s, keyLen, param);
}

+ (jint)getKeyLenWithInt:(jint)algID {
  return LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_getKeyLenWithInt_(algID);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "[B", 0xa, 4, 5, 6, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 8, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:withInt:);
  methods[1].selector = @selector(createKeyWithLibOrgBouncycastleMathEcECPoint:withByteArray:);
  methods[2].selector = @selector(KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:withLibOrgBouncycastleMathEcECPoint:withInt:withByteArray:);
  methods[3].selector = @selector(getKeyLenWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ANONYMOUS_SENDER", "[B", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "digCalc_", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keyAlgorithm_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;I", "createKey", "LLibOrgBouncycastleMathEcECPoint;[B", "LLibOrgBouncycastleOpenpgpPGPException;", "KDF", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;LLibOrgBouncycastleMathEcECPoint;I[B", "LJavaIoIOException;", "getKeyLen", "I", &LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_ANONYMOUS_SENDER };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator = { "OpenPgpBcRFC6637KDFCalculator", "lib.org.bouncycastle.openpgp.operator.bc", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator class]) {
    LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_ANONYMOUS_SENDER = LibOrgBouncycastleUtilEncodersHex_decodeWithNSString_(@"416E6F6E796D6F75732053656E64657220202020");
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator)
  }
}

@end

void LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator *self, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc, jint keyAlgorithm) {
  NSObject_init(self);
  self->digCalc_ = digCalc;
  self->keyAlgorithm_ = keyAlgorithm;
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator *new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc, jint keyAlgorithm) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_, digCalc, keyAlgorithm)
}

LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator *create_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc, jint keyAlgorithm) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_, digCalc, keyAlgorithm)
}

IOSByteArray *LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_KDFWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleMathEcECPoint_withInt_withByteArray_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digCalc, LibOrgBouncycastleMathEcECPoint *s, jint keyLen, IOSByteArray *param) {
  LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initialize();
  IOSByteArray *ZB = [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk(s)) getXCoord])) getEncoded];
  JavaIoOutputStream *dOut = [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>) nil_chk(digCalc)) getOutputStream];
  [((JavaIoOutputStream *) nil_chk(dOut)) writeWithInt:(jint) 0x00];
  [dOut writeWithInt:(jint) 0x00];
  [dOut writeWithInt:(jint) 0x00];
  [dOut writeWithInt:(jint) 0x01];
  [dOut writeWithByteArray:ZB];
  [dOut writeWithByteArray:param];
  IOSByteArray *digest = [digCalc getDigest];
  IOSByteArray *key = [IOSByteArray newArrayWithLength:keyLen];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(digest, 0, key, 0, key->size_);
  return key;
}

jint LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_getKeyLenWithInt_(jint algID) {
  LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator_initialize();
  switch (algID) {
    case LibOrgBouncycastleBcpgSymmetricKeyAlgorithmTags_AES_128:
    return 16;
    case LibOrgBouncycastleBcpgSymmetricKeyAlgorithmTags_AES_192:
    return 24;
    case LibOrgBouncycastleBcpgSymmetricKeyAlgorithmTags_AES_256:
    return 32;
    default:
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_(JreStrcat("$I", @"unknown symmetric algorithm ID: ", algID));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcRFC6637KDFCalculator)
