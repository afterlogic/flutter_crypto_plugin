//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/rfc7748/X448Field.java
//

#ifndef X448Field_H
#define X448Field_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;

@interface LibOrgBouncycastleMathEcRfc7748X448Field : NSObject
@property (readonly, class) jint SIZE NS_SWIFT_NAME(SIZE);

+ (jint)SIZE;

#pragma mark Public

+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)addOneWithIntArray:(IOSIntArray *)z;

+ (void)addOneWithIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff;

+ (void)carryWithIntArray:(IOSIntArray *)z;

+ (void)cnegateWithInt:(jint)negate
          withIntArray:(IOSIntArray *)z;

+ (void)copy__WithIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff OBJC_METHOD_FAMILY_NONE;

+ (IOSIntArray *)create;

+ (IOSIntArray *)createTableWithInt:(jint)n;

+ (void)cswapWithInt:(jint)swap
        withIntArray:(IOSIntArray *)a
        withIntArray:(IOSIntArray *)b;

+ (void)decodeWithByteArray:(IOSByteArray *)x
                    withInt:(jint)xOff
               withIntArray:(IOSIntArray *)z;

+ (void)encodeWithIntArray:(IOSIntArray *)x
             withByteArray:(IOSByteArray *)z
                   withInt:(jint)zOff;

+ (void)invWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)z;

+ (jboolean)isZeroVarWithIntArray:(IOSIntArray *)x;

+ (void)mulWithIntArray:(IOSIntArray *)x
                withInt:(jint)y
           withIntArray:(IOSIntArray *)z;

+ (void)mulWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)normalizeWithIntArray:(IOSIntArray *)z;

+ (void)oneWithIntArray:(IOSIntArray *)z;

+ (void)sqrWithIntArray:(IOSIntArray *)x
                withInt:(jint)n
           withIntArray:(IOSIntArray *)z;

+ (void)sqrWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)z;

+ (jboolean)sqrtRatioVarWithIntArray:(IOSIntArray *)u
                        withIntArray:(IOSIntArray *)v
                        withIntArray:(IOSIntArray *)z;

+ (void)subWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)subOneWithIntArray:(IOSIntArray *)z;

+ (void)zeroWithIntArray:(IOSIntArray *)z;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcRfc7748X448Field)

inline jint LibOrgBouncycastleMathEcRfc7748X448Field_get_SIZE(void);
#define LibOrgBouncycastleMathEcRfc7748X448Field_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleMathEcRfc7748X448Field, SIZE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_addOneWithIntArray_(IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_addOneWithIntArray_withInt_(IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_carryWithIntArray_(IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_cnegateWithInt_withIntArray_(jint negate, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_copy__WithIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleMathEcRfc7748X448Field_create(void);

FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleMathEcRfc7748X448Field_createTableWithInt_(jint n);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_cswapWithInt_withIntArray_withIntArray_(jint swap, IOSIntArray *a, IOSIntArray *b);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_decodeWithByteArray_withInt_withIntArray_(IOSByteArray *x, jint xOff, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_encodeWithIntArray_withByteArray_withInt_(IOSIntArray *x, IOSByteArray *z, jint zOff);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_invWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleMathEcRfc7748X448Field_isZeroVarWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_mulWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_mulWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_normalizeWithIntArray_(IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_oneWithIntArray_(IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_sqrWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_sqrWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleMathEcRfc7748X448Field_sqrtRatioVarWithIntArray_withIntArray_withIntArray_(IOSIntArray *u, IOSIntArray *v, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_subWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_subOneWithIntArray_(IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcRfc7748X448Field_zeroWithIntArray_(IOSIntArray *z);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcRfc7748X448Field)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X448Field_H
