//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/newhope/NHOtherInfoGenerator.java
//

#ifndef NHOtherInfoGenerator_H
#define NHOtherInfoGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleCryptoUtilDEROtherInfo;
@class LibOrgBouncycastleCryptoUtilDEROtherInfo_Builder;

@interface LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator : NSObject {
 @public
  LibOrgBouncycastleCryptoUtilDEROtherInfo_Builder *otherInfoBuilder_;
  JavaSecuritySecureRandom *random_;
  jboolean used_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmID
                                                                  withByteArray:(IOSByteArray *)partyUInfo
                                                                  withByteArray:(IOSByteArray *)partyVInfo
                                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator, otherInfoBuilder_, LibOrgBouncycastleCryptoUtilDEROtherInfo_Builder *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator, random_, JavaSecuritySecureRandom *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator *new_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator *create_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator)

@interface LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU : LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmID
                                                                  withByteArray:(IOSByteArray *)partyUInfo
                                                                  withByteArray:(IOSByteArray *)partyVInfo
                                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (LibOrgBouncycastleCryptoUtilDEROtherInfo *)generateWithByteArray:(IOSByteArray *)suppPrivInfoPartB;

- (IOSByteArray *)getSuppPrivInfoPartA;

- (LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator *)withSuppPubInfoWithByteArray:(IOSByteArray *)suppPubInfo;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU *new_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU *create_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyU)

@interface LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV : LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmID
                                                                  withByteArray:(IOSByteArray *)partyUInfo
                                                                  withByteArray:(IOSByteArray *)partyVInfo
                                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (LibOrgBouncycastleCryptoUtilDEROtherInfo *)generate;

- (IOSByteArray *)getSuppPrivInfoPartBWithByteArray:(IOSByteArray *)suppPrivInfoPartA;

- (LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator *)withSuppPubInfoWithByteArray:(IOSByteArray *)suppPubInfo;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV *new_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV *create_LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_withJavaSecuritySecureRandom_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNewhopeNHOtherInfoGenerator_PartyV)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NHOtherInfoGenerator_H
