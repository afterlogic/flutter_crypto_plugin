//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/qtesla/Const.java
//

#ifndef Const_H
#define Const_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastlePqcCryptoQteslaConst : NSObject
@property (readonly, class) jint BC_BYTE_SIZE NS_SWIFT_NAME(BC_BYTE_SIZE);
@property (readonly, class) jint SHORT_SIZE NS_SWIFT_NAME(SHORT_SIZE);
@property (readonly, class) jint INT_SIZE NS_SWIFT_NAME(INT_SIZE);
@property (readonly, class) jint LONG_SIZE NS_SWIFT_NAME(LONG_SIZE);

+ (jint)BC_BYTE_SIZE;

+ (jint)SHORT_SIZE;

+ (jint)INT_SIZE;

+ (jint)LONG_SIZE;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoQteslaConst)

inline jint LibOrgBouncycastlePqcCryptoQteslaConst_get_BC_BYTE_SIZE(void);
#define LibOrgBouncycastlePqcCryptoQteslaConst_BC_BYTE_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoQteslaConst, BC_BYTE_SIZE, jint)

inline jint LibOrgBouncycastlePqcCryptoQteslaConst_get_SHORT_SIZE(void);
#define LibOrgBouncycastlePqcCryptoQteslaConst_SHORT_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoQteslaConst, SHORT_SIZE, jint)

inline jint LibOrgBouncycastlePqcCryptoQteslaConst_get_INT_SIZE(void);
#define LibOrgBouncycastlePqcCryptoQteslaConst_INT_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoQteslaConst, INT_SIZE, jint)

inline jint LibOrgBouncycastlePqcCryptoQteslaConst_get_LONG_SIZE(void);
#define LibOrgBouncycastlePqcCryptoQteslaConst_LONG_SIZE 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoQteslaConst, LONG_SIZE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoQteslaConst_init(LibOrgBouncycastlePqcCryptoQteslaConst *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoQteslaConst *new_LibOrgBouncycastlePqcCryptoQteslaConst_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoQteslaConst *create_LibOrgBouncycastlePqcCryptoQteslaConst_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoQteslaConst)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Const_H
