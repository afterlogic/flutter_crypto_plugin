//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/edec/JcajceEdecKeyAgreementSpi.java
//

#include "AsymmetricKeyParameter.h"
#include "BCXDHPrivateKey.h"
#include "BCXDHPublicKey.h"
#include "BaseAgreementSpi.h"
#include "ConcatenationKDFGenerator.h"
#include "DHUParameterSpec.h"
#include "DerivationFunction.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceEdecKeyAgreementSpi.h"
#include "KDF2BytesGenerator.h"
#include "RawAgreement.h"
#include "UserKeyingMaterialSpec.h"
#include "X25519Agreement.h"
#include "X448Agreement.h"
#include "X448PrivateKeyParameters.h"
#include "XDHUPrivateParameters.h"
#include "XDHUPublicParameters.h"
#include "XDHUnifiedAgreement.h"
#include "java/lang/IllegalStateException.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Key.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi () {
 @public
  id<LibOrgBouncycastleCryptoRawAgreement> agreement_;
  LibOrgBouncycastleJcajceSpecDHUParameterSpec *dhuSpec_;
  IOSByteArray *result_;
}

- (id<LibOrgBouncycastleCryptoRawAgreement>)getAgreementWithNSString:(NSString *)alg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, agreement_, id<LibOrgBouncycastleCryptoRawAgreement>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, dhuSpec_, LibOrgBouncycastleJcajceSpecDHUParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, result_, IOSByteArray *)

__attribute__((unused)) static id<LibOrgBouncycastleCryptoRawAgreement> LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *self, NSString *alg);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi

- (instancetype)initWithNSString:(NSString *)algorithm {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(self, algorithm);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, algorithm, kdf);
  return self;
}

- (IOSByteArray *)calcSecret {
  return result_;
}

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom {
  if ([key isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey class]]) {
    LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *priv = [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) key))) engineGetKeyParameters];
    if ([priv isKindOfClass:[LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters class]]) {
      agreement_ = LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(self, @"X448");
    }
    else {
      agreement_ = LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(self, @"X25519");
    }
    [((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) init__WithLibOrgBouncycastleCryptoCipherParameters:priv];
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"cannot identify XDH private key");
  }
  if (kdf_ != nil) {
    ukmParameters_ = [IOSByteArray newArrayWithLength:0];
  }
  else {
    ukmParameters_ = nil;
  }
}

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *priv;
  if ([key isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey class]]) {
    priv = [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) key))) engineGetKeyParameters];
    if ([priv isKindOfClass:[LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters class]]) {
      agreement_ = LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(self, @"X448");
    }
    else {
      agreement_ = LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(self, @"X25519");
    }
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"cannot identify XDH private key");
  }
  ukmParameters_ = nil;
  if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecDHUParameterSpec class]]) {
    if ([((NSString *) nil_chk(kaAlgorithm_)) java_indexOf:'U'] < 0) {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"agreement algorithm not DHU based");
    }
    dhuSpec_ = (LibOrgBouncycastleJcajceSpecDHUParameterSpec *) params;
    ukmParameters_ = [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dhuSpec_)) getUserKeyingMaterial];
    [((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) init__WithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsXDHUPrivateParameters_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(priv, [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) cast_chk([((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dhuSpec_)) getEphemeralPrivateKey], [LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey class])))) engineGetKeyParameters], [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) cast_chk([((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dhuSpec_)) getEphemeralPublicKey], [LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey class])))) engineGetKeyParameters])];
  }
  else {
    [((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) init__WithLibOrgBouncycastleCryptoCipherParameters:priv];
    if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec class]]) {
      if (kdf_ == nil) {
        @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"no KDF specified for UserKeyingMaterialSpec");
      }
      self->ukmParameters_ = [((LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *) params))) getUserKeyingMaterial];
    }
    else {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"unknown ParameterSpec");
    }
  }
  if (kdf_ != nil && ukmParameters_ == nil) {
    ukmParameters_ = [IOSByteArray newArrayWithLength:0];
  }
}

- (id<JavaSecurityKey>)engineDoPhaseWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                            withBoolean:(jboolean)lastPhase {
  if (agreement_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", kaAlgorithm_, @" not initialised."));
  }
  if (!lastPhase) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", kaAlgorithm_, @" can only be between two parties."));
  }
  if (!([key isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey class]])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"cannot identify XDH private key");
  }
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *pub = [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) cast_chk(key, [LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey class])))) engineGetKeyParameters];
  result_ = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) getAgreementSize]];
  if (dhuSpec_ != nil) {
    [((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsXDHUPublicParameters_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(pub, [((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey *) cast_chk([dhuSpec_ getOtherPartyEphemeralKey], [LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPublicKey class])))) engineGetKeyParameters]) withByteArray:result_ withInt:0];
  }
  else {
    [((id<LibOrgBouncycastleCryptoRawAgreement>) nil_chk(agreement_)) calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:pub withByteArray:result_ withInt:0];
  }
  return nil;
}

- (id<LibOrgBouncycastleCryptoRawAgreement>)getAgreementWithNSString:(NSString *)alg {
  return LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(self, alg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 5, 6, -1, -1, -1 },
    { NULL, "LJavaSecurityKey;", 0x4, 7, 8, 9, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoRawAgreement;", 0x2, 10, 0, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoDerivationFunction:);
  methods[2].selector = @selector(calcSecret);
  methods[3].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySecureRandom:);
  methods[4].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[5].selector = @selector(engineDoPhaseWithJavaSecurityKey:withBoolean:);
  methods[6].selector = @selector(getAgreementWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "agreement_", "LLibOrgBouncycastleCryptoRawAgreement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dhuSpec_", "LLibOrgBouncycastleJcajceSpecDHUParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "result_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LLibOrgBouncycastleCryptoDerivationFunction;", "engineInit", "LJavaSecurityKey;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;", "LJavaSecurityKey;LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;LJavaSecurityInvalidAlgorithmParameterException;", "engineDoPhase", "LJavaSecurityKey;Z", "LJavaSecurityInvalidKeyException;LJavaLangIllegalStateException;", "getAgreement", "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF;LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi = { "JcajceEdecKeyAgreementSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, 11, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *self, NSString *algorithm) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, algorithm, nil);
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(NSString *algorithm) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, initWithNSString_, algorithm)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(NSString *algorithm) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, initWithNSString_, algorithm)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *self, NSString *algorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, algorithm, kdf);
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *algorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_, algorithm, kdf)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *algorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_, algorithm, kdf)
}

id<LibOrgBouncycastleCryptoRawAgreement> LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_getAgreementWithNSString_(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi *self, NSString *alg) {
  if (!([((NSString *) nil_chk(self->kaAlgorithm_)) isEqual:@"XDH"] || [self->kaAlgorithm_ java_hasPrefix:alg])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(JreStrcat("$$", @"inappropriate key for ", self->kaAlgorithm_));
  }
  if ([self->kaAlgorithm_ java_indexOf:'U'] > 0) {
    if ([((NSString *) nil_chk(alg)) java_hasPrefix:@"X448"]) {
      return new_LibOrgBouncycastleCryptoAgreementXDHUnifiedAgreement_initWithLibOrgBouncycastleCryptoRawAgreement_(new_LibOrgBouncycastleCryptoAgreementX448Agreement_init());
    }
    else {
      return new_LibOrgBouncycastleCryptoAgreementXDHUnifiedAgreement_initWithLibOrgBouncycastleCryptoRawAgreement_(new_LibOrgBouncycastleCryptoAgreementX25519Agreement_init());
    }
  }
  else {
    if ([((NSString *) nil_chk(alg)) java_hasPrefix:@"X448"]) {
      return new_LibOrgBouncycastleCryptoAgreementX448Agreement_init();
    }
    else {
      return new_LibOrgBouncycastleCryptoAgreementX25519Agreement_init();
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH = { "XDH", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(self, @"XDH");
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_XDH)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448 = { "X448", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(self, @"X448");
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519 = { "X25519", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_(self, @"X25519");
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF = { "X25519withSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519withSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF = { "X25519withSHA384CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519withSHA384CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA384CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF = { "X25519withSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519withSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA512CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF = { "X448withSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448withSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF = { "X448withSHA384CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448withSHA384CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA384CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF = { "X448withSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448withSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF = { "X25519withSHA256KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519withSHA256KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519withSHA256KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF = { "X448withSHA512KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x19, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448withSHA512KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448withSHA512KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF = { "X25519UwithSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519UwithSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF = { "X448UwithSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448UwithSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF = { "X25519UwithSHA256KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X25519UwithSHA256KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X25519UwithSHA256KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF = { "X448UwithSHA512KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"X448UwithSHA512KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyAgreementSpi_X448UwithSHA512KDF)
