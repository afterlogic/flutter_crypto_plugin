//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/AbstractTlsCipherFactory.java
//

#ifndef AbstractTlsCipherFactory_H
#define AbstractTlsCipherFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TlsCipherFactory.h"

@protocol LibOrgBouncycastleCryptoTlsTlsCipher;
@protocol LibOrgBouncycastleCryptoTlsTlsContext;

@interface LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory : NSObject < LibOrgBouncycastleCryptoTlsTlsCipherFactory >

#pragma mark Public

- (instancetype __nonnull)init;

- (id<LibOrgBouncycastleCryptoTlsTlsCipher>)createCipherWithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context
                                                                                          withInt:(jint)encryptionAlgorithm
                                                                                          withInt:(jint)macAlgorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *new_LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *create_LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AbstractTlsCipherFactory_H
