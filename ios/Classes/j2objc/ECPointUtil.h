//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/ECPointUtil.java
//

#ifndef ECPointUtil_H
#define ECPointUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecEllipticCurve;

@interface LibOrgBouncycastleJceECPointUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (JavaSecuritySpecECPoint *)decodePointWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
                                                            withByteArray:(IOSByteArray *)encoded;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceECPointUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleJceECPointUtil_init(LibOrgBouncycastleJceECPointUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceECPointUtil *new_LibOrgBouncycastleJceECPointUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceECPointUtil *create_LibOrgBouncycastleJceECPointUtil_init(void);

FOUNDATION_EXPORT JavaSecuritySpecECPoint *LibOrgBouncycastleJceECPointUtil_decodePointWithJavaSecuritySpecEllipticCurve_withByteArray_(JavaSecuritySpecEllipticCurve *curve, IOSByteArray *encoded);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceECPointUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECPointUtil_H
