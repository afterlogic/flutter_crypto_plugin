//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/SHA384.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "HMac.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "OldHMac.h"
#include "PKCSObjectIdentifiers.h"
#include "SHA384.h"
#include "SHA384Digest.h"

@interface LibOrgBouncycastleJcajceProviderDigestSHA384 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestSHA384_init(LibOrgBouncycastleJcajceProviderDigestSHA384 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSHA384 *new_LibOrgBouncycastleJcajceProviderDigestSHA384_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSHA384 *create_LibOrgBouncycastleJcajceProviderDigestSHA384_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA384_Digest;LLibOrgBouncycastleJcajceProviderDigestSHA384_HashMac;LLibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator;LLibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384;LLibOrgBouncycastleJcajceProviderDigestSHA384_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384 = { "SHA384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_init(LibOrgBouncycastleJcajceProviderDigestSHA384 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSHA384 *new_LibOrgBouncycastleJcajceProviderDigestSHA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384 *create_LibOrgBouncycastleJcajceProviderDigestSHA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *d = (LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestSHA384_Digest class]);
  ((LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsSHA384Digest_initWithLibOrgBouncycastleCryptoDigestsSHA384Digest_((LibOrgBouncycastleCryptoDigestsSHA384Digest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsSHA384Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestSHA384;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384_Digest = { "Digest", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsSHA384Digest_init());
}

LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *new_LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384_Digest *create_LibOrgBouncycastleJcajceProviderDigestSHA384_Digest_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384_Digest)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA384;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac = { "HashMac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSHA384Digest_init()));
}

LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *new_LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac *create_LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384_HashMac)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA384;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator = { "KeyGenerator", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSHA384", 384, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *new_LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator *create_LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384_KeyGenerator)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA384;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 = { "OldSHA384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsOldHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSHA384Digest_init()));
}

LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *new_LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384 *create_LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384_OldSHA384)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.SHA-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.MessageDigest.SHA384" withNSString:@"SHA-384"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha384)) withNSString:@"SHA-384"];
  [provider addAlgorithmWithNSString:@"Mac.OLDHMACSHA384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, @"$OldSHA384")];
  [provider addAlgorithmWithNSString:@"Mac.PBEWITHHMACSHA384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, @"$HashMac")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, @"$KeyGenerator")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA384" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestSHA384;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestSHA384_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *new_LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings *create_LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA384_Mappings)
