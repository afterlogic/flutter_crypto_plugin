//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceKeyGenerationParameters.java
//

#ifndef McElieceKeyGenerationParameters_H
#define McElieceKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
 withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)params;

- (LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters *self, JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceKeyGenerationParameters_H
