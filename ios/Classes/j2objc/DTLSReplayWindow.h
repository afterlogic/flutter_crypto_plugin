//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/DTLSReplayWindow.java
//

#ifndef DTLSReplayWindow_H
#define DTLSReplayWindow_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleCryptoTlsDTLSReplayWindow : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (void)reportAuthenticatedWithLong:(jlong)seq;

- (void)reset;

- (jboolean)shouldDiscardWithLong:(jlong)seq;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsDTLSReplayWindow)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsDTLSReplayWindow_init(LibOrgBouncycastleCryptoTlsDTLSReplayWindow *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsDTLSReplayWindow *new_LibOrgBouncycastleCryptoTlsDTLSReplayWindow_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsDTLSReplayWindow *create_LibOrgBouncycastleCryptoTlsDTLSReplayWindow_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsDTLSReplayWindow)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DTLSReplayWindow_H
