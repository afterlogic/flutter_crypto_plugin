//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/est/AttrOrOID.java
//

#ifndef AttrOrOID_H
#define AttrOrOID_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1PkcsPkcsAttribute;

@interface LibOrgBouncycastleAsn1EstAttrOrOID : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPkcsAttribute:(LibOrgBouncycastleAsn1PkcsPkcsAttribute *)attribute;

- (LibOrgBouncycastleAsn1PkcsPkcsAttribute *)getAttribute;

+ (LibOrgBouncycastleAsn1EstAttrOrOID *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOid;

- (jboolean)isOid;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EstAttrOrOID)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1EstAttrOrOID *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAttrOrOID *new_LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAttrOrOID *create_LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1PkcsPkcsAttribute_(LibOrgBouncycastleAsn1EstAttrOrOID *self, LibOrgBouncycastleAsn1PkcsPkcsAttribute *attribute);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAttrOrOID *new_LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1PkcsPkcsAttribute_(LibOrgBouncycastleAsn1PkcsPkcsAttribute *attribute) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAttrOrOID *create_LibOrgBouncycastleAsn1EstAttrOrOID_initWithLibOrgBouncycastleAsn1PkcsPkcsAttribute_(LibOrgBouncycastleAsn1PkcsPkcsAttribute *attribute);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAttrOrOID *LibOrgBouncycastleAsn1EstAttrOrOID_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EstAttrOrOID)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AttrOrOID_H
