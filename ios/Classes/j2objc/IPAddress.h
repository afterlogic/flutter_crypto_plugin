//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/IPAddress.java
//

#ifndef IPAddress_H
#define IPAddress_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleUtilIPAddress : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)isValidWithNSString:(NSString *)address;

+ (jboolean)isValidIPv4WithNSString:(NSString *)address;

+ (jboolean)isValidIPv4WithNetmaskWithNSString:(NSString *)address;

+ (jboolean)isValidIPv6WithNSString:(NSString *)address;

+ (jboolean)isValidIPv6WithNetmaskWithNSString:(NSString *)address;

+ (jboolean)isValidWithNetMaskWithNSString:(NSString *)address;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleUtilIPAddress)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilIPAddress_init(LibOrgBouncycastleUtilIPAddress *self);

FOUNDATION_EXPORT LibOrgBouncycastleUtilIPAddress *new_LibOrgBouncycastleUtilIPAddress_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilIPAddress *create_LibOrgBouncycastleUtilIPAddress_init(void);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidWithNetMaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidIPv4WithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidIPv4WithNetmaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidIPv6WithNetmaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleUtilIPAddress_isValidIPv6WithNSString_(NSString *address);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilIPAddress)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IPAddress_H
