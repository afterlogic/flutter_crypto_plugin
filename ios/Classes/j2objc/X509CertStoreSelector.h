//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509CertStoreSelector.java
//

#ifndef X509CertStoreSelector_H
#define X509CertStoreSelector_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Selector.h"
#include "java/security/cert/X509CertSelector.h"

@class JavaSecurityCertCertificate;

@interface LibOrgBouncycastleX509X509CertStoreSelector : JavaSecurityCertX509CertSelector < LibOrgBouncycastleUtilSelector >

#pragma mark Public

- (instancetype __nonnull)init;

- (id)java_clone;

+ (LibOrgBouncycastleX509X509CertStoreSelector *)getInstanceWithJavaSecurityCertX509CertSelector:(JavaSecurityCertX509CertSelector *)selector;

- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (jboolean)matchWithId:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509X509CertStoreSelector)

FOUNDATION_EXPORT void LibOrgBouncycastleX509X509CertStoreSelector_init(LibOrgBouncycastleX509X509CertStoreSelector *self);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509CertStoreSelector *new_LibOrgBouncycastleX509X509CertStoreSelector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509X509CertStoreSelector *create_LibOrgBouncycastleX509X509CertStoreSelector_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509CertStoreSelector *LibOrgBouncycastleX509X509CertStoreSelector_getInstanceWithJavaSecurityCertX509CertSelector_(JavaSecurityCertX509CertSelector *selector);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509X509CertStoreSelector)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X509CertStoreSelector_H
