//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/SPUserNotice.java
//

#ifndef SPUserNotice_H
#define SPUserNotice_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509DisplayText;
@class LibOrgBouncycastleAsn1X509NoticeReference;

@interface LibOrgBouncycastleAsn1EsfSPUserNotice : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509NoticeReference:(LibOrgBouncycastleAsn1X509NoticeReference *)noticeRef
                                  withLibOrgBouncycastleAsn1X509DisplayText:(LibOrgBouncycastleAsn1X509DisplayText *)explicitText;

- (LibOrgBouncycastleAsn1X509DisplayText *)getExplicitText;

+ (LibOrgBouncycastleAsn1EsfSPUserNotice *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509NoticeReference *)getNoticeRef;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfSPUserNotice)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSPUserNotice *LibOrgBouncycastleAsn1EsfSPUserNotice_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfSPUserNotice_initWithLibOrgBouncycastleAsn1X509NoticeReference_withLibOrgBouncycastleAsn1X509DisplayText_(LibOrgBouncycastleAsn1EsfSPUserNotice *self, LibOrgBouncycastleAsn1X509NoticeReference *noticeRef, LibOrgBouncycastleAsn1X509DisplayText *explicitText);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSPUserNotice *new_LibOrgBouncycastleAsn1EsfSPUserNotice_initWithLibOrgBouncycastleAsn1X509NoticeReference_withLibOrgBouncycastleAsn1X509DisplayText_(LibOrgBouncycastleAsn1X509NoticeReference *noticeRef, LibOrgBouncycastleAsn1X509DisplayText *explicitText) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSPUserNotice *create_LibOrgBouncycastleAsn1EsfSPUserNotice_initWithLibOrgBouncycastleAsn1X509NoticeReference_withLibOrgBouncycastleAsn1X509DisplayText_(LibOrgBouncycastleAsn1X509NoticeReference *noticeRef, LibOrgBouncycastleAsn1X509DisplayText *explicitText);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfSPUserNotice)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SPUserNotice_H
