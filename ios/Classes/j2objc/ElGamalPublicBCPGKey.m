//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ElGamalPublicBCPGKey.java
//

#include "BCPGInputStream.h"
#include "BCPGObject.h"
#include "BCPGOutputStream.h"
#include "ElGamalPublicBCPGKey.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MPInteger.h"
#include "java/io/IOException.h"
#include "java/math/BigInteger.h"

@implementation LibOrgBouncycastleBcpgElGamalPublicBCPGKey

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)y {
  LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(self, p, g, y);
  return self;
}

- (NSString *)getFormat {
  return @"PGP";
}

- (IOSByteArray *)getEncoded {
  @try {
    return [super getEncoded];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (JavaMathBigInteger *)getP {
  return [((LibOrgBouncycastleBcpgMPInteger *) nil_chk(p_)) getValue];
}

- (JavaMathBigInteger *)getG {
  return [((LibOrgBouncycastleBcpgMPInteger *) nil_chk(g_)) getValue];
}

- (JavaMathBigInteger *)getY {
  return [((LibOrgBouncycastleBcpgMPInteger *) nil_chk(y_)) getValue];
}

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg {
  [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(outArg)) writeObjectWithLibOrgBouncycastleBcpgBCPGObject:p_];
  [outArg writeObjectWithLibOrgBouncycastleBcpgBCPGObject:g_];
  [outArg writeObjectWithLibOrgBouncycastleBcpgBCPGObject:y_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(getFormat);
  methods[3].selector = @selector(getEncoded);
  methods[4].selector = @selector(getP);
  methods[5].selector = @selector(getG);
  methods[6].selector = @selector(getY);
  methods[7].selector = @selector(encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p_", "LLibOrgBouncycastleBcpgMPInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "g_", "LLibOrgBouncycastleBcpgMPInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "y_", "LLibOrgBouncycastleBcpgMPInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;", "LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "encode", "LLibOrgBouncycastleBcpgBCPGOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgElGamalPublicBCPGKey = { "ElGamalPublicBCPGKey", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgElGamalPublicBCPGKey;
}

@end

void LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgElGamalPublicBCPGKey *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->p_ = new_LibOrgBouncycastleBcpgMPInteger_initWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg);
  self->g_ = new_LibOrgBouncycastleBcpgMPInteger_initWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg);
  self->y_ = new_LibOrgBouncycastleBcpgMPInteger_initWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg);
}

LibOrgBouncycastleBcpgElGamalPublicBCPGKey *new_LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgElGamalPublicBCPGKey, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleBcpgElGamalPublicBCPGKey *create_LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgElGamalPublicBCPGKey, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

void LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleBcpgElGamalPublicBCPGKey *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *y) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->p_ = new_LibOrgBouncycastleBcpgMPInteger_initWithJavaMathBigInteger_(p);
  self->g_ = new_LibOrgBouncycastleBcpgMPInteger_initWithJavaMathBigInteger_(g);
  self->y_ = new_LibOrgBouncycastleBcpgMPInteger_initWithJavaMathBigInteger_(y);
}

LibOrgBouncycastleBcpgElGamalPublicBCPGKey *new_LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *y) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgElGamalPublicBCPGKey, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, p, g, y)
}

LibOrgBouncycastleBcpgElGamalPublicBCPGKey *create_LibOrgBouncycastleBcpgElGamalPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *y) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgElGamalPublicBCPGKey, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, p, g, y)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgElGamalPublicBCPGKey)
