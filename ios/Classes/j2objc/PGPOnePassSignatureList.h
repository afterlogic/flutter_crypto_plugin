//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPOnePassSignatureList.java
//

#ifndef PGPOnePassSignatureList_H
#define PGPOnePassSignatureList_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "Iterable.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleOpenpgpPGPOnePassSignature;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface LibOrgBouncycastleOpenpgpPGPOnePassSignatureList : NSObject < LibOrgBouncycastleUtilIterable > {
 @public
  IOSObjectArray *sigs_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature:(LibOrgBouncycastleOpenpgpPGPOnePassSignature *)sig;

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray:(IOSObjectArray *)sigs;

- (LibOrgBouncycastleOpenpgpPGPOnePassSignature *)getWithInt:(jint)index;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jint)size;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList, sigs_, IOSObjectArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *self, IOSObjectArray *sigs);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *new_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(IOSObjectArray *sigs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *create_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(IOSObjectArray *sigs);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *self, LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *new_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *create_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPOnePassSignatureList_H
