//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1OctetString.java
//

#include "ASN1Encodable.h"
#include "ASN1OctetString.h"
#include "ASN1OctetStringParser.h"
#include "ASN1OutputStream.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "BEROctetString.h"
#include "DEROctetString.h"
#include "Hex.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Strings.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"

@implementation LibOrgBouncycastleAsn1ASN1OctetString

+ (LibOrgBouncycastleAsn1ASN1OctetString *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (LibOrgBouncycastleAsn1ASN1OctetString *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(obj);
}

- (instancetype)initWithByteArray:(IOSByteArray *)string {
  LibOrgBouncycastleAsn1ASN1OctetString_initWithByteArray_(self, string);
  return self;
}

- (JavaIoInputStream *)getOctetStream {
  return new_JavaIoByteArrayInputStream_initWithByteArray_(string_);
}

- (id<LibOrgBouncycastleAsn1ASN1OctetStringParser>)parser {
  return self;
}

- (IOSByteArray *)getOctets {
  return string_;
}

- (NSUInteger)hash {
  return LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_([self getOctets]);
}

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o {
  if (!([o isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]])) {
    return false;
  }
  LibOrgBouncycastleAsn1ASN1OctetString *other = (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk(o, [LibOrgBouncycastleAsn1ASN1OctetString class]);
  return LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(string_, ((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(other))->string_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  return [self toASN1Primitive];
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  return new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(string_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  return new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(string_);
}

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)description {
  return JreStrcat("C$", '#', LibOrgBouncycastleUtilStrings_fromByteArrayWithByteArray_(LibOrgBouncycastleUtilEncodersHex_encodeWithByteArray_(string_)));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetStringParser;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x400, 7, 8, 9, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(getOctetStream);
  methods[4].selector = @selector(parser);
  methods[5].selector = @selector(getOctets);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:);
  methods[8].selector = @selector(getLoadedObject);
  methods[9].selector = @selector(toDERObject);
  methods[10].selector = @selector(toDLObject);
  methods[11].selector = @selector(encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "string_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "[B", "hashCode", "asn1Equals", "LLibOrgBouncycastleAsn1ASN1Primitive;", "encode", "LLibOrgBouncycastleAsn1ASN1OutputStream;", "LJavaIoIOException;", "toString" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1ASN1OctetString = { "ASN1OctetString", "lib.org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 13, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1ASN1OctetString;
}

@end

LibOrgBouncycastleAsn1ASN1OctetString *LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1ASN1OctetString_initialize();
  LibOrgBouncycastleAsn1ASN1Primitive *o = [((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject];
  if (explicit_ || [o isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
    return LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(o);
  }
  else {
    return LibOrgBouncycastleAsn1BEROctetString_fromSequenceWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
}

LibOrgBouncycastleAsn1ASN1OctetString *LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1ASN1OctetString_initialize();
  if (obj == nil || [obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
    return (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk(obj, [LibOrgBouncycastleAsn1ASN1OctetString class]);
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    @try {
      return LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(obj, [IOSByteArray class])));
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct OCTET STRING from byte[]: ", [e getMessage]));
    }
  }
  else if ([LibOrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    LibOrgBouncycastleAsn1ASN1Primitive *primitive = [((id<LibOrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, LibOrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
      return (LibOrgBouncycastleAsn1ASN1OctetString *) primitive;
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}

void LibOrgBouncycastleAsn1ASN1OctetString_initWithByteArray_(LibOrgBouncycastleAsn1ASN1OctetString *self, IOSByteArray *string) {
  LibOrgBouncycastleAsn1ASN1Primitive_init(self);
  if (string == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"string cannot be null");
  }
  self->string_ = string;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1ASN1OctetString)
