//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DHPrivateKeyParameters.java
//

#include "DHKeyParameters.h"
#include "DHParameters.h"
#include "DHPrivateKeyParameters.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters () {
 @public
  JavaMathBigInteger *x_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters, x_, JavaMathBigInteger *)

@implementation LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)x
withLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)params {
  LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(self, x, params);
  return self;
}

- (JavaMathBigInteger *)getX {
  return x_;
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk(x_)) hash]) ^ ((jint) [super hash]);
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters class]])) {
    return false;
  }
  LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *other = (LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *) cast_chk(obj, [LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters class]);
  return [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *) nil_chk(other)) getX])) isEqual:self->x_] && [super isEqual:obj];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withLibOrgBouncycastleCryptoParamsDHParameters:);
  methods[1].selector = @selector(getX);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LLibOrgBouncycastleCryptoParamsDHParameters;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters = { "DHPrivateKeyParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters;
}

@end

void LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *self, JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDHParameters *params) {
  LibOrgBouncycastleCryptoParamsDHKeyParameters_initWithBoolean_withLibOrgBouncycastleCryptoParamsDHParameters_(self, true, params);
  self->x_ = x;
}

LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *new_LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDHParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters, initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_, x, params)
}

LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *create_LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDHParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters, initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_, x, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters)
