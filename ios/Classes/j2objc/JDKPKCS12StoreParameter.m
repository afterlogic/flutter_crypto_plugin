//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JDKPKCS12StoreParameter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JDKPKCS12StoreParameter.h"
#include "java/io/OutputStream.h"
#include "java/security/KeyStore.h"

@interface LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter () {
 @public
  JavaIoOutputStream *outputStream_;
  id<JavaSecurityKeyStore_ProtectionParameter> protectionParameter_;
  jboolean useDEREncoding_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter, outputStream_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter, protectionParameter_, id<JavaSecurityKeyStore_ProtectionParameter>)

@implementation LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaIoOutputStream *)getOutputStream {
  return outputStream_;
}

- (id<JavaSecurityKeyStore_ProtectionParameter>)getProtectionParameter {
  return protectionParameter_;
}

- (jboolean)isUseDEREncoding {
  return useDEREncoding_;
}

- (void)setOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  self->outputStream_ = outputStream;
}

- (void)setPasswordWithCharArray:(IOSCharArray *)password {
  self->protectionParameter_ = new_JavaSecurityKeyStore_PasswordProtection_initWithCharArray_(password);
}

- (void)setProtectionParameterWithJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)protectionParameter {
  self->protectionParameter_ = protectionParameter;
}

- (void)setUseDEREncodingWithBoolean:(jboolean)useDEREncoding {
  self->useDEREncoding_ = useDEREncoding;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyStore_ProtectionParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getOutputStream);
  methods[2].selector = @selector(getProtectionParameter);
  methods[3].selector = @selector(isUseDEREncoding);
  methods[4].selector = @selector(setOutputStreamWithJavaIoOutputStream:);
  methods[5].selector = @selector(setPasswordWithCharArray:);
  methods[6].selector = @selector(setProtectionParameterWithJavaSecurityKeyStore_ProtectionParameter:);
  methods[7].selector = @selector(setUseDEREncodingWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "outputStream_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "protectionParameter_", "LJavaSecurityKeyStore_ProtectionParameter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useDEREncoding_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setOutputStream", "LJavaIoOutputStream;", "setPassword", "[C", "setProtectionParameter", "LJavaSecurityKeyStore_ProtectionParameter;", "setUseDEREncoding", "Z" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter = { "JDKPKCS12StoreParameter", "lib.org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter;
}

@end

void LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter_init(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter *new_LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter, init)
}

LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter *create_LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceProviderJDKPKCS12StoreParameter)
