//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/PolicyConstraints.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "Extension.h"
#include "Extensions.h"
#include "J2ObjC_source.h"
#include "PolicyConstraints.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1X509PolicyConstraints () {
 @public
  JavaMathBigInteger *requireExplicitPolicyMapping_;
  JavaMathBigInteger *inhibitPolicyMapping_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509PolicyConstraints, requireExplicitPolicyMapping_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509PolicyConstraints, inhibitPolicyMapping_, JavaMathBigInteger *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509PolicyConstraints *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1X509PolicyConstraints *new_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1X509PolicyConstraints *create_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1X509PolicyConstraints

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)requireExplicitPolicyMapping
                    withJavaMathBigInteger:(JavaMathBigInteger *)inhibitPolicyMapping {
  LibOrgBouncycastleAsn1X509PolicyConstraints_initWithJavaMathBigInteger_withJavaMathBigInteger_(self, requireExplicitPolicyMapping, inhibitPolicyMapping);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1X509PolicyConstraints *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1X509PolicyConstraints_getInstanceWithId_(obj);
}

+ (LibOrgBouncycastleAsn1X509PolicyConstraints *)fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)extensions {
  return LibOrgBouncycastleAsn1X509PolicyConstraints_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_(extensions);
}

- (JavaMathBigInteger *)getRequireExplicitPolicyMapping {
  return requireExplicitPolicyMapping_;
}

- (JavaMathBigInteger *)getInhibitPolicyMapping {
  return inhibitPolicyMapping_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (requireExplicitPolicyMapping_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 0, new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(requireExplicitPolicyMapping_))];
  }
  if (inhibitPolicyMapping_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 1, new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(inhibitPolicyMapping_))];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509PolicyConstraints;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509PolicyConstraints;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:);
  methods[4].selector = @selector(getRequireExplicitPolicyMapping);
  methods[5].selector = @selector(getInhibitPolicyMapping);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "requireExplicitPolicyMapping_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "inhibitPolicyMapping_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LJavaMathBigInteger;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "fromExtensions", "LLibOrgBouncycastleAsn1X509Extensions;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509PolicyConstraints = { "PolicyConstraints", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509PolicyConstraints;
}

@end

void LibOrgBouncycastleAsn1X509PolicyConstraints_initWithJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509PolicyConstraints *self, JavaMathBigInteger *requireExplicitPolicyMapping, JavaMathBigInteger *inhibitPolicyMapping) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->requireExplicitPolicyMapping_ = requireExplicitPolicyMapping;
  self->inhibitPolicyMapping_ = inhibitPolicyMapping;
}

LibOrgBouncycastleAsn1X509PolicyConstraints *new_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *requireExplicitPolicyMapping, JavaMathBigInteger *inhibitPolicyMapping) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509PolicyConstraints, initWithJavaMathBigInteger_withJavaMathBigInteger_, requireExplicitPolicyMapping, inhibitPolicyMapping)
}

LibOrgBouncycastleAsn1X509PolicyConstraints *create_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *requireExplicitPolicyMapping, JavaMathBigInteger *inhibitPolicyMapping) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509PolicyConstraints, initWithJavaMathBigInteger_withJavaMathBigInteger_, requireExplicitPolicyMapping, inhibitPolicyMapping)
}

void LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509PolicyConstraints *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  for (jint i = 0; i != [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size]; i++) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *to = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:i]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(to)) getTagNo] == 0) {
      self->requireExplicitPolicyMapping_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(to, false))) getValue];
    }
    else if ([to getTagNo] == 1) {
      self->inhibitPolicyMapping_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(to, false))) getValue];
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown tag encountered.");
    }
  }
}

LibOrgBouncycastleAsn1X509PolicyConstraints *new_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509PolicyConstraints, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X509PolicyConstraints *create_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509PolicyConstraints, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X509PolicyConstraints *LibOrgBouncycastleAsn1X509PolicyConstraints_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1X509PolicyConstraints_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1X509PolicyConstraints class]]) {
    return (LibOrgBouncycastleAsn1X509PolicyConstraints *) obj;
  }
  if (obj != nil) {
    return new_LibOrgBouncycastleAsn1X509PolicyConstraints_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

LibOrgBouncycastleAsn1X509PolicyConstraints *LibOrgBouncycastleAsn1X509PolicyConstraints_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1X509Extensions *extensions) {
  LibOrgBouncycastleAsn1X509PolicyConstraints_initialize();
  return LibOrgBouncycastleAsn1X509PolicyConstraints_getInstanceWithId_([((LibOrgBouncycastleAsn1X509Extensions *) nil_chk(extensions)) getExtensionParsedValueWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, policyConstraints)]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509PolicyConstraints)
