//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/PackedDate.java
//

#ifndef PackedDate_H
#define PackedDate_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaUtilDate;
@class JavaUtilLocale;

@interface LibOrgBouncycastleAsn1EacPackedDate : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)time;

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)time
                            withJavaUtilLocale:(JavaUtilLocale *)locale;

- (instancetype __nonnull)initWithNSString:(NSString *)time;

- (jboolean)isEqual:(id)o;

- (JavaUtilDate *)getDate;

- (IOSByteArray *)getEncoding;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)bytes;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EacPackedDate)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacPackedDate_initWithNSString_(LibOrgBouncycastleAsn1EacPackedDate *self, NSString *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *new_LibOrgBouncycastleAsn1EacPackedDate_initWithNSString_(NSString *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *create_LibOrgBouncycastleAsn1EacPackedDate_initWithNSString_(NSString *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_(LibOrgBouncycastleAsn1EacPackedDate *self, JavaUtilDate *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *new_LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_(JavaUtilDate *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *create_LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_(JavaUtilDate *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_withJavaUtilLocale_(LibOrgBouncycastleAsn1EacPackedDate *self, JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *new_LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *create_LibOrgBouncycastleAsn1EacPackedDate_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacPackedDate_initWithByteArray_(LibOrgBouncycastleAsn1EacPackedDate *self, IOSByteArray *bytes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *new_LibOrgBouncycastleAsn1EacPackedDate_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacPackedDate *create_LibOrgBouncycastleAsn1EacPackedDate_initWithByteArray_(IOSByteArray *bytes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EacPackedDate)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PackedDate_H
