//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/BouncyCastleProviderConfiguration.java
//

#ifndef BouncyCastleProviderConfiguration_H
#define BouncyCastleProviderConfiguration_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "ProviderConfiguration.h"

@class JavaSecuritySpecDSAParameterSpec;
@class JavaxCryptoSpecDHParameterSpec;
@class LibOrgBouncycastleJceSpecECParameterSpec;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration : NSObject < LibOrgBouncycastleJcajceProviderConfigProviderConfiguration >

#pragma mark Public

- (id<JavaUtilSet>)getAcceptableNamedCurves;

- (id<JavaUtilMap>)getAdditionalECParameters;

- (JavaxCryptoSpecDHParameterSpec *)getDHDefaultParametersWithInt:(jint)keySize;

- (JavaSecuritySpecDSAParameterSpec *)getDSADefaultParametersWithInt:(jint)keySize;

- (LibOrgBouncycastleJceSpecECParameterSpec *)getEcImplicitlyCa;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (void)setParameterWithNSString:(NSString *)parameterName
                          withId:(id)parameter;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration_init(LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration *new_LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration *create_LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderBouncyCastleProviderConfiguration)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BouncyCastleProviderConfiguration_H
