//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ua/DSTU4145NamedCurves.java
//

#ifndef DSTU4145NamedCurves_H
#define DSTU4145NamedCurves_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleCryptoParamsECDomainParameters;

@interface LibOrgBouncycastleAsn1UaDSTU4145NamedCurves : NSObject
@property (readonly, class) IOSObjectArray *params NS_SWIFT_NAME(params);
@property (readonly, class) IOSObjectArray *oids NS_SWIFT_NAME(oids);
@property (readonly, copy, class) NSString *oidBase NS_SWIFT_NAME(oidBase);

+ (IOSObjectArray *)params;

+ (IOSObjectArray *)oids;

+ (NSString *)oidBase;

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleCryptoParamsECDomainParameters *)getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (IOSObjectArray *)getOIDs;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves)

inline IOSObjectArray *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_get_params(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_params;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves, params, IOSObjectArray *)

inline IOSObjectArray *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_get_oids(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_oids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves, oids, IOSObjectArray *)

inline NSString *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_get_oidBase(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_oidBase;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves, oidBase, NSString *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_init(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145NamedCurves *new_LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1UaDSTU4145NamedCurves *create_LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_init(void);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_getOIDs(void);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECDomainParameters *LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1UaDSTU4145NamedCurves)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSTU4145NamedCurves_H
