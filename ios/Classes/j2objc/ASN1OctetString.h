//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1OctetString.java
//

#ifndef ASN1OctetString_H
#define ASN1OctetString_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1OctetStringParser.h"
#include "ASN1Primitive.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1ASN1OctetString : LibOrgBouncycastleAsn1ASN1Primitive < LibOrgBouncycastleAsn1ASN1OctetStringParser > {
 @public
  IOSByteArray *string_;
}

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)string;

+ (LibOrgBouncycastleAsn1ASN1OctetString *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1ASN1OctetString *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)getLoadedObject;

- (IOSByteArray *)getOctets;

- (JavaIoInputStream *)getOctetStream;

- (NSUInteger)hash;

- (id<LibOrgBouncycastleAsn1ASN1OctetStringParser>)parser;

- (NSString *)description;

#pragma mark Package-Private

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toDERObject;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toDLObject;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1ASN1OctetString)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1ASN1OctetString, string_, IOSByteArray *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1OctetString *LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1OctetString *LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1OctetString_initWithByteArray_(LibOrgBouncycastleAsn1ASN1OctetString *self, IOSByteArray *string);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1OctetString)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1OctetString_H
