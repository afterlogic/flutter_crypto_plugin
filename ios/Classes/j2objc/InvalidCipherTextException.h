//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/InvalidCipherTextException.java
//

#ifndef InvalidCipherTextException_H
#define InvalidCipherTextException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CryptoException.h"
#include "J2ObjC_header.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleCryptoInvalidCipherTextException : LibOrgBouncycastleCryptoCryptoException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoInvalidCipherTextException)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoInvalidCipherTextException_init(LibOrgBouncycastleCryptoInvalidCipherTextException *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *new_LibOrgBouncycastleCryptoInvalidCipherTextException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *create_LibOrgBouncycastleCryptoInvalidCipherTextException_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(LibOrgBouncycastleCryptoInvalidCipherTextException *self, NSString *message);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *new_LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *create_LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleCryptoInvalidCipherTextException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *new_LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoInvalidCipherTextException *create_LibOrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoInvalidCipherTextException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // InvalidCipherTextException_H
