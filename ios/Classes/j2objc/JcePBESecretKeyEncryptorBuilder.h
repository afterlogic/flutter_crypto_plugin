//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/jcajce/JcePBESecretKeyEncryptorBuilder.java
//

#ifndef JcePBESecretKeyEncryptorBuilder_H
#define JcePBESecretKeyEncryptorBuilder_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSCharArray;
@class JavaSecurityProvider;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)encAlgorithm;

- (instancetype __nonnull)initWithInt:(jint)encAlgorithm
                              withInt:(jint)s2kCount;

- (instancetype __nonnull)initWithInt:(jint)encAlgorithm
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)s2kDigestCalculator;

- (instancetype __nonnull)initWithInt:(jint)encAlgorithm
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)s2kDigestCalculator
                              withInt:(jint)s2kCount;

- (LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor *)buildWithCharArray:(IOSCharArray *)passPhrase;

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider;

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *)setProviderWithNSString:(NSString *)providerName;

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *)setSecureRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *self, jint encAlgorithm);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_(jint encAlgorithm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_(jint encAlgorithm);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withInt_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *self, jint encAlgorithm, jint s2kCount);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withInt_(jint encAlgorithm, jint s2kCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withInt_(jint encAlgorithm, jint s2kCount);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *self, jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *self, jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder_initWithInt_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(jint encAlgorithm, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyEncryptorBuilder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcePBESecretKeyEncryptorBuilder_H
