//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.java
//

#ifndef SPHINCS256KeyParams_H
#define SPHINCS256KeyParams_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)treeDigest;

+ (LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getTreeDigest;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *treeDigest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *new_LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *treeDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *create_LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *treeDigest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SPHINCS256KeyParams_H
