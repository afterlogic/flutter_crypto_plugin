//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/algorithm/PublicKeyAlgorithm.java
//

#ifndef PublicKeyAlgorithm_H
#define PublicKeyAlgorithm_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum) {
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_RSA_GENERAL = 0,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_RSA_ENCRYPT = 1,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_RSA_SIGN = 2,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_ELGAMAL_ENCRYPT = 3,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_DSA = 4,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_ECDH = 5,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_ECDSA = 6,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_ELGAMAL_GENERAL = 7,
  LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum_DIFFIE_HELLMAN = 8,
};

@interface LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm : JavaLangEnum

@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *RSA_GENERAL NS_SWIFT_NAME(RSA_GENERAL);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *RSA_ENCRYPT NS_SWIFT_NAME(RSA_ENCRYPT);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *RSA_SIGN NS_SWIFT_NAME(RSA_SIGN);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *ELGAMAL_ENCRYPT NS_SWIFT_NAME(ELGAMAL_ENCRYPT);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *DSA NS_SWIFT_NAME(DSA);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *ECDH NS_SWIFT_NAME(ECDH);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *ECDSA NS_SWIFT_NAME(ECDSA);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *ELGAMAL_GENERAL NS_SWIFT_NAME(ELGAMAL_GENERAL);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *DIFFIE_HELLMAN NS_SWIFT_NAME(DIFFIE_HELLMAN);
+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)RSA_GENERAL;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)RSA_ENCRYPT;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)RSA_SIGN;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)ELGAMAL_ENCRYPT;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)DSA;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)ECDH;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)ECDSA;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)ELGAMAL_GENERAL;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm * __nonnull)DIFFIE_HELLMAN;

#pragma mark Public

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *)fromIdWithInt:(jint)id_;

- (jint)getAlgorithmId;

+ (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_values_[];

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_RSA_GENERAL(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, RSA_GENERAL)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_RSA_ENCRYPT(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, RSA_ENCRYPT)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_RSA_SIGN(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, RSA_SIGN)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_ELGAMAL_ENCRYPT(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, ELGAMAL_ENCRYPT)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_DSA(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, DSA)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_ECDH(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, ECDH)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_ECDSA(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, ECDSA)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_ELGAMAL_GENERAL(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, ELGAMAL_GENERAL)

inline LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_get_DIFFIE_HELLMAN(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, DIFFIE_HELLMAN)

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_fromIdWithInt_(jint id_);

FOUNDATION_EXPORT IOSObjectArray *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_values(void);

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PublicKeyAlgorithm_H
