//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/DSTU7564Digest.java
//

#include "Arrays.h"
#include "DSTU7564Digest.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Memoable.h"
#include "Pack.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastleCryptoDigestsDSTU7564Digest () {
 @public
  jint hashSize_;
  jint blockSize_;
  jint columns_;
  jint rounds_;
  IOSLongArray *state_;
  IOSLongArray *tempState1_;
  IOSLongArray *tempState2_;
  jlong inputBlocks_;
  jint bufOff_;
  IOSByteArray *buf_;
}

- (void)copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *)digest OBJC_METHOD_FAMILY_NONE;

- (void)processBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff;

- (void)PWithLongArray:(IOSLongArray *)s;

- (void)QWithLongArray:(IOSLongArray *)s;

+ (jlong)mixColumnWithLong:(jlong)c;

- (void)mixColumnsWithLongArray:(IOSLongArray *)s;

+ (jlong)rotateWithInt:(jint)n
              withLong:(jlong)x;

- (void)shiftRowsWithLongArray:(IOSLongArray *)s;

- (void)subBytesWithLongArray:(IOSLongArray *)s;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, state_, IOSLongArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, tempState1_, IOSLongArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, tempState2_, IOSLongArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, buf_, IOSByteArray *)

inline jint LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_NB_512(void);
#define LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_512 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, NB_512, jint)

inline jint LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_NB_1024(void);
#define LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_1024 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, NB_1024, jint)

inline jint LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_NR_512(void);
#define LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_512 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, NR_512, jint)

inline jint LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_NR_1024(void);
#define LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_1024 14
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, NR_1024, jint)

inline IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_S0(void);
static IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S0;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, S0, IOSByteArray *)

inline IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_S1(void);
static IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, S1, IOSByteArray *)

inline IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_S2(void);
static IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, S2, IOSByteArray *)

inline IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_get_S3(void);
static IOSByteArray *LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, S3, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *input, jint inOff);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_PWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_QWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s);

__attribute__((unused)) static jlong LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnWithLong_(jlong c);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnsWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s);

__attribute__((unused)) static jlong LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(jint n, jlong x);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_shiftRowsWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s);

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_subBytesWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleCryptoDigestsDSTU7564Digest)

@implementation LibOrgBouncycastleCryptoDigestsDSTU7564Digest

- (instancetype)initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *)digest {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(self, digest);
  return self;
}

- (void)copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *)digest {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(self, digest);
}

- (instancetype)initWithInt:(jint)hashSizeBits {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(self, hashSizeBits);
  return self;
}

- (NSString *)getAlgorithmName {
  return @"DSTU7564";
}

- (jint)getDigestSize {
  return hashSize_;
}

- (jint)getByteLength {
  return blockSize_;
}

- (void)updateWithByte:(jbyte)inArg {
  *IOSByteArray_GetRef(nil_chk(buf_), bufOff_++) = inArg;
  if (bufOff_ == blockSize_) {
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, buf_, 0);
    bufOff_ = 0;
    ++inputBlocks_;
  }
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  while (bufOff_ != 0 && len > 0) {
    [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff++)];
    --len;
  }
  if (len > 0) {
    while (len >= blockSize_) {
      LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, inArg, inOff);
      inOff += blockSize_;
      len -= blockSize_;
      ++inputBlocks_;
    }
    while (len > 0) {
      [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff++)];
      --len;
    }
  }
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  {
    jint inputBytes = bufOff_;
    *IOSByteArray_GetRef(nil_chk(buf_), bufOff_++) = (jbyte) (jint) 0x80;
    jint lenPos = blockSize_ - 12;
    if (bufOff_ > lenPos) {
      while (bufOff_ < blockSize_) {
        *IOSByteArray_GetRef(buf_, bufOff_++) = 0;
      }
      bufOff_ = 0;
      LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, buf_, 0);
    }
    while (bufOff_ < lenPos) {
      *IOSByteArray_GetRef(nil_chk(buf_), bufOff_++) = 0;
    }
    jlong c = JreLShift64(((inputBlocks_ & (jlong) 0xFFFFFFFFLL) * blockSize_ + inputBytes), 3);
    LibOrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) c, buf_, bufOff_);
    bufOff_ += 4;
    JreURShiftAssignLong(&c, 32);
    c += JreLShift64(((JreURShift64(inputBlocks_, 32)) * blockSize_), 3);
    LibOrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(c, buf_, bufOff_);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, buf_, 0);
  }
  {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(state_, 0, tempState1_, 0, columns_);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_PWithLongArray_(self, tempState1_);
    for (jint col = 0; col < columns_; ++col) {
      *IOSLongArray_GetRef(nil_chk(state_), col) ^= IOSLongArray_Get(nil_chk(tempState1_), col);
    }
  }
  jint neededColumns = JreURShift32(hashSize_, 3);
  for (jint col = columns_ - neededColumns; col < columns_; ++col) {
    LibOrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(nil_chk(state_), col), outArg, outOff);
    outOff += 8;
  }
  [self reset];
  return hashSize_;
}

- (void)reset {
  LibOrgBouncycastleUtilArrays_fillWithLongArray_withLong_(state_, 0LL);
  *IOSLongArray_GetRef(nil_chk(state_), 0) = blockSize_;
  inputBlocks_ = 0;
  bufOff_ = 0;
}

- (void)processBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(self, input, inOff);
}

- (void)PWithLongArray:(IOSLongArray *)s {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_PWithLongArray_(self, s);
}

- (void)QWithLongArray:(IOSLongArray *)s {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_QWithLongArray_(self, s);
}

+ (jlong)mixColumnWithLong:(jlong)c {
  return LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnWithLong_(c);
}

- (void)mixColumnsWithLongArray:(IOSLongArray *)s {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnsWithLongArray_(self, s);
}

+ (jlong)rotateWithInt:(jint)n
              withLong:(jlong)x {
  return LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(n, x);
}

- (void)shiftRowsWithLongArray:(IOSLongArray *)s {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_shiftRowsWithLongArray_(self, s);
}

- (void)subBytesWithLongArray:(IOSLongArray *)s {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_subBytesWithLongArray_(self, s);
}

- (id<LibOrgBouncycastleUtilMemoable>)copy__ {
  return new_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(self);
}

- (void)resetWithLibOrgBouncycastleUtilMemoable:(id<LibOrgBouncycastleUtilMemoable>)other {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest *d = (LibOrgBouncycastleCryptoDigestsDSTU7564Digest *) cast_chk(other, [LibOrgBouncycastleCryptoDigestsDSTU7564Digest class]);
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(self, d);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 10, -1, -1, -1, -1 },
    { NULL, "J", 0xa, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 10, -1, -1, -1, -1 },
    { NULL, "J", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 10, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleUtilMemoable;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:);
  methods[1].selector = @selector(copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(getAlgorithmName);
  methods[4].selector = @selector(getDigestSize);
  methods[5].selector = @selector(getByteLength);
  methods[6].selector = @selector(updateWithByte:);
  methods[7].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(doFinalWithByteArray:withInt:);
  methods[9].selector = @selector(reset);
  methods[10].selector = @selector(processBlockWithByteArray:withInt:);
  methods[11].selector = @selector(PWithLongArray:);
  methods[12].selector = @selector(QWithLongArray:);
  methods[13].selector = @selector(mixColumnWithLong:);
  methods[14].selector = @selector(mixColumnsWithLongArray:);
  methods[15].selector = @selector(rotateWithInt:withLong:);
  methods[16].selector = @selector(shiftRowsWithLongArray:);
  methods[17].selector = @selector(subBytesWithLongArray:);
  methods[18].selector = @selector(copy__);
  methods[19].selector = @selector(resetWithLibOrgBouncycastleUtilMemoable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NB_512", "I", .constantValue.asInt = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_512, 0x1a, -1, -1, -1, -1 },
    { "NB_1024", "I", .constantValue.asInt = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_1024, 0x1a, -1, -1, -1, -1 },
    { "NR_512", "I", .constantValue.asInt = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_512, 0x1a, -1, -1, -1, -1 },
    { "NR_1024", "I", .constantValue.asInt = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_1024, 0x1a, -1, -1, -1, -1 },
    { "hashSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "blockSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "columns_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rounds_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "state_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempState1_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempState2_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "inputBlocks_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "buf_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "S0", "[B", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "S1", "[B", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "S2", "[B", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "S3", "[B", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigestsDSTU7564Digest;", "copyIn", "I", "update", "B", "[BII", "doFinal", "[BI", "processBlock", "P", "[J", "Q", "mixColumn", "J", "mixColumns", "rotate", "IJ", "shiftRows", "subBytes", "copy", "reset", "LLibOrgBouncycastleUtilMemoable;", &LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S0, &LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S1, &LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S2, &LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S3 };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoDigestsDSTU7564Digest = { "DSTU7564Digest", "lib.org.bouncycastle.crypto.digests", ptrTable, methods, fields, 7, 0x1, 20, 18, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoDigestsDSTU7564Digest;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleCryptoDigestsDSTU7564Digest class]) {
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S0 = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xa8, (jbyte) (jint) 0x43, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x06, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x75, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x59, (jbyte) (jint) 0x71, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x87, (jbyte) (jint) 0x95, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x09, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x97, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x45, (jbyte) (jint) 0x39, (jbyte) (jint) 0x3e, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x15, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x93, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x92, (jbyte) (jint) 0x72, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x61, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x63, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xee, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x19, (jbyte) (jint) 0xd5, (jbyte) (jint) 0xad, (jbyte) (jint) 0x58, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa1, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x83, (jbyte) (jint) 0x37, (jbyte) (jint) 0x42, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x32, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xab, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x04, (jbyte) (jint) 0x27, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x96, (jbyte) (jint) 0x16, (jbyte) (jint) 0x23, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x65, (jbyte) (jint) 0x66, (jbyte) (jint) 0x0f, (jbyte) (jint) 0xbc, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x47, (jbyte) (jint) 0x41, (jbyte) (jint) 0x34, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x88, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x53, (jbyte) (jint) 0x86, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x38, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x22, (jbyte) (jint) 0x33, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x36, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x77, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x14, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x08, (jbyte) (jint) 0x55, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x60, (jbyte) (jint) 0x5c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x18, (jbyte) (jint) 0x46, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x21, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x89, (jbyte) (jint) 0xff, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x84, (jbyte) (jint) 0x69, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x9d, (jbyte) (jint) 0xd7, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x70, (jbyte) (jint) 0x67, (jbyte) (jint) 0x40, (jbyte) (jint) 0xb5, (jbyte) (jint) 0xde, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x30, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x78, (jbyte) (jint) 0x11, (jbyte) (jint) 0x01, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x00, (jbyte) (jint) 0x68, (jbyte) (jint) 0x98, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x02, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x74, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x0b, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x76, (jbyte) (jint) 0xb3, (jbyte) (jint) 0xbe, (jbyte) (jint) 0xce, (jbyte) (jint) 0xbd, (jbyte) (jint) 0xae, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x31, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xec, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x99, (jbyte) (jint) 0x94, (jbyte) (jint) 0xaa, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2f, (jbyte) (jint) 0xef, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x35, (jbyte) (jint) 0x03, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x05, (jbyte) (jint) 0xc1, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x90, (jbyte) (jint) 0x20, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xea, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x07, (jbyte) (jint) 0x57, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xac, (jbyte) (jint) 0x52, (jbyte) (jint) 0x64, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd0, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x13, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x12, (jbyte) (jint) 0x29, (jbyte) (jint) 0x51, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xcf, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x73, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x81, (jbyte) (jint) 0x54, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xed, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x44, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x85, (jbyte) (jint) 0x25, (jbyte) (jint) 0xe6, (jbyte) (jint) 0xca, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x56, (jbyte) (jint) 0x80 } count:256];
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S1 = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0xce, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xeb, (jbyte) (jint) 0x92, (jbyte) (jint) 0xea, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x13, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd6, (jbyte) (jint) 0xb2, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x17, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x42, (jbyte) (jint) 0x15, (jbyte) (jint) 0x56, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x65, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x88, (jbyte) (jint) 0x43, (jbyte) (jint) 0xc5, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x36, (jbyte) (jint) 0xba, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x57, (jbyte) (jint) 0x67, (jbyte) (jint) 0x8d, (jbyte) (jint) 0x31, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x64, (jbyte) (jint) 0x58, (jbyte) (jint) 0x9e, (jbyte) (jint) 0xf4, (jbyte) (jint) 0x22, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x75, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x02, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x26, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x08, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x44, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x9f, (jbyte) (jint) 0x14, (jbyte) (jint) 0xc8, (jbyte) (jint) 0xae, (jbyte) (jint) 0x54, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x69, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x33, (jbyte) (jint) 0xab, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x68, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x16, (jbyte) (jint) 0x95, (jbyte) (jint) 0x91, (jbyte) (jint) 0xee, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x63, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x19, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x81, (jbyte) (jint) 0x49, (jbyte) (jint) 0x7b, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x60, (jbyte) (jint) 0xca, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x48, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x96, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x41, (jbyte) (jint) 0x12, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x79, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x89, (jbyte) (jint) 0x8c, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x20, (jbyte) (jint) 0x30, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xb7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x4a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x62, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x06, (jbyte) (jint) 0xa4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0x83, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xda, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x00, (jbyte) (jint) 0x7e, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x55, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x11, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x51, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x93, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x47, (jbyte) (jint) 0x09, (jbyte) (jint) 0x86, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x07, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x98, (jbyte) (jint) 0x18, (jbyte) (jint) 0x32, (jbyte) (jint) 0x71, (jbyte) (jint) 0x4b, (jbyte) (jint) 0xef, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x70, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x40, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc3, (jbyte) (jint) 0xa9, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x78, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x46, (jbyte) (jint) 0x80, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x38, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x23, (jbyte) (jint) 0x76, (jbyte) (jint) 0x1d, (jbyte) (jint) 0x25, (jbyte) (jint) 0x24, (jbyte) (jint) 0x05, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x94, (jbyte) (jint) 0x28, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x84, (jbyte) (jint) 0xe8, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x85, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x52, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x82, (jbyte) (jint) 0x50, (jbyte) (jint) 0x7a, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x74, (jbyte) (jint) 0x53, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x61, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x39, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x99, (jbyte) (jint) 0xac, (jbyte) (jint) 0xad, (jbyte) (jint) 0x72, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x87, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xec, (jbyte) (jint) 0x04, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x03, (jbyte) (jint) 0x34, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x59, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5a, (jbyte) (jint) 0xed, (jbyte) (jint) 0xa7, (jbyte) (jint) 0x66, (jbyte) (jint) 0x21, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x8a, (jbyte) (jint) 0x27, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xc0, (jbyte) (jint) 0x29, (jbyte) (jint) 0xd7 } count:256];
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S2 = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x93, (jbyte) (jint) 0xd9, (jbyte) (jint) 0x9a, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x98, (jbyte) (jint) 0x22, (jbyte) (jint) 0x45, (jbyte) (jint) 0xfc, (jbyte) (jint) 0xba, (jbyte) (jint) 0x6a, (jbyte) (jint) 0xdf, (jbyte) (jint) 0x02, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xdc, (jbyte) (jint) 0x51, (jbyte) (jint) 0x59, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x17, (jbyte) (jint) 0x2b, (jbyte) (jint) 0xc2, (jbyte) (jint) 0x94, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xbb, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x62, (jbyte) (jint) 0xe4, (jbyte) (jint) 0x71, (jbyte) (jint) 0xd4, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x70, (jbyte) (jint) 0x16, (jbyte) (jint) 0xe1, (jbyte) (jint) 0x49, (jbyte) (jint) 0x3c, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xd8, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x9b, (jbyte) (jint) 0xad, (jbyte) (jint) 0x85, (jbyte) (jint) 0x53, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x2d, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x72, (jbyte) (jint) 0xa6, (jbyte) (jint) 0x2c, (jbyte) (jint) 0xc4, (jbyte) (jint) 0xe3, (jbyte) (jint) 0x76, (jbyte) (jint) 0x78, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xb4, (jbyte) (jint) 0x09, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x41, (jbyte) (jint) 0x4c, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x90, (jbyte) (jint) 0x25, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x03, (jbyte) (jint) 0x11, (jbyte) (jint) 0x00, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x2e, (jbyte) (jint) 0x92, (jbyte) (jint) 0xef, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x12, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x7d, (jbyte) (jint) 0xcb, (jbyte) (jint) 0x35, (jbyte) (jint) 0x10, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x4f, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x4d, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x55, (jbyte) (jint) 0xc6, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x18, (jbyte) (jint) 0x97, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x36, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x48, (jbyte) (jint) 0x56, (jbyte) (jint) 0x81, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x77, (jbyte) (jint) 0xcc, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xe2, (jbyte) (jint) 0xac, (jbyte) (jint) 0xb8, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x15, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x7c, (jbyte) (jint) 0xda, (jbyte) (jint) 0x38, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x05, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x14, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x66, (jbyte) (jint) 0xfd, (jbyte) (jint) 0xb1, (jbyte) (jint) 0xe5, (jbyte) (jint) 0x60, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x5e, (jbyte) (jint) 0x33, (jbyte) (jint) 0x87, (jbyte) (jint) 0xc9, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x5d, (jbyte) (jint) 0x6d, (jbyte) (jint) 0x3f, (jbyte) (jint) 0x88, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xc7, (jbyte) (jint) 0xf7, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xe9, (jbyte) (jint) 0xec, (jbyte) (jint) 0xed, (jbyte) (jint) 0x80, (jbyte) (jint) 0x29, (jbyte) (jint) 0x27, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x99, (jbyte) (jint) 0xa8, (jbyte) (jint) 0x50, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x37, (jbyte) (jint) 0x24, (jbyte) (jint) 0x28, (jbyte) (jint) 0x30, (jbyte) (jint) 0x95, (jbyte) (jint) 0xd2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x40, (jbyte) (jint) 0x83, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x69, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x07, (jbyte) (jint) 0x1c, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x20, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xce, (jbyte) (jint) 0x8e, (jbyte) (jint) 0xab, (jbyte) (jint) 0xee, (jbyte) (jint) 0x31, (jbyte) (jint) 0xa2, (jbyte) (jint) 0x73, (jbyte) (jint) 0xf9, (jbyte) (jint) 0xca, (jbyte) (jint) 0x3a, (jbyte) (jint) 0x1a, (jbyte) (jint) 0xfb, (jbyte) (jint) 0x0d, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfa, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x6f, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x96, (jbyte) (jint) 0xdd, (jbyte) (jint) 0x43, (jbyte) (jint) 0x52, (jbyte) (jint) 0xb6, (jbyte) (jint) 0x08, (jbyte) (jint) 0xf3, (jbyte) (jint) 0xae, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x19, (jbyte) (jint) 0x89, (jbyte) (jint) 0x32, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb0, (jbyte) (jint) 0xea, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x64, (jbyte) (jint) 0x84, (jbyte) (jint) 0x82, (jbyte) (jint) 0x6b, (jbyte) (jint) 0xf5, (jbyte) (jint) 0x79, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x01, (jbyte) (jint) 0x5f, (jbyte) (jint) 0x75, (jbyte) (jint) 0x63, (jbyte) (jint) 0x1b, (jbyte) (jint) 0x23, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x68, (jbyte) (jint) 0x2a, (jbyte) (jint) 0x65, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x91, (jbyte) (jint) 0xf6, (jbyte) (jint) 0xff, (jbyte) (jint) 0x13, (jbyte) (jint) 0x58, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x47, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x7f, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xe7, (jbyte) (jint) 0x61, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x06, (jbyte) (jint) 0x46, (jbyte) (jint) 0x44, (jbyte) (jint) 0x42, (jbyte) (jint) 0x04, (jbyte) (jint) 0xa0, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x39, (jbyte) (jint) 0x86, (jbyte) (jint) 0x54, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x34, (jbyte) (jint) 0x21, (jbyte) (jint) 0x8b, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x74, (jbyte) (jint) 0x67 } count:256];
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S3 = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x68, (jbyte) (jint) 0x8d, (jbyte) (jint) 0xca, (jbyte) (jint) 0x4d, (jbyte) (jint) 0x73, (jbyte) (jint) 0x4b, (jbyte) (jint) 0x4e, (jbyte) (jint) 0x2a, (jbyte) (jint) 0xd4, (jbyte) (jint) 0x52, (jbyte) (jint) 0x26, (jbyte) (jint) 0xb3, (jbyte) (jint) 0x54, (jbyte) (jint) 0x1e, (jbyte) (jint) 0x19, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x22, (jbyte) (jint) 0x03, (jbyte) (jint) 0x46, (jbyte) (jint) 0x3d, (jbyte) (jint) 0x2d, (jbyte) (jint) 0x4a, (jbyte) (jint) 0x53, (jbyte) (jint) 0x83, (jbyte) (jint) 0x13, (jbyte) (jint) 0x8a, (jbyte) (jint) 0xb7, (jbyte) (jint) 0xd5, (jbyte) (jint) 0x25, (jbyte) (jint) 0x79, (jbyte) (jint) 0xf5, (jbyte) (jint) 0xbd, (jbyte) (jint) 0x58, (jbyte) (jint) 0x2f, (jbyte) (jint) 0x0d, (jbyte) (jint) 0x02, (jbyte) (jint) 0xed, (jbyte) (jint) 0x51, (jbyte) (jint) 0x9e, (jbyte) (jint) 0x11, (jbyte) (jint) 0xf2, (jbyte) (jint) 0x3e, (jbyte) (jint) 0x55, (jbyte) (jint) 0x5e, (jbyte) (jint) 0xd1, (jbyte) (jint) 0x16, (jbyte) (jint) 0x3c, (jbyte) (jint) 0x66, (jbyte) (jint) 0x70, (jbyte) (jint) 0x5d, (jbyte) (jint) 0xf3, (jbyte) (jint) 0x45, (jbyte) (jint) 0x40, (jbyte) (jint) 0xcc, (jbyte) (jint) 0xe8, (jbyte) (jint) 0x94, (jbyte) (jint) 0x56, (jbyte) (jint) 0x08, (jbyte) (jint) 0xce, (jbyte) (jint) 0x1a, (jbyte) (jint) 0x3a, (jbyte) (jint) 0xd2, (jbyte) (jint) 0xe1, (jbyte) (jint) 0xdf, (jbyte) (jint) 0xb5, (jbyte) (jint) 0x38, (jbyte) (jint) 0x6e, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xe5, (jbyte) (jint) 0xf4, (jbyte) (jint) 0xf9, (jbyte) (jint) 0x86, (jbyte) (jint) 0xe9, (jbyte) (jint) 0x4f, (jbyte) (jint) 0xd6, (jbyte) (jint) 0x85, (jbyte) (jint) 0x23, (jbyte) (jint) 0xcf, (jbyte) (jint) 0x32, (jbyte) (jint) 0x99, (jbyte) (jint) 0x31, (jbyte) (jint) 0x14, (jbyte) (jint) 0xae, (jbyte) (jint) 0xee, (jbyte) (jint) 0xc8, (jbyte) (jint) 0x48, (jbyte) (jint) 0xd3, (jbyte) (jint) 0x30, (jbyte) (jint) 0xa1, (jbyte) (jint) 0x92, (jbyte) (jint) 0x41, (jbyte) (jint) 0xb1, (jbyte) (jint) 0x18, (jbyte) (jint) 0xc4, (jbyte) (jint) 0x2c, (jbyte) (jint) 0x71, (jbyte) (jint) 0x72, (jbyte) (jint) 0x44, (jbyte) (jint) 0x15, (jbyte) (jint) 0xfd, (jbyte) (jint) 0x37, (jbyte) (jint) 0xbe, (jbyte) (jint) 0x5f, (jbyte) (jint) 0xaa, (jbyte) (jint) 0x9b, (jbyte) (jint) 0x88, (jbyte) (jint) 0xd8, (jbyte) (jint) 0xab, (jbyte) (jint) 0x89, (jbyte) (jint) 0x9c, (jbyte) (jint) 0xfa, (jbyte) (jint) 0x60, (jbyte) (jint) 0xea, (jbyte) (jint) 0xbc, (jbyte) (jint) 0x62, (jbyte) (jint) 0x0c, (jbyte) (jint) 0x24, (jbyte) (jint) 0xa6, (jbyte) (jint) 0xa8, (jbyte) (jint) 0xec, (jbyte) (jint) 0x67, (jbyte) (jint) 0x20, (jbyte) (jint) 0xdb, (jbyte) (jint) 0x7c, (jbyte) (jint) 0x28, (jbyte) (jint) 0xdd, (jbyte) (jint) 0xac, (jbyte) (jint) 0x5b, (jbyte) (jint) 0x34, (jbyte) (jint) 0x7e, (jbyte) (jint) 0x10, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x7b, (jbyte) (jint) 0x8f, (jbyte) (jint) 0x63, (jbyte) (jint) 0xa0, (jbyte) (jint) 0x05, (jbyte) (jint) 0x9a, (jbyte) (jint) 0x43, (jbyte) (jint) 0x77, (jbyte) (jint) 0x21, (jbyte) (jint) 0xbf, (jbyte) (jint) 0x27, (jbyte) (jint) 0x09, (jbyte) (jint) 0xc3, (jbyte) (jint) 0x9f, (jbyte) (jint) 0xb6, (jbyte) (jint) 0xd7, (jbyte) (jint) 0x29, (jbyte) (jint) 0xc2, (jbyte) (jint) 0xeb, (jbyte) (jint) 0xc0, (jbyte) (jint) 0xa4, (jbyte) (jint) 0x8b, (jbyte) (jint) 0x8c, (jbyte) (jint) 0x1d, (jbyte) (jint) 0xfb, (jbyte) (jint) 0xff, (jbyte) (jint) 0xc1, (jbyte) (jint) 0xb2, (jbyte) (jint) 0x97, (jbyte) (jint) 0x2e, (jbyte) (jint) 0xf8, (jbyte) (jint) 0x65, (jbyte) (jint) 0xf6, (jbyte) (jint) 0x75, (jbyte) (jint) 0x07, (jbyte) (jint) 0x04, (jbyte) (jint) 0x49, (jbyte) (jint) 0x33, (jbyte) (jint) 0xe4, (jbyte) (jint) 0xd9, (jbyte) (jint) 0xb9, (jbyte) (jint) 0xd0, (jbyte) (jint) 0x42, (jbyte) (jint) 0xc7, (jbyte) (jint) 0x6c, (jbyte) (jint) 0x90, (jbyte) (jint) 0x00, (jbyte) (jint) 0x8e, (jbyte) (jint) 0x6f, (jbyte) (jint) 0x50, (jbyte) (jint) 0x01, (jbyte) (jint) 0xc5, (jbyte) (jint) 0xda, (jbyte) (jint) 0x47, (jbyte) (jint) 0x3f, (jbyte) (jint) 0xcd, (jbyte) (jint) 0x69, (jbyte) (jint) 0xa2, (jbyte) (jint) 0xe2, (jbyte) (jint) 0x7a, (jbyte) (jint) 0xa7, (jbyte) (jint) 0xc6, (jbyte) (jint) 0x93, (jbyte) (jint) 0x0f, (jbyte) (jint) 0x0a, (jbyte) (jint) 0x06, (jbyte) (jint) 0xe6, (jbyte) (jint) 0x2b, (jbyte) (jint) 0x96, (jbyte) (jint) 0xa3, (jbyte) (jint) 0x1c, (jbyte) (jint) 0xaf, (jbyte) (jint) 0x6a, (jbyte) (jint) 0x12, (jbyte) (jint) 0x84, (jbyte) (jint) 0x39, (jbyte) (jint) 0xe7, (jbyte) (jint) 0xb0, (jbyte) (jint) 0x82, (jbyte) (jint) 0xf7, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x9d, (jbyte) (jint) 0x87, (jbyte) (jint) 0x5c, (jbyte) (jint) 0x81, (jbyte) (jint) 0x35, (jbyte) (jint) 0xde, (jbyte) (jint) 0xb4, (jbyte) (jint) 0xa5, (jbyte) (jint) 0xfc, (jbyte) (jint) 0x80, (jbyte) (jint) 0xef, (jbyte) (jint) 0xcb, (jbyte) (jint) 0xbb, (jbyte) (jint) 0x6b, (jbyte) (jint) 0x76, (jbyte) (jint) 0xba, (jbyte) (jint) 0x5a, (jbyte) (jint) 0x7d, (jbyte) (jint) 0x78, (jbyte) (jint) 0x0b, (jbyte) (jint) 0x95, (jbyte) (jint) 0xe3, (jbyte) (jint) 0xad, (jbyte) (jint) 0x74, (jbyte) (jint) 0x98, (jbyte) (jint) 0x3b, (jbyte) (jint) 0x36, (jbyte) (jint) 0x64, (jbyte) (jint) 0x6d, (jbyte) (jint) 0xdc, (jbyte) (jint) 0xf0, (jbyte) (jint) 0x59, (jbyte) (jint) 0xa9, (jbyte) (jint) 0x4c, (jbyte) (jint) 0x17, (jbyte) (jint) 0x7f, (jbyte) (jint) 0x91, (jbyte) (jint) 0xb8, (jbyte) (jint) 0xc9, (jbyte) (jint) 0x57, (jbyte) (jint) 0x1b, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x61 } count:256];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleCryptoDigestsDSTU7564Digest)
  }
}

@end

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest) {
  NSObject_init(self);
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(self, digest);
}

LibOrgBouncycastleCryptoDigestsDSTU7564Digest *new_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_, digest)
}

LibOrgBouncycastleCryptoDigestsDSTU7564Digest *create_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_, digest)
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_copyInWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest) {
  self->hashSize_ = ((LibOrgBouncycastleCryptoDigestsDSTU7564Digest *) nil_chk(digest))->hashSize_;
  self->blockSize_ = digest->blockSize_;
  self->rounds_ = digest->rounds_;
  if (self->columns_ > 0 && self->columns_ == digest->columns_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(digest->state_, 0, self->state_, 0, self->columns_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(digest->buf_, 0, self->buf_, 0, self->blockSize_);
  }
  else {
    self->columns_ = digest->columns_;
    self->state_ = LibOrgBouncycastleUtilArrays_cloneWithLongArray_(digest->state_);
    self->tempState1_ = [IOSLongArray newArrayWithLength:self->columns_];
    self->tempState2_ = [IOSLongArray newArrayWithLength:self->columns_];
    self->buf_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(digest->buf_);
  }
  self->inputBlocks_ = digest->inputBlocks_;
  self->bufOff_ = digest->bufOff_;
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, jint hashSizeBits) {
  NSObject_init(self);
  if (hashSizeBits == 256 || hashSizeBits == 384 || hashSizeBits == 512) {
    self->hashSize_ = JreURShift32(hashSizeBits, 3);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Hash size is not recommended. Use 256/384/512 instead");
  }
  if (hashSizeBits > 256) {
    self->columns_ = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_1024;
    self->rounds_ = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_1024;
  }
  else {
    self->columns_ = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_512;
    self->rounds_ = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NR_512;
  }
  self->blockSize_ = JreLShift32(self->columns_, 3);
  self->state_ = [IOSLongArray newArrayWithLength:self->columns_];
  *IOSLongArray_GetRef(self->state_, 0) = self->blockSize_;
  self->tempState1_ = [IOSLongArray newArrayWithLength:self->columns_];
  self->tempState2_ = [IOSLongArray newArrayWithLength:self->columns_];
  self->buf_ = [IOSByteArray newArrayWithLength:self->blockSize_];
}

LibOrgBouncycastleCryptoDigestsDSTU7564Digest *new_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, initWithInt_, hashSizeBits)
}

LibOrgBouncycastleCryptoDigestsDSTU7564Digest *create_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoDigestsDSTU7564Digest, initWithInt_, hashSizeBits)
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_processBlockWithByteArray_withInt_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSByteArray *input, jint inOff) {
  jint pos = inOff;
  for (jint col = 0; col < self->columns_; ++col) {
    jlong word = LibOrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(input, pos);
    pos += 8;
    *IOSLongArray_GetRef(nil_chk(self->tempState1_), col) = IOSLongArray_Get(nil_chk(self->state_), col) ^ word;
    *IOSLongArray_GetRef(nil_chk(self->tempState2_), col) = word;
  }
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_PWithLongArray_(self, self->tempState1_);
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_QWithLongArray_(self, self->tempState2_);
  for (jint col = 0; col < self->columns_; ++col) {
    *IOSLongArray_GetRef(nil_chk(self->state_), col) ^= IOSLongArray_Get(nil_chk(self->tempState1_), col) ^ IOSLongArray_Get(nil_chk(self->tempState2_), col);
  }
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_PWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s) {
  for (jint round = 0; round < self->rounds_; ++round) {
    jlong rc = round;
    for (jint col = 0; col < self->columns_; ++col) {
      *IOSLongArray_GetRef(nil_chk(s), col) ^= rc;
      rc += (jlong) 0x10LL;
    }
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_shiftRowsWithLongArray_(self, s);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_subBytesWithLongArray_(self, s);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnsWithLongArray_(self, s);
  }
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_QWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s) {
  for (jint round = 0; round < self->rounds_; ++round) {
    jlong rc = (JreLShift64((jlong) ((JreLShift32((self->columns_ - 1), 4)) ^ round), 56)) | (jlong) 0x00F0F0F0F0F0F0F3LL;
    for (jint col = 0; col < self->columns_; ++col) {
      *IOSLongArray_GetRef(nil_chk(s), col) += rc;
      rc -= (jlong) 0x1000000000000000LL;
    }
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_shiftRowsWithLongArray_(self, s);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_subBytesWithLongArray_(self, s);
    LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnsWithLongArray_(self, s);
  }
}

jlong LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnWithLong_(jlong c) {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initialize();
  jlong x1 = (JreLShift64((c & (jlong) 0x7F7F7F7F7F7F7F7FLL), 1)) ^ ((JreURShift64((c & (jlong) 0x8080808080808080LL), 7)) * (jlong) 0x1DLL);
  jlong u;
  jlong v;
  u = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(8, c) ^ c;
  u ^= LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(16, u);
  u ^= LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(48, c);
  v = u ^ c ^ x1;
  v = (JreLShift64((v & (jlong) 0x3F3F3F3F3F3F3F3FLL), 2)) ^ ((JreURShift64((v & (jlong) 0x8080808080808080LL), 6)) * (jlong) 0x1DLL) ^ ((JreURShift64((v & (jlong) 0x4040404040404040LL), 6)) * (jlong) 0x1DLL);
  return u ^ LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(32, v) ^ LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(40, x1) ^ LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(48, x1);
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnsWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s) {
  for (jint col = 0; col < self->columns_; ++col) {
    *IOSLongArray_GetRef(nil_chk(s), col) = LibOrgBouncycastleCryptoDigestsDSTU7564Digest_mixColumnWithLong_(IOSLongArray_Get(s, col));
  }
}

jlong LibOrgBouncycastleCryptoDigestsDSTU7564Digest_rotateWithInt_withLong_(jint n, jlong x) {
  LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initialize();
  return (JreURShift64(x, n)) | (JreLShift64(x, -n));
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_shiftRowsWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s) {
  switch (self->columns_) {
    case LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_512:
    {
      jlong c0 = IOSLongArray_Get(nil_chk(s), 0);
      jlong c1 = IOSLongArray_Get(s, 1);
      jlong c2 = IOSLongArray_Get(s, 2);
      jlong c3 = IOSLongArray_Get(s, 3);
      jlong c4 = IOSLongArray_Get(s, 4);
      jlong c5 = IOSLongArray_Get(s, 5);
      jlong c6 = IOSLongArray_Get(s, 6);
      jlong c7 = IOSLongArray_Get(s, 7);
      jlong d;
      d = (c0 ^ c4) & (jlong) 0xFFFFFFFF00000000LL;
      c0 ^= d;
      c4 ^= d;
      d = (c1 ^ c5) & (jlong) 0x00FFFFFFFF000000LL;
      c1 ^= d;
      c5 ^= d;
      d = (c2 ^ c6) & (jlong) 0x0000FFFFFFFF0000LL;
      c2 ^= d;
      c6 ^= d;
      d = (c3 ^ c7) & (jlong) 0x000000FFFFFFFF00LL;
      c3 ^= d;
      c7 ^= d;
      d = (c0 ^ c2) & (jlong) 0xFFFF0000FFFF0000LL;
      c0 ^= d;
      c2 ^= d;
      d = (c1 ^ c3) & (jlong) 0x00FFFF0000FFFF00LL;
      c1 ^= d;
      c3 ^= d;
      d = (c4 ^ c6) & (jlong) 0xFFFF0000FFFF0000LL;
      c4 ^= d;
      c6 ^= d;
      d = (c5 ^ c7) & (jlong) 0x00FFFF0000FFFF00LL;
      c5 ^= d;
      c7 ^= d;
      d = (c0 ^ c1) & (jlong) 0xFF00FF00FF00FF00LL;
      c0 ^= d;
      c1 ^= d;
      d = (c2 ^ c3) & (jlong) 0xFF00FF00FF00FF00LL;
      c2 ^= d;
      c3 ^= d;
      d = (c4 ^ c5) & (jlong) 0xFF00FF00FF00FF00LL;
      c4 ^= d;
      c5 ^= d;
      d = (c6 ^ c7) & (jlong) 0xFF00FF00FF00FF00LL;
      c6 ^= d;
      c7 ^= d;
      *IOSLongArray_GetRef(s, 0) = c0;
      *IOSLongArray_GetRef(s, 1) = c1;
      *IOSLongArray_GetRef(s, 2) = c2;
      *IOSLongArray_GetRef(s, 3) = c3;
      *IOSLongArray_GetRef(s, 4) = c4;
      *IOSLongArray_GetRef(s, 5) = c5;
      *IOSLongArray_GetRef(s, 6) = c6;
      *IOSLongArray_GetRef(s, 7) = c7;
      break;
    }
    case LibOrgBouncycastleCryptoDigestsDSTU7564Digest_NB_1024:
    {
      jlong c00 = IOSLongArray_Get(nil_chk(s), 0);
      jlong c01 = IOSLongArray_Get(s, 1);
      jlong c02 = IOSLongArray_Get(s, 2);
      jlong c03 = IOSLongArray_Get(s, 3);
      jlong c04 = IOSLongArray_Get(s, 4);
      jlong c05 = IOSLongArray_Get(s, 5);
      jlong c06 = IOSLongArray_Get(s, 6);
      jlong c07 = IOSLongArray_Get(s, 7);
      jlong c08 = IOSLongArray_Get(s, 8);
      jlong c09 = IOSLongArray_Get(s, 9);
      jlong c10 = IOSLongArray_Get(s, 10);
      jlong c11 = IOSLongArray_Get(s, 11);
      jlong c12 = IOSLongArray_Get(s, 12);
      jlong c13 = IOSLongArray_Get(s, 13);
      jlong c14 = IOSLongArray_Get(s, 14);
      jlong c15 = IOSLongArray_Get(s, 15);
      jlong d;
      d = (c00 ^ c08) & (jlong) 0xFF00000000000000LL;
      c00 ^= d;
      c08 ^= d;
      d = (c01 ^ c09) & (jlong) 0xFF00000000000000LL;
      c01 ^= d;
      c09 ^= d;
      d = (c02 ^ c10) & (jlong) 0xFFFF000000000000LL;
      c02 ^= d;
      c10 ^= d;
      d = (c03 ^ c11) & (jlong) 0xFFFFFF0000000000LL;
      c03 ^= d;
      c11 ^= d;
      d = (c04 ^ c12) & (jlong) 0xFFFFFFFF00000000LL;
      c04 ^= d;
      c12 ^= d;
      d = (c05 ^ c13) & (jlong) 0x00FFFFFFFF000000LL;
      c05 ^= d;
      c13 ^= d;
      d = (c06 ^ c14) & (jlong) 0x00FFFFFFFFFF0000LL;
      c06 ^= d;
      c14 ^= d;
      d = (c07 ^ c15) & (jlong) 0x00FFFFFFFFFFFF00LL;
      c07 ^= d;
      c15 ^= d;
      d = (c00 ^ c04) & (jlong) 0x00FFFFFF00000000LL;
      c00 ^= d;
      c04 ^= d;
      d = (c01 ^ c05) & (jlong) 0xFFFFFFFFFF000000LL;
      c01 ^= d;
      c05 ^= d;
      d = (c02 ^ c06) & (jlong) 0xFF00FFFFFFFF0000LL;
      c02 ^= d;
      c06 ^= d;
      d = (c03 ^ c07) & (jlong) 0xFF0000FFFFFFFF00LL;
      c03 ^= d;
      c07 ^= d;
      d = (c08 ^ c12) & (jlong) 0x00FFFFFF00000000LL;
      c08 ^= d;
      c12 ^= d;
      d = (c09 ^ c13) & (jlong) 0xFFFFFFFFFF000000LL;
      c09 ^= d;
      c13 ^= d;
      d = (c10 ^ c14) & (jlong) 0xFF00FFFFFFFF0000LL;
      c10 ^= d;
      c14 ^= d;
      d = (c11 ^ c15) & (jlong) 0xFF0000FFFFFFFF00LL;
      c11 ^= d;
      c15 ^= d;
      d = (c00 ^ c02) & (jlong) 0xFFFF0000FFFF0000LL;
      c00 ^= d;
      c02 ^= d;
      d = (c01 ^ c03) & (jlong) 0x00FFFF0000FFFF00LL;
      c01 ^= d;
      c03 ^= d;
      d = (c04 ^ c06) & (jlong) 0xFFFF0000FFFF0000LL;
      c04 ^= d;
      c06 ^= d;
      d = (c05 ^ c07) & (jlong) 0x00FFFF0000FFFF00LL;
      c05 ^= d;
      c07 ^= d;
      d = (c08 ^ c10) & (jlong) 0xFFFF0000FFFF0000LL;
      c08 ^= d;
      c10 ^= d;
      d = (c09 ^ c11) & (jlong) 0x00FFFF0000FFFF00LL;
      c09 ^= d;
      c11 ^= d;
      d = (c12 ^ c14) & (jlong) 0xFFFF0000FFFF0000LL;
      c12 ^= d;
      c14 ^= d;
      d = (c13 ^ c15) & (jlong) 0x00FFFF0000FFFF00LL;
      c13 ^= d;
      c15 ^= d;
      d = (c00 ^ c01) & (jlong) 0xFF00FF00FF00FF00LL;
      c00 ^= d;
      c01 ^= d;
      d = (c02 ^ c03) & (jlong) 0xFF00FF00FF00FF00LL;
      c02 ^= d;
      c03 ^= d;
      d = (c04 ^ c05) & (jlong) 0xFF00FF00FF00FF00LL;
      c04 ^= d;
      c05 ^= d;
      d = (c06 ^ c07) & (jlong) 0xFF00FF00FF00FF00LL;
      c06 ^= d;
      c07 ^= d;
      d = (c08 ^ c09) & (jlong) 0xFF00FF00FF00FF00LL;
      c08 ^= d;
      c09 ^= d;
      d = (c10 ^ c11) & (jlong) 0xFF00FF00FF00FF00LL;
      c10 ^= d;
      c11 ^= d;
      d = (c12 ^ c13) & (jlong) 0xFF00FF00FF00FF00LL;
      c12 ^= d;
      c13 ^= d;
      d = (c14 ^ c15) & (jlong) 0xFF00FF00FF00FF00LL;
      c14 ^= d;
      c15 ^= d;
      *IOSLongArray_GetRef(s, 0) = c00;
      *IOSLongArray_GetRef(s, 1) = c01;
      *IOSLongArray_GetRef(s, 2) = c02;
      *IOSLongArray_GetRef(s, 3) = c03;
      *IOSLongArray_GetRef(s, 4) = c04;
      *IOSLongArray_GetRef(s, 5) = c05;
      *IOSLongArray_GetRef(s, 6) = c06;
      *IOSLongArray_GetRef(s, 7) = c07;
      *IOSLongArray_GetRef(s, 8) = c08;
      *IOSLongArray_GetRef(s, 9) = c09;
      *IOSLongArray_GetRef(s, 10) = c10;
      *IOSLongArray_GetRef(s, 11) = c11;
      *IOSLongArray_GetRef(s, 12) = c12;
      *IOSLongArray_GetRef(s, 13) = c13;
      *IOSLongArray_GetRef(s, 14) = c14;
      *IOSLongArray_GetRef(s, 15) = c15;
      break;
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unsupported state size: only 512/1024 are allowed");
    }
  }
}

void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_subBytesWithLongArray_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, IOSLongArray *s) {
  for (jint i = 0; i < self->columns_; ++i) {
    jlong u = IOSLongArray_Get(nil_chk(s), i);
    jint lo = (jint) u;
    jint hi = (jint) (JreURShift64(u, 32));
    jbyte t0 = IOSByteArray_Get(nil_chk(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S0), lo & (jint) 0xFF);
    jbyte t1 = IOSByteArray_Get(nil_chk(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S1), (JreURShift32(lo, 8)) & (jint) 0xFF);
    jbyte t2 = IOSByteArray_Get(nil_chk(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S2), (JreURShift32(lo, 16)) & (jint) 0xFF);
    jbyte t3 = IOSByteArray_Get(nil_chk(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S3), JreURShift32(lo, 24));
    lo = (t0 & (jint) 0xFF) | (JreLShift32((t1 & (jint) 0xFF), 8)) | (JreLShift32((t2 & (jint) 0xFF), 16)) | (JreLShift32((jint) t3, 24));
    jbyte t4 = IOSByteArray_Get(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S0, hi & (jint) 0xFF);
    jbyte t5 = IOSByteArray_Get(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S1, (JreURShift32(hi, 8)) & (jint) 0xFF);
    jbyte t6 = IOSByteArray_Get(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S2, (JreURShift32(hi, 16)) & (jint) 0xFF);
    jbyte t7 = IOSByteArray_Get(LibOrgBouncycastleCryptoDigestsDSTU7564Digest_S3, JreURShift32(hi, 24));
    hi = (t4 & (jint) 0xFF) | (JreLShift32((t5 & (jint) 0xFF), 8)) | (JreLShift32((t6 & (jint) 0xFF), 16)) | (JreLShift32((jint) t7, 24));
    *IOSLongArray_GetRef(s, i) = (lo & (jlong) 0xFFFFFFFFLL) | (JreLShift64((jlong) hi, 32));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoDigestsDSTU7564Digest)
