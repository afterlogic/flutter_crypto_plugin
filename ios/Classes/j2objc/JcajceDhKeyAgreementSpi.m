//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dh/JcajceDhKeyAgreementSpi.java
//

#include "BCDHPrivateKey.h"
#include "BCDHPublicKey.h"
#include "BaseAgreementSpi.h"
#include "BasicAgreement.h"
#include "ConcatenationKDFGenerator.h"
#include "DHDomainParameterSpec.h"
#include "DHKEKGenerator.h"
#include "DHMQVPrivateParameters.h"
#include "DHMQVPublicParameters.h"
#include "DHParameters.h"
#include "DHPrivateKeyParameters.h"
#include "DHPublicKeyParameters.h"
#include "DHUParameterSpec.h"
#include "DHUPrivateParameters.h"
#include "DHUPublicParameters.h"
#include "DHUnifiedAgreement.h"
#include "DerivationFunction.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceDhKeyAgreementSpi.h"
#include "KDF2BytesGenerator.h"
#include "MQVBasicAgreement.h"
#include "MQVParameterSpec.h"
#include "UserKeyingMaterialSpec.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Key.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/interfaces/DHPrivateKey.h"
#include "javax/crypto/interfaces/DHPublicKey.h"
#include "javax/crypto/spec/DHParameterSpec.h"
#include "javax/crypto/spec/SecretKeySpec.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi () {
 @public
  LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *unifiedAgreement_;
  id<LibOrgBouncycastleCryptoBasicAgreement> mqvAgreement_;
  LibOrgBouncycastleJcajceSpecDHUParameterSpec *dheParameters_;
  LibOrgBouncycastleJcajceSpecMQVParameterSpec *mqvParameters_;
  JavaMathBigInteger *x_;
  JavaMathBigInteger *p_;
  JavaMathBigInteger *g_;
  IOSByteArray *result_;
}

- (LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privKey;

- (LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)pubKey;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, unifiedAgreement_, LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, mqvAgreement_, id<LibOrgBouncycastleCryptoBasicAgreement>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, dheParameters_, LibOrgBouncycastleJcajceSpecDHUParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, mqvParameters_, LibOrgBouncycastleJcajceSpecMQVParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, x_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, p_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, result_, IOSByteArray *)

inline JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_get_ONE(void);
static JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, ONE, JavaMathBigInteger *)

inline JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_get_TWO(void);
static JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_TWO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, TWO, JavaMathBigInteger *)

__attribute__((unused)) static LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, id<JavaSecurityPrivateKey> privKey);

__attribute__((unused)) static LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, id<JavaSecurityPublicKey> pubKey);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  return self;
}

- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement:(LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *)unifiedAgreement
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, unifiedAgreement, kdf);
  return self;
}

- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withLibOrgBouncycastleCryptoBasicAgreement:(id<LibOrgBouncycastleCryptoBasicAgreement>)mqvAgreement
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, mqvAgreement, kdf);
  return self;
}

- (IOSByteArray *)bigIntToBytesWithJavaMathBigInteger:(JavaMathBigInteger *)r {
  jint expectedLength = ([((JavaMathBigInteger *) nil_chk(p_)) bitLength] + 7) / 8;
  IOSByteArray *tmp = [((JavaMathBigInteger *) nil_chk(r)) toByteArray];
  if (((IOSByteArray *) nil_chk(tmp))->size_ == expectedLength) {
    return tmp;
  }
  if (IOSByteArray_Get(tmp, 0) == 0 && tmp->size_ == expectedLength + 1) {
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:tmp->size_ - 1];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tmp, 1, rv, 0, rv->size_);
    return rv;
  }
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:expectedLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tmp, 0, rv, rv->size_ - tmp->size_, tmp->size_);
  return rv;
}

- (id<JavaSecurityKey>)engineDoPhaseWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                            withBoolean:(jboolean)lastPhase {
  if (x_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Diffie-Hellman not initialised.");
  }
  if (!([JavaxCryptoInterfacesDHPublicKey_class_() isInstance:key])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"DHKeyAgreement doPhase requires DHPublicKey");
  }
  id<JavaxCryptoInterfacesDHPublicKey> pubKey = (id<JavaxCryptoInterfacesDHPublicKey>) cast_check(key, JavaxCryptoInterfacesDHPublicKey_class_());
  if (![((JavaMathBigInteger *) nil_chk([((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPublicKey>) nil_chk(pubKey)) getParams])) getG])) isEqual:g_] || ![((JavaMathBigInteger *) nil_chk([((JavaxCryptoSpecDHParameterSpec *) nil_chk([pubKey getParams])) getP])) isEqual:p_]) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"DHPublicKey not for this KeyAgreement!");
  }
  JavaMathBigInteger *peerY = [((id<JavaxCryptoInterfacesDHPublicKey>) nil_chk(((id<JavaxCryptoInterfacesDHPublicKey>) cast_check(key, JavaxCryptoInterfacesDHPublicKey_class_())))) getY];
  if (peerY == nil || [peerY compareToWithId:LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_TWO] < 0 || [peerY compareToWithId:[((JavaMathBigInteger *) nil_chk(p_)) subtractWithJavaMathBigInteger:LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_ONE]] >= 0) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"Invalid DH PublicKey");
  }
  if (unifiedAgreement_ != nil) {
    if (!lastPhase) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unified Diffie-Hellman can use only two key pairs");
    }
    LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *staticKey = LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, (id<JavaSecurityPublicKey>) cast_check(key, JavaSecurityPublicKey_class_()));
    LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *ephemKey = LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dheParameters_)) getOtherPartyEphemeralKey]);
    LibOrgBouncycastleCryptoParamsDHUPublicParameters *pKey = new_LibOrgBouncycastleCryptoParamsDHUPublicParameters_initWithLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_withLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_(staticKey, ephemKey);
    result_ = [unifiedAgreement_ calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:pKey];
    return nil;
  }
  else if (mqvAgreement_ != nil) {
    if (!lastPhase) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"MQV Diffie-Hellman can use only two key pairs");
    }
    LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *staticKey = LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, (id<JavaSecurityPublicKey>) cast_check(key, JavaSecurityPublicKey_class_()));
    LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *ephemKey = LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, [((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) nil_chk(mqvParameters_)) getOtherPartyEphemeralKey]);
    LibOrgBouncycastleCryptoParamsDHMQVPublicParameters *pKey = new_LibOrgBouncycastleCryptoParamsDHMQVPublicParameters_initWithLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_withLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_(staticKey, ephemKey);
    result_ = [self bigIntToBytesWithJavaMathBigInteger:[mqvAgreement_ calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:pKey]];
    return nil;
  }
  else {
    JavaMathBigInteger *res = [peerY modPowWithJavaMathBigInteger:x_ withJavaMathBigInteger:p_];
    if ([((JavaMathBigInteger *) nil_chk(res)) compareToWithId:LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_ONE] == 0) {
      @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"Shared key can't be 1");
    }
    result_ = [self bigIntToBytesWithJavaMathBigInteger:res];
    if (lastPhase) {
      return nil;
    }
    return new_LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPublicKey_initWithJavaMathBigInteger_withJavaxCryptoSpecDHParameterSpec_(res, [pubKey getParams]);
  }
}

- (IOSByteArray *)engineGenerateSecret {
  if (x_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Diffie-Hellman not initialised.");
  }
  return [super engineGenerateSecret];
}

- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)sharedSecret
                                  withInt:(jint)offset {
  if (x_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Diffie-Hellman not initialised.");
  }
  return [super engineGenerateSecretWithByteArray:sharedSecret withInt:offset];
}

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithNSString:(NSString *)algorithm {
  if (x_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Diffie-Hellman not initialised.");
  }
  if ([((NSString *) nil_chk(algorithm)) isEqual:@"TlsPremasterSecret"]) {
    return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(result_), algorithm);
  }
  return [super engineGenerateSecretWithNSString:algorithm];
}

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (!([JavaxCryptoInterfacesDHPrivateKey_class_() isInstance:key])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"DHKeyAgreement requires DHPrivateKey for initialisation");
  }
  id<JavaxCryptoInterfacesDHPrivateKey> privKey = (id<JavaxCryptoInterfacesDHPrivateKey>) cast_check(key, JavaxCryptoInterfacesDHPrivateKey_class_());
  if (params != nil) {
    if ([params isKindOfClass:[JavaxCryptoSpecDHParameterSpec class]]) {
      JavaxCryptoSpecDHParameterSpec *p = (JavaxCryptoSpecDHParameterSpec *) params;
      self->p_ = [p getP];
      self->g_ = [p getG];
      self->dheParameters_ = nil;
      self->ukmParameters_ = nil;
    }
    else if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecDHUParameterSpec class]]) {
      if (unifiedAgreement_ == nil) {
        @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"agreement algorithm not DHU based");
      }
      self->p_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getParams])) getP];
      self->g_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([privKey getParams])) getG];
      self->dheParameters_ = (LibOrgBouncycastleJcajceSpecDHUParameterSpec *) params;
      self->ukmParameters_ = [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) params) getUserKeyingMaterial];
      if ([((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dheParameters_)) getEphemeralPublicKey] != nil) {
        [unifiedAgreement_ init__WithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsDHUPrivateParameters_initWithLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, privKey), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dheParameters_)) getEphemeralPrivateKey]), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dheParameters_)) getEphemeralPublicKey]))];
      }
      else {
        [unifiedAgreement_ init__WithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsDHUPrivateParameters_initWithLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, privKey), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, [((LibOrgBouncycastleJcajceSpecDHUParameterSpec *) nil_chk(dheParameters_)) getEphemeralPrivateKey]))];
      }
    }
    else if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecMQVParameterSpec class]]) {
      if (mqvAgreement_ == nil) {
        @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"agreement algorithm not MQV based");
      }
      self->p_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getParams])) getP];
      self->g_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([privKey getParams])) getG];
      self->mqvParameters_ = (LibOrgBouncycastleJcajceSpecMQVParameterSpec *) params;
      self->ukmParameters_ = [((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) params) getUserKeyingMaterial];
      if ([((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) nil_chk(mqvParameters_)) getEphemeralPublicKey] != nil) {
        [mqvAgreement_ init__WithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsDHMQVPrivateParameters_initWithLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPublicKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, privKey), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, [((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) nil_chk(mqvParameters_)) getEphemeralPrivateKey]), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, [((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) nil_chk(mqvParameters_)) getEphemeralPublicKey]))];
      }
      else {
        [mqvAgreement_ init__WithLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsDHMQVPrivateParameters_initWithLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_withLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, privKey), LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, [((LibOrgBouncycastleJcajceSpecMQVParameterSpec *) nil_chk(mqvParameters_)) getEphemeralPrivateKey]))];
      }
    }
    else if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec class]]) {
      if (kdf_ == nil) {
        @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"no KDF specified for UserKeyingMaterialSpec");
      }
      self->p_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getParams])) getP];
      self->g_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([privKey getParams])) getG];
      self->dheParameters_ = nil;
      self->ukmParameters_ = [((LibOrgBouncycastleJcajceSpecUserKeyingMaterialSpec *) params) getUserKeyingMaterial];
    }
    else {
      @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"DHKeyAgreement only accepts DHParameterSpec");
    }
  }
  else {
    self->p_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getParams])) getP];
    self->g_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([privKey getParams])) getG];
  }
  self->x_ = [((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getX];
  self->result_ = [self bigIntToBytesWithJavaMathBigInteger:x_];
}

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (!([JavaxCryptoInterfacesDHPrivateKey_class_() isInstance:key])) {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"DHKeyAgreement requires DHPrivateKey");
  }
  id<JavaxCryptoInterfacesDHPrivateKey> privKey = (id<JavaxCryptoInterfacesDHPrivateKey>) cast_check(key, JavaxCryptoInterfacesDHPrivateKey_class_());
  self->p_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(privKey)) getParams])) getP];
  self->g_ = [((JavaxCryptoSpecDHParameterSpec *) nil_chk([privKey getParams])) getG];
  self->x_ = [privKey getX];
  self->result_ = [self bigIntToBytesWithJavaMathBigInteger:x_];
}

- (IOSByteArray *)calcSecret {
  return result_;
}

- (LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privKey {
  return LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(self, privKey);
}

- (LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)pubKey {
  return LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(self, pubKey);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityKey;", 0x4, 5, 6, 7, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 8, -1, -1, -1 },
    { NULL, "I", 0x4, 9, 10, 11, -1, -1, -1 },
    { NULL, "LJavaxCryptoSecretKey;", 0x4, 9, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 15, 16, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 17, 18, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsDHPrivateKeyParameters;", 0x2, 19, 20, 18, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsDHPublicKeyParameters;", 0x2, 21, 22, 18, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoDerivationFunction:);
  methods[2].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement:withLibOrgBouncycastleCryptoDerivationFunction:);
  methods[3].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoBasicAgreement:withLibOrgBouncycastleCryptoDerivationFunction:);
  methods[4].selector = @selector(bigIntToBytesWithJavaMathBigInteger:);
  methods[5].selector = @selector(engineDoPhaseWithJavaSecurityKey:withBoolean:);
  methods[6].selector = @selector(engineGenerateSecret);
  methods[7].selector = @selector(engineGenerateSecretWithByteArray:withInt:);
  methods[8].selector = @selector(engineGenerateSecretWithNSString:);
  methods[9].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[10].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySecureRandom:);
  methods[11].selector = @selector(calcSecret);
  methods[12].selector = @selector(generatePrivateKeyParameterWithJavaSecurityPrivateKey:);
  methods[13].selector = @selector(generatePublicKeyParameterWithJavaSecurityPublicKey:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "TWO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "unifiedAgreement_", "LLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mqvAgreement_", "LLibOrgBouncycastleCryptoBasicAgreement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dheParameters_", "LLibOrgBouncycastleJcajceSpecDHUParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mqvParameters_", "LLibOrgBouncycastleJcajceSpecMQVParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "x_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "p_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "g_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "result_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LLibOrgBouncycastleCryptoDerivationFunction;", "LNSString;LLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement;LLibOrgBouncycastleCryptoDerivationFunction;", "LNSString;LLibOrgBouncycastleCryptoBasicAgreement;LLibOrgBouncycastleCryptoDerivationFunction;", "bigIntToBytes", "LJavaMathBigInteger;", "engineDoPhase", "LJavaSecurityKey;Z", "LJavaSecurityInvalidKeyException;LJavaLangIllegalStateException;", "LJavaLangIllegalStateException;", "engineGenerateSecret", "[BI", "LJavaLangIllegalStateException;LJavaxCryptoShortBufferException;", "LNSString;", "LJavaSecurityNoSuchAlgorithmException;", "engineInit", "LJavaSecurityKey;LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;LJavaSecurityInvalidAlgorithmParameterException;", "LJavaSecurityKey;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;", "generatePrivateKeyParameter", "LJavaSecurityPrivateKey;", "generatePublicKeyParameter", "LJavaSecurityPublicKey;", &LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_ONE, &LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_TWO, "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF;LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi = { "JcajceDhKeyAgreementSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, fields, 7, 0x1, 14, 10, -1, 25, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi class]) {
    LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_TWO = JavaMathBigInteger_valueOfWithLong_(2);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi)
  }
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"Diffie-Hellman", nil);
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, init)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  self->unifiedAgreement_ = nil;
  self->mqvAgreement_ = nil;
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, kdf)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, kdf)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, NSString *kaAlgorithm, LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *unifiedAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  self->unifiedAgreement_ = unifiedAgreement;
  self->mqvAgreement_ = nil;
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *unifiedAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, unifiedAgreement, kdf)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement *unifiedAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, unifiedAgreement, kdf)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoBasicAgreement> mqvAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  self->unifiedAgreement_ = nil;
  self->mqvAgreement_ = mqvAgreement;
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoBasicAgreement> mqvAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, mqvAgreement, kdf)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoBasicAgreement> mqvAgreement, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi, initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_, kaAlgorithm, mqvAgreement, kdf)
}

LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, id<JavaSecurityPrivateKey> privKey) {
  if ([JavaxCryptoInterfacesDHPrivateKey_class_() isInstance:privKey]) {
    if ([privKey isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPrivateKey class]]) {
      return [((LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPrivateKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPrivateKey *) privKey))) engineGetKeyParameters];
    }
    else {
      id<JavaxCryptoInterfacesDHPrivateKey> pub = (id<JavaxCryptoInterfacesDHPrivateKey>) cast_check(privKey, JavaxCryptoInterfacesDHPrivateKey_class_());
      JavaxCryptoSpecDHParameterSpec *params = [((id<JavaxCryptoInterfacesDHPrivateKey>) nil_chk(pub)) getParams];
      return new_LibOrgBouncycastleCryptoParamsDHPrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_([pub getX], new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_([((JavaxCryptoSpecDHParameterSpec *) nil_chk(params)) getP], [params getG], nil, [params getL]));
    }
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"private key not a DHPrivateKey");
  }
}

LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_generatePublicKeyParameterWithJavaSecurityPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi *self, id<JavaSecurityPublicKey> pubKey) {
  if ([JavaxCryptoInterfacesDHPublicKey_class_() isInstance:pubKey]) {
    if ([pubKey isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPublicKey class]]) {
      return [((LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPublicKey *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricDhBCDHPublicKey *) pubKey))) engineGetKeyParameters];
    }
    else {
      id<JavaxCryptoInterfacesDHPublicKey> pub = (id<JavaxCryptoInterfacesDHPublicKey>) cast_check(pubKey, JavaxCryptoInterfacesDHPublicKey_class_());
      JavaxCryptoSpecDHParameterSpec *params = [((id<JavaxCryptoInterfacesDHPublicKey>) nil_chk(pub)) getParams];
      if ([params isKindOfClass:[LibOrgBouncycastleJcajceSpecDHDomainParameterSpec class]]) {
        return new_LibOrgBouncycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_([pub getY], [((LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecDHDomainParameterSpec *) params))) getDomainParameters]);
      }
      return new_LibOrgBouncycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_([pub getY], new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_([((JavaxCryptoSpecDHParameterSpec *) nil_chk(params)) getP], [params getG], nil, [params getL]));
    }
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"public key not a DHPublicKey");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF = { "DHwithRFC2631KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithRFC2631KDF", new_LibOrgBouncycastleCryptoAgreementKdfDHKEKGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithRFC2631KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF = { "DHwithSHA1KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA1CKDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF = { "DHwithSHA224KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA224CKDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF = { "DHwithSHA256KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA256CKDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF = { "DHwithSHA384KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA384KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF = { "DHwithSHA512KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA512KDF", new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF = { "DHwithSHA1CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA1CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA1CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF = { "DHwithSHA224CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA224CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA224CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF = { "DHwithSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF = { "DHwithSHA384CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA384CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA384CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF = { "DHwithSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHwithSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHwithSHA512CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF = { "DHUwithSHA1KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA1KDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF = { "DHUwithSHA224KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA224KDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF = { "DHUwithSHA256KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA256KDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF = { "DHUwithSHA384KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA384KDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF = { "DHUwithSHA512KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA512KDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF = { "DHUwithSHA1CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA1CKDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA1CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF = { "DHUwithSHA224CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA224CKDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA224CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF = { "DHUwithSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF = { "DHUwithSHA384CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA384CKDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA384CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF = { "DHUwithSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"DHUwithSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementDHUnifiedAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_DHUwithSHA512CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF = { "MQVwithSHA1KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA1KDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF = { "MQVwithSHA224KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA224KDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF = { "MQVwithSHA256KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA256KDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF = { "MQVwithSHA384KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA384KDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF = { "MQVwithSHA512KDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA512KDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoGeneratorsKDF2BytesGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512KDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF = { "MQVwithSHA1CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA1CKDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA1CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF = { "MQVwithSHA224CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA224CKDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA224CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF = { "MQVwithSHA256CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA256CKDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA256CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF = { "MQVwithSHA384CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA384CKDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA384CKDF)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF = { "MQVwithSHA512CKDF", "lib.org.bouncycastle.jcajce.provider.asymmetric.dh", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoBasicAgreement_withLibOrgBouncycastleCryptoDerivationFunction_(self, @"MQVwithSHA512CKDF", new_LibOrgBouncycastleCryptoAgreementMQVBasicAgreement_init(), new_LibOrgBouncycastleCryptoAgreementKdfConcatenationKDFGenerator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512()));
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDhJcajceDhKeyAgreementSpi_MQVwithSHA512CKDF)
