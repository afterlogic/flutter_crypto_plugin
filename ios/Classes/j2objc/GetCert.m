//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/GetCert.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERSequence.h"
#include "GeneralName.h"
#include "GetCert.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1CmcGetCert () {
 @public
  LibOrgBouncycastleAsn1X509GeneralName *issuerName_;
  JavaMathBigInteger *serialNumber_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcGetCert, issuerName_, LibOrgBouncycastleAsn1X509GeneralName *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcGetCert, serialNumber_, JavaMathBigInteger *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcGetCert *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcGetCert *new_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcGetCert *create_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmcGetCert

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)issuerName
                                       withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}

+ (LibOrgBouncycastleAsn1CmcGetCert *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmcGetCert_getInstanceWithId_(o);
}

- (LibOrgBouncycastleAsn1X509GeneralName *)getIssuerName {
  return issuerName_;
}

- (JavaMathBigInteger *)getSerialNumber {
  return serialNumber_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:issuerName_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(serialNumber_)];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmcGetCert;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralName;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralName:withJavaMathBigInteger:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getIssuerName);
  methods[4].selector = @selector(getSerialNumber);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "issuerName_", "LLibOrgBouncycastleAsn1X509GeneralName;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "serialNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509GeneralName;LJavaMathBigInteger;", "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmcGetCert = { "GetCert", "lib.org.bouncycastle.asn1.cmc", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmcGetCert;
}

@end

void LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcGetCert *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"incorrect sequence size");
  }
  self->issuerName_ = LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->serialNumber_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:1]))) getValue];
}

LibOrgBouncycastleAsn1CmcGetCert *new_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcGetCert, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmcGetCert *create_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcGetCert, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_(LibOrgBouncycastleAsn1CmcGetCert *self, LibOrgBouncycastleAsn1X509GeneralName *issuerName, JavaMathBigInteger *serialNumber) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->issuerName_ = issuerName;
  self->serialNumber_ = serialNumber;
}

LibOrgBouncycastleAsn1CmcGetCert *new_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509GeneralName *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcGetCert, initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_, issuerName, serialNumber)
}

LibOrgBouncycastleAsn1CmcGetCert *create_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509GeneralName *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcGetCert, initWithLibOrgBouncycastleAsn1X509GeneralName_withJavaMathBigInteger_, issuerName, serialNumber)
}

LibOrgBouncycastleAsn1CmcGetCert *LibOrgBouncycastleAsn1CmcGetCert_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmcGetCert_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmcGetCert class]]) {
    return (LibOrgBouncycastleAsn1CmcGetCert *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmcGetCert_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmcGetCert)
