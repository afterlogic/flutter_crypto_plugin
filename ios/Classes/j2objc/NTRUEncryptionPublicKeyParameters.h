//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionPublicKeyParameters.java
//

#ifndef NTRUEncryptionPublicKeyParameters_H
#define NTRUEncryptionPublicKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "NTRUEncryptionKeyParameters.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;
@class LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;

@interface LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters : LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyParameters {
 @public
  LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h_;
}

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)b
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)is
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params;

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)h
                               withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params;

- (jboolean)isEqual:(id)obj;

- (IOSByteArray *)getEncoded;

- (NSUInteger)hash;

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)os;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters, h_, LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithLibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *h, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *b, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *self, JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters_initWithJavaIoInputStream_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(JavaIoInputStream *is, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionPublicKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NTRUEncryptionPublicKeyParameters_H
