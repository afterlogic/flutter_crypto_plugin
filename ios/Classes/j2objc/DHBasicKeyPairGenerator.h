//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/generators/DHBasicKeyPairGenerator.java
//

#ifndef DHBasicKeyPairGenerator_H
#define DHBasicKeyPairGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricCipherKeyPairGenerator.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoAsymmetricCipherKeyPair;
@class LibOrgBouncycastleCryptoKeyGenerationParameters;

@interface LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator : NSObject < LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator >

#pragma mark Public

- (instancetype __nonnull)init;

- (LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair;

- (void)init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:(LibOrgBouncycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator_init(LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator *new_LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator *create_LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoGeneratorsDHBasicKeyPairGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DHBasicKeyPairGenerator_H
