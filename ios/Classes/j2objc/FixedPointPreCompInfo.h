//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/FixedPointPreCompInfo.java
//

#ifndef FixedPointPreCompInfo_H
#define FixedPointPreCompInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PreCompInfo.h"

@class LibOrgBouncycastleMathEcECPoint;
@protocol LibOrgBouncycastleMathEcECLookupTable;

@interface LibOrgBouncycastleMathEcFixedPointPreCompInfo : NSObject < LibOrgBouncycastleMathEcPreCompInfo > {
 @public
  LibOrgBouncycastleMathEcECPoint *offset_;
  id<LibOrgBouncycastleMathEcECLookupTable> lookupTable_;
  jint width_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id<LibOrgBouncycastleMathEcECLookupTable>)getLookupTable;

- (LibOrgBouncycastleMathEcECPoint *)getOffset;

- (jint)getWidth;

- (void)setLookupTableWithLibOrgBouncycastleMathEcECLookupTable:(id<LibOrgBouncycastleMathEcECLookupTable>)lookupTable;

- (void)setOffsetWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)offset;

- (void)setWidthWithInt:(jint)width;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcFixedPointPreCompInfo)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleMathEcFixedPointPreCompInfo, offset_, LibOrgBouncycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleMathEcFixedPointPreCompInfo, lookupTable_, id<LibOrgBouncycastleMathEcECLookupTable>)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcFixedPointPreCompInfo_init(LibOrgBouncycastleMathEcFixedPointPreCompInfo *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointPreCompInfo *new_LibOrgBouncycastleMathEcFixedPointPreCompInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointPreCompInfo *create_LibOrgBouncycastleMathEcFixedPointPreCompInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcFixedPointPreCompInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // FixedPointPreCompInfo_H
