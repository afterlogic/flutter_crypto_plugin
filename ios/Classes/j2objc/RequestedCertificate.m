//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/isismtt/ocsp/RequestedCertificate.java
//

#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERTaggedObject.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RequestedCertificate.h"
#include "X509Certificate.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"

@interface LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate () {
 @public
  LibOrgBouncycastleAsn1X509X509Certificate *cert_;
  IOSByteArray *publicKeyCert_;
  IOSByteArray *attributeCert_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, cert_, LibOrgBouncycastleAsn1X509X509Certificate *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, publicKeyCert_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, attributeCert_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *create_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

@implementation LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate

+ (jint)certificate {
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_certificate;
}

+ (jint)publicKeyCertificate {
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate;
}

+ (jint)attributeCertificate {
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate;
}

+ (LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(obj);
}

+ (LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                     withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509X509Certificate:(LibOrgBouncycastleAsn1X509X509Certificate *)certificate {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1X509X509Certificate_(self, certificate);
  return self;
}

- (instancetype)initWithInt:(jint)type
              withByteArray:(IOSByteArray *)certificateOctets {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(self, type, certificateOctets);
  return self;
}

- (jint)getType {
  if (cert_ != nil) {
    return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_certificate;
  }
  if (publicKeyCert_ != nil) {
    return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate;
  }
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate;
}

- (IOSByteArray *)getCertificateBytes {
  if (cert_ != nil) {
    @try {
      return [cert_ getEncoded];
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"can't decode certificate: ", e));
    }
  }
  if (publicKeyCert_ != nil) {
    return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(publicKeyCert_);
  }
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(attributeCert_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if (publicKeyCert_ != nil) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(0, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(publicKeyCert_));
  }
  if (attributeCert_ != nil) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(1, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(attributeCert_));
  }
  return [((LibOrgBouncycastleAsn1X509X509Certificate *) nil_chk(cert_)) toASN1Primitive];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1IsismttOcspRequestedCertificate;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1IsismttOcspRequestedCertificate;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1X509X509Certificate:);
  methods[4].selector = @selector(initWithInt:withByteArray:);
  methods[5].selector = @selector(getType);
  methods[6].selector = @selector(getCertificateBytes);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certificate", "I", .constantValue.asInt = LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_certificate, 0x19, -1, -1, -1, -1 },
    { "publicKeyCertificate", "I", .constantValue.asInt = LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate, 0x19, -1, -1, -1, -1 },
    { "attributeCertificate", "I", .constantValue.asInt = LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate, 0x19, -1, -1, -1, -1 },
    { "cert_", "LLibOrgBouncycastleAsn1X509X509Certificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKeyCert_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeCert_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LLibOrgBouncycastleAsn1ASN1TaggedObject;", "LLibOrgBouncycastleAsn1X509X509Certificate;", "I[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate = { "RequestedCertificate", "lib.org.bouncycastle.asn1.isismtt.ocsp", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate;
}

@end

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initialize();
  if (obj == nil || [obj isKindOfClass:[LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate class]]) {
    return (LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *) cast_chk(obj, [LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate class]);
  }
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1Sequence class]]) {
    return new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1X509X509Certificate_getInstanceWithId_(obj));
  }
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_((LibOrgBouncycastleAsn1ASN1TaggedObject *) obj);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initialize();
  if (!explicit_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"choice item must be explicitly tagged");
  }
  return LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject]);
}

void LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_publicKeyCertificate) {
    self->publicKeyCert_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, true))) getOctets];
  }
  else if ([tagged getTagNo] == LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_attributeCertificate) {
    self->attributeCert_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, true))) getOctets];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag number: ", [tagged getTagNo]));
  }
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *create_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

void LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *self, LibOrgBouncycastleAsn1X509X509Certificate *certificate) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->cert_ = certificate;
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1X509X509Certificate *certificate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithLibOrgBouncycastleAsn1X509X509Certificate_, certificate)
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *create_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1X509X509Certificate *certificate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithLibOrgBouncycastleAsn1X509X509Certificate_, certificate)
}

void LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *self, jint type, IOSByteArray *certificateOctets) {
  LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, new_LibOrgBouncycastleAsn1DERTaggedObject_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(type, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(certificateOctets)));
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *new_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(jint type, IOSByteArray *certificateOctets) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithInt_withByteArray_, type, certificateOctets)
}

LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate *create_LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate_initWithInt_withByteArray_(jint type, IOSByteArray *certificateOctets) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate, initWithInt_withByteArray_, type, certificateOctets)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1IsismttOcspRequestedCertificate)
