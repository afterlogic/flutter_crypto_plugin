//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/BidirectionalMap.java
//

#ifndef BidirectionalMap_H
#define BidirectionalMap_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/util/Hashtable.h"

@protocol JavaUtilMap;

@interface LibOrgBouncycastleAsn1EacBidirectionalMap : JavaUtilHashtable {
 @public
  JavaUtilHashtable *reverseMap_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id)getReverseWithId:(id)o;

- (id)putWithId:(id)key
         withId:(id)o;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EacBidirectionalMap)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacBidirectionalMap, reverseMap_, JavaUtilHashtable *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacBidirectionalMap_init(LibOrgBouncycastleAsn1EacBidirectionalMap *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacBidirectionalMap *new_LibOrgBouncycastleAsn1EacBidirectionalMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacBidirectionalMap *create_LibOrgBouncycastleAsn1EacBidirectionalMap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EacBidirectionalMap)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BidirectionalMap_H
