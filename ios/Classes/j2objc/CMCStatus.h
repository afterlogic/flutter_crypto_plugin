//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/CMCStatus.java
//

#ifndef CMCStatus_H
#define CMCStatus_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CmcCMCStatus : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *success NS_SWIFT_NAME(success);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *failed NS_SWIFT_NAME(failed);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *pending NS_SWIFT_NAME(pending);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *noSupport NS_SWIFT_NAME(noSupport);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *confirmRequired NS_SWIFT_NAME(confirmRequired);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *popRequired NS_SWIFT_NAME(popRequired);
@property (readonly, class) LibOrgBouncycastleAsn1CmcCMCStatus *partial NS_SWIFT_NAME(partial);

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)success;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)failed;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)pending;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)noSupport;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)confirmRequired;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)popRequired;

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)partial;

#pragma mark Public

+ (LibOrgBouncycastleAsn1CmcCMCStatus *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CmcCMCStatus)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_success(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_success;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, success, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_failed(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_failed;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, failed, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_pending(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_pending;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, pending, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_noSupport(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_noSupport;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, noSupport, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_confirmRequired(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_confirmRequired;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, confirmRequired, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_popRequired(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_popRequired;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, popRequired, LibOrgBouncycastleAsn1CmcCMCStatus *)

inline LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_get_partial(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_partial;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmcCMCStatus, partial, LibOrgBouncycastleAsn1CmcCMCStatus *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatus *LibOrgBouncycastleAsn1CmcCMCStatus_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcCMCStatus)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CMCStatus_H
