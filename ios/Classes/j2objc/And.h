//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/key/util/And.java
//

#ifndef And_H
#define And_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PublicKeySelectionStrategy.h"
#include "SecretKeySelectionStrategy.h"

@class LibOrgBouncycastleOpenpgpPGPPublicKey;
@class LibOrgBouncycastleOpenpgpPGPSecretKey;

@interface LibComAfterlogicPgpKeySelectionKeyUtilAnd : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyUtilAnd)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyUtilAnd_init(LibComAfterlogicPgpKeySelectionKeyUtilAnd *self);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd *new_LibComAfterlogicPgpKeySelectionKeyUtilAnd_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd *create_LibComAfterlogicPgpKeySelectionKeyUtilAnd_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyUtilAnd)

@interface LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy : LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy

#pragma mark Public

- (instancetype __nonnull)initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)left
                              withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)right;

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPPublicKey *)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy *self, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyUtilAnd_PubKeySelectionStrategy)

@interface LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy : LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy

#pragma mark Public

- (instancetype __nonnull)initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)left
                              withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)right;

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKey *)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy *self, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyUtilAnd_SecKeySelectionStrategy)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // And_H
