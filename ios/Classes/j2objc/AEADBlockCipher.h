//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/modes/AEADBlockCipher.java
//

#ifndef AEADBlockCipher_H
#define AEADBlockCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@protocol LibOrgBouncycastleCryptoModesAEADBlockCipher < JavaObject >

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (NSString *)getAlgorithmName;

- (id<LibOrgBouncycastleCryptoBlockCipher>)getUnderlyingCipher;

- (void)processAADByteWithByte:(jbyte)inArg;

- (void)processAADBytesWithByteArray:(IOSByteArray *)inArg
                             withInt:(jint)inOff
                             withInt:(jint)len;

- (jint)processByteWithByte:(jbyte)inArg
              withByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (IOSByteArray *)getMac;

- (jint)getUpdateOutputSizeWithInt:(jint)len;

- (jint)getOutputSizeWithInt:(jint)len;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoModesAEADBlockCipher)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoModesAEADBlockCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AEADBlockCipher_H
