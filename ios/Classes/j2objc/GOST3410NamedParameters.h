//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cryptopro/GOST3410NamedParameters.java
//

#ifndef GOST3410NamedParameters_H
#define GOST3410NamedParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilHashtable;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1CryptoproGOST3410ParamSetParameters;
@protocol JavaUtilEnumeration;

@interface LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters : NSObject
@property (readonly, class) JavaUtilHashtable *objIds NS_SWIFT_NAME(objIds);
@property (readonly, class) JavaUtilHashtable *params NS_SWIFT_NAME(params);
@property (readonly, nonatomic, getter=getNames, class) JavaUtilHashtable *names NS_SWIFT_NAME(names);

+ (JavaUtilHashtable *)objIds;

+ (JavaUtilHashtable *)params;

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1CryptoproGOST3410ParamSetParameters *)getByNameWithNSString:(NSString *)name;

+ (LibOrgBouncycastleAsn1CryptoproGOST3410ParamSetParameters *)getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (id<JavaUtilEnumeration>)getNames;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_get_objIds(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_objIds;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters, objIds, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_get_params(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_params;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters, params, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_get_names(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_names;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters, names, JavaUtilHashtable *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_init(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters *new_LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters *create_LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410ParamSetParameters *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT id<JavaUtilEnumeration> LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_getNames(void);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410ParamSetParameters *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_getByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters_getOIDWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CryptoproGOST3410NamedParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GOST3410NamedParameters_H
