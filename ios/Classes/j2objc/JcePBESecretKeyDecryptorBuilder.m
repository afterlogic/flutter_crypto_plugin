//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/jcajce/JcePBESecretKeyDecryptorBuilder.java
//

#include "DefaultJcaJceHelper.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaJcePGPUtil.h"
#include "JcaPGPDigestCalculatorProviderBuilder.h"
#include "JcePBESecretKeyDecryptorBuilder.h"
#include "NamedJcaJceHelper.h"
#include "OperatorHelper.h"
#include "PBESecretKeyDecryptor.h"
#include "PGPDigestCalculatorProvider.h"
#include "PGPException.h"
#include "PGPUtil.h"
#include "ProviderJcaJceHelper.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Provider.h"
#include "javax/crypto/BadPaddingException.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/IllegalBlockSizeException.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder () {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *helper_;
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider_;
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *calculatorProviderBuilder_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, helper_, LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, calculatorProvider_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, calculatorProviderBuilder_, LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *)

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 : LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *this$0_;
}

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *)outer$
                                                                                 withCharArray:(IOSCharArray *)passPhrase
                              withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider;

- (IOSByteArray *)recoverKeyDataWithInt:(jint)encAlgorithm
                          withByteArray:(IOSByteArray *)key
                          withByteArray:(IOSByteArray *)iv
                          withByteArray:(IOSByteArray *)keyData
                                withInt:(jint)keyOff
                                withInt:(jint)keyLen;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1)

__attribute__((unused)) static void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider);

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider);

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, calculatorProvider);
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  if (calculatorProviderBuilder_ != nil) {
    (void) [calculatorProviderBuilder_ setProviderWithJavaSecurityProvider:provider];
  }
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *)setProviderWithNSString:(NSString *)providerName {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  if (calculatorProviderBuilder_ != nil) {
    (void) [calculatorProviderBuilder_ setProviderWithNSString:providerName];
  }
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor *)buildWithCharArray:(IOSCharArray *)passPhrase {
  if (calculatorProvider_ == nil) {
    calculatorProvider_ = [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(calculatorProviderBuilder_)) build];
  }
  return new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, passPhrase, calculatorProvider_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor;", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:);
  methods[2].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[3].selector = @selector(setProviderWithNSString:);
  methods[4].selector = @selector(buildWithCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LLibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "calculatorProvider_", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "calculatorProviderBuilder_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", "setProvider", "LJavaSecurityProvider;", "LNSString;", "build", "[C", "LLibOrgBouncycastleOpenpgpPGPException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder = { "JcePBESecretKeyDecryptorBuilder", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_init(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *self) {
  NSObject_init(self);
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilDefaultJcaJceHelper_init());
  self->calculatorProviderBuilder_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder_init();
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, init)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, init)
}

void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *self, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  NSObject_init(self);
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilDefaultJcaJceHelper_init());
  self->calculatorProvider_ = calculatorProvider;
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, calculatorProvider)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder, initWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, calculatorProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder)

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *)outer$
                                                                                 withCharArray:(IOSCharArray *)passPhrase
                              withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, outer$, passPhrase, calculatorProvider);
  return self;
}

- (IOSByteArray *)recoverKeyDataWithInt:(jint)encAlgorithm
                          withByteArray:(IOSByteArray *)key
                          withByteArray:(IOSByteArray *)iv
                          withByteArray:(IOSByteArray *)keyData
                                withInt:(jint)keyOff
                                withInt:(jint)keyLen {
  @try {
    JavaxCryptoCipher *c = [((LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *) nil_chk(this$0_->helper_)) createCipherWithNSString:JreStrcat("$$", LibOrgBouncycastleOpenpgpPGPUtil_getSymmetricCipherNameWithInt_(encAlgorithm), @"/CFB/NoPadding")];
    [((JavaxCryptoCipher *) nil_chk(c)) init__WithInt:JavaxCryptoCipher_DECRYPT_MODE withJavaSecurityKey:LibOrgBouncycastleOpenpgpOperatorJcajceJcaJcePGPUtil_makeSymmetricKeyWithInt_withByteArray_(encAlgorithm, key) withJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
    return [c doFinalWithByteArray:keyData withInt:keyOff withInt:keyLen];
  }
  @catch (JavaxCryptoIllegalBlockSizeException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"illegal block size: ", [e getMessage]), e);
  }
  @catch (JavaxCryptoBadPaddingException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"bad padding: ", [e getMessage]), e);
  }
  @catch (JavaSecurityInvalidAlgorithmParameterException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"invalid parameter: ", [e getMessage]), e);
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"invalid key: ", [e getMessage]), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder:withCharArray:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:);
  methods[1].selector = @selector(recoverKeyDataWithInt:withByteArray:withByteArray:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CLLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", "recoverKeyData", "I[B[B[BII", "LLibOrgBouncycastleOpenpgpPGPException;", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder;", "buildWithCharArray:" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 = { "", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x8010, 2, 1, 4, -1, 5, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  self->this$0_ = outer$;
  LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, passPhrase, calculatorProvider);
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, outer$, passPhrase, calculatorProvider)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder *outer$, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcePBESecretKeyDecryptorBuilder_withCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_, outer$, passPhrase, calculatorProvider)
}
