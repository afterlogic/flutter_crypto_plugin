//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/SubjectKeyIdentifier.java
//

#ifndef SubjectKeyIdentifier_H
#define SubjectKeyIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509Extensions;

@interface LibOrgBouncycastleAsn1X509SubjectKeyIdentifier : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)keyid;

+ (LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *)fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)extensions;

+ (LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                              withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getKeyIdentifier;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)keyid;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509SubjectKeyIdentifier)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithByteArray_(LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *self, IOSByteArray *keyid);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *new_LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithByteArray_(IOSByteArray *keyid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *create_LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithByteArray_(IOSByteArray *keyid);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *self, LibOrgBouncycastleAsn1ASN1OctetString *keyid);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *new_LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *keyid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectKeyIdentifier *create_LibOrgBouncycastleAsn1X509SubjectKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *keyid);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509SubjectKeyIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SubjectKeyIdentifier_H
