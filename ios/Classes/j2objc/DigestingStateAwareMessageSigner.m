//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/DigestingStateAwareMessageSigner.java
//

#include "AsymmetricKeyParameter.h"
#include "Digest.h"
#include "DigestingMessageSigner.h"
#include "DigestingStateAwareMessageSigner.h"
#include "J2ObjC_source.h"
#include "StateAwareMessageSigner.h"

@interface LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner () {
 @public
  id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner> signer_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner, signer_, id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner>)

@implementation LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner

- (instancetype)initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner:(id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner>)messSigner
                                        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)messDigest {
  LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner_initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_(self, messSigner, messDigest);
  return self;
}

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getUpdatedPrivateKey {
  return [((id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner>) nil_chk(signer_)) getUpdatedPrivateKey];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner:withLibOrgBouncycastleCryptoDigest:);
  methods[1].selector = @selector(getUpdatedPrivateKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "signer_", "LLibOrgBouncycastlePqcCryptoStateAwareMessageSigner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoStateAwareMessageSigner;LLibOrgBouncycastleCryptoDigest;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner = { "DigestingStateAwareMessageSigner", "lib.org.bouncycastle.pqc.crypto", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner;
}

@end

void LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner_initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner *self, id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest) {
  LibOrgBouncycastlePqcCryptoDigestingMessageSigner_initWithLibOrgBouncycastlePqcCryptoMessageSigner_withLibOrgBouncycastleCryptoDigest_(self, messSigner, messDigest);
  self->signer_ = messSigner;
}

LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner *new_LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner_initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner, initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_, messSigner, messDigest)
}

LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner *create_LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner_initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastlePqcCryptoStateAwareMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner, initWithLibOrgBouncycastlePqcCryptoStateAwareMessageSigner_withLibOrgBouncycastleCryptoDigest_, messSigner, messDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoDigestingStateAwareMessageSigner)
