//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/OCSPRequest.java
//

#ifndef OCSPRequest_H
#define OCSPRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1OcspSignature;
@class LibOrgBouncycastleAsn1OcspTBSRequest;

@interface LibOrgBouncycastleAsn1OcspOCSPRequest : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1OcspTBSRequest *tbsRequest_;
  LibOrgBouncycastleAsn1OcspSignature *optionalSignature_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1OcspTBSRequest:(LibOrgBouncycastleAsn1OcspTBSRequest *)tbsRequest
                               withLibOrgBouncycastleAsn1OcspSignature:(LibOrgBouncycastleAsn1OcspSignature *)optionalSignature;

+ (LibOrgBouncycastleAsn1OcspOCSPRequest *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspOCSPRequest *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1OcspSignature *)getOptionalSignature;

- (LibOrgBouncycastleAsn1OcspTBSRequest *)getTbsRequest;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspOCSPRequest)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1OcspOCSPRequest, tbsRequest_, LibOrgBouncycastleAsn1OcspTBSRequest *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1OcspOCSPRequest, optionalSignature_, LibOrgBouncycastleAsn1OcspSignature *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspOCSPRequest_initWithLibOrgBouncycastleAsn1OcspTBSRequest_withLibOrgBouncycastleAsn1OcspSignature_(LibOrgBouncycastleAsn1OcspOCSPRequest *self, LibOrgBouncycastleAsn1OcspTBSRequest *tbsRequest, LibOrgBouncycastleAsn1OcspSignature *optionalSignature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspOCSPRequest *new_LibOrgBouncycastleAsn1OcspOCSPRequest_initWithLibOrgBouncycastleAsn1OcspTBSRequest_withLibOrgBouncycastleAsn1OcspSignature_(LibOrgBouncycastleAsn1OcspTBSRequest *tbsRequest, LibOrgBouncycastleAsn1OcspSignature *optionalSignature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspOCSPRequest *create_LibOrgBouncycastleAsn1OcspOCSPRequest_initWithLibOrgBouncycastleAsn1OcspTBSRequest_withLibOrgBouncycastleAsn1OcspSignature_(LibOrgBouncycastleAsn1OcspTBSRequest *tbsRequest, LibOrgBouncycastleAsn1OcspSignature *optionalSignature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspOCSPRequest *LibOrgBouncycastleAsn1OcspOCSPRequest_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspOCSPRequest *LibOrgBouncycastleAsn1OcspOCSPRequest_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspOCSPRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OCSPRequest_H
