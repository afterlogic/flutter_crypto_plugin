//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/ECDSAPublicKey.java
//

#include "ASN1EncodableVector.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "ECDSAPublicKey.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PublicKeyDataObject.h"
#include "UnsignedInteger.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1EacECDSAPublicKey () {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage_;
  JavaMathBigInteger *primeModulusP_;
  JavaMathBigInteger *firstCoefA_;
  JavaMathBigInteger *secondCoefB_;
  IOSByteArray *basePointG_;
  JavaMathBigInteger *orderOfBasePointR_;
  IOSByteArray *publicPointY_;
  JavaMathBigInteger *cofactorF_;
  jint options_;
}

- (void)setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)basePointG;

- (void)setCofactorFWithJavaMathBigInteger:(JavaMathBigInteger *)cofactorF;

- (void)setFirstCoefAWithJavaMathBigInteger:(JavaMathBigInteger *)firstCoefA;

- (void)setOrderOfBasePointRWithJavaMathBigInteger:(JavaMathBigInteger *)orderOfBasePointR;

- (void)setPrimeModulusPWithJavaMathBigInteger:(JavaMathBigInteger *)primeModulusP;

- (void)setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)publicPointY;

- (void)setSecondCoefBWithJavaMathBigInteger:(JavaMathBigInteger *)secondCoefB;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, usage_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, primeModulusP_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, firstCoefA_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, secondCoefB_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, basePointG_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, orderOfBasePointR_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, publicPointY_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacECDSAPublicKey, cofactorF_, JavaMathBigInteger *)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_P(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_P 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, P, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_A(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_A 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, A, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_B(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_B 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, B, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_G(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_G 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, G, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_R(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_R 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, R, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_Y(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_Y 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, Y, jint)

inline jint LibOrgBouncycastleAsn1EacECDSAPublicKey_get_F(void);
#define LibOrgBouncycastleAsn1EacECDSAPublicKey_F 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1EacECDSAPublicKey, F, jint)

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1OctetString *basePointG);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setCofactorFWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *cofactorF);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setFirstCoefAWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *firstCoefA);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setOrderOfBasePointRWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *orderOfBasePointR);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setPrimeModulusPWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *primeModulusP);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1OctetString *publicPointY);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacECDSAPublicKey_setSecondCoefBWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *secondCoefB);

@implementation LibOrgBouncycastleAsn1EacECDSAPublicKey

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)usage
                                                     withByteArray:(IOSByteArray *)ppY {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(self, usage, ppY);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)usage
                                            withJavaMathBigInteger:(JavaMathBigInteger *)p
                                            withJavaMathBigInteger:(JavaMathBigInteger *)a
                                            withJavaMathBigInteger:(JavaMathBigInteger *)b
                                                     withByteArray:(IOSByteArray *)basePoint
                                            withJavaMathBigInteger:(JavaMathBigInteger *)order
                                                     withByteArray:(IOSByteArray *)publicPoint
                                                           withInt:(jint)cofactor {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_(self, usage, p, a, b, basePoint, order, publicPoint, cofactor);
  return self;
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getUsage {
  return usage_;
}

- (IOSByteArray *)getBasePointG {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_G) != 0) {
    return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(basePointG_);
  }
  else {
    return nil;
  }
}

- (void)setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)basePointG {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString_(self, basePointG);
}

- (JavaMathBigInteger *)getCofactorF {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_F) != 0) {
    return cofactorF_;
  }
  else {
    return nil;
  }
}

- (void)setCofactorFWithJavaMathBigInteger:(JavaMathBigInteger *)cofactorF {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setCofactorFWithJavaMathBigInteger_(self, cofactorF);
}

- (JavaMathBigInteger *)getFirstCoefA {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_A) != 0) {
    return firstCoefA_;
  }
  else {
    return nil;
  }
}

- (void)setFirstCoefAWithJavaMathBigInteger:(JavaMathBigInteger *)firstCoefA {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setFirstCoefAWithJavaMathBigInteger_(self, firstCoefA);
}

- (JavaMathBigInteger *)getOrderOfBasePointR {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_R) != 0) {
    return orderOfBasePointR_;
  }
  else {
    return nil;
  }
}

- (void)setOrderOfBasePointRWithJavaMathBigInteger:(JavaMathBigInteger *)orderOfBasePointR {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setOrderOfBasePointRWithJavaMathBigInteger_(self, orderOfBasePointR);
}

- (JavaMathBigInteger *)getPrimeModulusP {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_P) != 0) {
    return primeModulusP_;
  }
  else {
    return nil;
  }
}

- (void)setPrimeModulusPWithJavaMathBigInteger:(JavaMathBigInteger *)primeModulusP {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setPrimeModulusPWithJavaMathBigInteger_(self, primeModulusP);
}

- (IOSByteArray *)getPublicPointY {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_Y) != 0) {
    return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(publicPointY_);
  }
  else {
    return nil;
  }
}

- (void)setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)publicPointY {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(self, publicPointY);
}

- (JavaMathBigInteger *)getSecondCoefB {
  if ((options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_B) != 0) {
    return secondCoefB_;
  }
  else {
    return nil;
  }
}

- (void)setSecondCoefBWithJavaMathBigInteger:(JavaMathBigInteger *)secondCoefB {
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setSecondCoefBWithJavaMathBigInteger_(self, secondCoefB);
}

- (jboolean)hasParameters {
  return primeModulusP_ != nil;
}

- (LibOrgBouncycastleAsn1ASN1EncodableVector *)getASN1EncodableVectorWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                                        withBoolean:(jboolean)publicPointOnly {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:oid];
  if (!publicPointOnly) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x01, [self getPrimeModulusP])];
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x02, [self getFirstCoefA])];
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x03, [self getSecondCoefB])];
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, (jint) 0x04, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([self getBasePointG]))];
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x05, [self getOrderOfBasePointR])];
  }
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, (jint) 0x06, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([self getPublicPointY]))];
  if (!publicPointOnly) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x07, [self getCofactorF])];
  }
  return v;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_([self getASN1EncodableVectorWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:usage_ withBoolean:![self hasParameters]]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 7, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 7, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 5, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 7, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1EncodableVector;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withByteArray:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:withJavaMathBigInteger:withByteArray:withInt:);
  methods[3].selector = @selector(getUsage);
  methods[4].selector = @selector(getBasePointG);
  methods[5].selector = @selector(setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString:);
  methods[6].selector = @selector(getCofactorF);
  methods[7].selector = @selector(setCofactorFWithJavaMathBigInteger:);
  methods[8].selector = @selector(getFirstCoefA);
  methods[9].selector = @selector(setFirstCoefAWithJavaMathBigInteger:);
  methods[10].selector = @selector(getOrderOfBasePointR);
  methods[11].selector = @selector(setOrderOfBasePointRWithJavaMathBigInteger:);
  methods[12].selector = @selector(getPrimeModulusP);
  methods[13].selector = @selector(setPrimeModulusPWithJavaMathBigInteger:);
  methods[14].selector = @selector(getPublicPointY);
  methods[15].selector = @selector(setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString:);
  methods[16].selector = @selector(getSecondCoefB);
  methods[17].selector = @selector(setSecondCoefBWithJavaMathBigInteger:);
  methods[18].selector = @selector(hasParameters);
  methods[19].selector = @selector(getASN1EncodableVectorWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:);
  methods[20].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "usage_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "primeModulusP_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "firstCoefA_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secondCoefB_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "basePointG_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "orderOfBasePointR_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicPointY_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cofactorF_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "options_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "P", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_P, 0x1a, -1, -1, -1, -1 },
    { "A", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_A, 0x1a, -1, -1, -1, -1 },
    { "B", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_B, 0x1a, -1, -1, -1, -1 },
    { "G", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_G, 0x1a, -1, -1, -1, -1 },
    { "R", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_R, 0x1a, -1, -1, -1, -1 },
    { "Y", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_Y, 0x1a, -1, -1, -1, -1 },
    { "F", "I", .constantValue.asInt = LibOrgBouncycastleAsn1EacECDSAPublicKey_F, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "LJavaLangIllegalArgumentException;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;[B", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;[BLJavaMathBigInteger;[BI", "setBasePointG", "LLibOrgBouncycastleAsn1ASN1OctetString;", "setCofactorF", "LJavaMathBigInteger;", "setFirstCoefA", "setOrderOfBasePointR", "setPrimeModulusP", "setPublicPointY", "setSecondCoefB", "getASN1EncodableVector", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;Z" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EacECDSAPublicKey = { "ECDSAPublicKey", "lib.org.bouncycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 21, 16, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EacECDSAPublicKey;
}

@end

void LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->usage_ = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
  self->options_ = 0;
  while ([en hasMoreElements]) {
    id obj = [en nextElement];
    if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
      LibOrgBouncycastleAsn1ASN1TaggedObject *to = (LibOrgBouncycastleAsn1ASN1TaggedObject *) obj;
      switch ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(to)) getTagNo]) {
        case (jint) 0x1:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setPrimeModulusPWithJavaMathBigInteger_(self, [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_(to))) getValue]);
        break;
        case (jint) 0x2:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setFirstCoefAWithJavaMathBigInteger_(self, [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_(to))) getValue]);
        break;
        case (jint) 0x3:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setSecondCoefBWithJavaMathBigInteger_(self, [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_(to))) getValue]);
        break;
        case (jint) 0x4:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString_(self, LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(to, false));
        break;
        case (jint) 0x5:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setOrderOfBasePointRWithJavaMathBigInteger_(self, [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_(to))) getValue]);
        break;
        case (jint) 0x6:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(self, LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(to, false));
        break;
        case (jint) 0x7:
        LibOrgBouncycastleAsn1EacECDSAPublicKey_setCofactorFWithJavaMathBigInteger_(self, [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_(to))) getValue]);
        break;
        default:
        self->options_ = 0;
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown Object Identifier!");
      }
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown Object Identifier!");
    }
  }
  if (self->options_ != (jint) 0x20 && self->options_ != (jint) 0x7F) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"All options must be either present or absent!");
  }
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *new_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *create_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, IOSByteArray *ppY) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  self->usage_ = usage;
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(self, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(ppY));
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *new_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, IOSByteArray *ppY) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_, usage, ppY)
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *create_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, IOSByteArray *ppY) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_, usage, ppY)
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *p, JavaMathBigInteger *a, JavaMathBigInteger *b, IOSByteArray *basePoint, JavaMathBigInteger *order, IOSByteArray *publicPoint, jint cofactor) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  self->usage_ = usage;
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setPrimeModulusPWithJavaMathBigInteger_(self, p);
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setFirstCoefAWithJavaMathBigInteger_(self, a);
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setSecondCoefBWithJavaMathBigInteger_(self, b);
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString_(self, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(basePoint));
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setOrderOfBasePointRWithJavaMathBigInteger_(self, order);
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(self, new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(publicPoint));
  LibOrgBouncycastleAsn1EacECDSAPublicKey_setCofactorFWithJavaMathBigInteger_(self, JavaMathBigInteger_valueOfWithLong_(cofactor));
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *new_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *p, JavaMathBigInteger *a, JavaMathBigInteger *b, IOSByteArray *basePoint, JavaMathBigInteger *order, IOSByteArray *publicPoint, jint cofactor) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_, usage, p, a, b, basePoint, order, publicPoint, cofactor)
}

LibOrgBouncycastleAsn1EacECDSAPublicKey *create_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *p, JavaMathBigInteger *a, JavaMathBigInteger *b, IOSByteArray *basePoint, JavaMathBigInteger *order, IOSByteArray *publicPoint, jint cofactor) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacECDSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_withJavaMathBigInteger_withByteArray_withInt_, usage, p, a, b, basePoint, order, publicPoint, cofactor)
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setBasePointGWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1OctetString *basePointG) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_G) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_G;
    self->basePointG_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(basePointG)) getOctets];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Base Point G already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setCofactorFWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *cofactorF) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_F) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_F;
    self->cofactorF_ = cofactorF;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Cofactor F already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setFirstCoefAWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *firstCoefA) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_A) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_A;
    self->firstCoefA_ = firstCoefA;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"First Coef A already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setOrderOfBasePointRWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *orderOfBasePointR) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_R) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_R;
    self->orderOfBasePointR_ = orderOfBasePointR;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Order of base point R already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setPrimeModulusPWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *primeModulusP) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_P) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_P;
    self->primeModulusP_ = primeModulusP;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Prime Modulus P already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setPublicPointYWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, LibOrgBouncycastleAsn1ASN1OctetString *publicPointY) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_Y) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_Y;
    self->publicPointY_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(publicPointY)) getOctets];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Public Point Y already set");
  }
}

void LibOrgBouncycastleAsn1EacECDSAPublicKey_setSecondCoefBWithJavaMathBigInteger_(LibOrgBouncycastleAsn1EacECDSAPublicKey *self, JavaMathBigInteger *secondCoefB) {
  if ((self->options_ & LibOrgBouncycastleAsn1EacECDSAPublicKey_B) == 0) {
    self->options_ |= LibOrgBouncycastleAsn1EacECDSAPublicKey_B;
    self->secondCoefB_ = secondCoefB;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Second Coef B already set");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EacECDSAPublicKey)
