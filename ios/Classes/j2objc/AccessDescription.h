//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AccessDescription.java
//

#ifndef AccessDescription_H
#define AccessDescription_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509GeneralName;

@interface LibOrgBouncycastleAsn1X509AccessDescription : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *accessMethod_;
  LibOrgBouncycastleAsn1X509GeneralName *accessLocation_;
}
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_ad_caIssuers NS_SWIFT_NAME(id_ad_caIssuers);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *id_ad_ocsp NS_SWIFT_NAME(id_ad_ocsp);

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_ad_caIssuers;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)id_ad_ocsp;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                   withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)location;

- (LibOrgBouncycastleAsn1X509GeneralName *)getAccessLocation;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getAccessMethod;

+ (LibOrgBouncycastleAsn1X509AccessDescription *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1X509AccessDescription)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AccessDescription, accessMethod_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AccessDescription, accessLocation_, LibOrgBouncycastleAsn1X509GeneralName *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1X509AccessDescription_get_id_ad_caIssuers(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1X509AccessDescription_id_ad_caIssuers;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509AccessDescription, id_ad_caIssuers, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1X509AccessDescription_get_id_ad_ocsp(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1X509AccessDescription_id_ad_ocsp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X509AccessDescription, id_ad_ocsp, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AccessDescription *LibOrgBouncycastleAsn1X509AccessDescription_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AccessDescription_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509AccessDescription *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AccessDescription *new_LibOrgBouncycastleAsn1X509AccessDescription_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AccessDescription *create_LibOrgBouncycastleAsn1X509AccessDescription_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X509GeneralName *location);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509AccessDescription)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AccessDescription_H
