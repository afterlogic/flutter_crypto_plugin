//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/generators/GOST3410KeyPairGenerator.java
//

#include "AsymmetricCipherKeyPair.h"
#include "BigIntegers.h"
#include "GOST3410KeyGenerationParameters.h"
#include "GOST3410KeyPairGenerator.h"
#include "GOST3410Parameters.h"
#include "GOST3410PrivateKeyParameters.h"
#include "GOST3410PublicKeyParameters.h"
#include "J2ObjC_source.h"
#include "KeyGenerationParameters.h"
#include "WNafUtil.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"

@interface LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator () {
 @public
  LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters *param_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator, param_, LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters *)

@implementation LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:(LibOrgBouncycastleCryptoKeyGenerationParameters *)param {
  self->param_ = (LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters *) cast_chk(param, [LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters class]);
}

- (LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  JavaMathBigInteger *p;
  JavaMathBigInteger *q;
  JavaMathBigInteger *a;
  JavaMathBigInteger *x;
  JavaMathBigInteger *y;
  LibOrgBouncycastleCryptoParamsGOST3410Parameters *GOST3410Params = [((LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters *) nil_chk(param_)) getParameters];
  JavaSecuritySecureRandom *random = [((LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters *) nil_chk(param_)) getRandom];
  q = [((LibOrgBouncycastleCryptoParamsGOST3410Parameters *) nil_chk(GOST3410Params)) getQ];
  p = [GOST3410Params getP];
  a = [GOST3410Params getA];
  jint minWeight = 64;
  for (; ; ) {
    x = LibOrgBouncycastleUtilBigIntegers_createRandomBigIntegerWithInt_withJavaSecuritySecureRandom_(256, random);
    if ([((JavaMathBigInteger *) nil_chk(x)) signum] < 1 || [x compareToWithId:q] >= 0) {
      continue;
    }
    if (LibOrgBouncycastleMathEcWNafUtil_getNafWeightWithJavaMathBigInteger_(x) < minWeight) {
      continue;
    }
    break;
  }
  y = [((JavaMathBigInteger *) nil_chk(a)) modPowWithJavaMathBigInteger:x withJavaMathBigInteger:p];
  return new_LibOrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(new_LibOrgBouncycastleCryptoParamsGOST3410PublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsGOST3410Parameters_(y, GOST3410Params), new_LibOrgBouncycastleCryptoParamsGOST3410PrivateKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsGOST3410Parameters_(x, GOST3410Params));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LLibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LLibOrgBouncycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator = { "GOST3410KeyPairGenerator", "lib.org.bouncycastle.crypto.generators", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator;
}

@end

void LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator_init(LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator *new_LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator, init)
}

LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator *create_LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator)
