//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/AbstractTlsPeer.java
//

#ifndef AbstractTlsPeer_H
#define AbstractTlsPeer_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TlsPeer.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleCryptoTlsAbstractTlsPeer : NSObject < LibOrgBouncycastleCryptoTlsTlsPeer >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)notifyAlertRaisedWithShort:(jshort)alertLevel
                         withShort:(jshort)alertDescription
                      withNSString:(NSString *)message
             withJavaLangThrowable:(JavaLangThrowable *)cause;

- (void)notifyAlertReceivedWithShort:(jshort)alertLevel
                           withShort:(jshort)alertDescription;

- (void)notifyHandshakeComplete;

- (void)notifySecureRenegotiationWithBoolean:(jboolean)secureRenegotiation;

- (jboolean)requiresExtendedMasterSecret;

- (jboolean)shouldUseGMTUnixTime;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsAbstractTlsPeer)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsAbstractTlsPeer_init(LibOrgBouncycastleCryptoTlsAbstractTlsPeer *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsAbstractTlsPeer)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AbstractTlsPeer_H
