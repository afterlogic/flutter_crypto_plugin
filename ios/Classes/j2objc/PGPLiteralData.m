//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPLiteralData.java
//

#include "BCPGInputStream.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LiteralDataPacket.h"
#include "PGPLiteralData.h"
#include "Packet.h"
#include "java/io/InputStream.h"
#include "java/util/Date.h"

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleOpenpgpPGPLiteralData)

NSString *LibOrgBouncycastleOpenpgpPGPLiteralData_CONSOLE = @"_CONSOLE";
JavaUtilDate *LibOrgBouncycastleOpenpgpPGPLiteralData_NOW;

@implementation LibOrgBouncycastleOpenpgpPGPLiteralData

+ (jchar)BINARY {
  return LibOrgBouncycastleOpenpgpPGPLiteralData_BINARY;
}

+ (jchar)TEXT {
  return LibOrgBouncycastleOpenpgpPGPLiteralData_TEXT;
}

+ (jchar)UTF8 {
  return LibOrgBouncycastleOpenpgpPGPLiteralData_UTF8;
}

+ (NSString *)CONSOLE {
  return LibOrgBouncycastleOpenpgpPGPLiteralData_CONSOLE;
}

+ (JavaUtilDate *)NOW {
  return LibOrgBouncycastleOpenpgpPGPLiteralData_NOW;
}

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)pIn {
  LibOrgBouncycastleOpenpgpPGPLiteralData_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, pIn);
  return self;
}

- (jint)getFormat {
  return [((LibOrgBouncycastleBcpgLiteralDataPacket *) nil_chk(data_)) getFormat];
}

- (NSString *)getFileName {
  return [((LibOrgBouncycastleBcpgLiteralDataPacket *) nil_chk(data_)) getFileName];
}

- (IOSByteArray *)getRawFileName {
  return [((LibOrgBouncycastleBcpgLiteralDataPacket *) nil_chk(data_)) getRawFileName];
}

- (JavaUtilDate *)getModificationTime {
  return new_JavaUtilDate_initWithLong_([((LibOrgBouncycastleBcpgLiteralDataPacket *) nil_chk(data_)) getModificationTime]);
}

- (JavaIoInputStream *)getInputStream {
  return [((LibOrgBouncycastleBcpgLiteralDataPacket *) nil_chk(data_)) getInputStream];
}

- (JavaIoInputStream *)getDataStream {
  return [self getInputStream];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(getFormat);
  methods[2].selector = @selector(getFileName);
  methods[3].selector = @selector(getRawFileName);
  methods[4].selector = @selector(getModificationTime);
  methods[5].selector = @selector(getInputStream);
  methods[6].selector = @selector(getDataStream);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BINARY", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralData_BINARY, 0x19, -1, -1, -1, -1 },
    { "TEXT", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralData_TEXT, 0x19, -1, -1, -1, -1 },
    { "UTF8", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralData_UTF8, 0x19, -1, -1, -1, -1 },
    { "CONSOLE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "NOW", "LJavaUtilDate;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "data_", "LLibOrgBouncycastleBcpgLiteralDataPacket;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;", &LibOrgBouncycastleOpenpgpPGPLiteralData_CONSOLE, &LibOrgBouncycastleOpenpgpPGPLiteralData_NOW };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpPGPLiteralData = { "PGPLiteralData", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x1, 7, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpPGPLiteralData;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleOpenpgpPGPLiteralData class]) {
    LibOrgBouncycastleOpenpgpPGPLiteralData_NOW = new_JavaUtilDate_initWithLong_(0LL);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleOpenpgpPGPLiteralData)
  }
}

@end

void LibOrgBouncycastleOpenpgpPGPLiteralData_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleOpenpgpPGPLiteralData *self, LibOrgBouncycastleBcpgBCPGInputStream *pIn) {
  NSObject_init(self);
  self->data_ = (LibOrgBouncycastleBcpgLiteralDataPacket *) cast_chk([((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(pIn)) readPacket], [LibOrgBouncycastleBcpgLiteralDataPacket class]);
}

LibOrgBouncycastleOpenpgpPGPLiteralData *new_LibOrgBouncycastleOpenpgpPGPLiteralData_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *pIn) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralData, initWithLibOrgBouncycastleBcpgBCPGInputStream_, pIn)
}

LibOrgBouncycastleOpenpgpPGPLiteralData *create_LibOrgBouncycastleOpenpgpPGPLiteralData_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *pIn) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralData, initWithLibOrgBouncycastleBcpgBCPGInputStream_, pIn)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpPGPLiteralData)
