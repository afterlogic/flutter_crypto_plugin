//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JceProviderJCEECPrivateKey.java
//

#ifndef JceProviderJCEECPrivateKey_H
#define JceProviderJCEECPrivateKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECPointEncoder.h"
#include "J2ObjC_header.h"
#include "JceECPrivateKey.h"
#include "PKCS12BagAttributeCarrier.h"
#include "java/security/interfaces/ECPrivateKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPrivateKeySpec;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class LibOrgBouncycastleCryptoParamsECPrivateKeyParameters;
@class LibOrgBouncycastleJceProviderJCEECPublicKey;
@class LibOrgBouncycastleJceSpecECParameterSpec;
@class LibOrgBouncycastleJceSpecECPrivateKeySpec;
@protocol JavaUtilEnumeration;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey : NSObject < JavaSecurityInterfacesECPrivateKey, LibOrgBouncycastleJceInterfacesJceECPrivateKey, LibOrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier, LibOrgBouncycastleJceInterfacesECPointEncoder >

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pubKey
       withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pubKey
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceSpecECPrivateKeySpec:(LibOrgBouncycastleJceSpecECPrivateKeySpec *)spec;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
      withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey:(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *)key;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (id<JavaUtilEnumeration>)getBagAttributeKeys;

- (JavaMathBigInteger *)getD;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (JavaMathBigInteger *)getS;

- (NSUInteger)hash;

- (void)setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)attribute;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)init;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(id<JavaSecurityInterfacesECPrivateKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(id<JavaSecurityInterfacesECPrivateKey> key);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JceProviderJCEECPrivateKey_H
