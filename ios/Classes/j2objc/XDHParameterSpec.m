//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/XDHParameterSpec.java
//

#include "ASN1ObjectIdentifier.h"
#include "EdECObjectIdentifiers.h"
#include "J2ObjC_source.h"
#include "XDHParameterSpec.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleJcajceSpecXDHParameterSpec () {
 @public
  NSString *curveName_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecXDHParameterSpec, curveName_, NSString *)

NSString *LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519 = @"X25519";
NSString *LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448 = @"X448";

@implementation LibOrgBouncycastleJcajceSpecXDHParameterSpec

+ (NSString *)X25519 {
  return LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519;
}

+ (NSString *)X448 {
  return LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448;
}

- (instancetype)initWithNSString:(NSString *)curveName {
  LibOrgBouncycastleJcajceSpecXDHParameterSpec_initWithNSString_(self, curveName);
  return self;
}

- (NSString *)getCurveName {
  return curveName_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getCurveName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "X25519", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "X448", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "curveName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", &LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519, &LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448 };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceSpecXDHParameterSpec = { "XDHParameterSpec", "lib.org.bouncycastle.jcajce.spec", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceSpecXDHParameterSpec;
}

@end

void LibOrgBouncycastleJcajceSpecXDHParameterSpec_initWithNSString_(LibOrgBouncycastleJcajceSpecXDHParameterSpec *self, NSString *curveName) {
  NSObject_init(self);
  if ([((NSString *) nil_chk(curveName)) java_equalsIgnoreCase:LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519]) {
    self->curveName_ = LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519;
  }
  else if ([curveName java_equalsIgnoreCase:LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448]) {
    self->curveName_ = LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448;
  }
  else if ([curveName isEqual:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_X25519))) getId]]) {
    self->curveName_ = LibOrgBouncycastleJcajceSpecXDHParameterSpec_X25519;
  }
  else if ([curveName isEqual:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_X448))) getId]]) {
    self->curveName_ = LibOrgBouncycastleJcajceSpecXDHParameterSpec_X448;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unrecognized curve name: ", curveName));
  }
}

LibOrgBouncycastleJcajceSpecXDHParameterSpec *new_LibOrgBouncycastleJcajceSpecXDHParameterSpec_initWithNSString_(NSString *curveName) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceSpecXDHParameterSpec, initWithNSString_, curveName)
}

LibOrgBouncycastleJcajceSpecXDHParameterSpec *create_LibOrgBouncycastleJcajceSpecXDHParameterSpec_initWithNSString_(NSString *curveName) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceSpecXDHParameterSpec, initWithNSString_, curveName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceSpecXDHParameterSpec)
