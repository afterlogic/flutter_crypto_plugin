//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/JcajceSEED.java
//

#include "ASN1ObjectIdentifier.h"
#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseSecretKeyFactory.h"
#include "BaseWrapCipher.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "CBCBlockCipher.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "JcajceSEED.h"
#include "KISAObjectIdentifiers.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "SEEDEngine.h"
#include "SEEDWrapEngine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED = { "JcajceSEED", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesSEEDEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSEEDEngine_init()), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap = { "Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesSEEDWrapEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"SEED", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC = { "CMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSEEDEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC = { "GMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSEEDEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory = { "KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, @"SEED", nil);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSEEDEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-SEED", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for SEED parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"SEED"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"SEED IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameters.SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC)) withNSString:@"JcajceSEED"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC)) withNSString:@"JcajceSEED"];
  [provider addAlgorithmWithNSString:@"Cipher.SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher.SEEDWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) withNSString:@"SEEDWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.SEEDKW" withNSString:@"SEEDWRAP"];
  [provider addAlgorithmWithNSString:@"KeyGenerator.JcajceSEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.JcajceSEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC) withNSString:@"JcajceSEED"];
  [self addCMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$CMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyGen")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$GMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$KeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SEED" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricJcajceSEED;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings)
