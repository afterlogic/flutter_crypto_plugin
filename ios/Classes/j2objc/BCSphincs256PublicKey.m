//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/sphincs/BCSphincs256PublicKey.java
//

#include "ASN1Encodable.h"
#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "AsymmetricKeyParameter.h"
#include "BCSphincs256PublicKey.h"
#include "CipherParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PQCObjectIdentifiers.h"
#include "PqcCryptoPublicKeyFactory.h"
#include "PqcSubjectPublicKeyInfoFactory.h"
#include "SPHINCS256KeyParams.h"
#include "SPHINCSPublicKeyParameters.h"
#include "SubjectPublicKeyInfo.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"

@interface LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey () {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest_;
  LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *params_;
}

- (void)init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, treeDigest_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, params_, LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *)

inline jlong LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, serialVersionUID, jlong)

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)treeDigest
  withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters:(LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *)params {
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_(self, treeDigest, params);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
  return self;
}

- (void)init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if ([o isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey class]]) {
    LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *otherKey = (LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *) o;
    return [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(treeDigest_)) isEqual:((LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *) nil_chk(otherKey))->treeDigest_] && LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params_)) getKeyData], [((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(otherKey->params_)) getKeyData]);
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(treeDigest_)) hash]) + 37 * LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_([((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params_)) getKeyData]);
}

- (NSString *)getAlgorithm {
  return @"SPHINCS-256";
}

- (IOSByteArray *)getEncoded {
  @try {
    LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pki;
    if ([((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params_)) getTreeDigest] != nil) {
      pki = LibOrgBouncycastlePqcCryptoUtilPqcSubjectPublicKeyInfoFactory_createSubjectPublicKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(params_);
    }
    else {
      LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256), new_LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest_)));
      pki = new_LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(algorithmIdentifier, [((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params_)) getKeyData]);
    }
    return [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (NSString *)getFormat {
  return @"X.509";
}

- (IOSByteArray *)getKeyData {
  return [((LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params_)) getKeyData];
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getTreeDigest {
  return treeDigest_;
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)getKeyParams {
  return params_;
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[2].selector = @selector(init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(getAlgorithm);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(getFormat);
  methods[8].selector = @selector(getKeyData);
  methods[9].selector = @selector(getTreeDigest);
  methods[10].selector = @selector(getKeyParams);
  methods[11].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[12].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "treeDigest_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "params_", "LLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LJavaIoIOException;", "init", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey = { "BCSphincs256PublicKey", "lib.org.bouncycastle.pqc.jcajce.provider.sphincs", ptrTable, methods, fields, 7, 0x1, 13, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey;
}

@end

void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *params) {
  NSObject_init(self);
  self->treeDigest_ = treeDigest;
  self->params_ = params;
}

LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *new_LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_, treeDigest, params)
}

LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *create_LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_, treeDigest, params)
}

void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  NSObject_init(self);
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}

LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *new_LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}

LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *create_LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}

void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  self->treeDigest_ = [((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams *) nil_chk(LibOrgBouncycastlePqcAsn1SPHINCS256KeyParams_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm])) getParameters]))) getTreeDigest])) getAlgorithm];
  self->params_ = (LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) cast_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(keyInfo), [LibOrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters class]);
}

void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(enc));
}

void LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderSphincsBCSphincs256PublicKey)
