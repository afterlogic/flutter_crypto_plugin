//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cryptopro/GOST3410PublicKeyAlgParameters.java
//

#ifndef GOST3410PublicKeyAlgParameters_H
#define GOST3410PublicKeyAlgParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)publicKeyParamSet
                              withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)digestParamSet;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)publicKeyParamSet
                              withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)digestParamSet
                              withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)encryptionParamSet;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getDigestParamSet;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getEncryptionParamSet;

+ (LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                             withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getPublicKeyParamSet;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *new_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *create_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *new_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *create_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *publicKeyParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *digestParamSet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *new_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *create_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GOST3410PublicKeyAlgParameters_H
