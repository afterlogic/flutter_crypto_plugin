//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/NTRUEncryptionKeyGenerationParameters.java
//

#ifndef NTRUEncryptionKeyGenerationParameters_H
#define NTRUEncryptionKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters < NSCopying > {
 @public
  jint N_;
  jint q_;
  jint df_;
  jint df1_;
  jint df2_;
  jint df3_;
  jint dr_;
  jint dr1_;
  jint dr2_;
  jint dr3_;
  jint dg_;
  jint llen_;
  jint maxMsgLenBytes_;
  jint db_;
  jint bufferLenBits_;
  jint bufferLenTrits_;
  jint dm0_;
  jint pkLen_;
  jint c_;
  jint minCallsR_;
  jint minCallsMask_;
  jboolean hashSeed_;
  IOSByteArray *oid_;
  jboolean sparse_;
  jboolean fastFp_;
  jint polyType_;
  id<LibOrgBouncycastleCryptoDigest> hashAlg_;
}
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *EES1087EP2 NS_SWIFT_NAME(EES1087EP2);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *EES1171EP1 NS_SWIFT_NAME(EES1171EP1);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *EES1499EP1 NS_SWIFT_NAME(EES1499EP1);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *APR2011_439 NS_SWIFT_NAME(APR2011_439);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *APR2011_439_FAST NS_SWIFT_NAME(APR2011_439_FAST);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *APR2011_743 NS_SWIFT_NAME(APR2011_743);
@property (readonly, class) LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *APR2011_743_FAST NS_SWIFT_NAME(APR2011_743_FAST);

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)EES1087EP2;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)EES1171EP1;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)EES1499EP1;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)APR2011_439;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)APR2011_439_FAST;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)APR2011_743;

+ (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)APR2011_743_FAST;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype __nonnull)initWithInt:(jint)N
                              withInt:(jint)q
                              withInt:(jint)df
                              withInt:(jint)dm0
                              withInt:(jint)db
                              withInt:(jint)c
                              withInt:(jint)minCallsR
                              withInt:(jint)minCallsMask
                          withBoolean:(jboolean)hashSeed
                        withByteArray:(IOSByteArray *)oid
                          withBoolean:(jboolean)sparse
                          withBoolean:(jboolean)fastFp
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hashAlg;

- (instancetype __nonnull)initWithInt:(jint)N
                              withInt:(jint)q
                              withInt:(jint)df1
                              withInt:(jint)df2
                              withInt:(jint)df3
                              withInt:(jint)dm0
                              withInt:(jint)db
                              withInt:(jint)c
                              withInt:(jint)minCallsR
                              withInt:(jint)minCallsMask
                          withBoolean:(jboolean)hashSeed
                        withByteArray:(IOSByteArray *)oid
                          withBoolean:(jboolean)sparse
                          withBoolean:(jboolean)fastFp
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hashAlg;

- (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)java_clone;

- (jboolean)isEqual:(id)obj;

- (LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)getEncryptionParameters;

- (jint)getMaxMessageLength;

- (NSUInteger)hash;

- (NSString *)description;

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)os;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, oid_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, hashAlg_, id<LibOrgBouncycastleCryptoDigest>)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_EES1087EP2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_EES1087EP2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, EES1087EP2, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_EES1171EP1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_EES1171EP1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, EES1171EP1, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_EES1499EP1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_EES1499EP1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, EES1499EP1, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_APR2011_439(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_APR2011_439;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, APR2011_439, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_APR2011_439_FAST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_APR2011_439_FAST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, APR2011_439_FAST, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_APR2011_743(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_APR2011_743;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, APR2011_743, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

inline LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_get_APR2011_743_FAST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_APR2011_743_FAST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters, APR2011_743_FAST, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *self, jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint df, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *self, jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withBoolean_withByteArray_withBoolean_withBoolean_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint df1, jint df2, jint df3, jint dm0, jint db, jint c, jint minCallsR, jint minCallsMask, jboolean hashSeed, IOSByteArray *oid, jboolean sparse, jboolean fastFp, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithJavaIoInputStream_(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *self, JavaIoInputStream *is);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters_initWithJavaIoInputStream_(JavaIoInputStream *is);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NTRUEncryptionKeyGenerationParameters_H
