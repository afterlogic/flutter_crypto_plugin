//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/keybox/KeyInformation.java
//

#ifndef KeyInformation_H
#define KeyInformation_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleGpgKeyboxKeyInformation : NSObject

#pragma mark Public

- (IOSByteArray *)getFiller;

- (IOSByteArray *)getFingerprint;

- (jint)getKeyFlags;

- (IOSByteArray *)getKeyID;

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)fingerprint
                                   withLong:(jlong)offsetToKeyID
                                    withInt:(jint)keyFlags
                              withByteArray:(IOSByteArray *)filler
                              withByteArray:(IOSByteArray *)keyID;

+ (LibOrgBouncycastleGpgKeyboxKeyInformation *)getInstanceWithId:(id)src
                                                         withInt:(jint)expectedSize
                                                         withInt:(jint)base;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleGpgKeyboxKeyInformation)

FOUNDATION_EXPORT void LibOrgBouncycastleGpgKeyboxKeyInformation_initWithByteArray_withLong_withInt_withByteArray_withByteArray_(LibOrgBouncycastleGpgKeyboxKeyInformation *self, IOSByteArray *fingerprint, jlong offsetToKeyID, jint keyFlags, IOSByteArray *filler, IOSByteArray *keyID);

FOUNDATION_EXPORT LibOrgBouncycastleGpgKeyboxKeyInformation *new_LibOrgBouncycastleGpgKeyboxKeyInformation_initWithByteArray_withLong_withInt_withByteArray_withByteArray_(IOSByteArray *fingerprint, jlong offsetToKeyID, jint keyFlags, IOSByteArray *filler, IOSByteArray *keyID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleGpgKeyboxKeyInformation *create_LibOrgBouncycastleGpgKeyboxKeyInformation_initWithByteArray_withLong_withInt_withByteArray_withByteArray_(IOSByteArray *fingerprint, jlong offsetToKeyID, jint keyFlags, IOSByteArray *filler, IOSByteArray *keyID);

FOUNDATION_EXPORT LibOrgBouncycastleGpgKeyboxKeyInformation *LibOrgBouncycastleGpgKeyboxKeyInformation_getInstanceWithId_withInt_withInt_(id src, jint expectedSize, jint base);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleGpgKeyboxKeyInformation)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyInformation_H
