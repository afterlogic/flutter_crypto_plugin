//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/interfaces/StateAwareSignature.java
//

#include "J2ObjC_source.h"
#include "StateAwareSignature.h"

@interface LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature : NSObject

@end

@implementation LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 6, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 7, -1, -1, -1 },
    { NULL, "I", 0x401, 8, 9, 7, -1, -1, -1 },
    { NULL, "Z", 0x401, 10, 11, 7, -1, -1, -1 },
    { NULL, "Z", 0x401, 10, 9, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 13, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 11, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 9, 7, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 14, 7, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPrivateKey;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initVerifyWithJavaSecurityPublicKey:);
  methods[1].selector = @selector(initVerifyWithJavaSecurityCertCertificate:);
  methods[2].selector = @selector(initSignWithJavaSecurityPrivateKey:);
  methods[3].selector = @selector(initSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[4].selector = @selector(sign);
  methods[5].selector = @selector(signWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(verifyWithByteArray:);
  methods[7].selector = @selector(verifyWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(updateWithByte:);
  methods[9].selector = @selector(updateWithByteArray:);
  methods[10].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[11].selector = @selector(updateWithJavaNioByteBuffer:);
  methods[12].selector = @selector(getAlgorithm);
  methods[13].selector = @selector(isSigningCapable);
  methods[14].selector = @selector(getUpdatedPrivateKey);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "initVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "LJavaSecurityCertCertificate;", "initSign", "LJavaSecurityPrivateKey;", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecuritySignatureException;", "sign", "[BII", "verify", "[B", "update", "B", "LJavaNioByteBuffer;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature = { "StateAwareSignature", "lib.org.bouncycastle.pqc.jcajce.interfaces", ptrTable, methods, NULL, 7, 0x609, 15, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature)
