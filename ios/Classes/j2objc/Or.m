//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/key/util/Or.java
//

#include "J2ObjC_source.h"
#include "Or.h"
#include "PGPPublicKey.h"
#include "PGPSecretKey.h"
#include "PublicKeySelectionStrategy.h"
#include "SecretKeySelectionStrategy.h"

@interface LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy () {
 @public
  LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left_;
  LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right_;
}

@end

J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy, left_, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy, right_, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)

@interface LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy () {
 @public
  LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left_;
  LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right_;
}

@end

J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy, left_, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy, right_, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)

@implementation LibComAfterlogicPgpKeySelectionKeyUtilOr

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyUtilOr_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy;LLibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyUtilOr = { "Or", "lib.com.afterlogic.pgp.key.selection.key.util", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyUtilOr;
}

@end

void LibComAfterlogicPgpKeySelectionKeyUtilOr_init(LibComAfterlogicPgpKeySelectionKeyUtilOr *self) {
  NSObject_init(self);
}

LibComAfterlogicPgpKeySelectionKeyUtilOr *new_LibComAfterlogicPgpKeySelectionKeyUtilOr_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr, init)
}

LibComAfterlogicPgpKeySelectionKeyUtilOr *create_LibComAfterlogicPgpKeySelectionKeyUtilOr_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyUtilOr)

@implementation LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy

- (instancetype)initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)left
                    withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *)right {
  LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(self, left, right);
  return self;
}

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPPublicKey *)key {
  return [((LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *) nil_chk(left_)) acceptWithId:identifier withId:key] || [((LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *) nil_chk(right_)) acceptWithId:identifier withId:key];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy:);
  methods[1].selector = @selector(acceptWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "left_", "LLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "right_", "LLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy;LLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy;", "(Llib/com/afterlogic/pgp/key/selection/key/PublicKeySelectionStrategy<TO;>;Llib/com/afterlogic/pgp/key/selection/key/PublicKeySelectionStrategy<TO;>;)V", "accept", "LNSObject;LLibOrgBouncycastleOpenpgpPGPPublicKey;", "(TO;Llib/org/bouncycastle/openpgp/PGPPublicKey;)Z", "Llib/com/afterlogic/pgp/key/selection/key/PublicKeySelectionStrategy<TO;>;", "LLibComAfterlogicPgpKeySelectionKeyUtilOr;", "<O:Ljava/lang/Object;>Llib/com/afterlogic/pgp/key/selection/key/PublicKeySelectionStrategy<TO;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy = { "PubKeySelectionStrategy", "lib.com.afterlogic.pgp.key.selection.key.util", ptrTable, methods, fields, 7, 0x9, 2, 2, 6, -1, -1, 7, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy *self, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right) {
  LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_init(self);
  self->left_ = left;
  self->right_ = right;
}

LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy, initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_, left, right)
}

LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy *right) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy, initWithLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_, left, right)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyUtilOr_PubKeySelectionStrategy)

@implementation LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy

- (instancetype)initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)left
                    withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *)right {
  LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(self, left, right);
  return self;
}

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKey *)key {
  return [((LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *) nil_chk(left_)) acceptWithId:identifier withId:key] || [((LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *) nil_chk(right_)) acceptWithId:identifier withId:key];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy:);
  methods[1].selector = @selector(acceptWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "left_", "LLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "right_", "LLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy;LLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy;", "(Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<TO;>;Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<TO;>;)V", "accept", "LNSObject;LLibOrgBouncycastleOpenpgpPGPSecretKey;", "(TO;Llib/org/bouncycastle/openpgp/PGPSecretKey;)Z", "Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<TO;>;", "LLibComAfterlogicPgpKeySelectionKeyUtilOr;", "<O:Ljava/lang/Object;>Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<TO;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy = { "SecKeySelectionStrategy", "lib.com.afterlogic.pgp.key.selection.key.util", ptrTable, methods, fields, 7, 0x9, 2, 2, 6, -1, -1, 7, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy *self, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right) {
  LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_init(self);
  self->left_ = left;
  self->right_ = right;
}

LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy, initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_, left, right)
}

LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy_initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_(LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *left, LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy *right) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy, initWithLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_withLibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_, left, right)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyUtilOr_SecKeySelectionStrategy)
