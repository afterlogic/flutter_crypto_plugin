//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Asn1CmsEncryptedData.java
//

#ifndef Asn1CmsEncryptedData_H
#define Asn1CmsEncryptedData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1CmsEncryptedContentInfo;

@interface LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo:(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)encInfo;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo:(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)encInfo
                                              withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)unprotectedAttrs;

- (LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)getEncryptedContentInfo;

+ (LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Set *)getUnprotectedAttrs;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_(LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *self, LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *new_LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *create_LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *self, LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo, LibOrgBouncycastleAsn1ASN1Set *unprotectedAttrs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *new_LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo, LibOrgBouncycastleAsn1ASN1Set *unprotectedAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData *create_LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData_initWithLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *encInfo, LibOrgBouncycastleAsn1ASN1Set *unprotectedAttrs);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAsn1CmsEncryptedData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1CmsEncryptedData_H
