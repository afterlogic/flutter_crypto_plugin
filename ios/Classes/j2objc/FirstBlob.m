//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/keybox/FirstBlob.java
//

#include "Arrays.h"
#include "Blob.h"
#include "BlobType.h"
#include "FirstBlob.h"
#include "Hex.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyBoxByteBuffer.h"
#include "java/io/IOException.h"

@interface LibOrgBouncycastleGpgKeyboxFirstBlob () {
 @public
  jint headerFlags_;
  jlong fileCreatedAt_;
  jlong lastMaintenanceRun_;
}

- (instancetype)initWithInt:(jint)base
                   withLong:(jlong)length
withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)type
                    withInt:(jint)version_
                    withInt:(jint)headerFlags
                   withLong:(jlong)fileCreatedAt
                   withLong:(jlong)lastMaintenanceRun;

@end

__attribute__((unused)) static void LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(LibOrgBouncycastleGpgKeyboxFirstBlob *self, jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun);

__attribute__((unused)) static LibOrgBouncycastleGpgKeyboxFirstBlob *new_LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleGpgKeyboxFirstBlob *create_LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun);

@implementation LibOrgBouncycastleGpgKeyboxFirstBlob

- (instancetype)initWithInt:(jint)base
                   withLong:(jlong)length
withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)type
                    withInt:(jint)version_
                    withInt:(jint)headerFlags
                   withLong:(jlong)fileCreatedAt
                   withLong:(jlong)lastMaintenanceRun {
  LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(self, base, length, type, version_, headerFlags, fileCreatedAt, lastMaintenanceRun);
  return self;
}

+ (LibOrgBouncycastleGpgKeyboxFirstBlob *)parseContentWithInt:(jint)base
                                                     withLong:(jlong)length
                      withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)type
                                                      withInt:(jint)version_
              withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer:(LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *)buffer {
  return LibOrgBouncycastleGpgKeyboxFirstBlob_parseContentWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer_(base, length, type, version_, buffer);
}

- (jint)getHeaderFlags {
  return headerFlags_;
}

- (jlong)getFileCreatedAt {
  return fileCreatedAt_;
}

- (jlong)getLastMaintenanceRun {
  return lastMaintenanceRun_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleGpgKeyboxFirstBlob;", 0x8, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withLong:withLibOrgBouncycastleGpgKeyboxBlobType:withInt:withInt:withLong:withLong:);
  methods[1].selector = @selector(parseContentWithInt:withLong:withLibOrgBouncycastleGpgKeyboxBlobType:withInt:withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer:);
  methods[2].selector = @selector(getHeaderFlags);
  methods[3].selector = @selector(getFileCreatedAt);
  methods[4].selector = @selector(getLastMaintenanceRun);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "headerFlags_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fileCreatedAt_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lastMaintenanceRun_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IJLLibOrgBouncycastleGpgKeyboxBlobType;IIJJ", "parseContent", "IJLLibOrgBouncycastleGpgKeyboxBlobType;ILLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleGpgKeyboxFirstBlob = { "FirstBlob", "lib.org.bouncycastle.gpg.keybox", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleGpgKeyboxFirstBlob;
}

@end

void LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(LibOrgBouncycastleGpgKeyboxFirstBlob *self, jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun) {
  LibOrgBouncycastleGpgKeyboxBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_(self, base, length, type, version_);
  self->headerFlags_ = headerFlags;
  self->fileCreatedAt_ = fileCreatedAt;
  self->lastMaintenanceRun_ = lastMaintenanceRun;
}

LibOrgBouncycastleGpgKeyboxFirstBlob *new_LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleGpgKeyboxFirstBlob, initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_, base, length, type, version_, headerFlags, fileCreatedAt, lastMaintenanceRun)
}

LibOrgBouncycastleGpgKeyboxFirstBlob *create_LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, jint headerFlags, jlong fileCreatedAt, jlong lastMaintenanceRun) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleGpgKeyboxFirstBlob, initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_, base, length, type, version_, headerFlags, fileCreatedAt, lastMaintenanceRun)
}

LibOrgBouncycastleGpgKeyboxFirstBlob *LibOrgBouncycastleGpgKeyboxFirstBlob_parseContentWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *buffer) {
  LibOrgBouncycastleGpgKeyboxFirstBlob_initialize();
  jint headerFlags = [((LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *) nil_chk(buffer)) u16];
  IOSByteArray *magic = [IOSByteArray newArrayWithLength:4];
  [buffer bNWithByteArray:magic];
  if (!LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(magic, JreLoadStatic(LibOrgBouncycastleGpgKeyboxBlob, magicBytes))) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$$$", @"Incorrect magic expecting ", LibOrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_(JreLoadStatic(LibOrgBouncycastleGpgKeyboxBlob, magicBytes)), @" but got ", LibOrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_(magic)));
  }
  [buffer u32];
  jlong fileCreatedAt = [buffer u32];
  jlong lastMaintenanceRun = [buffer u32];
  [buffer u32];
  [buffer u32];
  return new_LibOrgBouncycastleGpgKeyboxFirstBlob_initWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withInt_withLong_withLong_(base, length, type, version_, headerFlags, fileCreatedAt, lastMaintenanceRun);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleGpgKeyboxFirstBlob)
