//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/UserIDPacket.java
//

#ifndef UserIDPacket_H
#define UserIDPacket_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ContainedPacket.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleBcpgBCPGInputStream;
@class LibOrgBouncycastleBcpgBCPGOutputStream;

@interface LibOrgBouncycastleBcpgUserIDPacket : LibOrgBouncycastleBcpgContainedPacket

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)rawID;

- (instancetype __nonnull)initWithNSString:(NSString *)id_;

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg;

- (jboolean)isEqual:(id)o;

- (NSString *)getID;

- (IOSByteArray *)getRawID;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgUserIDPacket)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgUserIDPacket *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(LibOrgBouncycastleBcpgUserIDPacket *self, NSString *id_);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(NSString *id_);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(LibOrgBouncycastleBcpgUserIDPacket *self, IOSByteArray *rawID);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(IOSByteArray *rawID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(IOSByteArray *rawID);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgUserIDPacket)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // UserIDPacket_H
