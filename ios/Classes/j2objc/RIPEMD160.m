//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/RIPEMD160.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "HMac.h"
#include "IANAObjectIdentifiers.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "PBE.h"
#include "PBESecretKeyFactory.h"
#include "RIPEMD160.h"
#include "RIPEMD160Digest.h"
#include "TeleTrusTObjectIdentifiers.h"

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest;LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac;LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator;LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac;LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory;LLibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160 = { "RIPEMD160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160 *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *d = (LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest class]);
  ((LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_initWithLibOrgBouncycastleCryptoDigestsRIPEMD160Digest_((LibOrgBouncycastleCryptoDigestsRIPEMD160Digest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsRIPEMD160Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest = { "Digest", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_init());
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac = { "HashMac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_init()));
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator = { "KeyGenerator", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator;
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACRIPEMD160", 160, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac = { "PBEWithHmac", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac;
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_RIPEMD160, 160);
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory = { "PBEWithHmacKeyFactory", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithHmacRIPEMD160", nil, false, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_RIPEMD160, 160, 0);
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.RIPEMD160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, @"$Digest")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1TeletrustTeleTrusTObjectIdentifiers, ripemd160)) withNSString:@"RIPEMD160"];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"RIPEMD160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, @"$HashMac") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, @"$KeyGenerator")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"RIPEMD160" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacRIPEMD160)];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHHMACRIPEMD160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, @"$PBEWithHmacKeyFactory")];
  [provider addAlgorithmWithNSString:@"Mac.PBEWITHHMACRIPEMD160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, @"$PBEWithHmac")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestRIPEMD160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestRIPEMD160_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings)
