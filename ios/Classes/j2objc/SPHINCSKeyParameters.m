//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/sphincs/SPHINCSKeyParameters.java
//

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_source.h"
#include "SPHINCSKeyParameters.h"

@interface LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters () {
 @public
  NSString *treeDigest_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters, treeDigest_, NSString *)

NSString *LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA512_256 = @"SHA-512/256";
NSString *LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA3_256 = @"SHA3-256";

@implementation LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters

+ (NSString *)SHA512_256 {
  return LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA512_256;
}

+ (NSString *)SHA3_256 {
  return LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA3_256;
}

- (instancetype)initWithBoolean:(jboolean)isPrivateKey
                   withNSString:(NSString *)treeDigest {
  LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(self, isPrivateKey, treeDigest);
  return self;
}

- (NSString *)getTreeDigest {
  return treeDigest_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withNSString:);
  methods[1].selector = @selector(getTreeDigest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA512_256", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "SHA3_256", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "treeDigest_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLNSString;", &LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA512_256, &LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA3_256 };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters = { "SPHINCSKeyParameters", "lib.org.bouncycastle.pqc.crypto.sphincs", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters;
}

@end

void LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *self, jboolean isPrivateKey, NSString *treeDigest) {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, isPrivateKey);
  self->treeDigest_ = treeDigest;
}

LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *new_LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters, initWithBoolean_withNSString_, isPrivateKey, treeDigest)
}

LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *create_LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters, initWithBoolean_withNSString_, isPrivateKey, treeDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters)
