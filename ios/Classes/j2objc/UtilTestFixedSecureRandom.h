//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/test/UtilTestFixedSecureRandom.java
//

#ifndef UtilTestFixedSecureRandom_H
#define UtilTestFixedSecureRandom_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/SecureRandom.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaSecurityProvider;
@class JavaSecuritySecureRandomSpi;

@interface LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom : JavaSecuritySecureRandom

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)value;

- (instancetype __nonnull)initWithByteArray2:(IOSObjectArray *)values;

- (instancetype __nonnull)initWithLibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_SourceArray:(IOSObjectArray *)sources;

- (IOSByteArray *)generateSeedWithInt:(jint)numBytes;

- (jboolean)isExhausted;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes;

- (jint)nextInt;

- (jlong)nextLong;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaSecuritySecureRandomSpi:(JavaSecuritySecureRandomSpi *)arg0
                                     withJavaSecurityProvider:(JavaSecurityProvider *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *self, IOSByteArray *value);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray_(IOSByteArray *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray_(IOSByteArray *value);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray2_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *self, IOSObjectArray *values);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray2_(IOSObjectArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithByteArray2_(IOSObjectArray *values);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithLibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_SourceArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *self, IOSObjectArray *sources);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithLibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_SourceArray_(IOSObjectArray *sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_initWithLibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_SourceArray_(IOSObjectArray *sources);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom)

@interface LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source : NSObject {
 @public
  IOSByteArray *data_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source, data_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source_initWithByteArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source *self, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source)

@interface LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data : LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data_initWithByteArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data *self, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Data)

@interface LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger : LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_Source

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithInt:(jint)bitLength
                        withByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithInt:(jint)bitLength
                         withNSString:(NSString *)hexData;

- (instancetype __nonnull)initWithNSString:(NSString *)hexData;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithByteArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *self, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withByteArray_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *self, jint bitLength, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withByteArray_(jint bitLength, IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withByteArray_(jint bitLength, IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithNSString_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *self, NSString *hexData);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithNSString_(NSString *hexData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithNSString_(NSString *hexData);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withNSString_(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *self, jint bitLength, NSString *hexData);

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *new_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withNSString_(jint bitLength, NSString *hexData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger *create_LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger_initWithInt_withNSString_(jint bitLength, NSString *hexData);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilTestUtilTestFixedSecureRandom_BigInteger)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // UtilTestFixedSecureRandom_H
