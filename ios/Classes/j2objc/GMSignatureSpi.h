//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/GMSignatureSpi.java
//

#ifndef GMSignatureSpi_H
#define GMSignatureSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/SignatureSpi.h"

@class IOSByteArray;
@class JavaSecurityAlgorithmParameters;
@class LibOrgBouncycastleCryptoSignersSM2Signer;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi : JavaSecuritySignatureSpi

#pragma mark Protected

- (id)engineGetParameterWithNSString:(NSString *)param;

- (JavaSecurityAlgorithmParameters *)engineGetParameters;

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey;

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey;

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params;

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value;

- (IOSByteArray *)engineSign;

- (void)engineUpdateWithByte:(jbyte)b;

- (void)engineUpdateWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)off
                          withInt:(jint)length;

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)bytes;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoSignersSM2Signer:(LibOrgBouncycastleCryptoSignersSM2Signer *)signer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_initWithLibOrgBouncycastleCryptoSignersSM2Signer_(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi *self, LibOrgBouncycastleCryptoSignersSM2Signer *signer);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_initWithLibOrgBouncycastleCryptoSignersSM2Signer_(LibOrgBouncycastleCryptoSignersSM2Signer *signer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_initWithLibOrgBouncycastleCryptoSignersSM2Signer_(LibOrgBouncycastleCryptoSignersSM2Signer *signer);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoSignersSM2Signer:(LibOrgBouncycastleCryptoSignersSM2Signer *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMSignatureSpi_sm3WithSM2)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSignatureSpi_H
