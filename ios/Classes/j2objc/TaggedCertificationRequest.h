//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/TaggedCertificationRequest.java
//

#ifndef TaggedCertificationRequest_H
#define TaggedCertificationRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmcBodyPartID;
@class LibOrgBouncycastleAsn1CmcCmcCertificationRequest;

@interface LibOrgBouncycastleAsn1CmcTaggedCertificationRequest : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmcBodyPartID:(LibOrgBouncycastleAsn1CmcBodyPartID *)bodyPartID
                 withLibOrgBouncycastleAsn1CmcCmcCertificationRequest:(LibOrgBouncycastleAsn1CmcCmcCertificationRequest *)certificationRequest;

+ (LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                   withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcTaggedCertificationRequest)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcTaggedCertificationRequest_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1CmcCmcCertificationRequest_(LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *self, LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1CmcCmcCertificationRequest *certificationRequest);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *new_LibOrgBouncycastleAsn1CmcTaggedCertificationRequest_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1CmcCmcCertificationRequest_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1CmcCmcCertificationRequest *certificationRequest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *create_LibOrgBouncycastleAsn1CmcTaggedCertificationRequest_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1CmcCmcCertificationRequest_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1CmcCmcCertificationRequest *certificationRequest);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *LibOrgBouncycastleAsn1CmcTaggedCertificationRequest_getInstanceWithId_(id o);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcTaggedCertificationRequest *LibOrgBouncycastleAsn1CmcTaggedCertificationRequest_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcTaggedCertificationRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TaggedCertificationRequest_H
