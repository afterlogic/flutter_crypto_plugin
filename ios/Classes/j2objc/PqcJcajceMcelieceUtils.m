//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/mceliece/PqcJcajceMcelieceUtils.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "DERNull.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "OIWObjectIdentifiers.h"
#include "PqcJcajceMcelieceUtils.h"
#include "java/lang/IllegalArgumentException.h"

@implementation LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigAlgIdWithNSString:(NSString *)digestName {
  return LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_getDigAlgIdWithNSString_(digestName);
}

+ (id<LibOrgBouncycastleCryptoDigest>)getDigestWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)digest {
  return LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_getDigestWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(digest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoDigest;", 0x8, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDigAlgIdWithNSString:);
  methods[2].selector = @selector(getDigestWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getDigAlgId", "LNSString;", "getDigest", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils = { "PqcJcajceMcelieceUtils", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, NULL, 7, 0x0, 3, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_init(LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils *new_LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils, init)
}

LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils *create_LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils, init)
}

LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_getDigAlgIdWithNSString_(NSString *digestName) {
  LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_initialize();
  if ([((NSString *) nil_chk(digestName)) isEqual:@"SHA-1"]) {
    return new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, idSHA1), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  if ([digestName isEqual:@"SHA-224"]) {
    return new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha224), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  if ([digestName isEqual:@"SHA-256"]) {
    return new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  if ([digestName isEqual:@"SHA-384"]) {
    return new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha384), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  if ([digestName isEqual:@"SHA-512"]) {
    return new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unrecognised digest algorithm: ", digestName));
}

id<LibOrgBouncycastleCryptoDigest> LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_getDigestWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digest) {
  LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_initialize();
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(digest)) getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, idSHA1)]) {
    return LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1();
  }
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([digest getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha224)]) {
    return LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224();
  }
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([digest getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256)]) {
    return LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256();
  }
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([digest getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha384)]) {
    return LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384();
  }
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([digest getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512)]) {
    return LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512();
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"unrecognised OID in digest algorithm identifier: ", [digest getAlgorithm]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils)
