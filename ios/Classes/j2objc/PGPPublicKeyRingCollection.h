//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPPublicKeyRingCollection.java
//

#ifndef PGPPublicKeyRingCollection_H
#define PGPPublicKeyRingCollection_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "Iterable.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class LibOrgBouncycastleOpenpgpPGPPublicKey;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRing;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator;

@interface LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection : NSObject < LibOrgBouncycastleUtilIterable >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)encoding
withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator:(id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator>)fingerPrintCalculator;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator:(id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator>)fingerPrintCalculator;

+ (LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)addPublicKeyRingWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)ringCollection
                                                                                   withLibOrgBouncycastleOpenpgpPGPPublicKeyRing:(LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)publicKeyRing;

- (jboolean)containsWithByteArray:(IOSByteArray *)fingerprint;

- (jboolean)containsWithLong:(jlong)keyID;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)outStream;

- (IOSByteArray *)getEncoded;

- (id<JavaUtilIterator>)getKeyRings;

- (id<JavaUtilIterator>)getKeyRingsWithNSString:(NSString *)userID;

- (id<JavaUtilIterator>)getKeyRingsWithNSString:(NSString *)userID
                                    withBoolean:(jboolean)matchPartial;

- (id<JavaUtilIterator>)getKeyRingsWithNSString:(NSString *)userID
                                    withBoolean:(jboolean)matchPartial
                                    withBoolean:(jboolean)ignoreCase;

- (id<JavaUtilIterator>)getKeysWithSignaturesByWithLong:(jlong)keyID;

- (LibOrgBouncycastleOpenpgpPGPPublicKey *)getPublicKeyWithByteArray:(IOSByteArray *)fingerprint;

- (LibOrgBouncycastleOpenpgpPGPPublicKey *)getPublicKeyWithLong:(jlong)keyID;

- (LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)getPublicKeyRingWithByteArray:(IOSByteArray *)fingerprint;

- (LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)getPublicKeyRingWithLong:(jlong)keyID;

- (id<JavaUtilIterator>)iterator;

+ (LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)removePublicKeyRingWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)ringCollection
                                                                                      withLibOrgBouncycastleOpenpgpPGPPublicKeyRing:(LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)publicKeyRing;

- (jint)size;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithByteArray_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *self, IOSByteArray *encoding, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithByteArray_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(IOSByteArray *encoding, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithByteArray_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(IOSByteArray *encoding, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *self, JavaIoInputStream *inArg, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(JavaIoInputStream *inArg, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(JavaIoInputStream *inArg, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator);

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaUtilCollection_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *self, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_addPublicKeyRingWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_withLibOrgBouncycastleOpenpgpPGPPublicKeyRing_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *ringCollection, LibOrgBouncycastleOpenpgpPGPPublicKeyRing *publicKeyRing);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_removePublicKeyRingWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_withLibOrgBouncycastleOpenpgpPGPPublicKeyRing_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *ringCollection, LibOrgBouncycastleOpenpgpPGPPublicKeyRing *publicKeyRing);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPPublicKeyRingCollection_H
