//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/io/pem/PemWriter.java
//

#include "Base64.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PemHeader.h"
#include "PemObject.h"
#include "PemObjectGenerator.h"
#include "PemWriter.h"
#include "Strings.h"
#include "java/io/BufferedWriter.h"
#include "java/io/Writer.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface LibOrgBouncycastleUtilIoPemPemWriter () {
 @public
  jint nlLength_;
  IOSCharArray *buf_;
}

- (void)writeEncodedWithByteArray:(IOSByteArray *)bytes;

- (void)writePreEncapsulationBoundaryWithNSString:(NSString *)type;

- (void)writePostEncapsulationBoundaryWithNSString:(NSString *)type;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoPemPemWriter, buf_, IOSCharArray *)

inline jint LibOrgBouncycastleUtilIoPemPemWriter_get_LINE_LENGTH(void);
#define LibOrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilIoPemPemWriter, LINE_LENGTH, jint)

__attribute__((unused)) static void LibOrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(LibOrgBouncycastleUtilIoPemPemWriter *self, IOSByteArray *bytes);

__attribute__((unused)) static void LibOrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(LibOrgBouncycastleUtilIoPemPemWriter *self, NSString *type);

__attribute__((unused)) static void LibOrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(LibOrgBouncycastleUtilIoPemPemWriter *self, NSString *type);

@implementation LibOrgBouncycastleUtilIoPemPemWriter

- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)outArg {
  LibOrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(self, outArg);
  return self;
}

- (jint)getOutputSizeWithLibOrgBouncycastleUtilIoPemPemObject:(LibOrgBouncycastleUtilIoPemPemObject *)obj {
  jint size = (2 * ([((NSString *) nil_chk([((LibOrgBouncycastleUtilIoPemPemObject *) nil_chk(obj)) getType])) java_length] + 10 + nlLength_)) + 6 + 4;
  if (![((id<JavaUtilList>) nil_chk([obj getHeaders])) isEmpty]) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk([obj getHeaders])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      LibOrgBouncycastleUtilIoPemPemHeader *hdr = (LibOrgBouncycastleUtilIoPemPemHeader *) cast_chk([it next], [LibOrgBouncycastleUtilIoPemPemHeader class]);
      size += [((NSString *) nil_chk([((LibOrgBouncycastleUtilIoPemPemHeader *) nil_chk(hdr)) getName])) java_length] + [@": " java_length] + [((NSString *) nil_chk([hdr getValue])) java_length] + nlLength_;
    }
    size += nlLength_;
  }
  jint dataLen = ((((IOSByteArray *) nil_chk([obj getContent]))->size_ + 2) / 3) * 4;
  size += dataLen + (((dataLen + LibOrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH - 1) / LibOrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH) * nlLength_);
  return size;
}

- (void)writeObjectWithLibOrgBouncycastleUtilIoPemPemObjectGenerator:(id<LibOrgBouncycastleUtilIoPemPemObjectGenerator>)objGen {
  LibOrgBouncycastleUtilIoPemPemObject *obj = [((id<LibOrgBouncycastleUtilIoPemPemObjectGenerator>) nil_chk(objGen)) generate];
  LibOrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(self, [((LibOrgBouncycastleUtilIoPemPemObject *) nil_chk(obj)) getType]);
  if (![((id<JavaUtilList>) nil_chk([obj getHeaders])) isEmpty]) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk([obj getHeaders])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      LibOrgBouncycastleUtilIoPemPemHeader *hdr = (LibOrgBouncycastleUtilIoPemPemHeader *) cast_chk([it next], [LibOrgBouncycastleUtilIoPemPemHeader class]);
      [self writeWithNSString:[((LibOrgBouncycastleUtilIoPemPemHeader *) nil_chk(hdr)) getName]];
      [self writeWithNSString:@": "];
      [self writeWithNSString:[hdr getValue]];
      [self newLine];
    }
    [self newLine];
  }
  LibOrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(self, [obj getContent]);
  LibOrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(self, [obj getType]);
}

- (void)writeEncodedWithByteArray:(IOSByteArray *)bytes {
  LibOrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(self, bytes);
}

- (void)writePreEncapsulationBoundaryWithNSString:(NSString *)type {
  LibOrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(self, type);
}

- (void)writePostEncapsulationBoundaryWithNSString:(NSString *)type {
  LibOrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(self, type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 9, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoWriter:);
  methods[1].selector = @selector(getOutputSizeWithLibOrgBouncycastleUtilIoPemPemObject:);
  methods[2].selector = @selector(writeObjectWithLibOrgBouncycastleUtilIoPemPemObjectGenerator:);
  methods[3].selector = @selector(writeEncodedWithByteArray:);
  methods[4].selector = @selector(writePreEncapsulationBoundaryWithNSString:);
  methods[5].selector = @selector(writePostEncapsulationBoundaryWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINE_LENGTH", "I", .constantValue.asInt = LibOrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "nlLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "buf_", "[C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoWriter;", "getOutputSize", "LLibOrgBouncycastleUtilIoPemPemObject;", "writeObject", "LLibOrgBouncycastleUtilIoPemPemObjectGenerator;", "LJavaIoIOException;", "writeEncoded", "[B", "writePreEncapsulationBoundary", "LNSString;", "writePostEncapsulationBoundary" };
  static const J2ObjcClassInfo _LibOrgBouncycastleUtilIoPemPemWriter = { "PemWriter", "lib.org.bouncycastle.util.io.pem", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleUtilIoPemPemWriter;
}

@end

void LibOrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(LibOrgBouncycastleUtilIoPemPemWriter *self, JavaIoWriter *outArg) {
  JavaIoBufferedWriter_initWithJavaIoWriter_(self, outArg);
  self->buf_ = [IOSCharArray newArrayWithLength:LibOrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH];
  NSString *nl = LibOrgBouncycastleUtilStrings_lineSeparator();
  if (nl != nil) {
    self->nlLength_ = [nl java_length];
  }
  else {
    self->nlLength_ = 2;
  }
}

LibOrgBouncycastleUtilIoPemPemWriter *new_LibOrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilIoPemPemWriter, initWithJavaIoWriter_, outArg)
}

LibOrgBouncycastleUtilIoPemPemWriter *create_LibOrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilIoPemPemWriter, initWithJavaIoWriter_, outArg)
}

void LibOrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(LibOrgBouncycastleUtilIoPemPemWriter *self, IOSByteArray *bytes) {
  bytes = LibOrgBouncycastleUtilEncodersBase64_encodeWithByteArray_(bytes);
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_; i += ((IOSCharArray *) nil_chk(self->buf_))->size_) {
    jint index = 0;
    while (index != ((IOSCharArray *) nil_chk(self->buf_))->size_) {
      if ((i + index) >= bytes->size_) {
        break;
      }
      *IOSCharArray_GetRef(self->buf_, index) = (jchar) IOSByteArray_Get(bytes, i + index);
      index++;
    }
    [self writeWithCharArray:self->buf_ withInt:0 withInt:index];
    [self newLine];
  }
}

void LibOrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(LibOrgBouncycastleUtilIoPemPemWriter *self, NSString *type) {
  [self writeWithNSString:JreStrcat("$$$", @"-----BEGIN ", type, @"-----")];
  [self newLine];
}

void LibOrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(LibOrgBouncycastleUtilIoPemPemWriter *self, NSString *type) {
  [self writeWithNSString:JreStrcat("$$$", @"-----END ", type, @"-----")];
  [self newLine];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleUtilIoPemPemWriter)
