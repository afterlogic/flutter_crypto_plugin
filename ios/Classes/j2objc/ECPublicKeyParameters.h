//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ECPublicKeyParameters.java
//

#ifndef ECPublicKeyParameters_H
#define ECPublicKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECKeyParameters.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoParamsECDomainParameters;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleCryptoParamsECPublicKeyParameters : LibOrgBouncycastleCryptoParamsECKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)Q
             withLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)params;

- (LibOrgBouncycastleMathEcECPoint *)getQ;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsECPublicKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *self, LibOrgBouncycastleMathEcECPoint *Q, LibOrgBouncycastleCryptoParamsECDomainParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECPublicKeyParameters *new_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleMathEcECPoint *Q, LibOrgBouncycastleCryptoParamsECDomainParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECPublicKeyParameters *create_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleMathEcECPoint *Q, LibOrgBouncycastleCryptoParamsECDomainParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsECPublicKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECPublicKeyParameters_H
