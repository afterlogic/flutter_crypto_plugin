//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/qualified/SemanticsInformation.java
//

#ifndef SemanticsInformation_H
#define SemanticsInformation_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)semanticsIdentifier;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)semanticsIdentifier
                              withLibOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)generalNames;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)generalNames;

+ (LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *)getInstanceWithId:(id)obj;

- (IOSObjectArray *)getNameRegistrationAuthorities;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getSemanticsIdentifier;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier, IOSObjectArray *generalNames);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *new_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier, IOSObjectArray *generalNames) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *create_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier, IOSObjectArray *generalNames);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *new_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *create_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *semanticsIdentifier);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *self, IOSObjectArray *generalNames);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *new_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(IOSObjectArray *generalNames) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation *create_LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(IOSObjectArray *generalNames);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509QualifiedSemanticsInformation)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SemanticsInformation_H
