//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/Controls.java
//

#ifndef Controls_H
#define Controls_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue;

@interface LibOrgBouncycastleAsn1CrmfControls : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue:(LibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue *)atv;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray:(IOSObjectArray *)atvs;

+ (LibOrgBouncycastleAsn1CrmfControls *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (IOSObjectArray *)toAttributeTypeAndValueArray;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CrmfControls)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfControls *LibOrgBouncycastleAsn1CrmfControls_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue_(LibOrgBouncycastleAsn1CrmfControls *self, LibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue *atv);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfControls *new_LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue_(LibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue *atv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfControls *create_LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue_(LibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValue *atv);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(LibOrgBouncycastleAsn1CrmfControls *self, IOSObjectArray *atvs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfControls *new_LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(IOSObjectArray *atvs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfControls *create_LibOrgBouncycastleAsn1CrmfControls_initWithLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(IOSObjectArray *atvs);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfControls)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Controls_H
