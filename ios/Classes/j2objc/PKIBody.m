//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIBody.java
//

#include "ASN1Encodable.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "CAKeyUpdAnnContent.h"
#include "CMPCertificate.h"
#include "CRLAnnContent.h"
#include "CertConfirmContent.h"
#include "CertRepMessage.h"
#include "CertReqMessages.h"
#include "CertificationRequest.h"
#include "DERTaggedObject.h"
#include "ErrorMsgContent.h"
#include "GenMsgContent.h"
#include "GenRepContent.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "KeyRecRepContent.h"
#include "PKIBody.h"
#include "PKIConfirmContent.h"
#include "PKIMessages.h"
#include "POPODecKeyChallContent.h"
#include "POPODecKeyRespContent.h"
#include "PollRepContent.h"
#include "PollReqContent.h"
#include "RevAnnContent.h"
#include "RevRepContent.h"
#include "RevReqContent.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmpPKIBody () {
 @public
  jint tagNo_;
  id<LibOrgBouncycastleAsn1ASN1Encodable> body_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged;

+ (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBodyForTypeWithInt:(jint)type
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)o;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpPKIBody, body_, id<LibOrgBouncycastleAsn1ASN1Encodable>)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmpPKIBody *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIBody *new_LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIBody *create_LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static id<LibOrgBouncycastleAsn1ASN1Encodable> LibOrgBouncycastleAsn1CmpPKIBody_getBodyForTypeWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint type, id<LibOrgBouncycastleAsn1ASN1Encodable> o);

@implementation LibOrgBouncycastleAsn1CmpPKIBody

+ (jint)TYPE_INIT_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REQ;
}

+ (jint)TYPE_INIT_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REP;
}

+ (jint)TYPE_CERT_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REQ;
}

+ (jint)TYPE_CERT_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REP;
}

+ (jint)TYPE_P10_CERT_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_P10_CERT_REQ;
}

+ (jint)TYPE_POPO_CHALL {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_CHALL;
}

+ (jint)TYPE_POPO_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_REP;
}

+ (jint)TYPE_KEY_UPDATE_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REQ;
}

+ (jint)TYPE_KEY_UPDATE_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REP;
}

+ (jint)TYPE_KEY_RECOVERY_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REQ;
}

+ (jint)TYPE_KEY_RECOVERY_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REP;
}

+ (jint)TYPE_REVOCATION_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REQ;
}

+ (jint)TYPE_REVOCATION_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REP;
}

+ (jint)TYPE_CROSS_CERT_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REQ;
}

+ (jint)TYPE_CROSS_CERT_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REP;
}

+ (jint)TYPE_CA_KEY_UPDATE_ANN {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CA_KEY_UPDATE_ANN;
}

+ (jint)TYPE_CERT_ANN {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_ANN;
}

+ (jint)TYPE_REVOCATION_ANN {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_ANN;
}

+ (jint)TYPE_CRL_ANN {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CRL_ANN;
}

+ (jint)TYPE_CONFIRM {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CONFIRM;
}

+ (jint)TYPE_NESTED {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_NESTED;
}

+ (jint)TYPE_GEN_MSG {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_MSG;
}

+ (jint)TYPE_GEN_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_REP;
}

+ (jint)TYPE_ERROR {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_ERROR;
}

+ (jint)TYPE_CERT_CONFIRM {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_CONFIRM;
}

+ (jint)TYPE_POLL_REQ {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REQ;
}

+ (jint)TYPE_POLL_REP {
  return LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REP;
}

+ (LibOrgBouncycastleAsn1CmpPKIBody *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpPKIBody_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

- (instancetype)initWithInt:(jint)type
withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)content {
  LibOrgBouncycastleAsn1CmpPKIBody_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, type, content);
  return self;
}

+ (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBodyForTypeWithInt:(jint)type
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)o {
  return LibOrgBouncycastleAsn1CmpPKIBody_getBodyForTypeWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(type, o);
}

- (jint)getType {
  return tagNo_;
}

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getContent {
  return body_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, tagNo_, body_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIBody;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0xa, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[2].selector = @selector(initWithInt:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(getBodyForTypeWithInt:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[4].selector = @selector(getType);
  methods[5].selector = @selector(getContent);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_INIT_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_INIT_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_CERT_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_CERT_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_P10_CERT_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_P10_CERT_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_POPO_CHALL", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_CHALL, 0x19, -1, -1, -1, -1 },
    { "TYPE_POPO_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_KEY_UPDATE_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_KEY_UPDATE_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_KEY_RECOVERY_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_KEY_RECOVERY_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_REVOCATION_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_REVOCATION_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_CROSS_CERT_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_CROSS_CERT_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_CA_KEY_UPDATE_ANN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CA_KEY_UPDATE_ANN, 0x19, -1, -1, -1, -1 },
    { "TYPE_CERT_ANN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_ANN, 0x19, -1, -1, -1, -1 },
    { "TYPE_REVOCATION_ANN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_ANN, 0x19, -1, -1, -1, -1 },
    { "TYPE_CRL_ANN", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CRL_ANN, 0x19, -1, -1, -1, -1 },
    { "TYPE_CONFIRM", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CONFIRM, 0x19, -1, -1, -1, -1 },
    { "TYPE_NESTED", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_NESTED, 0x19, -1, -1, -1, -1 },
    { "TYPE_GEN_MSG", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_MSG, 0x19, -1, -1, -1, -1 },
    { "TYPE_GEN_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_REP, 0x19, -1, -1, -1, -1 },
    { "TYPE_ERROR", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_ERROR, 0x19, -1, -1, -1, -1 },
    { "TYPE_CERT_CONFIRM", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_CONFIRM, 0x19, -1, -1, -1, -1 },
    { "TYPE_POLL_REQ", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REQ, 0x19, -1, -1, -1, -1 },
    { "TYPE_POLL_REP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REP, 0x19, -1, -1, -1, -1 },
    { "tagNo_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "body_", "LLibOrgBouncycastleAsn1ASN1Encodable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1TaggedObject;", "ILLibOrgBouncycastleAsn1ASN1Encodable;", "getBodyForType" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpPKIBody = { "PKIBody", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 7, 29, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpPKIBody;
}

@end

LibOrgBouncycastleAsn1CmpPKIBody *LibOrgBouncycastleAsn1CmpPKIBody_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpPKIBody_initialize();
  if (o == nil || [o isKindOfClass:[LibOrgBouncycastleAsn1CmpPKIBody class]]) {
    return (LibOrgBouncycastleAsn1CmpPKIBody *) cast_chk(o, [LibOrgBouncycastleAsn1CmpPKIBody class]);
  }
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return new_LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_((LibOrgBouncycastleAsn1ASN1TaggedObject *) o);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Invalid object: ", [[o java_getClass] getName]));
}

void LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CmpPKIBody *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->tagNo_ = [((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo];
  self->body_ = LibOrgBouncycastleAsn1CmpPKIBody_getBodyForTypeWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self->tagNo_, [tagged getObject]);
}

LibOrgBouncycastleAsn1CmpPKIBody *new_LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIBody, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CmpPKIBody *create_LibOrgBouncycastleAsn1CmpPKIBody_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIBody, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

void LibOrgBouncycastleAsn1CmpPKIBody_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpPKIBody *self, jint type, id<LibOrgBouncycastleAsn1ASN1Encodable> content) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->tagNo_ = type;
  self->body_ = LibOrgBouncycastleAsn1CmpPKIBody_getBodyForTypeWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(type, content);
}

LibOrgBouncycastleAsn1CmpPKIBody *new_LibOrgBouncycastleAsn1CmpPKIBody_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint type, id<LibOrgBouncycastleAsn1ASN1Encodable> content) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIBody, initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_, type, content)
}

LibOrgBouncycastleAsn1CmpPKIBody *create_LibOrgBouncycastleAsn1CmpPKIBody_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint type, id<LibOrgBouncycastleAsn1ASN1Encodable> content) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIBody, initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_, type, content)
}

id<LibOrgBouncycastleAsn1ASN1Encodable> LibOrgBouncycastleAsn1CmpPKIBody_getBodyForTypeWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint type, id<LibOrgBouncycastleAsn1ASN1Encodable> o) {
  LibOrgBouncycastleAsn1CmpPKIBody_initialize();
  switch (type) {
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REQ:
    return LibOrgBouncycastleAsn1CrmfCertReqMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_INIT_REP:
    return LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REQ:
    return LibOrgBouncycastleAsn1CrmfCertReqMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_REP:
    return LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_P10_CERT_REQ:
    return LibOrgBouncycastleAsn1PkcsCertificationRequest_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_CHALL:
    return LibOrgBouncycastleAsn1CmpPOPODecKeyChallContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POPO_REP:
    return LibOrgBouncycastleAsn1CmpPOPODecKeyRespContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REQ:
    return LibOrgBouncycastleAsn1CrmfCertReqMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_UPDATE_REP:
    return LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REQ:
    return LibOrgBouncycastleAsn1CrmfCertReqMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_KEY_RECOVERY_REP:
    return LibOrgBouncycastleAsn1CmpKeyRecRepContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REQ:
    return LibOrgBouncycastleAsn1CmpRevReqContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_REP:
    return LibOrgBouncycastleAsn1CmpRevRepContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REQ:
    return LibOrgBouncycastleAsn1CrmfCertReqMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CROSS_CERT_REP:
    return LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CA_KEY_UPDATE_ANN:
    return LibOrgBouncycastleAsn1CmpCAKeyUpdAnnContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_ANN:
    return LibOrgBouncycastleAsn1CmpCMPCertificate_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_REVOCATION_ANN:
    return LibOrgBouncycastleAsn1CmpRevAnnContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CRL_ANN:
    return LibOrgBouncycastleAsn1CmpCRLAnnContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CONFIRM:
    return LibOrgBouncycastleAsn1CmpPKIConfirmContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_NESTED:
    return LibOrgBouncycastleAsn1CmpPKIMessages_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_MSG:
    return LibOrgBouncycastleAsn1CmpGenMsgContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_GEN_REP:
    return LibOrgBouncycastleAsn1CmpGenRepContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_ERROR:
    return LibOrgBouncycastleAsn1CmpErrorMsgContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_CERT_CONFIRM:
    return LibOrgBouncycastleAsn1CmpCertConfirmContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REQ:
    return LibOrgBouncycastleAsn1CmpPollReqContent_getInstanceWithId_(o);
    case LibOrgBouncycastleAsn1CmpPKIBody_TYPE_POLL_REP:
    return LibOrgBouncycastleAsn1CmpPollRepContent_getInstanceWithId_(o);
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag number: ", type));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpPKIBody)
