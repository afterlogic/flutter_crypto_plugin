//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/keybox/BlobType.java
//

#include "BlobType.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"

@interface LibOrgBouncycastleGpgKeyboxBlobType () {
 @public
  jint byteValue_;
}

@end

__attribute__((unused)) static void LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(LibOrgBouncycastleGpgKeyboxBlobType *self, jint byteValue, NSString *__name, jint __ordinal);

__attribute__((unused)) static LibOrgBouncycastleGpgKeyboxBlobType *new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(jint byteValue, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleGpgKeyboxBlobType)

LibOrgBouncycastleGpgKeyboxBlobType *LibOrgBouncycastleGpgKeyboxBlobType_values_[4];

@implementation LibOrgBouncycastleGpgKeyboxBlobType

+ (LibOrgBouncycastleGpgKeyboxBlobType *)EMPTY_BLOB {
  return JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, EMPTY_BLOB);
}

+ (LibOrgBouncycastleGpgKeyboxBlobType *)FIRST_BLOB {
  return JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, FIRST_BLOB);
}

+ (LibOrgBouncycastleGpgKeyboxBlobType *)OPEN_PGP_BLOB {
  return JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, OPEN_PGP_BLOB);
}

+ (LibOrgBouncycastleGpgKeyboxBlobType *)X509_BLOB {
  return JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, X509_BLOB);
}

+ (LibOrgBouncycastleGpgKeyboxBlobType *)fromByteWithInt:(jint)byteVal {
  return LibOrgBouncycastleGpgKeyboxBlobType_fromByteWithInt_(byteVal);
}

- (jint)getByteValue {
  return byteValue_;
}

+ (IOSObjectArray *)values {
  return LibOrgBouncycastleGpgKeyboxBlobType_values();
}

+ (LibOrgBouncycastleGpgKeyboxBlobType *)valueOfWithNSString:(NSString *)name {
  return LibOrgBouncycastleGpgKeyboxBlobType_valueOfWithNSString_(name);
}

- (LibOrgBouncycastleGpgKeyboxBlobType_Enum)toNSEnum {
  return (LibOrgBouncycastleGpgKeyboxBlobType_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleGpgKeyboxBlobType;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleGpgKeyboxBlobType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleGpgKeyboxBlobType;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(fromByteWithInt:);
  methods[1].selector = @selector(getByteValue);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_BLOB", "LLibOrgBouncycastleGpgKeyboxBlobType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "FIRST_BLOB", "LLibOrgBouncycastleGpgKeyboxBlobType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "OPEN_PGP_BLOB", "LLibOrgBouncycastleGpgKeyboxBlobType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "X509_BLOB", "LLibOrgBouncycastleGpgKeyboxBlobType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "byteValue_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "fromByte", "I", "valueOf", "LNSString;", &JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, EMPTY_BLOB), &JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, FIRST_BLOB), &JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, OPEN_PGP_BLOB), &JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, X509_BLOB), "Ljava/lang/Enum<Llib/org/bouncycastle/gpg/keybox/BlobType;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleGpgKeyboxBlobType = { "BlobType", "lib.org.bouncycastle.gpg.keybox", ptrTable, methods, fields, 7, 0x4011, 4, 5, -1, -1, -1, 8, -1 };
  return &_LibOrgBouncycastleGpgKeyboxBlobType;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleGpgKeyboxBlobType class]) {
    JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, EMPTY_BLOB) = new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(0, JreEnumConstantName(LibOrgBouncycastleGpgKeyboxBlobType_class_(), 0), 0);
    JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, FIRST_BLOB) = new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(1, JreEnumConstantName(LibOrgBouncycastleGpgKeyboxBlobType_class_(), 1), 1);
    JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, OPEN_PGP_BLOB) = new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(2, JreEnumConstantName(LibOrgBouncycastleGpgKeyboxBlobType_class_(), 2), 2);
    JreEnum(LibOrgBouncycastleGpgKeyboxBlobType, X509_BLOB) = new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(3, JreEnumConstantName(LibOrgBouncycastleGpgKeyboxBlobType_class_(), 3), 3);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleGpgKeyboxBlobType)
  }
}

@end

void LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(LibOrgBouncycastleGpgKeyboxBlobType *self, jint byteValue, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->byteValue_ = byteValue;
}

LibOrgBouncycastleGpgKeyboxBlobType *new_LibOrgBouncycastleGpgKeyboxBlobType_initWithInt_withNSString_withInt_(jint byteValue, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleGpgKeyboxBlobType, initWithInt_withNSString_withInt_, byteValue, __name, __ordinal)
}

LibOrgBouncycastleGpgKeyboxBlobType *LibOrgBouncycastleGpgKeyboxBlobType_fromByteWithInt_(jint byteVal) {
  LibOrgBouncycastleGpgKeyboxBlobType_initialize();
  {
    IOSObjectArray *a__ = LibOrgBouncycastleGpgKeyboxBlobType_values();
    LibOrgBouncycastleGpgKeyboxBlobType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    LibOrgBouncycastleGpgKeyboxBlobType * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      LibOrgBouncycastleGpgKeyboxBlobType *blobType = *b__++;
      if (((LibOrgBouncycastleGpgKeyboxBlobType *) nil_chk(blobType))->byteValue_ == byteVal) {
        return blobType;
      }
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unknown blob type ", JavaLangInteger_toHexStringWithInt_(byteVal)));
}

IOSObjectArray *LibOrgBouncycastleGpgKeyboxBlobType_values() {
  LibOrgBouncycastleGpgKeyboxBlobType_initialize();
  return [IOSObjectArray arrayWithObjects:LibOrgBouncycastleGpgKeyboxBlobType_values_ count:4 type:LibOrgBouncycastleGpgKeyboxBlobType_class_()];
}

LibOrgBouncycastleGpgKeyboxBlobType *LibOrgBouncycastleGpgKeyboxBlobType_valueOfWithNSString_(NSString *name) {
  LibOrgBouncycastleGpgKeyboxBlobType_initialize();
  for (int i = 0; i < 4; i++) {
    LibOrgBouncycastleGpgKeyboxBlobType *e = LibOrgBouncycastleGpgKeyboxBlobType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

LibOrgBouncycastleGpgKeyboxBlobType *LibOrgBouncycastleGpgKeyboxBlobType_fromOrdinal(NSUInteger ordinal) {
  LibOrgBouncycastleGpgKeyboxBlobType_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return LibOrgBouncycastleGpgKeyboxBlobType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleGpgKeyboxBlobType)
