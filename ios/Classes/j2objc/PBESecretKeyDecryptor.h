//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/PBESecretKeyDecryptor.java
//

#ifndef PBESecretKeyDecryptor_H
#define PBESecretKeyDecryptor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSCharArray;
@class LibOrgBouncycastleBcpgS2K;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;

@interface LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor : NSObject

#pragma mark Public

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)getChecksumCalculatorWithInt:(jint)hashAlgorithm;

- (IOSByteArray *)makeKeyFromPassPhraseWithInt:(jint)keyAlgorithm
                 withLibOrgBouncycastleBcpgS2K:(LibOrgBouncycastleBcpgS2K *)s2k;

- (IOSByteArray *)recoverKeyDataWithInt:(jint)encAlgorithm
                          withByteArray:(IOSByteArray *)key
                          withByteArray:(IOSByteArray *)iv
                          withByteArray:(IOSByteArray *)keyData
                                withInt:(jint)keyOff
                                withInt:(jint)keyLen;

#pragma mark Protected

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)passPhrase
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor *self, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PBESecretKeyDecryptor_H
