//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/modes/kgcm/Tables8kKGCMMultiplier_256.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KGCMUtil_256.h"
#include "Tables8kKGCMMultiplier_256.h"

@interface LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256 () {
 @public
  IOSObjectArray *T_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256, T_, IOSObjectArray *)

@implementation LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithLongArray:(IOSLongArray *)H {
  if (T_ == nil) {
    T_ = [IOSLongArray newArrayWithDimensions:2 lengths:(jint[]){ 256, LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_SIZE }];
  }
  else if (LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_equalWithLongArray_withLongArray_(H, IOSObjectArray_Get(T_, 1))) {
    return;
  }
  LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_copy__WithLongArray_withLongArray_(H, IOSObjectArray_Get(nil_chk(T_), 1));
  for (jint n = 2; n < 256; n += 2) {
    LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_multiplyXWithLongArray_withLongArray_(IOSObjectArray_Get(nil_chk(T_), JreRShift32(n, 1)), IOSObjectArray_Get(T_, n));
    LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_addWithLongArray_withLongArray_withLongArray_(IOSObjectArray_Get(nil_chk(T_), n), IOSObjectArray_Get(T_, 1), IOSObjectArray_Get(T_, n + 1));
  }
}

- (void)multiplyHWithLongArray:(IOSLongArray *)z {
  IOSLongArray *r = [IOSLongArray newArrayWithLength:LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_SIZE];
  LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_copy__WithLongArray_withLongArray_(IOSObjectArray_Get(nil_chk(T_), (jint) (JreURShift64(IOSLongArray_Get(nil_chk(z), LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_SIZE - 1), 56)) & (jint) 0xFF), r);
  for (jint i = (JreLShift32(LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_SIZE, 3)) - 2; i >= 0; --i) {
    LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_multiplyX8WithLongArray_withLongArray_(r, r);
    LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_addWithLongArray_withLongArray_withLongArray_(IOSObjectArray_Get(nil_chk(T_), (jint) (JreURShift64(IOSLongArray_Get(z, JreURShift32(i, 3)), (JreLShift32((i & 7), 3)))) & (jint) 0xFF), r, r);
  }
  LibOrgBouncycastleCryptoModesKgcmKGCMUtil_256_copy__WithLongArray_withLongArray_(r, z);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithLongArray:);
  methods[2].selector = @selector(multiplyHWithLongArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "T_", "[[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "[J", "multiplyH" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256 = { "Tables8kKGCMMultiplier_256", "lib.org.bouncycastle.crypto.modes.kgcm", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256;
}

@end

void LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256_init(LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256 *new_LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256, init)
}

LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256 *create_LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoModesKgcmTables8kKGCMMultiplier_256)
