//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/GeneralNames.java
//

#ifndef GeneralNames_H
#define GeneralNames_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509Extensions;
@class LibOrgBouncycastleAsn1X509GeneralName;

@interface LibOrgBouncycastleAsn1X509GeneralNames : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)name;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names;

+ (LibOrgBouncycastleAsn1X509GeneralNames *)fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)extensions
                                                    withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)extOID;

+ (LibOrgBouncycastleAsn1X509GeneralNames *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                      withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509GeneralNames *)getInstanceWithId:(id)obj;

- (IOSObjectArray *)getNames;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509GeneralNames)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *LibOrgBouncycastleAsn1X509GeneralNames_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1X509Extensions *extensions, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *extOID);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralNames *self, LibOrgBouncycastleAsn1X509GeneralName *name);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *new_LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralName *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *create_LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1X509GeneralName *name);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(LibOrgBouncycastleAsn1X509GeneralNames *self, IOSObjectArray *names);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *new_LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(IOSObjectArray *names) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralNames *create_LibOrgBouncycastleAsn1X509GeneralNames_initWithLibOrgBouncycastleAsn1X509GeneralNameArray_(IOSObjectArray *names);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509GeneralNames)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GeneralNames_H
