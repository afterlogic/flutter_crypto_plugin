//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/ECCurveType.java
//

#ifndef ECCurveType_H
#define ECCurveType_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleCryptoTlsECCurveType : NSObject
@property (readonly, class) jshort explicit_prime NS_SWIFT_NAME(explicit_prime);
@property (readonly, class) jshort explicit_char2 NS_SWIFT_NAME(explicit_char2);
@property (readonly, class) jshort named_curve NS_SWIFT_NAME(named_curve);

+ (jshort)explicit_prime;

+ (jshort)explicit_char2;

+ (jshort)named_curve;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsECCurveType)

inline jshort LibOrgBouncycastleCryptoTlsECCurveType_get_explicit_prime(void);
#define LibOrgBouncycastleCryptoTlsECCurveType_explicit_prime 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsECCurveType, explicit_prime, jshort)

inline jshort LibOrgBouncycastleCryptoTlsECCurveType_get_explicit_char2(void);
#define LibOrgBouncycastleCryptoTlsECCurveType_explicit_char2 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsECCurveType, explicit_char2, jshort)

inline jshort LibOrgBouncycastleCryptoTlsECCurveType_get_named_curve(void);
#define LibOrgBouncycastleCryptoTlsECCurveType_named_curve 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsECCurveType, named_curve, jshort)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsECCurveType_init(LibOrgBouncycastleCryptoTlsECCurveType *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsECCurveType *new_LibOrgBouncycastleCryptoTlsECCurveType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsECCurveType *create_LibOrgBouncycastleCryptoTlsECCurveType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsECCurveType)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECCurveType_H
