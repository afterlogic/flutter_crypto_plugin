//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/CompressedDataParser.java
//

#ifndef CompressedDataParser_H
#define CompressedDataParser_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1CmsContentInfoParser;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@protocol LibOrgBouncycastleAsn1ASN1SequenceParser;

@interface LibOrgBouncycastleAsn1CmsCompressedDataParser : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1SequenceParser:(id<LibOrgBouncycastleAsn1ASN1SequenceParser>)seq;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getCompressionAlgorithmIdentifier;

- (LibOrgBouncycastleAsn1CmsContentInfoParser *)getEncapContentInfo;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsCompressedDataParser)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsCompressedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(LibOrgBouncycastleAsn1CmsCompressedDataParser *self, id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsCompressedDataParser *new_LibOrgBouncycastleAsn1CmsCompressedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsCompressedDataParser *create_LibOrgBouncycastleAsn1CmsCompressedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsCompressedDataParser)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CompressedDataParser_H
