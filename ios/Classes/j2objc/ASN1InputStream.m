//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1InputStream.java
//

#include "ASN1BitString.h"
#include "ASN1Boolean.h"
#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Enumerated.h"
#include "ASN1Exception.h"
#include "ASN1GeneralizedTime.h"
#include "ASN1InputStream.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1Set.h"
#include "ASN1StreamParser.h"
#include "ASN1UTCTime.h"
#include "BERApplicationSpecificParser.h"
#include "BEROctetString.h"
#include "BEROctetStringParser.h"
#include "BERSequenceParser.h"
#include "BERSetParser.h"
#include "BERTaggedObjectParser.h"
#include "BERTags.h"
#include "DERBMPString.h"
#include "DERExternalParser.h"
#include "DERFactory.h"
#include "DERGeneralString.h"
#include "DERGraphicString.h"
#include "DERIA5String.h"
#include "DERNull.h"
#include "DERNumericString.h"
#include "DEROctetString.h"
#include "DERPrintableString.h"
#include "DERT61String.h"
#include "DERUTF8String.h"
#include "DERUniversalString.h"
#include "DERVideotexString.h"
#include "DERVisibleString.h"
#include "DLApplicationSpecific.h"
#include "DLExternal.h"
#include "DefiniteLengthInputStream.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "IndefiniteLengthInputStream.h"
#include "J2ObjC_source.h"
#include "LazyEncodedSequence.h"
#include "StreamUtil.h"
#include "Streams.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/EOFException.h"
#include "java/io/FilterInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1ASN1InputStream () {
 @public
  jint limit_;
  jboolean lazyEvaluate_;
  IOSObjectArray *tmpBuffers_;
}

+ (IOSByteArray *)getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn
                                                                withByteArray2:(IOSObjectArray *)tmpBuffers;

+ (IOSCharArray *)getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1ASN1InputStream, tmpBuffers_, IOSObjectArray *)

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn, IOSObjectArray *tmpBuffers);

__attribute__((unused)) static IOSCharArray *LibOrgBouncycastleAsn1ASN1InputStream_getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_(LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn);

@implementation LibOrgBouncycastleAsn1ASN1InputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(self, is);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)input {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(self, input);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)input
                      withBoolean:(jboolean)lazyEvaluate {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(self, input, lazyEvaluate);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input
                                  withInt:(jint)limit {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(self, input, limit);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input
                              withBoolean:(jboolean)lazyEvaluate {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(self, input, lazyEvaluate);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input
                                  withInt:(jint)limit
                              withBoolean:(jboolean)lazyEvaluate {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(self, input, limit, lazyEvaluate);
  return self;
}

- (jint)getLimit {
  return limit_;
}

- (jint)readLength {
  return LibOrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_(self, limit_);
}

- (void)readFullyWithByteArray:(IOSByteArray *)bytes {
  if (LibOrgBouncycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(self, bytes) != ((IOSByteArray *) nil_chk(bytes))->size_) {
    @throw new_JavaIoEOFException_initWithNSString_(@"EOF encountered in middle of object");
  }
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)buildObjectWithInt:(jint)tag
                                                    withInt:(jint)tagNo
                                                    withInt:(jint)length {
  jboolean isConstructed = (tag & LibOrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0;
  LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn = new_LibOrgBouncycastleAsn1DefiniteLengthInputStream_initWithJavaIoInputStream_withInt_(self, length);
  if ((tag & LibOrgBouncycastleAsn1BERTags_APPLICATION) != 0) {
    return new_LibOrgBouncycastleAsn1DLApplicationSpecific_initWithBoolean_withInt_withByteArray_(isConstructed, tagNo, [defIn toByteArray]);
  }
  if ((tag & LibOrgBouncycastleAsn1BERTags_TAGGED) != 0) {
    return [new_LibOrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(defIn) readTaggedObjectWithBoolean:isConstructed withInt:tagNo];
  }
  if (isConstructed) {
    {
      LibOrgBouncycastleAsn1ASN1EncodableVector *v;
      IOSObjectArray *strings;
      switch (tagNo) {
        case LibOrgBouncycastleAsn1BERTags_OCTET_STRING:
        v = [self buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:defIn];
        strings = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) size] type:LibOrgBouncycastleAsn1ASN1OctetString_class_()];
        for (jint i = 0; i != strings->size_; i++) {
          (void) IOSObjectArray_Set(strings, i, (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk([v getWithInt:i], [LibOrgBouncycastleAsn1ASN1OctetString class]));
        }
        return new_LibOrgBouncycastleAsn1BEROctetString_initWithLibOrgBouncycastleAsn1ASN1OctetStringArray_(strings);
        case LibOrgBouncycastleAsn1BERTags_SEQUENCE:
        if (lazyEvaluate_) {
          return new_LibOrgBouncycastleAsn1LazyEncodedSequence_initWithByteArray_([defIn toByteArray]);
        }
        else {
          return LibOrgBouncycastleAsn1DERFactory_createSequenceWithLibOrgBouncycastleAsn1ASN1EncodableVector_([self buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:defIn]);
        }
        case LibOrgBouncycastleAsn1BERTags_SET:
        return LibOrgBouncycastleAsn1DERFactory_createSetWithLibOrgBouncycastleAsn1ASN1EncodableVector_([self buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:defIn]);
        case LibOrgBouncycastleAsn1BERTags_EXTERNAL:
        return new_LibOrgBouncycastleAsn1DLExternal_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_([self buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:defIn]);
        default:
        @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I$", @"unknown tag ", tagNo, @" encountered"));
      }
    }
  }
  return LibOrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(tagNo, defIn, tmpBuffers_);
}

- (LibOrgBouncycastleAsn1ASN1EncodableVector *)buildEncodableVector {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  LibOrgBouncycastleAsn1ASN1Primitive *o;
  while ((o = [self readObject]) != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:o];
  }
  return v;
}

- (LibOrgBouncycastleAsn1ASN1EncodableVector *)buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)dIn {
  return [new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(dIn) buildEncodableVector];
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)readObject {
  jint tag = [self read];
  if (tag <= 0) {
    if (tag == 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"unexpected end-of-contents marker");
    }
    return nil;
  }
  jint tagNo = LibOrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(self, tag);
  jboolean isConstructed = (tag & LibOrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0;
  jint length = [self readLength];
  if (length < 0) {
    if (!isConstructed) {
      @throw new_JavaIoIOException_initWithNSString_(@"indefinite-length primitive encoding encountered");
    }
    LibOrgBouncycastleAsn1IndefiniteLengthInputStream *indIn = new_LibOrgBouncycastleAsn1IndefiniteLengthInputStream_initWithJavaIoInputStream_withInt_(self, limit_);
    LibOrgBouncycastleAsn1ASN1StreamParser *sp = new_LibOrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(indIn, limit_);
    if ((tag & LibOrgBouncycastleAsn1BERTags_APPLICATION) != 0) {
      return [new_LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(tagNo, sp) getLoadedObject];
    }
    if ((tag & LibOrgBouncycastleAsn1BERTags_TAGGED) != 0) {
      return [new_LibOrgBouncycastleAsn1BERTaggedObjectParser_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(true, tagNo, sp) getLoadedObject];
    }
    switch (tagNo) {
      case LibOrgBouncycastleAsn1BERTags_OCTET_STRING:
      return [new_LibOrgBouncycastleAsn1BEROctetStringParser_initWithLibOrgBouncycastleAsn1ASN1StreamParser_(sp) getLoadedObject];
      case LibOrgBouncycastleAsn1BERTags_SEQUENCE:
      return [new_LibOrgBouncycastleAsn1BERSequenceParser_initWithLibOrgBouncycastleAsn1ASN1StreamParser_(sp) getLoadedObject];
      case LibOrgBouncycastleAsn1BERTags_SET:
      return [new_LibOrgBouncycastleAsn1BERSetParser_initWithLibOrgBouncycastleAsn1ASN1StreamParser_(sp) getLoadedObject];
      case LibOrgBouncycastleAsn1BERTags_EXTERNAL:
      return [new_LibOrgBouncycastleAsn1DERExternalParser_initWithLibOrgBouncycastleAsn1ASN1StreamParser_(sp) getLoadedObject];
      default:
      @throw new_JavaIoIOException_initWithNSString_(@"unknown BER object encountered");
    }
  }
  else {
    @try {
      return [self buildObjectWithInt:tag withInt:tagNo withInt:length];
    }
    @catch (JavaLangIllegalArgumentException *e) {
      @throw new_LibOrgBouncycastleAsn1ASN1Exception_initWithNSString_withJavaLangThrowable_(@"corrupted stream detected", e);
    }
  }
}

+ (jint)readTagNumberWithJavaIoInputStream:(JavaIoInputStream *)s
                                   withInt:(jint)tag {
  return LibOrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(s, tag);
}

+ (jint)readLengthWithJavaIoInputStream:(JavaIoInputStream *)s
                                withInt:(jint)limit {
  return LibOrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_(s, limit);
}

+ (IOSByteArray *)getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn
                                                                withByteArray2:(IOSObjectArray *)tmpBuffers {
  return LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(defIn, tmpBuffers);
}

+ (IOSCharArray *)getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn {
  return LibOrgBouncycastleAsn1ASN1InputStream_getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_(defIn);
}

+ (LibOrgBouncycastleAsn1ASN1Primitive *)createPrimitiveDERObjectWithInt:(jint)tagNo
                     withLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn
                                                          withByteArray2:(IOSObjectArray *)tmpBuffers {
  return LibOrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(tagNo, defIn, tmpBuffers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 1, 6, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x4, 8, 9, 6, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1EncodableVector;", 0x0, -1, -1, 6, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1EncodableVector;", 0x0, 10, 11, 6, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "I", 0x8, 12, 3, 6, -1, -1, -1 },
    { NULL, "I", 0x8, 13, 3, 6, -1, -1, -1 },
    { NULL, "[B", 0xa, 14, 15, 6, -1, -1, -1 },
    { NULL, "[C", 0xa, 16, 11, 6, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x8, 17, 18, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithByteArray:withBoolean:);
  methods[3].selector = @selector(initWithJavaIoInputStream:withInt:);
  methods[4].selector = @selector(initWithJavaIoInputStream:withBoolean:);
  methods[5].selector = @selector(initWithJavaIoInputStream:withInt:withBoolean:);
  methods[6].selector = @selector(getLimit);
  methods[7].selector = @selector(readLength);
  methods[8].selector = @selector(readFullyWithByteArray:);
  methods[9].selector = @selector(buildObjectWithInt:withInt:withInt:);
  methods[10].selector = @selector(buildEncodableVector);
  methods[11].selector = @selector(buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:);
  methods[12].selector = @selector(readObject);
  methods[13].selector = @selector(readTagNumberWithJavaIoInputStream:withInt:);
  methods[14].selector = @selector(readLengthWithJavaIoInputStream:withInt:);
  methods[15].selector = @selector(getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:withByteArray2:);
  methods[16].selector = @selector(getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:);
  methods[17].selector = @selector(createPrimitiveDERObjectWithInt:withLibOrgBouncycastleAsn1DefiniteLengthInputStream:withByteArray2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "limit_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lazyEvaluate_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tmpBuffers_", "[[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "[B", "[BZ", "LJavaIoInputStream;I", "LJavaIoInputStream;Z", "LJavaIoInputStream;IZ", "LJavaIoIOException;", "readFully", "buildObject", "III", "buildDEREncodableVector", "LLibOrgBouncycastleAsn1DefiniteLengthInputStream;", "readTagNumber", "readLength", "getBuffer", "LLibOrgBouncycastleAsn1DefiniteLengthInputStream;[[B", "getBMPCharBuffer", "createPrimitiveDERObject", "ILLibOrgBouncycastleAsn1DefiniteLengthInputStream;[[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1ASN1InputStream = { "ASN1InputStream", "lib.org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 18, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1ASN1InputStream;
}

@end

void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *is) {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(self, is, LibOrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(is));
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_, is)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_, is)
}

void LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(LibOrgBouncycastleAsn1ASN1InputStream *self, IOSByteArray *input) {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(self, new_JavaIoByteArrayInputStream_initWithByteArray_(input), ((IOSByteArray *) nil_chk(input))->size_);
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(IOSByteArray *input) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithByteArray_, input)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(IOSByteArray *input) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithByteArray_, input)
}

void LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, IOSByteArray *input, jboolean lazyEvaluate) {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(self, new_JavaIoByteArrayInputStream_initWithByteArray_(input), ((IOSByteArray *) nil_chk(input))->size_, lazyEvaluate);
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(IOSByteArray *input, jboolean lazyEvaluate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithByteArray_withBoolean_, input, lazyEvaluate)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(IOSByteArray *input, jboolean lazyEvaluate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithByteArray_withBoolean_, input, lazyEvaluate)
}

void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jint limit) {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(self, input, limit, false);
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(JavaIoInputStream *input, jint limit) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withInt_, input, limit)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(JavaIoInputStream *input, jint limit) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withInt_, input, limit)
}

void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jboolean lazyEvaluate) {
  LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(self, input, LibOrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(input), lazyEvaluate);
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *input, jboolean lazyEvaluate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withBoolean_, input, lazyEvaluate)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *input, jboolean lazyEvaluate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withBoolean_, input, lazyEvaluate)
}

void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jint limit, jboolean lazyEvaluate) {
  JavaIoFilterInputStream_initWithJavaIoInputStream_(self, input);
  self->limit_ = limit;
  self->lazyEvaluate_ = lazyEvaluate;
  self->tmpBuffers_ = [IOSObjectArray newArrayWithLength:11 type:IOSClass_byteArray(1)];
}

LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(JavaIoInputStream *input, jint limit, jboolean lazyEvaluate) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withInt_withBoolean_, input, limit, lazyEvaluate)
}

LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(JavaIoInputStream *input, jint limit, jboolean lazyEvaluate) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1ASN1InputStream, initWithJavaIoInputStream_withInt_withBoolean_, input, limit, lazyEvaluate)
}

jint LibOrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(JavaIoInputStream *s, jint tag) {
  LibOrgBouncycastleAsn1ASN1InputStream_initialize();
  jint tagNo = tag & (jint) 0x1f;
  if (tagNo == (jint) 0x1f) {
    tagNo = 0;
    jint b = [((JavaIoInputStream *) nil_chk(s)) read];
    if ((b & (jint) 0x7f) == 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"corrupted stream - invalid high tag number found");
    }
    while ((b >= 0) && ((b & (jint) 0x80) != 0)) {
      tagNo |= (b & (jint) 0x7f);
      JreLShiftAssignInt(&tagNo, 7);
      b = [s read];
    }
    if (b < 0) {
      @throw new_JavaIoEOFException_initWithNSString_(@"EOF found inside tag value.");
    }
    tagNo |= (b & (jint) 0x7f);
  }
  return tagNo;
}

jint LibOrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_(JavaIoInputStream *s, jint limit) {
  LibOrgBouncycastleAsn1ASN1InputStream_initialize();
  jint length = [((JavaIoInputStream *) nil_chk(s)) read];
  if (length < 0) {
    @throw new_JavaIoEOFException_initWithNSString_(@"EOF found when length expected");
  }
  if (length == (jint) 0x80) {
    return -1;
  }
  if (length > 127) {
    jint size = length & (jint) 0x7f;
    if (size > 4) {
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"DER length more than 4 bytes: ", size));
    }
    length = 0;
    for (jint i = 0; i < size; i++) {
      jint next = [s read];
      if (next < 0) {
        @throw new_JavaIoEOFException_initWithNSString_(@"EOF found reading length");
      }
      length = (JreLShift32(length, 8)) + next;
    }
    if (length < 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"corrupted stream - negative length found");
    }
    if (length >= limit) {
      @throw new_JavaIoIOException_initWithNSString_(@"corrupted stream - out of bounds length found");
    }
  }
  return length;
}

IOSByteArray *LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn, IOSObjectArray *tmpBuffers) {
  LibOrgBouncycastleAsn1ASN1InputStream_initialize();
  jint len = [((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) getRemaining];
  if ([defIn getRemaining] < ((IOSObjectArray *) nil_chk(tmpBuffers))->size_) {
    IOSByteArray *buf = IOSObjectArray_Get(tmpBuffers, len);
    if (buf == nil) {
      buf = IOSObjectArray_SetAndConsume(tmpBuffers, len, [IOSByteArray newArrayWithLength:len]);
    }
    LibOrgBouncycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(defIn, buf);
    return buf;
  }
  else {
    return [defIn toByteArray];
  }
}

IOSCharArray *LibOrgBouncycastleAsn1ASN1InputStream_getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_(LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn) {
  LibOrgBouncycastleAsn1ASN1InputStream_initialize();
  jint len = [((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) getRemaining] / 2;
  IOSCharArray *buf = [IOSCharArray newArrayWithLength:len];
  jint totalRead = 0;
  while (totalRead < len) {
    jint ch1 = [defIn read];
    if (ch1 < 0) {
      break;
    }
    jint ch2 = [defIn read];
    if (ch2 < 0) {
      break;
    }
    *IOSCharArray_GetRef(buf, totalRead++) = (jchar) ((JreLShift32(ch1, 8)) | (ch2 & (jint) 0xff));
  }
  return buf;
}

LibOrgBouncycastleAsn1ASN1Primitive *LibOrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(jint tagNo, LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn, IOSObjectArray *tmpBuffers) {
  LibOrgBouncycastleAsn1ASN1InputStream_initialize();
  switch (tagNo) {
    case LibOrgBouncycastleAsn1BERTags_BIT_STRING:
    return LibOrgBouncycastleAsn1ASN1BitString_fromInputStreamWithInt_withJavaIoInputStream_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) getRemaining], defIn);
    case LibOrgBouncycastleAsn1BERTags_BMP_STRING:
    return new_LibOrgBouncycastleAsn1DERBMPString_initWithCharArray_(LibOrgBouncycastleAsn1ASN1InputStream_getBMPCharBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_(defIn));
    case LibOrgBouncycastleAsn1BERTags_BOOLEAN:
    return LibOrgBouncycastleAsn1ASN1Boolean_fromOctetStringWithByteArray_(LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(defIn, tmpBuffers));
    case LibOrgBouncycastleAsn1BERTags_ENUMERATED:
    return LibOrgBouncycastleAsn1ASN1Enumerated_fromOctetStringWithByteArray_(LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(defIn, tmpBuffers));
    case LibOrgBouncycastleAsn1BERTags_GENERALIZED_TIME:
    return new_LibOrgBouncycastleAsn1ASN1GeneralizedTime_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_GENERAL_STRING:
    return new_LibOrgBouncycastleAsn1DERGeneralString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_IA5_STRING:
    return new_LibOrgBouncycastleAsn1DERIA5String_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_INTEGER:
    return new_LibOrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray], false);
    case LibOrgBouncycastleAsn1BERTags_NULL:
    return JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE);
    case LibOrgBouncycastleAsn1BERTags_NUMERIC_STRING:
    return new_LibOrgBouncycastleAsn1DERNumericString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_OBJECT_IDENTIFIER:
    return LibOrgBouncycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_(LibOrgBouncycastleAsn1ASN1InputStream_getBufferWithLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(defIn, tmpBuffers));
    case LibOrgBouncycastleAsn1BERTags_OCTET_STRING:
    return new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_PRINTABLE_STRING:
    return new_LibOrgBouncycastleAsn1DERPrintableString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_T61_STRING:
    return new_LibOrgBouncycastleAsn1DERT61String_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_UNIVERSAL_STRING:
    return new_LibOrgBouncycastleAsn1DERUniversalString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_UTC_TIME:
    return new_LibOrgBouncycastleAsn1ASN1UTCTime_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_UTF8_STRING:
    return new_LibOrgBouncycastleAsn1DERUTF8String_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_VISIBLE_STRING:
    return new_LibOrgBouncycastleAsn1DERVisibleString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_GRAPHIC_STRING:
    return new_LibOrgBouncycastleAsn1DERGraphicString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    case LibOrgBouncycastleAsn1BERTags_VIDEOTEX_STRING:
    return new_LibOrgBouncycastleAsn1DERVideotexString_initWithByteArray_([((LibOrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(defIn)) toByteArray]);
    default:
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I$", @"unknown tag ", tagNo, @" encountered"));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1ASN1InputStream)
