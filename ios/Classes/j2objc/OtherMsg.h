//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/OtherMsg.java
//

#ifndef OtherMsg_H
#define OtherMsg_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmcBodyPartID;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1CmcOtherMsg : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmcBodyPartID:(LibOrgBouncycastleAsn1CmcBodyPartID *)bodyPartID
                       withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)otherMsgType
                              withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)otherMsgValue;

- (LibOrgBouncycastleAsn1CmcBodyPartID *)getBodyPartID;

+ (LibOrgBouncycastleAsn1CmcOtherMsg *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                 withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmcOtherMsg *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOtherMsgType;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getOtherMsgValue;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcOtherMsg)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcOtherMsg_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmcOtherMsg *self, LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherMsgType, id<LibOrgBouncycastleAsn1ASN1Encodable> otherMsgValue);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcOtherMsg *new_LibOrgBouncycastleAsn1CmcOtherMsg_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherMsgType, id<LibOrgBouncycastleAsn1ASN1Encodable> otherMsgValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcOtherMsg *create_LibOrgBouncycastleAsn1CmcOtherMsg_initWithLibOrgBouncycastleAsn1CmcBodyPartID_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *otherMsgType, id<LibOrgBouncycastleAsn1ASN1Encodable> otherMsgValue);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcOtherMsg *LibOrgBouncycastleAsn1CmcOtherMsg_getInstanceWithId_(id o);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcOtherMsg *LibOrgBouncycastleAsn1CmcOtherMsg_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcOtherMsg)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OtherMsg_H
