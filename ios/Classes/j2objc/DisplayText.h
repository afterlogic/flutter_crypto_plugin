//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/DisplayText.java
//

#ifndef DisplayText_H
#define DisplayText_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@protocol LibOrgBouncycastleAsn1ASN1String;

@interface LibOrgBouncycastleAsn1X509DisplayText : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice > {
 @public
  jint contentType_;
  id<LibOrgBouncycastleAsn1ASN1String> contents_;
}
@property (readonly, class) jint CONTENT_TYPE_IA5STRING NS_SWIFT_NAME(CONTENT_TYPE_IA5STRING);
@property (readonly, class) jint CONTENT_TYPE_BMPSTRING NS_SWIFT_NAME(CONTENT_TYPE_BMPSTRING);
@property (readonly, class) jint CONTENT_TYPE_UTF8STRING NS_SWIFT_NAME(CONTENT_TYPE_UTF8STRING);
@property (readonly, class) jint CONTENT_TYPE_VISIBLESTRING NS_SWIFT_NAME(CONTENT_TYPE_VISIBLESTRING);
@property (readonly, class) jint DISPLAY_TEXT_MAXIMUM_SIZE NS_SWIFT_NAME(DISPLAY_TEXT_MAXIMUM_SIZE);

+ (jint)CONTENT_TYPE_IA5STRING;

+ (jint)CONTENT_TYPE_BMPSTRING;

+ (jint)CONTENT_TYPE_UTF8STRING;

+ (jint)CONTENT_TYPE_VISIBLESTRING;

+ (jint)DISPLAY_TEXT_MAXIMUM_SIZE;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)type
                         withNSString:(NSString *)text;

- (instancetype __nonnull)initWithNSString:(NSString *)text;

+ (LibOrgBouncycastleAsn1X509DisplayText *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509DisplayText *)getInstanceWithId:(id)obj;

- (NSString *)getString;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509DisplayText)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509DisplayText, contents_, id<LibOrgBouncycastleAsn1ASN1String>)

inline jint LibOrgBouncycastleAsn1X509DisplayText_get_CONTENT_TYPE_IA5STRING(void);
#define LibOrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_IA5STRING 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509DisplayText, CONTENT_TYPE_IA5STRING, jint)

inline jint LibOrgBouncycastleAsn1X509DisplayText_get_CONTENT_TYPE_BMPSTRING(void);
#define LibOrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_BMPSTRING 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509DisplayText, CONTENT_TYPE_BMPSTRING, jint)

inline jint LibOrgBouncycastleAsn1X509DisplayText_get_CONTENT_TYPE_UTF8STRING(void);
#define LibOrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_UTF8STRING 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509DisplayText, CONTENT_TYPE_UTF8STRING, jint)

inline jint LibOrgBouncycastleAsn1X509DisplayText_get_CONTENT_TYPE_VISIBLESTRING(void);
#define LibOrgBouncycastleAsn1X509DisplayText_CONTENT_TYPE_VISIBLESTRING 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509DisplayText, CONTENT_TYPE_VISIBLESTRING, jint)

inline jint LibOrgBouncycastleAsn1X509DisplayText_get_DISPLAY_TEXT_MAXIMUM_SIZE(void);
#define LibOrgBouncycastleAsn1X509DisplayText_DISPLAY_TEXT_MAXIMUM_SIZE 200
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509DisplayText, DISPLAY_TEXT_MAXIMUM_SIZE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509DisplayText_initWithInt_withNSString_(LibOrgBouncycastleAsn1X509DisplayText *self, jint type, NSString *text);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *new_LibOrgBouncycastleAsn1X509DisplayText_initWithInt_withNSString_(jint type, NSString *text) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *create_LibOrgBouncycastleAsn1X509DisplayText_initWithInt_withNSString_(jint type, NSString *text);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509DisplayText_initWithNSString_(LibOrgBouncycastleAsn1X509DisplayText *self, NSString *text);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *new_LibOrgBouncycastleAsn1X509DisplayText_initWithNSString_(NSString *text) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *create_LibOrgBouncycastleAsn1X509DisplayText_initWithNSString_(NSString *text);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *LibOrgBouncycastleAsn1X509DisplayText_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509DisplayText *LibOrgBouncycastleAsn1X509DisplayText_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509DisplayText)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DisplayText_H
