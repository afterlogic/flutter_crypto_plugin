//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AttributeCertificate.java
//

#ifndef AttributeCertificate_H
#define AttributeCertificate_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleAsn1X509AttributeCertificateInfo;

@interface LibOrgBouncycastleAsn1X509AttributeCertificate : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm_;
  LibOrgBouncycastleAsn1DERBitString *signatureValue_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo:(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)acinfo
                                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)signatureAlgorithm
                                              withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signatureValue;

- (LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)getAcinfo;

+ (LibOrgBouncycastleAsn1X509AttributeCertificate *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (LibOrgBouncycastleAsn1DERBitString *)getSignatureValue;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509AttributeCertificate)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AttributeCertificate, acinfo_, LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AttributeCertificate, signatureAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AttributeCertificate, signatureValue_, LibOrgBouncycastleAsn1DERBitString *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificate *LibOrgBouncycastleAsn1X509AttributeCertificate_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificate *self, LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificate *new_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificate *create_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificateInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signatureValue);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509AttributeCertificate *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificate *new_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificate *create_LibOrgBouncycastleAsn1X509AttributeCertificate_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509AttributeCertificate)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AttributeCertificate_H
