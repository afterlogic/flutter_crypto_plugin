//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ElGamalParameters.java
//

#ifndef ElGamalParameters_H
#define ElGamalParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;

@interface LibOrgBouncycastleCryptoParamsElGamalParameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                                             withInt:(jint)l;

- (jboolean)isEqual:(id)obj;

- (JavaMathBigInteger *)getG;

- (jint)getL;

- (JavaMathBigInteger *)getP;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsElGamalParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalParameters *new_LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalParameters *create_LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(LibOrgBouncycastleCryptoParamsElGamalParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalParameters *new_LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalParameters *create_LibOrgBouncycastleCryptoParamsElGamalParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, jint l);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsElGamalParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ElGamalParameters_H
