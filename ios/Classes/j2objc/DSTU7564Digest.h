//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/DSTU7564Digest.java
//

#ifndef DSTU7564Digest_H
#define DSTU7564Digest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ExtendedDigest.h"
#include "J2ObjC_header.h"
#include "Memoable.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoDigestsDSTU7564Digest : NSObject < LibOrgBouncycastleCryptoExtendedDigest, LibOrgBouncycastleUtilMemoable >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest:(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *)digest;

- (instancetype __nonnull)initWithInt:(jint)hashSizeBits;

- (id<LibOrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getByteLength;

- (jint)getDigestSize;

- (void)reset;

- (void)resetWithLibOrgBouncycastleUtilMemoable:(id<LibOrgBouncycastleUtilMemoable>)other;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoDigestsDSTU7564Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsDSTU7564Digest *new_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsDSTU7564Digest *create_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithLibOrgBouncycastleCryptoDigestsDSTU7564Digest_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *digest);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(LibOrgBouncycastleCryptoDigestsDSTU7564Digest *self, jint hashSizeBits);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsDSTU7564Digest *new_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsDSTU7564Digest *create_LibOrgBouncycastleCryptoDigestsDSTU7564Digest_initWithInt_(jint hashSizeBits);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsDSTU7564Digest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSTU7564Digest_H
