//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/SignerOutputStream.java
//

#ifndef SignerOutputStream_H
#define SignerOutputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/OutputStream.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoSigner;

@interface LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream : JavaIoOutputStream

#pragma mark Public

- (void)writeWithByteArray:(IOSByteArray *)bytes;

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)b;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoSigner:(id<LibOrgBouncycastleCryptoSigner>)sig;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream_initWithLibOrgBouncycastleCryptoSigner_(LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream *self, id<LibOrgBouncycastleCryptoSigner> sig);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream *new_LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream_initWithLibOrgBouncycastleCryptoSigner_(id<LibOrgBouncycastleCryptoSigner> sig) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream *create_LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream_initWithLibOrgBouncycastleCryptoSigner_(id<LibOrgBouncycastleCryptoSigner> sig);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorBcSignerOutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SignerOutputStream_H
