//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/protection/KeyRingProtectionSettings.java
//

#include "HashAlgorithmUtil.h"
#include "J2ObjC_source.h"
#include "KeyRingProtectionSettings.h"
#include "SymmetricKeyAlgorithm.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings () {
 @public
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *encryptionAlgorithm_;
  LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *hashAlgorithmUtil_;
  jint s2kCount_;
}

@end

J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings, encryptionAlgorithm_, LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings, hashAlgorithmUtil_, LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *)

@implementation LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings

- (instancetype)initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm:(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)encryptionAlgorithm
                        withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil:(LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *)hashAlgorithmUtil
                                                                  withInt:(jint)s2kCount {
  LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings_initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_(self, encryptionAlgorithm, hashAlgorithmUtil, s2kCount);
  return self;
}

- (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)getEncryptionAlgorithm {
  return encryptionAlgorithm_;
}

- (LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *)getHashAlgorithmUtil {
  return hashAlgorithmUtil_;
}

- (jint)getS2kCount {
  return s2kCount_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpAlgorithmHashAlgorithmUtil;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm:withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil:withInt:);
  methods[1].selector = @selector(getEncryptionAlgorithm);
  methods[2].selector = @selector(getHashAlgorithmUtil);
  methods[3].selector = @selector(getS2kCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encryptionAlgorithm_", "LLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hashAlgorithmUtil_", "LLibComAfterlogicPgpAlgorithmHashAlgorithmUtil;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "s2kCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm;LLibComAfterlogicPgpAlgorithmHashAlgorithmUtil;I" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings = { "KeyRingProtectionSettings", "lib.com.afterlogic.pgp.key.protection", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings;
}

@end

void LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings_initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings *self, LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *encryptionAlgorithm, LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *hashAlgorithmUtil, jint s2kCount) {
  NSObject_init(self);
  self->encryptionAlgorithm_ = encryptionAlgorithm;
  self->hashAlgorithmUtil_ = hashAlgorithmUtil;
  if (s2kCount > 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"s2kCount cannot be less than 1.");
  }
  self->s2kCount_ = s2kCount;
}

LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings *new_LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings_initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *encryptionAlgorithm, LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *hashAlgorithmUtil, jint s2kCount) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings, initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_, encryptionAlgorithm, hashAlgorithmUtil, s2kCount)
}

LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings *create_LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings_initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *encryptionAlgorithm, LibComAfterlogicPgpAlgorithmHashAlgorithmUtil *hashAlgorithmUtil, jint s2kCount) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings, initWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil_withInt_, encryptionAlgorithm, hashAlgorithmUtil, s2kCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeyProtectionKeyRingProtectionSettings)
