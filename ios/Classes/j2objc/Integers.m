//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/Integers.java
//

#include "Integers.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"

@implementation LibOrgBouncycastleUtilIntegers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleUtilIntegers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)rotateLeftWithInt:(jint)i
                  withInt:(jint)distance {
  return LibOrgBouncycastleUtilIntegers_rotateLeftWithInt_withInt_(i, distance);
}

+ (jint)rotateRightWithInt:(jint)i
                   withInt:(jint)distance {
  return LibOrgBouncycastleUtilIntegers_rotateRightWithInt_withInt_(i, distance);
}

+ (JavaLangInteger *)valueOfWithInt:(jint)value {
  return LibOrgBouncycastleUtilIntegers_valueOfWithInt_(value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(rotateLeftWithInt:withInt:);
  methods[2].selector = @selector(rotateRightWithInt:withInt:);
  methods[3].selector = @selector(valueOfWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rotateLeft", "II", "rotateRight", "valueOf", "I" };
  static const J2ObjcClassInfo _LibOrgBouncycastleUtilIntegers = { "Integers", "lib.org.bouncycastle.util", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleUtilIntegers;
}

@end

void LibOrgBouncycastleUtilIntegers_init(LibOrgBouncycastleUtilIntegers *self) {
  NSObject_init(self);
}

LibOrgBouncycastleUtilIntegers *new_LibOrgBouncycastleUtilIntegers_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilIntegers, init)
}

LibOrgBouncycastleUtilIntegers *create_LibOrgBouncycastleUtilIntegers_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilIntegers, init)
}

jint LibOrgBouncycastleUtilIntegers_rotateLeftWithInt_withInt_(jint i, jint distance) {
  LibOrgBouncycastleUtilIntegers_initialize();
  return JavaLangInteger_rotateLeftWithInt_withInt_(i, distance);
}

jint LibOrgBouncycastleUtilIntegers_rotateRightWithInt_withInt_(jint i, jint distance) {
  LibOrgBouncycastleUtilIntegers_initialize();
  return JavaLangInteger_rotateRightWithInt_withInt_(i, distance);
}

JavaLangInteger *LibOrgBouncycastleUtilIntegers_valueOfWithInt_(jint value) {
  LibOrgBouncycastleUtilIntegers_initialize();
  return JavaLangInteger_valueOfWithInt_(value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleUtilIntegers)
