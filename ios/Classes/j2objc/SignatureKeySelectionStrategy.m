//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/key/impl/SignatureKeySelectionStrategy.java
//

#include "J2ObjC_source.h"
#include "PGPSecretKey.h"
#include "SecretKeySelectionStrategy.h"
#include "SignatureKeySelectionStrategy.h"

@implementation LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKey *)key {
  return [((LibOrgBouncycastleOpenpgpPGPSecretKey *) nil_chk(key)) isSigningKey];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(acceptWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "accept", "LNSObject;LLibOrgBouncycastleOpenpgpPGPSecretKey;", "(TO;Llib/org/bouncycastle/openpgp/PGPSecretKey;)Z", "<O:Ljava/lang/Object;>Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<TO;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy = { "SignatureKeySelectionStrategy", "lib.com.afterlogic.pgp.key.selection.key.impl", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 3, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy *self) {
  LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_init(self);
}

LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy, init)
}

LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyImplSignatureKeySelectionStrategy)
