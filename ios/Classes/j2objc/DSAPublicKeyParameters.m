//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DSAPublicKeyParameters.java
//

#include "DSAKeyParameters.h"
#include "DSAParameters.h"
#include "DSAPublicKeyParameters.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters () {
 @public
  JavaMathBigInteger *y_;
}

- (JavaMathBigInteger *)validateWithJavaMathBigInteger:(JavaMathBigInteger *)y
       withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)params;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters, y_, JavaMathBigInteger *)

inline JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_get_ONE(void);
static JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters, ONE, JavaMathBigInteger *)

inline JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_get_TWO(void);
static JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_TWO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters, TWO, JavaMathBigInteger *)

__attribute__((unused)) static JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_validateWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *self, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters)

@implementation LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)params {
  LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(self, y, params);
  return self;
}

- (JavaMathBigInteger *)validateWithJavaMathBigInteger:(JavaMathBigInteger *)y
       withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)params {
  return LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_validateWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(self, y, params);
}

- (JavaMathBigInteger *)getY {
  return y_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withLibOrgBouncycastleCryptoParamsDSAParameters:);
  methods[1].selector = @selector(validateWithJavaMathBigInteger:withLibOrgBouncycastleCryptoParamsDSAParameters:);
  methods[2].selector = @selector(getY);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "TWO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "y_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LLibOrgBouncycastleCryptoParamsDSAParameters;", "validate", &LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_ONE, &LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_TWO };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters = { "DSAPublicKeyParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters class]) {
    LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_TWO = JavaMathBigInteger_valueOfWithLong_(2);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters)
  }
}

@end

void LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *self, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params) {
  LibOrgBouncycastleCryptoParamsDSAKeyParameters_initWithBoolean_withLibOrgBouncycastleCryptoParamsDSAParameters_(self, false, params);
  self->y_ = LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_validateWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(self, y, params);
}

LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *new_LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters, initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_, y, params)
}

LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *create_LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters, initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_, y, params)
}

JavaMathBigInteger *LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_validateWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *self, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params) {
  if (params != nil) {
    if ([((JavaMathBigInteger *) nil_chk(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_TWO)) compareToWithId:y] <= 0 && [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk([params getP])) subtractWithJavaMathBigInteger:LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_TWO])) compareToWithId:y] >= 0 && [((JavaMathBigInteger *) nil_chk(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_ONE)) isEqual:[((JavaMathBigInteger *) nil_chk(y)) modPowWithJavaMathBigInteger:[params getQ] withJavaMathBigInteger:[params getP]]]) {
      return y;
    }
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"y value does not appear to be in correct group");
  }
  else {
    return y;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters)
