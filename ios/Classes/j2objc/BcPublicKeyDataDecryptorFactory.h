//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/BcPublicKeyDataDecryptorFactory.java
//

#ifndef BcPublicKeyDataDecryptorFactory_H
#define BcPublicKeyDataDecryptorFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PublicKeyDataDecryptorFactory.h"

@class IOSByteArray;
@class IOSObjectArray;
@class LibOrgBouncycastleOpenpgpPGPPrivateKey;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor;

@interface LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory : NSObject < LibOrgBouncycastleOpenpgpOperatorPublicKeyDataDecryptorFactory >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPPrivateKey:(LibOrgBouncycastleOpenpgpPGPPrivateKey *)privKey;

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor>)createDataDecryptorWithBoolean:(jboolean)withIntegrityPacket
                                                                                withInt:(jint)encAlgorithm
                                                                          withByteArray:(IOSByteArray *)key;

- (IOSByteArray *)recoverSessionDataWithInt:(jint)keyAlgorithm
                             withByteArray2:(IOSObjectArray *)secKeyData;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory_initWithLibOrgBouncycastleOpenpgpPGPPrivateKey_(LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory *self, LibOrgBouncycastleOpenpgpPGPPrivateKey *privKey);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory *new_LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory_initWithLibOrgBouncycastleOpenpgpPGPPrivateKey_(LibOrgBouncycastleOpenpgpPGPPrivateKey *privKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory *create_LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory_initWithLibOrgBouncycastleOpenpgpPGPPrivateKey_(LibOrgBouncycastleOpenpgpPGPPrivateKey *privKey);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorBcBcPublicKeyDataDecryptorFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BcPublicKeyDataDecryptorFactory_H
