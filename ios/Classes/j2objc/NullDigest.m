//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/NullDigest.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NullDigest.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/lang/System.h"

@class LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream;

@interface LibOrgBouncycastleCryptoDigestsNullDigest () {
 @public
  LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *bOut_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoDigestsNullDigest, bOut_, LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *)

@interface LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream : JavaIoByteArrayOutputStream

- (instancetype)init;

- (void)reset;

- (void)copy__WithByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream)

__attribute__((unused)) static void LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *self);

__attribute__((unused)) static LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *new_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *create_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream)

@implementation LibOrgBouncycastleCryptoDigestsNullDigest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoDigestsNullDigest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getAlgorithmName {
  return @"NULL";
}

- (jint)getDigestSize {
  return [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) size];
}

- (void)updateWithByte:(jbyte)inArg {
  [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) writeWithInt:inArg];
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) writeWithByteArray:inArg withInt:inOff withInt:len];
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  jint size = [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) size];
  [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) copy__WithByteArray:outArg withInt:outOff];
  [self reset];
  return size;
}

- (void)reset {
  [((LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *) nil_chk(bOut_)) reset];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getDigestSize);
  methods[3].selector = @selector(updateWithByte:);
  methods[4].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(doFinalWithByteArray:withInt:);
  methods[6].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bOut_", "LLibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "update", "B", "[BII", "doFinal", "[BI", "LLibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoDigestsNullDigest = { "NullDigest", "lib.org.bouncycastle.crypto.digests", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, 5, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoDigestsNullDigest;
}

@end

void LibOrgBouncycastleCryptoDigestsNullDigest_init(LibOrgBouncycastleCryptoDigestsNullDigest *self) {
  NSObject_init(self);
  self->bOut_ = new_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init();
}

LibOrgBouncycastleCryptoDigestsNullDigest *new_LibOrgBouncycastleCryptoDigestsNullDigest_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoDigestsNullDigest, init)
}

LibOrgBouncycastleCryptoDigestsNullDigest *create_LibOrgBouncycastleCryptoDigestsNullDigest_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoDigestsNullDigest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoDigestsNullDigest)

@implementation LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reset {
  [super reset];
  LibOrgBouncycastleUtilArrays_clearWithByteArray_(buf_);
}

- (void)copy__WithByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(buf_, 0, outArg, outOff, [self size]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(copy__WithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "copy", "[BI", "LLibOrgBouncycastleCryptoDigestsNullDigest;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream = { "OpenByteArrayOutputStream", "lib.org.bouncycastle.crypto.digests", ptrTable, methods, NULL, 7, 0xa, 3, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream;
}

@end

void LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *self) {
  JavaIoByteArrayOutputStream_init(self);
}

LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *new_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream, init)
}

LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream *create_LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoDigestsNullDigest_OpenByteArrayOutputStream)
