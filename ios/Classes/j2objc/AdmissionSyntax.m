//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/isismtt/x509/AdmissionSyntax.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AdmissionSyntax.h"
#include "Admissions.h"
#include "DERSequence.h"
#include "GeneralName.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax () {
 @public
  LibOrgBouncycastleAsn1X509GeneralName *admissionAuthority_;
  LibOrgBouncycastleAsn1ASN1Sequence *contentsOfAdmissions_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, admissionAuthority_, LibOrgBouncycastleAsn1X509GeneralName *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, contentsOfAdmissions_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *new_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *create_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax

+ (LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)admissionAuthority
                       withLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)contentsOfAdmissions {
  LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_(self, admissionAuthority, contentsOfAdmissions);
  return self;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *vec = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (admissionAuthority_ != nil) {
    [vec addWithLibOrgBouncycastleAsn1ASN1Encodable:admissionAuthority_];
  }
  [vec addWithLibOrgBouncycastleAsn1ASN1Encodable:contentsOfAdmissions_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(vec);
}

- (LibOrgBouncycastleAsn1X509GeneralName *)getAdmissionAuthority {
  return admissionAuthority_;
}

- (IOSObjectArray *)getContentsOfAdmissions {
  IOSObjectArray *admissions = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(contentsOfAdmissions_)) size] type:LibOrgBouncycastleAsn1IsismttX509Admissions_class_()];
  jint count = 0;
  for (id<JavaUtilEnumeration> e = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(contentsOfAdmissions_)) getObjects]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
    (void) IOSObjectArray_Set(admissions, count++, LibOrgBouncycastleAsn1IsismttX509Admissions_getInstanceWithId_([e nextElement]));
  }
  return admissions;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1IsismttX509AdmissionSyntax;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralName;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1IsismttX509Admissions;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralName:withLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(toASN1Primitive);
  methods[4].selector = @selector(getAdmissionAuthority);
  methods[5].selector = @selector(getContentsOfAdmissions);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "admissionAuthority_", "LLibOrgBouncycastleAsn1X509GeneralName;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentsOfAdmissions_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509GeneralName;LLibOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax = { "AdmissionSyntax", "lib.org.bouncycastle.asn1.isismtt.x509", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax;
}

@end

LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initialize();
  if (obj == nil || [obj isKindOfClass:[LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax class]]) {
    return (LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *) cast_chk(obj, [LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax class]);
  }
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1Sequence class]]) {
    return new_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_((LibOrgBouncycastleAsn1ASN1Sequence *) obj);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}

void LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  switch ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size]) {
    case 1:
    self->contentsOfAdmissions_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:0]);
    break;
    case 2:
    self->admissionAuthority_ = LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->contentsOfAdmissions_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:1]);
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
}

LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *new_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *create_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *self, LibOrgBouncycastleAsn1X509GeneralName *admissionAuthority, LibOrgBouncycastleAsn1ASN1Sequence *contentsOfAdmissions) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->admissionAuthority_ = admissionAuthority;
  self->contentsOfAdmissions_ = contentsOfAdmissions;
}

LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *new_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509GeneralName *admissionAuthority, LibOrgBouncycastleAsn1ASN1Sequence *contentsOfAdmissions) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_, admissionAuthority, contentsOfAdmissions)
}

LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax *create_LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax_initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509GeneralName *admissionAuthority, LibOrgBouncycastleAsn1ASN1Sequence *contentsOfAdmissions) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax, initWithLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1Sequence_, admissionAuthority, contentsOfAdmissions)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1IsismttX509AdmissionSyntax)
