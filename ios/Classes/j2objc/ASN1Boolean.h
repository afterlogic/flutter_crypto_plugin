//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1Boolean.java
//

#ifndef ASN1Boolean_H
#define ASN1Boolean_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Primitive.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1ASN1Boolean : LibOrgBouncycastleAsn1ASN1Primitive
@property (readonly, class) LibOrgBouncycastleAsn1ASN1Boolean *FALSE_ NS_SWIFT_NAME(FALSE_);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1Boolean *TRUE_ NS_SWIFT_NAME(TRUE_);

+ (LibOrgBouncycastleAsn1ASN1Boolean *)FALSE_;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)TRUE_;

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)value;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                 withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)getInstanceWithBoolean:(jboolean)value;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)getInstanceWithInt:(jint)value;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)getInstanceWithId:(id)obj;

- (NSUInteger)hash;

- (jboolean)isTrue;

- (NSString *)description;

#pragma mark Protected

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o;

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)value;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

+ (LibOrgBouncycastleAsn1ASN1Boolean *)fromOctetStringWithByteArray:(IOSByteArray *)value;

- (jboolean)isConstructed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1ASN1Boolean)

inline LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_get_FALSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1ASN1Boolean, FALSE, LibOrgBouncycastleAsn1ASN1Boolean *)

inline LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_get_TRUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1ASN1Boolean, TRUE, LibOrgBouncycastleAsn1ASN1Boolean *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithBoolean_(jboolean value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithInt_(jint value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1Boolean_initWithByteArray_(LibOrgBouncycastleAsn1ASN1Boolean *self, IOSByteArray *value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *new_LibOrgBouncycastleAsn1ASN1Boolean_initWithByteArray_(IOSByteArray *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *create_LibOrgBouncycastleAsn1ASN1Boolean_initWithByteArray_(IOSByteArray *value);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1Boolean_initWithBoolean_(LibOrgBouncycastleAsn1ASN1Boolean *self, jboolean value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *new_LibOrgBouncycastleAsn1ASN1Boolean_initWithBoolean_(jboolean value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *create_LibOrgBouncycastleAsn1ASN1Boolean_initWithBoolean_(jboolean value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Boolean *LibOrgBouncycastleAsn1ASN1Boolean_fromOctetStringWithByteArray_(IOSByteArray *value);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1Boolean)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1Boolean_H
