//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/asn1/GMSSPrivateKey.java
//

#ifndef GMSSPrivateKey_H
#define GMSSPrivateKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSIntArray;
@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastlePqcCryptoGmssGMSSParameters;

@interface LibOrgBouncycastlePqcAsn1GMSSPrivateKey : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithIntArray:(IOSIntArray *)index
                            withByteArray2:(IOSObjectArray *)currentSeed
                            withByteArray2:(IOSObjectArray *)nextNextSeed
                            withByteArray3:(IOSObjectArray *)currentAuthPath
                            withByteArray3:(IOSObjectArray *)nextAuthPath
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)currentTreehash
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)nextTreehash
                   withJavaUtilVectorArray:(IOSObjectArray *)currentStack
                   withJavaUtilVectorArray:(IOSObjectArray *)nextStack
                  withJavaUtilVectorArray2:(IOSObjectArray *)currentRetain
                  withJavaUtilVectorArray2:(IOSObjectArray *)nextRetain
                            withByteArray3:(IOSObjectArray *)keep
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)nextNextLeaf
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperLeaf
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperTreehashLeaf
                              withIntArray:(IOSIntArray *)minTreehash
                            withByteArray2:(IOSObjectArray *)nextRoot
withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray:(IOSObjectArray *)nextNextRoot
                            withByteArray2:(IOSObjectArray *)currentRootSig
withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray:(IOSObjectArray *)nextRootSig
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)gmssParameterset
withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)digestAlg;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcAsn1GMSSPrivateKey)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcAsn1GMSSPrivateKey_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastlePqcAsn1GMSSPrivateKey *self, IOSIntArray *index, IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *keep, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlg);

FOUNDATION_EXPORT LibOrgBouncycastlePqcAsn1GMSSPrivateKey *new_LibOrgBouncycastlePqcAsn1GMSSPrivateKey_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(IOSIntArray *index, IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *keep, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcAsn1GMSSPrivateKey *create_LibOrgBouncycastlePqcAsn1GMSSPrivateKey_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(IOSIntArray *index, IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *keep, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlg);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcAsn1GMSSPrivateKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSPrivateKey_H
