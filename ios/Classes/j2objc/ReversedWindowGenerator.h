//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/ReversedWindowGenerator.java
//

#ifndef ReversedWindowGenerator_H
#define ReversedWindowGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "RandomGenerator.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoPrngReversedWindowGenerator : NSObject < LibOrgBouncycastleCryptoPrngRandomGenerator >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoPrngRandomGenerator:(id<LibOrgBouncycastleCryptoPrngRandomGenerator>)generator
                                                                      withInt:(jint)windowSize;

- (void)addSeedMaterialWithByteArray:(IOSByteArray *)seed;

- (void)addSeedMaterialWithLong:(jlong)seed;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes;

- (void)nextBytesWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)start
                       withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngReversedWindowGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngReversedWindowGenerator_initWithLibOrgBouncycastleCryptoPrngRandomGenerator_withInt_(LibOrgBouncycastleCryptoPrngReversedWindowGenerator *self, id<LibOrgBouncycastleCryptoPrngRandomGenerator> generator, jint windowSize);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngReversedWindowGenerator *new_LibOrgBouncycastleCryptoPrngReversedWindowGenerator_initWithLibOrgBouncycastleCryptoPrngRandomGenerator_withInt_(id<LibOrgBouncycastleCryptoPrngRandomGenerator> generator, jint windowSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngReversedWindowGenerator *create_LibOrgBouncycastleCryptoPrngReversedWindowGenerator_initWithLibOrgBouncycastleCryptoPrngRandomGenerator_withInt_(id<LibOrgBouncycastleCryptoPrngRandomGenerator> generator, jint windowSize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngReversedWindowGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ReversedWindowGenerator_H
