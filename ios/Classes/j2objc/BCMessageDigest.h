//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/BCMessageDigest.java
//

#ifndef BCMessageDigest_H
#define BCMessageDigest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/MessageDigest.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleJcajceProviderDigestBCMessageDigest : JavaSecurityMessageDigest {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
}

#pragma mark Public

- (IOSByteArray *)engineDigest;

- (void)engineReset;

- (void)engineUpdateWithByte:(jbyte)input;

- (void)engineUpdateWithByteArray:(IOSByteArray *)input
                          withInt:(jint)offset
                          withInt:(jint)len;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestBCMessageDigest)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDigestBCMessageDigest, digest_, id<LibOrgBouncycastleCryptoDigest>)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *self, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *new_LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *create_LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestBCMessageDigest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCMessageDigest_H
