//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/EncryptedContentInfo.java
//

#ifndef EncryptedContentInfo_H
#define EncryptedContentInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmsEncryptedContentInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)contentType
                           withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)contentEncryptionAlgorithm
                                   withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)encryptedContent;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getContentEncryptionAlgorithm;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getContentType;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getEncryptedContent;

+ (LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsEncryptedContentInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsEncryptedContentInfo_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *contentEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *encryptedContent);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEncryptedContentInfo *new_LibOrgBouncycastleAsn1CmsEncryptedContentInfo_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *contentEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *encryptedContent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEncryptedContentInfo *create_LibOrgBouncycastleAsn1CmsEncryptedContentInfo_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *contentEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *encryptedContent);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEncryptedContentInfo *LibOrgBouncycastleAsn1CmsEncryptedContentInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsEncryptedContentInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // EncryptedContentInfo_H
