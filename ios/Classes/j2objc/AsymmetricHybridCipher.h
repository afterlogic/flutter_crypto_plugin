//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/util/AsymmetricHybridCipher.java
//

#ifndef AsymmetricHybridCipher_H
#define AsymmetricHybridCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherSpiExt.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@protocol JavaSecurityKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher : LibOrgBouncycastlePqcJcajceProviderUtilCipherSpiExt {
 @public
  id<JavaSecuritySpecAlgorithmParameterSpec> paramSpec_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)doFinalWithByteArray:(IOSByteArray *)input
                               withInt:(jint)inOff
                               withInt:(jint)inLen;

- (jint)doFinalWithByteArray:(IOSByteArray *)input
                     withInt:(jint)inOff
                     withInt:(jint)inLen
               withByteArray:(IOSByteArray *)output
                     withInt:(jint)outOff;

- (jint)getBlockSize;

- (IOSByteArray *)getIV;

- (jint)getOutputSizeWithInt:(jint)inLen;

- (id<JavaSecuritySpecAlgorithmParameterSpec>)getParameters;

- (void)initDecryptWithJavaSecurityKey:(id<JavaSecurityKey>)key OBJC_METHOD_FAMILY_NONE;

- (void)initDecryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params OBJC_METHOD_FAMILY_NONE;

- (void)initEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key OBJC_METHOD_FAMILY_NONE;

- (void)initEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params OBJC_METHOD_FAMILY_NONE;

- (void)initEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)initEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)updateWithByteArray:(IOSByteArray *)input
                              withInt:(jint)inOff
                              withInt:(jint)inLen;

- (jint)updateWithByteArray:(IOSByteArray *)input
                    withInt:(jint)inOff
                    withInt:(jint)inLen
              withByteArray:(IOSByteArray *)output
                    withInt:(jint)outOff;

#pragma mark Protected

- (jint)decryptOutputSizeWithInt:(jint)inLen;

- (jint)encryptOutputSizeWithInt:(jint)inLen;

- (void)initCipherDecryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
  withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params OBJC_METHOD_FAMILY_NONE;

- (void)initCipherEncryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
  withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr OBJC_METHOD_FAMILY_NONE;

- (void)setModeWithNSString:(NSString *)modeName;

- (void)setPaddingWithNSString:(NSString *)paddingName;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher, paramSpec_, id<JavaSecuritySpecAlgorithmParameterSpec>)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher_init(LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderUtilAsymmetricHybridCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AsymmetricHybridCipher_H
