//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIMessage.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "CMPCertificate.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PKIBody.h"
#include "PKIHeader.h"
#include "PKIMessage.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1CmpPKIMessage () {
 @public
  LibOrgBouncycastleAsn1CmpPKIHeader *header_;
  LibOrgBouncycastleAsn1CmpPKIBody *body_;
  LibOrgBouncycastleAsn1DERBitString *protection_;
  LibOrgBouncycastleAsn1ASN1Sequence *extraCerts_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                                                         withInt:(jint)tagNo
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpPKIMessage, header_, LibOrgBouncycastleAsn1CmpPKIHeader *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpPKIMessage, body_, LibOrgBouncycastleAsn1CmpPKIBody *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpPKIMessage, protection_, LibOrgBouncycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpPKIMessage, extraCerts_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIMessage *new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIMessage *create_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpPKIMessage_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

@implementation LibOrgBouncycastleAsn1CmpPKIMessage

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmpPKIMessage *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpPKIMessage_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpPKIHeader:(LibOrgBouncycastleAsn1CmpPKIHeader *)header
                      withLibOrgBouncycastleAsn1CmpPKIBody:(LibOrgBouncycastleAsn1CmpPKIBody *)body
                    withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)protection
          withLibOrgBouncycastleAsn1CmpCMPCertificateArray:(IOSObjectArray *)extraCerts {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(self, header, body, protection, extraCerts);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpPKIHeader:(LibOrgBouncycastleAsn1CmpPKIHeader *)header
                      withLibOrgBouncycastleAsn1CmpPKIBody:(LibOrgBouncycastleAsn1CmpPKIBody *)body
                    withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)protection {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_(self, header, body, protection);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpPKIHeader:(LibOrgBouncycastleAsn1CmpPKIHeader *)header
                      withLibOrgBouncycastleAsn1CmpPKIBody:(LibOrgBouncycastleAsn1CmpPKIBody *)body {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_(self, header, body);
  return self;
}

- (LibOrgBouncycastleAsn1CmpPKIHeader *)getHeader {
  return header_;
}

- (LibOrgBouncycastleAsn1CmpPKIBody *)getBody {
  return body_;
}

- (LibOrgBouncycastleAsn1DERBitString *)getProtection {
  return protection_;
}

- (IOSObjectArray *)getExtraCerts {
  if (extraCerts_ == nil) {
    return nil;
  }
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[extraCerts_ size] type:LibOrgBouncycastleAsn1CmpCMPCertificate_class_()];
  for (jint i = 0; i < results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1CmpCMPCertificate_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(extraCerts_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:header_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:body_];
  LibOrgBouncycastleAsn1CmpPKIMessage_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, 0, protection_);
  LibOrgBouncycastleAsn1CmpPKIMessage_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, 1, extraCerts_);
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                                                         withInt:(jint)tagNo
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj {
  LibOrgBouncycastleAsn1CmpPKIMessage_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, tagNo, obj);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIMessage;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIHeader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIBody;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1CmpCMPCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1CmpPKIHeader:withLibOrgBouncycastleAsn1CmpPKIBody:withLibOrgBouncycastleAsn1DERBitString:withLibOrgBouncycastleAsn1CmpCMPCertificateArray:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1CmpPKIHeader:withLibOrgBouncycastleAsn1CmpPKIBody:withLibOrgBouncycastleAsn1DERBitString:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleAsn1CmpPKIHeader:withLibOrgBouncycastleAsn1CmpPKIBody:);
  methods[5].selector = @selector(getHeader);
  methods[6].selector = @selector(getBody);
  methods[7].selector = @selector(getProtection);
  methods[8].selector = @selector(getExtraCerts);
  methods[9].selector = @selector(toASN1Primitive);
  methods[10].selector = @selector(addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:withInt:withLibOrgBouncycastleAsn1ASN1Encodable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "header_", "LLibOrgBouncycastleAsn1CmpPKIHeader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "body_", "LLibOrgBouncycastleAsn1CmpPKIBody;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "protection_", "LLibOrgBouncycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraCerts_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1CmpPKIHeader;LLibOrgBouncycastleAsn1CmpPKIBody;LLibOrgBouncycastleAsn1DERBitString;[LLibOrgBouncycastleAsn1CmpCMPCertificate;", "LLibOrgBouncycastleAsn1CmpPKIHeader;LLibOrgBouncycastleAsn1CmpPKIBody;LLibOrgBouncycastleAsn1DERBitString;", "LLibOrgBouncycastleAsn1CmpPKIHeader;LLibOrgBouncycastleAsn1CmpPKIBody;", "addOptional", "LLibOrgBouncycastleAsn1ASN1EncodableVector;ILLibOrgBouncycastleAsn1ASN1Encodable;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpPKIMessage = { "PKIMessage", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 11, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpPKIMessage;
}

@end

void LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->header_ = LibOrgBouncycastleAsn1CmpPKIHeader_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
  self->body_ = LibOrgBouncycastleAsn1CmpPKIBody_getInstanceWithId_([en nextElement]);
  while ([en hasMoreElements]) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *tObj = (LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([en nextElement], [LibOrgBouncycastleAsn1ASN1TaggedObject class]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tObj)) getTagNo] == 0) {
      self->protection_ = LibOrgBouncycastleAsn1DERBitString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
    else {
      self->extraCerts_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
  }
}

LibOrgBouncycastleAsn1CmpPKIMessage *new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpPKIMessage *create_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpPKIMessage *LibOrgBouncycastleAsn1CmpPKIMessage_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpPKIMessage_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmpPKIMessage class]]) {
    return (LibOrgBouncycastleAsn1CmpPKIMessage *) o;
  }
  else if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection, IOSObjectArray *extraCerts) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->header_ = header;
  self->body_ = body;
  self->protection_ = protection;
  if (extraCerts != nil) {
    LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
    for (jint i = 0; i < extraCerts->size_; i++) {
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:IOSObjectArray_Get(extraCerts, i)];
    }
    self->extraCerts_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
  }
}

LibOrgBouncycastleAsn1CmpPKIMessage *new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection, IOSObjectArray *extraCerts) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_, header, body, protection, extraCerts)
}

LibOrgBouncycastleAsn1CmpPKIMessage *create_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection, IOSObjectArray *extraCerts) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_, header, body, protection, extraCerts)
}

void LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection) {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(self, header, body, protection, nil);
}

LibOrgBouncycastleAsn1CmpPKIMessage *new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_, header, body, protection)
}

LibOrgBouncycastleAsn1CmpPKIMessage *create_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body, LibOrgBouncycastleAsn1DERBitString *protection) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_, header, body, protection)
}

void LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body) {
  LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1CmpCMPCertificateArray_(self, header, body, nil, nil);
}

LibOrgBouncycastleAsn1CmpPKIMessage *new_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_, header, body)
}

LibOrgBouncycastleAsn1CmpPKIMessage *create_LibOrgBouncycastleAsn1CmpPKIMessage_initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_(LibOrgBouncycastleAsn1CmpPKIHeader *header, LibOrgBouncycastleAsn1CmpPKIBody *body) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIMessage, initWithLibOrgBouncycastleAsn1CmpPKIHeader_withLibOrgBouncycastleAsn1CmpPKIBody_, header, body)
}

void LibOrgBouncycastleAsn1CmpPKIMessage_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpPKIMessage *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  if (obj != nil) {
    [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, tagNo, obj)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpPKIMessage)
