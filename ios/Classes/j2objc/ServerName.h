//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/ServerName.java
//

#ifndef ServerName_H
#define ServerName_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;

@interface LibOrgBouncycastleCryptoTlsServerName : NSObject {
 @public
  jshort nameType_;
  id name_;
}

#pragma mark Public

- (instancetype __nonnull)initWithShort:(jshort)nameType
                                 withId:(id)name;

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (NSString *)getHostName;

- (id)getName;

- (jshort)getNameType;

+ (LibOrgBouncycastleCryptoTlsServerName *)parseWithJavaIoInputStream:(JavaIoInputStream *)input;

#pragma mark Protected

+ (jboolean)isCorrectTypeWithShort:(jshort)nameType
                            withId:(id)name;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsServerName)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsServerName, name_, id)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsServerName_initWithShort_withId_(LibOrgBouncycastleCryptoTlsServerName *self, jshort nameType, id name);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsServerName *new_LibOrgBouncycastleCryptoTlsServerName_initWithShort_withId_(jshort nameType, id name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsServerName *create_LibOrgBouncycastleCryptoTlsServerName_initWithShort_withId_(jshort nameType, id name);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsServerName *LibOrgBouncycastleCryptoTlsServerName_parseWithJavaIoInputStream_(JavaIoInputStream *input);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleCryptoTlsServerName_isCorrectTypeWithShort_withId_(jshort nameType, id name);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsServerName)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ServerName_H
