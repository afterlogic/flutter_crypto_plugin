//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/elgamal/BCElGamalPublicKey.java
//

#ifndef BCElGamalPublicKey_H
#define BCElGamalPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ElGamalPublicKey.h"
#include "J2ObjC_header.h"
#include "javax/crypto/interfaces/DHPublicKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaxCryptoSpecDHParameterSpec;
@class JavaxCryptoSpecDHPublicKeySpec;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters;
@class LibOrgBouncycastleJceSpecElGamalParameterSpec;
@class LibOrgBouncycastleJceSpecElGamalPublicKeySpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey : NSObject < LibOrgBouncycastleJceInterfacesElGamalPublicKey, JavaxCryptoInterfacesDHPublicKey >
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastleJceSpecElGamalParameterSpec *)getParameters;

- (JavaxCryptoSpecDHParameterSpec *)getParams;

- (JavaMathBigInteger *)getY;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
   withLibOrgBouncycastleJceSpecElGamalParameterSpec:(LibOrgBouncycastleJceSpecElGamalParameterSpec *)elSpec;

- (instancetype __nonnull)initWithJavaxCryptoInterfacesDHPublicKey:(id<JavaxCryptoInterfacesDHPublicKey>)key;

- (instancetype __nonnull)initWithJavaxCryptoSpecDHPublicKeySpec:(JavaxCryptoSpecDHPublicKeySpec *)spec;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceInterfacesElGamalPublicKey:(id<LibOrgBouncycastleJceInterfacesElGamalPublicKey>)key;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters:(LibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters *)params;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceSpecElGamalPublicKeySpec:(LibOrgBouncycastleJceSpecElGamalPublicKeySpec *)spec;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey)

inline jlong LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_serialVersionUID 8712728417091216948LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceSpecElGamalPublicKeySpec_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, LibOrgBouncycastleJceSpecElGamalPublicKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceSpecElGamalPublicKeySpec_(LibOrgBouncycastleJceSpecElGamalPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceSpecElGamalPublicKeySpec_(LibOrgBouncycastleJceSpecElGamalPublicKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoSpecDHPublicKeySpec_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, JavaxCryptoSpecDHPublicKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoSpecDHPublicKeySpec_(JavaxCryptoSpecDHPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoSpecDHPublicKeySpec_(JavaxCryptoSpecDHPublicKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceInterfacesElGamalPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, id<LibOrgBouncycastleJceInterfacesElGamalPublicKey> key);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceInterfacesElGamalPublicKey_(id<LibOrgBouncycastleJceInterfacesElGamalPublicKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleJceInterfacesElGamalPublicKey_(id<LibOrgBouncycastleJceInterfacesElGamalPublicKey> key);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoInterfacesDHPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, id<JavaxCryptoInterfacesDHPublicKey> key);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoInterfacesDHPublicKey_(id<JavaxCryptoInterfacesDHPublicKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaxCryptoInterfacesDHPublicKey_(id<JavaxCryptoInterfacesDHPublicKey> key);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, LibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters_(LibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters_(LibOrgBouncycastleCryptoParamsElGamalPublicKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaMathBigInteger_withLibOrgBouncycastleJceSpecElGamalParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, JavaMathBigInteger *y, LibOrgBouncycastleJceSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaMathBigInteger_withLibOrgBouncycastleJceSpecElGamalParameterSpec_(JavaMathBigInteger *y, LibOrgBouncycastleJceSpecElGamalParameterSpec *elSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithJavaMathBigInteger_withLibOrgBouncycastleJceSpecElGamalParameterSpec_(JavaMathBigInteger *y, LibOrgBouncycastleJceSpecElGamalParameterSpec *elSpec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricElgamalBCElGamalPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCElGamalPublicKey_H
