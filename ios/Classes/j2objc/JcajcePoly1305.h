//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/JcajcePoly1305.java
//

#ifndef JcajcePoly1305_H
#define JcajcePoly1305_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajcePoly1305_H
