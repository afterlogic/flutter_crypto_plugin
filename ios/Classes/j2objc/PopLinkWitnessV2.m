//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/PopLinkWitnessV2.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PopLinkWitnessV2.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 () {
 @public
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyGenAlgorithm_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm_;
  IOSByteArray *witness_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, keyGenAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, macAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, witness_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *new_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *create_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmcPopLinkWitnessV2

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)keyGenAlgorithm
                    withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)macAlgorithm
                                                        withByteArray:(IOSByteArray *)witness {
  LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(self, keyGenAlgorithm, macAlgorithm, witness);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_getInstanceWithId_(o);
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getKeyGenAlgorithm {
  return keyGenAlgorithm_;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMacAlgorithm {
  return macAlgorithm_;
}

- (IOSByteArray *)getWitness {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(witness_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:keyGenAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:macAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([self getWitness])];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmcPopLinkWitnessV2;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getKeyGenAlgorithm);
  methods[4].selector = @selector(getMacAlgorithm);
  methods[5].selector = @selector(getWitness);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyGenAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "macAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "witness_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 = { "PopLinkWitnessV2", "lib.org.bouncycastle.asn1.cmc", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2;
}

@end

void LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, IOSByteArray *witness) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->keyGenAlgorithm_ = keyGenAlgorithm;
  self->macAlgorithm_ = macAlgorithm;
  self->witness_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(witness);
}

LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *new_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, IOSByteArray *witness) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, keyGenAlgorithm, macAlgorithm, witness)
}

LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *create_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyGenAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, IOSByteArray *witness) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, keyGenAlgorithm, macAlgorithm, witness)
}

void LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"incorrect sequence size");
  }
  self->keyGenAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->macAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
  self->witness_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:2]))) getOctets]);
}

LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *new_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *create_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 class]]) {
    return (LibOrgBouncycastleAsn1CmcPopLinkWitnessV2 *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmcPopLinkWitnessV2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmcPopLinkWitnessV2)
