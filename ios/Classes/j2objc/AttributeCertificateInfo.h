//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AttributeCertificateInfo.java
//

#ifndef AttributeCertificateInfo_H
#define AttributeCertificateInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleAsn1X509AttCertIssuer;
@class LibOrgBouncycastleAsn1X509AttCertValidityPeriod;
@class LibOrgBouncycastleAsn1X509Extensions;
@class LibOrgBouncycastleAsn1X509Holder;

@interface LibOrgBouncycastleAsn1X509AttributeCertificateInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (LibOrgBouncycastleAsn1X509AttCertValidityPeriod *)getAttrCertValidityPeriod;

- (LibOrgBouncycastleAsn1ASN1Sequence *)getAttributes;

- (LibOrgBouncycastleAsn1X509Extensions *)getExtensions;

- (LibOrgBouncycastleAsn1X509Holder *)getHolder;

+ (LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                  withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509AttCertIssuer *)getIssuer;

- (LibOrgBouncycastleAsn1DERBitString *)getIssuerUniqueID;

- (LibOrgBouncycastleAsn1ASN1Integer *)getSerialNumber;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignature;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509AttributeCertificateInfo)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificateInfo *LibOrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AttributeCertificateInfo *LibOrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509AttributeCertificateInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AttributeCertificateInfo_H
