//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1Encoding.java
//

#ifndef ASN1Encoding_H
#define ASN1Encoding_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleAsn1ASN1Encoding < JavaObject >

@end

@interface LibOrgBouncycastleAsn1ASN1Encoding : NSObject
@property (readonly, copy, class) NSString *DER NS_SWIFT_NAME(DER);
@property (readonly, copy, class) NSString *DL NS_SWIFT_NAME(DL);
@property (readonly, copy, class) NSString *BER NS_SWIFT_NAME(BER);

+ (NSString *)DER;

+ (NSString *)DL;

+ (NSString *)BER;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1ASN1Encoding)

inline NSString *LibOrgBouncycastleAsn1ASN1Encoding_get_DER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1ASN1Encoding_DER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1ASN1Encoding, DER, NSString *)

inline NSString *LibOrgBouncycastleAsn1ASN1Encoding_get_DL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1ASN1Encoding_DL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1ASN1Encoding, DL, NSString *)

inline NSString *LibOrgBouncycastleAsn1ASN1Encoding_get_BER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1ASN1Encoding_BER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1ASN1Encoding, BER, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1Encoding)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1Encoding_H
