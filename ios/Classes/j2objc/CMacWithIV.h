//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/macs/CMacWithIV.java
//

#ifndef CMacWithIV_H
#define CMacWithIV_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CMac.h"
#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoMacsCMacWithIV : LibOrgBouncycastleCryptoMacsCMac

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher
                                                              withInt:(jint)macSizeInBits;

#pragma mark Package-Private

- (void)validateWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoMacsCMacWithIV)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_(LibOrgBouncycastleCryptoMacsCMacWithIV *self, id<LibOrgBouncycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsCMacWithIV *new_LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsCMacWithIV *create_LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(LibOrgBouncycastleCryptoMacsCMacWithIV *self, id<LibOrgBouncycastleCryptoBlockCipher> cipher, jint macSizeInBits);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsCMacWithIV *new_LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> cipher, jint macSizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsCMacWithIV *create_LibOrgBouncycastleCryptoMacsCMacWithIV_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> cipher, jint macSizeInBits);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoMacsCMacWithIV)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CMacWithIV_H
