//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/PreferredAlgorithms.java
//

#ifndef PreferredAlgorithms_H
#define PreferredAlgorithms_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SignatureSubpacket.h"

@class IOSByteArray;
@class IOSIntArray;

@interface LibOrgBouncycastleBcpgSigPreferredAlgorithms : LibOrgBouncycastleBcpgSignatureSubpacket

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)type
                          withBoolean:(jboolean)critical
                          withBoolean:(jboolean)isLongLength
                        withByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithInt:(jint)type
                          withBoolean:(jboolean)critical
                         withIntArray:(IOSIntArray *)preferrences;

- (IOSIntArray *)getPreferences;

- (IOSIntArray *)getPreferrences;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgSigPreferredAlgorithms)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigPreferredAlgorithms *self, jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigPreferredAlgorithms *new_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigPreferredAlgorithms *create_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withBoolean_withByteArray_(jint type, jboolean critical, jboolean isLongLength, IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(LibOrgBouncycastleBcpgSigPreferredAlgorithms *self, jint type, jboolean critical, IOSIntArray *preferrences);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigPreferredAlgorithms *new_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(jint type, jboolean critical, IOSIntArray *preferrences) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigPreferredAlgorithms *create_LibOrgBouncycastleBcpgSigPreferredAlgorithms_initWithInt_withBoolean_withIntArray_(jint type, jboolean critical, IOSIntArray *preferrences);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgSigPreferredAlgorithms)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PreferredAlgorithms_H
