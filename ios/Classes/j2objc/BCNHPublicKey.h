//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey.java
//

#ifndef BCNHPublicKey_H
#define BCNHPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "NHPublicKey.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey : NSObject < LibOrgBouncycastlePqcJcajceInterfacesNHPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters:(LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *)params;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (IOSByteArray *)getPublicData;

- (NSUInteger)hash;

#pragma mark Package-Private

- (id<LibOrgBouncycastleCryptoCipherParameters>)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *self, LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *new_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_(LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *create_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_(LibOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *new_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey *create_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCNHPublicKey_H
