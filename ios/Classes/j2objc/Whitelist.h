//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/keyring/impl/Whitelist.java
//

#ifndef Whitelist_H
#define Whitelist_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PublicKeyRingSelectionStrategy.h"
#include "SecretKeyRingSelectionStrategy.h"

@class LibComAfterlogicPgpUtilMultiMap;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRing;
@class LibOrgBouncycastleOpenpgpPGPSecretKeyRing;
@protocol JavaUtilMap;

@interface LibComAfterlogicPgpKeySelectionKeyringImplWhitelist : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_init(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist *self);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist *new_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist *create_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist)

@interface LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy : LibComAfterlogicPgpKeySelectionKeyringPublicKeyRingSelectionStrategy

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)whitelist;

- (instancetype __nonnull)initWithLibComAfterlogicPgpUtilMultiMap:(LibComAfterlogicPgpUtilMultiMap *)whitelist;

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)keyRing;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *self, LibComAfterlogicPgpUtilMultiMap *whitelist);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *whitelist) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *whitelist);

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithJavaUtilMap_(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *self, id<JavaUtilMap> whitelist);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithJavaUtilMap_(id<JavaUtilMap> whitelist) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy_initWithJavaUtilMap_(id<JavaUtilMap> whitelist);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_PubRingSelectionStrategy)

@interface LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy : LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)whitelist;

- (instancetype __nonnull)initWithLibComAfterlogicPgpUtilMultiMap:(LibComAfterlogicPgpUtilMultiMap *)whitelist;

- (jboolean)acceptWithId:(id)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKeyRing *)keyRing;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *self, LibComAfterlogicPgpUtilMultiMap *whitelist);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *whitelist) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *whitelist);

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithJavaUtilMap_(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *self, id<JavaUtilMap> whitelist);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithJavaUtilMap_(id<JavaUtilMap> whitelist) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy_initWithJavaUtilMap_(id<JavaUtilMap> whitelist);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplWhitelist_SecRingSelectionStrategy)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Whitelist_H
