//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Asn1CmsSignedData.java
//

#ifndef Asn1CmsSignedData_H
#define Asn1CmsSignedData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;

@interface LibOrgBouncycastleAsn1CmsAsn1CmsSignedData : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)digestAlgorithms
                withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)contentInfo
                              withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)certificates
                              withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)crls
                              withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)signerInfos;

- (LibOrgBouncycastleAsn1ASN1Set *)getCertificates;

- (LibOrgBouncycastleAsn1ASN1Set *)getCRLs;

- (LibOrgBouncycastleAsn1ASN1Set *)getDigestAlgorithms;

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getEncapContentInfo;

+ (LibOrgBouncycastleAsn1CmsAsn1CmsSignedData *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Set *)getSignerInfos;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CmsAsn1CmsSignedData)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsSignedData *LibOrgBouncycastleAsn1CmsAsn1CmsSignedData_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsSignedData_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsAsn1CmsSignedData *self, LibOrgBouncycastleAsn1ASN1Set *digestAlgorithms, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *contentInfo, LibOrgBouncycastleAsn1ASN1Set *certificates, LibOrgBouncycastleAsn1ASN1Set *crls, LibOrgBouncycastleAsn1ASN1Set *signerInfos);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsSignedData *new_LibOrgBouncycastleAsn1CmsAsn1CmsSignedData_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1Set *digestAlgorithms, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *contentInfo, LibOrgBouncycastleAsn1ASN1Set *certificates, LibOrgBouncycastleAsn1ASN1Set *crls, LibOrgBouncycastleAsn1ASN1Set *signerInfos) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsSignedData *create_LibOrgBouncycastleAsn1CmsAsn1CmsSignedData_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1Set *digestAlgorithms, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *contentInfo, LibOrgBouncycastleAsn1ASN1Set *certificates, LibOrgBouncycastleAsn1ASN1Set *crls, LibOrgBouncycastleAsn1ASN1Set *signerInfos);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAsn1CmsSignedData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1CmsSignedData_H
