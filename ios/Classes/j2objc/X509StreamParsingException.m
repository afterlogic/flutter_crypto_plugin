//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/util/X509StreamParsingException.java
//

#include "J2ObjC_source.h"
#include "X509StreamParsingException.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"

@implementation LibOrgBouncycastleX509UtilX509StreamParsingException

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)e {
  LibOrgBouncycastleX509UtilX509StreamParsingException_initWithNSString_withJavaLangThrowable_(self, message, e);
  return self;
}

- (JavaLangThrowable *)getCause {
  return _e_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_e_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509UtilX509StreamParsingException = { "X509StreamParsingException", "lib.org.bouncycastle.x509.util", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509UtilX509StreamParsingException;
}

@end

void LibOrgBouncycastleX509UtilX509StreamParsingException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleX509UtilX509StreamParsingException *self, NSString *message, JavaLangThrowable *e) {
  JavaLangException_initWithNSString_(self, message);
  self->_e_ = e;
}

LibOrgBouncycastleX509UtilX509StreamParsingException *new_LibOrgBouncycastleX509UtilX509StreamParsingException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509UtilX509StreamParsingException, initWithNSString_withJavaLangThrowable_, message, e)
}

LibOrgBouncycastleX509UtilX509StreamParsingException *create_LibOrgBouncycastleX509UtilX509StreamParsingException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509UtilX509StreamParsingException, initWithNSString_withJavaLangThrowable_, message, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509UtilX509StreamParsingException)
