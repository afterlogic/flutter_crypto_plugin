//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/GMCipherSpi.java
//

#ifndef GMCipherSpi_H
#define GMCipherSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/ByteArrayOutputStream.h"
#include "javax/crypto/CipherSpi.h"

@class IOSByteArray;
@class JavaSecurityAlgorithmParameters;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoEnginesSM2Engine;
@protocol JavaSecurityKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi : JavaxCryptoCipherSpi

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)engine;

- (IOSByteArray *)engineDoFinalWithByteArray:(IOSByteArray *)input
                                     withInt:(jint)inputOffset
                                     withInt:(jint)inputLen;

- (jint)engineDoFinalWithByteArray:(IOSByteArray *)input
                           withInt:(jint)inputOffset
                           withInt:(jint)inputLength
                     withByteArray:(IOSByteArray *)output
                           withInt:(jint)outputOffset;

- (jint)engineGetBlockSize;

- (IOSByteArray *)engineGetIV;

- (jint)engineGetKeySizeWithJavaSecurityKey:(id<JavaSecurityKey>)key;

- (jint)engineGetOutputSizeWithInt:(jint)inputLen;

- (JavaSecurityAlgorithmParameters *)engineGetParameters;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecurityAlgorithmParameters:(JavaSecurityAlgorithmParameters *)params
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)engineSpec
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineSetModeWithNSString:(NSString *)mode;

- (void)engineSetPaddingWithNSString:(NSString *)padding;

- (IOSByteArray *)engineUpdateWithByteArray:(IOSByteArray *)input
                                    withInt:(jint)inputOffset
                                    withInt:(jint)inputLen;

- (jint)engineUpdateWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inputOffset
                          withInt:(jint)inputLen
                    withByteArray:(IOSByteArray *)output
                          withInt:(jint)outputOffset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_initWithLibOrgBouncycastleCryptoEnginesSM2Engine_(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi *self, LibOrgBouncycastleCryptoEnginesSM2Engine *engine);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_initWithLibOrgBouncycastleCryptoEnginesSM2Engine_(LibOrgBouncycastleCryptoEnginesSM2Engine *engine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_initWithLibOrgBouncycastleCryptoEnginesSM2Engine_(LibOrgBouncycastleCryptoEnginesSM2Engine *engine);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2b)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withBlake2s)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withWhirlpool)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withMD5)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withRMD)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha1)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha224)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha256)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha384)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512 : LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoEnginesSM2Engine:(LibOrgBouncycastleCryptoEnginesSM2Engine *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_SM2withSha512)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream : JavaIoByteArrayOutputStream

#pragma mark Public

- (instancetype __nonnull)init;

- (void)erase;

- (IOSByteArray *)getBuf;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream_init(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream *new_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream *create_LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcGMCipherSpi_ErasableOutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMCipherSpi_H
