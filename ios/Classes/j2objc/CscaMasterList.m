//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/icao/CscaMasterList.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1Set.h"
#include "CscaMasterList.h"
#include "DERSequence.h"
#include "DERSet.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "X509Certificate.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1IcaoCscaMasterList () {
 @public
  LibOrgBouncycastleAsn1ASN1Integer *version__;
  IOSObjectArray *certList_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (IOSObjectArray *)copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray:(IOSObjectArray *)orig OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IcaoCscaMasterList, version__, LibOrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1IcaoCscaMasterList, certList_, IOSObjectArray *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1IcaoCscaMasterList *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1IcaoCscaMasterList *new_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1IcaoCscaMasterList *create_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static IOSObjectArray *LibOrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray_(LibOrgBouncycastleAsn1IcaoCscaMasterList *self, IOSObjectArray *orig);

@implementation LibOrgBouncycastleAsn1IcaoCscaMasterList

+ (LibOrgBouncycastleAsn1IcaoCscaMasterList *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1IcaoCscaMasterList_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509X509CertificateArray:(IOSObjectArray *)certStructs {
  LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1X509X509CertificateArray_(self, certStructs);
  return self;
}

- (jint)getVersion {
  return [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(version__)) getValue])) intValue];
}

- (IOSObjectArray *)getCertStructs {
  return LibOrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray_(self, certList_);
}

- (IOSObjectArray *)copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray:(IOSObjectArray *)orig {
  return LibOrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray_(self, orig);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *seq = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [seq addWithLibOrgBouncycastleAsn1ASN1Encodable:version__];
  LibOrgBouncycastleAsn1ASN1EncodableVector *certSet = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(certList_))->size_; i++) {
    [certSet addWithLibOrgBouncycastleAsn1ASN1Encodable:IOSObjectArray_Get(certList_, i)];
  }
  [seq addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSet_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(certSet)];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(seq);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1IcaoCscaMasterList;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1X509X509Certificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1X509X509Certificate;", 0x2, 4, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509X509CertificateArray:);
  methods[3].selector = @selector(getVersion);
  methods[4].selector = @selector(getCertStructs);
  methods[5].selector = @selector(copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray:);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, 5, -1, -1, -1 },
    { "certList_", "[LLibOrgBouncycastleAsn1X509X509Certificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "[LLibOrgBouncycastleAsn1X509X509Certificate;", "copyCertList", "version" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1IcaoCscaMasterList = { "CscaMasterList", "lib.org.bouncycastle.asn1.icao", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1IcaoCscaMasterList;
}

@end

LibOrgBouncycastleAsn1IcaoCscaMasterList *LibOrgBouncycastleAsn1IcaoCscaMasterList_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1IcaoCscaMasterList_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1IcaoCscaMasterList class]]) {
    return (LibOrgBouncycastleAsn1IcaoCscaMasterList *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1IcaoCscaMasterList *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(0);
  if (seq == nil || [seq size] == 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"null or empty sequence passed.");
  }
  if ([seq size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Incorrect sequence size: ", [seq size]));
  }
  self->version__ = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:0]);
  LibOrgBouncycastleAsn1ASN1Set *certSet = LibOrgBouncycastleAsn1ASN1Set_getInstanceWithId_([seq getObjectAtWithInt:1]);
  self->certList_ = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Set *) nil_chk(certSet)) size] type:LibOrgBouncycastleAsn1X509X509Certificate_class_()];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->certList_))->size_; i++) {
    (void) IOSObjectArray_Set(self->certList_, i, LibOrgBouncycastleAsn1X509X509Certificate_getInstanceWithId_([certSet getObjectAtWithInt:i]));
  }
}

LibOrgBouncycastleAsn1IcaoCscaMasterList *new_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IcaoCscaMasterList, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1IcaoCscaMasterList *create_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IcaoCscaMasterList, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1X509X509CertificateArray_(LibOrgBouncycastleAsn1IcaoCscaMasterList *self, IOSObjectArray *certStructs) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(0);
  self->certList_ = LibOrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray_(self, certStructs);
}

LibOrgBouncycastleAsn1IcaoCscaMasterList *new_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1X509X509CertificateArray_(IOSObjectArray *certStructs) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1IcaoCscaMasterList, initWithLibOrgBouncycastleAsn1X509X509CertificateArray_, certStructs)
}

LibOrgBouncycastleAsn1IcaoCscaMasterList *create_LibOrgBouncycastleAsn1IcaoCscaMasterList_initWithLibOrgBouncycastleAsn1X509X509CertificateArray_(IOSObjectArray *certStructs) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1IcaoCscaMasterList, initWithLibOrgBouncycastleAsn1X509X509CertificateArray_, certStructs)
}

IOSObjectArray *LibOrgBouncycastleAsn1IcaoCscaMasterList_copyCertListWithLibOrgBouncycastleAsn1X509X509CertificateArray_(LibOrgBouncycastleAsn1IcaoCscaMasterList *self, IOSObjectArray *orig) {
  IOSObjectArray *certs = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(orig))->size_ type:LibOrgBouncycastleAsn1X509X509Certificate_class_()];
  for (jint i = 0; i != certs->size_; i++) {
    (void) IOSObjectArray_Set(certs, i, IOSObjectArray_Get(orig, i));
  }
  return certs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1IcaoCscaMasterList)
