//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/SP800SecureRandomBuilder.java
//

#include "Arrays.h"
#include "BasicEntropySourceProvider.h"
#include "BlockCipher.h"
#include "CTRSP800DRBG.h"
#include "CryptoServicesRegistrar.h"
#include "DRBGProvider.h"
#include "Digest.h"
#include "EntropySource.h"
#include "EntropySourceProvider.h"
#include "HMacSP800DRBG.h"
#include "HashSP800DRBG.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Mac.h"
#include "SP80090DRBG.h"
#include "SP800SecureRandom.h"
#include "SP800SecureRandomBuilder.h"
#include "java/security/SecureRandom.h"

@interface LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder () {
 @public
  JavaSecuritySecureRandom *random_;
  id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> entropySourceProvider_;
  IOSByteArray *personalizationString_;
  jint securityStrength_;
  jint entropyBitsRequired_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, random_, JavaSecuritySecureRandom *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, entropySourceProvider_, id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, personalizationString_, IOSByteArray *)

@interface LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider : NSObject < LibOrgBouncycastleCryptoPrngDRBGProvider > {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
  IOSByteArray *nonce_;
  IOSByteArray *personalizationString_;
  jint securityStrength_;
}

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                         withByteArray:(IOSByteArray *)nonce
                                         withByteArray:(IOSByteArray *)personalizationString
                                               withInt:(jint)securityStrength;

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider, nonce_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider, personalizationString_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *self, id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider)

@interface LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider : NSObject < LibOrgBouncycastleCryptoPrngDRBGProvider > {
 @public
  id<LibOrgBouncycastleCryptoMac> hMac_;
  IOSByteArray *nonce_;
  IOSByteArray *personalizationString_;
  jint securityStrength_;
}

- (instancetype)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)hMac
                                      withByteArray:(IOSByteArray *)nonce
                                      withByteArray:(IOSByteArray *)personalizationString
                                            withInt:(jint)securityStrength;

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider, hMac_, id<LibOrgBouncycastleCryptoMac>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider, nonce_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider, personalizationString_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *self, id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider)

@interface LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider : NSObject < LibOrgBouncycastleCryptoPrngDRBGProvider > {
 @public
  id<LibOrgBouncycastleCryptoBlockCipher> blockCipher_;
  jint keySizeInBits_;
  IOSByteArray *nonce_;
  IOSByteArray *personalizationString_;
  jint securityStrength_;
}

- (instancetype)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)blockCipher
                                                    withInt:(jint)keySizeInBits
                                              withByteArray:(IOSByteArray *)nonce
                                              withByteArray:(IOSByteArray *)personalizationString
                                                    withInt:(jint)securityStrength;

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider, blockCipher_, id<LibOrgBouncycastleCryptoBlockCipher>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider, nonce_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider, personalizationString_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *self, id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider)

@implementation LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)entropySource
                                     withBoolean:(jboolean)predictionResistant {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(self, entropySource, predictionResistant);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider:(id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)entropySourceProvider {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(self, entropySourceProvider);
  return self;
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *)setPersonalizationStringWithByteArray:(IOSByteArray *)personalizationString {
  self->personalizationString_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(personalizationString);
  return self;
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *)setSecurityStrengthWithInt:(jint)securityStrength {
  self->securityStrength_ = securityStrength;
  return self;
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *)setEntropyBitsRequiredWithInt:(jint)entropyBitsRequired {
  self->entropyBitsRequired_ = entropyBitsRequired;
  return self;
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandom *)buildHashWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                                                 withByteArray:(IOSByteArray *)nonce
                                                                                   withBoolean:(jboolean)predictionResistant {
  return new_LibOrgBouncycastleCryptoPrngSP800SecureRandom_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoPrngEntropySource_withLibOrgBouncycastleCryptoPrngDRBGProvider_withBoolean_(random_, [((id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>) nil_chk(entropySourceProvider_)) getWithInt:entropyBitsRequired_], new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(digest, nonce, personalizationString_, securityStrength_), predictionResistant);
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandom *)buildCTRWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher
                                                                                           withInt:(jint)keySizeInBits
                                                                                     withByteArray:(IOSByteArray *)nonce
                                                                                       withBoolean:(jboolean)predictionResistant {
  return new_LibOrgBouncycastleCryptoPrngSP800SecureRandom_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoPrngEntropySource_withLibOrgBouncycastleCryptoPrngDRBGProvider_withBoolean_(random_, [((id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>) nil_chk(entropySourceProvider_)) getWithInt:entropyBitsRequired_], new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(cipher, keySizeInBits, nonce, personalizationString_, securityStrength_), predictionResistant);
}

- (LibOrgBouncycastleCryptoPrngSP800SecureRandom *)buildHMACWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)hMac
                                                                              withByteArray:(IOSByteArray *)nonce
                                                                                withBoolean:(jboolean)predictionResistant {
  return new_LibOrgBouncycastleCryptoPrngSP800SecureRandom_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoPrngEntropySource_withLibOrgBouncycastleCryptoPrngDRBGProvider_withBoolean_(random_, [((id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>) nil_chk(entropySourceProvider_)) getWithInt:entropyBitsRequired_], new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(hMac, nonce, personalizationString_, securityStrength_), predictionResistant);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandom;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandom;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngSP800SecureRandom;", 0x1, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaSecuritySecureRandom:withBoolean:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider:);
  methods[3].selector = @selector(setPersonalizationStringWithByteArray:);
  methods[4].selector = @selector(setSecurityStrengthWithInt:);
  methods[5].selector = @selector(setEntropyBitsRequiredWithInt:);
  methods[6].selector = @selector(buildHashWithLibOrgBouncycastleCryptoDigest:withByteArray:withBoolean:);
  methods[7].selector = @selector(buildCTRWithLibOrgBouncycastleCryptoBlockCipher:withInt:withByteArray:withBoolean:);
  methods[8].selector = @selector(buildHMACWithLibOrgBouncycastleCryptoMac:withByteArray:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "entropySourceProvider_", "LLibOrgBouncycastleCryptoPrngEntropySourceProvider;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "personalizationString_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "securityStrength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "entropyBitsRequired_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;Z", "LLibOrgBouncycastleCryptoPrngEntropySourceProvider;", "setPersonalizationString", "[B", "setSecurityStrength", "I", "setEntropyBitsRequired", "buildHash", "LLibOrgBouncycastleCryptoDigest;[BZ", "buildCTR", "LLibOrgBouncycastleCryptoBlockCipher;I[BZ", "buildHMAC", "LLibOrgBouncycastleCryptoMac;[BZ", "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider;LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider;LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder = { "SP800SecureRandomBuilder", "lib.org.bouncycastle.crypto.prng", ptrTable, methods, fields, 7, 0x1, 9, 5, -1, 13, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;
}

@end

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_init(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *self) {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(self, LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom(), false);
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, init)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, init)
}

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *self, JavaSecuritySecureRandom *entropySource, jboolean predictionResistant) {
  NSObject_init(self);
  self->securityStrength_ = 256;
  self->entropyBitsRequired_ = 256;
  self->random_ = entropySource;
  self->entropySourceProvider_ = new_LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(self->random_, predictionResistant);
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *entropySource, jboolean predictionResistant) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, initWithJavaSecuritySecureRandom_withBoolean_, entropySource, predictionResistant)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *entropySource, jboolean predictionResistant) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, initWithJavaSecuritySecureRandom_withBoolean_, entropySource, predictionResistant)
}

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *self, id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> entropySourceProvider) {
  NSObject_init(self);
  self->securityStrength_ = 256;
  self->entropyBitsRequired_ = 256;
  self->random_ = nil;
  self->entropySourceProvider_ = entropySourceProvider;
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> entropySourceProvider) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_, entropySourceProvider)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> entropySourceProvider) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder, initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_, entropySourceProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder)

@implementation LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                         withByteArray:(IOSByteArray *)nonce
                                         withByteArray:(IOSByteArray *)personalizationString
                                               withInt:(jint)securityStrength {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(self, digest, nonce, personalizationString, securityStrength);
  return self;
}

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource {
  return new_LibOrgBouncycastleCryptoPrngDrbgHashSP800DRBG_initWithLibOrgBouncycastleCryptoDigest_withInt_withLibOrgBouncycastleCryptoPrngEntropySource_withByteArray_withByteArray_(digest_, securityStrength_, entropySource, personalizationString_, nonce_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngDrbgSP80090DRBG;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:withByteArray:withByteArray:withInt:);
  methods[1].selector = @selector(getWithLibOrgBouncycastleCryptoPrngEntropySource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nonce_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "personalizationString_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "securityStrength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;[B[BI", "get", "LLibOrgBouncycastleCryptoPrngEntropySource;", "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider = { "HashDRBGProvider", "lib.org.bouncycastle.crypto.prng", ptrTable, methods, fields, 7, 0xa, 2, 4, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider;
}

@end

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *self, id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  NSObject_init(self);
  self->digest_ = digest;
  self->nonce_ = nonce;
  self->personalizationString_ = personalizationString;
  self->securityStrength_ = securityStrength;
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider, initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_, digest, nonce, personalizationString, securityStrength)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider_initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider, initWithLibOrgBouncycastleCryptoDigest_withByteArray_withByteArray_withInt_, digest, nonce, personalizationString, securityStrength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HashDRBGProvider)

@implementation LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider

- (instancetype)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)hMac
                                      withByteArray:(IOSByteArray *)nonce
                                      withByteArray:(IOSByteArray *)personalizationString
                                            withInt:(jint)securityStrength {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(self, hMac, nonce, personalizationString, securityStrength);
  return self;
}

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource {
  return new_LibOrgBouncycastleCryptoPrngDrbgHMacSP800DRBG_initWithLibOrgBouncycastleCryptoMac_withInt_withLibOrgBouncycastleCryptoPrngEntropySource_withByteArray_withByteArray_(hMac_, securityStrength_, entropySource, personalizationString_, nonce_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngDrbgSP80090DRBG;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoMac:withByteArray:withByteArray:withInt:);
  methods[1].selector = @selector(getWithLibOrgBouncycastleCryptoPrngEntropySource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hMac_", "LLibOrgBouncycastleCryptoMac;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nonce_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "personalizationString_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "securityStrength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoMac;[B[BI", "get", "LLibOrgBouncycastleCryptoPrngEntropySource;", "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider = { "HMacDRBGProvider", "lib.org.bouncycastle.crypto.prng", ptrTable, methods, fields, 7, 0xa, 2, 4, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider;
}

@end

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *self, id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  NSObject_init(self);
  self->hMac_ = hMac;
  self->nonce_ = nonce;
  self->personalizationString_ = personalizationString;
  self->securityStrength_ = securityStrength;
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider, initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_, hMac, nonce, personalizationString, securityStrength)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider_initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoMac> hMac, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider, initWithLibOrgBouncycastleCryptoMac_withByteArray_withByteArray_withInt_, hMac, nonce, personalizationString, securityStrength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_HMacDRBGProvider)

@implementation LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider

- (instancetype)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)blockCipher
                                                    withInt:(jint)keySizeInBits
                                              withByteArray:(IOSByteArray *)nonce
                                              withByteArray:(IOSByteArray *)personalizationString
                                                    withInt:(jint)securityStrength {
  LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(self, blockCipher, keySizeInBits, nonce, personalizationString, securityStrength);
  return self;
}

- (id<LibOrgBouncycastleCryptoPrngDrbgSP80090DRBG>)getWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource {
  return new_LibOrgBouncycastleCryptoPrngDrbgCTRSP800DRBG_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withLibOrgBouncycastleCryptoPrngEntropySource_withByteArray_withByteArray_(blockCipher_, keySizeInBits_, securityStrength_, entropySource, personalizationString_, nonce_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngDrbgSP80090DRBG;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoBlockCipher:withInt:withByteArray:withByteArray:withInt:);
  methods[1].selector = @selector(getWithLibOrgBouncycastleCryptoPrngEntropySource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "blockCipher_", "LLibOrgBouncycastleCryptoBlockCipher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keySizeInBits_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nonce_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "personalizationString_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "securityStrength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoBlockCipher;I[B[BI", "get", "LLibOrgBouncycastleCryptoPrngEntropySource;", "LLibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider = { "CTRDRBGProvider", "lib.org.bouncycastle.crypto.prng", ptrTable, methods, fields, 7, 0xa, 2, 5, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider;
}

@end

void LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *self, id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  NSObject_init(self);
  self->blockCipher_ = blockCipher;
  self->keySizeInBits_ = keySizeInBits;
  self->nonce_ = nonce;
  self->personalizationString_ = personalizationString;
  self->securityStrength_ = securityStrength;
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider, initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_, blockCipher, keySizeInBits, nonce, personalizationString, securityStrength)
}

LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider *create_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_(id<LibOrgBouncycastleCryptoBlockCipher> blockCipher, jint keySizeInBits, IOSByteArray *nonce, IOSByteArray *personalizationString, jint securityStrength) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider, initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withByteArray_withByteArray_withInt_, blockCipher, keySizeInBits, nonce, personalizationString, securityStrength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_CTRDRBGProvider)
