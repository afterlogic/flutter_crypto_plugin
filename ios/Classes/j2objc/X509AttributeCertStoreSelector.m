//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509AttributeCertStoreSelector.java
//

#include "ASN1InputStream.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AttributeCertificateHolder.h"
#include "AttributeCertificateIssuer.h"
#include "DEROctetString.h"
#include "Extension.h"
#include "GeneralName.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Target.h"
#include "TargetInformation.h"
#include "Targets.h"
#include "X509AttributeCertStoreSelector.h"
#include "X509AttributeCertificate.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CertificateExpiredException.h"
#include "java/security/cert/CertificateNotYetValidException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

@interface LibOrgBouncycastleX509X509AttributeCertStoreSelector () {
 @public
  LibOrgBouncycastleX509AttributeCertificateHolder *holder_;
  LibOrgBouncycastleX509AttributeCertificateIssuer *issuer_;
  JavaMathBigInteger *serialNumber_;
  JavaUtilDate *attributeCertificateValid_;
  id<LibOrgBouncycastleX509X509AttributeCertificate> attributeCert_;
  id<JavaUtilCollection> targetNames_;
  id<JavaUtilCollection> targetGroups_;
}

- (id<JavaUtilSet>)extractGeneralNamesWithJavaUtilCollection:(id<JavaUtilCollection>)names;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, holder_, LibOrgBouncycastleX509AttributeCertificateHolder *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, issuer_, LibOrgBouncycastleX509AttributeCertificateIssuer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, serialNumber_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, attributeCertificateValid_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, attributeCert_, id<LibOrgBouncycastleX509X509AttributeCertificate>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, targetNames_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509AttributeCertStoreSelector, targetGroups_, id<JavaUtilCollection>)

__attribute__((unused)) static id<JavaUtilSet> LibOrgBouncycastleX509X509AttributeCertStoreSelector_extractGeneralNamesWithJavaUtilCollection_(LibOrgBouncycastleX509X509AttributeCertStoreSelector *self, id<JavaUtilCollection> names);

@implementation LibOrgBouncycastleX509X509AttributeCertStoreSelector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleX509X509AttributeCertStoreSelector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)matchWithId:(id)obj {
  if (!([LibOrgBouncycastleX509X509AttributeCertificate_class_() isInstance:obj])) {
    return false;
  }
  id<LibOrgBouncycastleX509X509AttributeCertificate> attrCert = (id<LibOrgBouncycastleX509X509AttributeCertificate>) cast_check(obj, LibOrgBouncycastleX509X509AttributeCertificate_class_());
  if (self->attributeCert_ != nil) {
    if (![self->attributeCert_ isEqual:attrCert]) {
      return false;
    }
  }
  if (serialNumber_ != nil) {
    if (![((JavaMathBigInteger *) nil_chk([((id<LibOrgBouncycastleX509X509AttributeCertificate>) nil_chk(attrCert)) getSerialNumber])) isEqual:serialNumber_]) {
      return false;
    }
  }
  if (holder_ != nil) {
    if (![((LibOrgBouncycastleX509AttributeCertificateHolder *) nil_chk([((id<LibOrgBouncycastleX509X509AttributeCertificate>) nil_chk(attrCert)) getHolder])) isEqual:holder_]) {
      return false;
    }
  }
  if (issuer_ != nil) {
    if (![((LibOrgBouncycastleX509AttributeCertificateIssuer *) nil_chk([((id<LibOrgBouncycastleX509X509AttributeCertificate>) nil_chk(attrCert)) getIssuer])) isEqual:issuer_]) {
      return false;
    }
  }
  if (attributeCertificateValid_ != nil) {
    @try {
      [((id<LibOrgBouncycastleX509X509AttributeCertificate>) nil_chk(attrCert)) checkValidityWithJavaUtilDate:attributeCertificateValid_];
    }
    @catch (JavaSecurityCertCertificateExpiredException *e) {
      return false;
    }
    @catch (JavaSecurityCertCertificateNotYetValidException *e) {
      return false;
    }
  }
  if (![((id<JavaUtilCollection>) nil_chk(targetNames_)) isEmpty] || ![((id<JavaUtilCollection>) nil_chk(targetGroups_)) isEmpty]) {
    IOSByteArray *targetInfoExt = [((id<LibOrgBouncycastleX509X509AttributeCertificate>) nil_chk(attrCert)) getExtensionValueWithNSString:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, targetInformation))) getId]];
    if (targetInfoExt != nil) {
      LibOrgBouncycastleAsn1X509TargetInformation *targetinfo;
      @try {
        targetinfo = LibOrgBouncycastleAsn1X509TargetInformation_getInstanceWithId_([new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_([((LibOrgBouncycastleAsn1DEROctetString *) nil_chk(((LibOrgBouncycastleAsn1DEROctetString *) cast_chk(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(targetInfoExt), [LibOrgBouncycastleAsn1DEROctetString class])))) getOctets]) readObject]);
      }
      @catch (JavaIoIOException *e) {
        return false;
      }
      @catch (JavaLangIllegalArgumentException *e) {
        return false;
      }
      IOSObjectArray *targetss = [((LibOrgBouncycastleAsn1X509TargetInformation *) nil_chk(targetinfo)) getTargetsObjects];
      if (![((id<JavaUtilCollection>) nil_chk(targetNames_)) isEmpty]) {
        jboolean found = false;
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(targetss))->size_; i++) {
          LibOrgBouncycastleAsn1X509Targets *t = IOSObjectArray_Get(targetss, i);
          IOSObjectArray *targets = [((LibOrgBouncycastleAsn1X509Targets *) nil_chk(t)) getTargets];
          for (jint j = 0; j < ((IOSObjectArray *) nil_chk(targets))->size_; j++) {
            if ([((id<JavaUtilCollection>) nil_chk(targetNames_)) containsWithId:LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_([((LibOrgBouncycastleAsn1X509Target *) nil_chk(IOSObjectArray_Get(targets, j))) getTargetName])]) {
              found = true;
              break;
            }
          }
        }
        if (!found) {
          return false;
        }
      }
      if (![((id<JavaUtilCollection>) nil_chk(targetGroups_)) isEmpty]) {
        jboolean found = false;
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(targetss))->size_; i++) {
          LibOrgBouncycastleAsn1X509Targets *t = IOSObjectArray_Get(targetss, i);
          IOSObjectArray *targets = [((LibOrgBouncycastleAsn1X509Targets *) nil_chk(t)) getTargets];
          for (jint j = 0; j < ((IOSObjectArray *) nil_chk(targets))->size_; j++) {
            if ([((id<JavaUtilCollection>) nil_chk(targetGroups_)) containsWithId:LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_([((LibOrgBouncycastleAsn1X509Target *) nil_chk(IOSObjectArray_Get(targets, j))) getTargetGroup])]) {
              found = true;
              break;
            }
          }
        }
        if (!found) {
          return false;
        }
      }
    }
  }
  return true;
}

- (id)java_clone {
  LibOrgBouncycastleX509X509AttributeCertStoreSelector *sel = new_LibOrgBouncycastleX509X509AttributeCertStoreSelector_init();
  sel->attributeCert_ = attributeCert_;
  sel->attributeCertificateValid_ = [self getAttributeCertificateValid];
  sel->holder_ = holder_;
  sel->issuer_ = issuer_;
  sel->serialNumber_ = serialNumber_;
  sel->targetGroups_ = [self getTargetGroups];
  sel->targetNames_ = [self getTargetNames];
  return sel;
}

- (id<LibOrgBouncycastleX509X509AttributeCertificate>)getAttributeCert {
  return attributeCert_;
}

- (void)setAttributeCertWithLibOrgBouncycastleX509X509AttributeCertificate:(id<LibOrgBouncycastleX509X509AttributeCertificate>)attributeCert {
  self->attributeCert_ = attributeCert;
}

- (JavaUtilDate *)getAttributeCertificateValid {
  if (attributeCertificateValid_ != nil) {
    return new_JavaUtilDate_initWithLong_([attributeCertificateValid_ getTime]);
  }
  return nil;
}

- (void)setAttributeCertificateValidWithJavaUtilDate:(JavaUtilDate *)attributeCertificateValid {
  if (attributeCertificateValid != nil) {
    self->attributeCertificateValid_ = new_JavaUtilDate_initWithLong_([attributeCertificateValid getTime]);
  }
  else {
    self->attributeCertificateValid_ = nil;
  }
}

- (LibOrgBouncycastleX509AttributeCertificateHolder *)getHolder {
  return holder_;
}

- (void)setHolderWithLibOrgBouncycastleX509AttributeCertificateHolder:(LibOrgBouncycastleX509AttributeCertificateHolder *)holder {
  self->holder_ = holder;
}

- (LibOrgBouncycastleX509AttributeCertificateIssuer *)getIssuer {
  return issuer_;
}

- (void)setIssuerWithLibOrgBouncycastleX509AttributeCertificateIssuer:(LibOrgBouncycastleX509AttributeCertificateIssuer *)issuer {
  self->issuer_ = issuer;
}

- (JavaMathBigInteger *)getSerialNumber {
  return serialNumber_;
}

- (void)setSerialNumberWithJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  self->serialNumber_ = serialNumber;
}

- (void)addTargetNameWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)name {
  [((id<JavaUtilCollection>) nil_chk(targetNames_)) addWithId:name];
}

- (void)addTargetNameWithByteArray:(IOSByteArray *)name {
  [self addTargetNameWithLibOrgBouncycastleAsn1X509GeneralName:LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(name))];
}

- (void)setTargetNamesWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  targetNames_ = LibOrgBouncycastleX509X509AttributeCertStoreSelector_extractGeneralNamesWithJavaUtilCollection_(self, names);
}

- (id<JavaUtilCollection>)getTargetNames {
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_(targetNames_);
}

- (void)addTargetGroupWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)group {
  [((id<JavaUtilCollection>) nil_chk(targetGroups_)) addWithId:group];
}

- (void)addTargetGroupWithByteArray:(IOSByteArray *)name {
  [self addTargetGroupWithLibOrgBouncycastleAsn1X509GeneralName:LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(name))];
}

- (void)setTargetGroupsWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  targetGroups_ = LibOrgBouncycastleX509X509AttributeCertStoreSelector_extractGeneralNamesWithJavaUtilCollection_(self, names);
}

- (id<JavaUtilCollection>)getTargetGroups {
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_(targetGroups_);
}

- (id<JavaUtilSet>)extractGeneralNamesWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  return LibOrgBouncycastleX509X509AttributeCertStoreSelector_extractGeneralNamesWithJavaUtilCollection_(self, names);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509AttributeCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509AttributeCertificateHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509AttributeCertificateIssuer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 15, 16, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 16, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 15, 16, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 18, 16, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 21, 18, 16, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(matchWithId:);
  methods[2].selector = @selector(java_clone);
  methods[3].selector = @selector(getAttributeCert);
  methods[4].selector = @selector(setAttributeCertWithLibOrgBouncycastleX509X509AttributeCertificate:);
  methods[5].selector = @selector(getAttributeCertificateValid);
  methods[6].selector = @selector(setAttributeCertificateValidWithJavaUtilDate:);
  methods[7].selector = @selector(getHolder);
  methods[8].selector = @selector(setHolderWithLibOrgBouncycastleX509AttributeCertificateHolder:);
  methods[9].selector = @selector(getIssuer);
  methods[10].selector = @selector(setIssuerWithLibOrgBouncycastleX509AttributeCertificateIssuer:);
  methods[11].selector = @selector(getSerialNumber);
  methods[12].selector = @selector(setSerialNumberWithJavaMathBigInteger:);
  methods[13].selector = @selector(addTargetNameWithLibOrgBouncycastleAsn1X509GeneralName:);
  methods[14].selector = @selector(addTargetNameWithByteArray:);
  methods[15].selector = @selector(setTargetNamesWithJavaUtilCollection:);
  methods[16].selector = @selector(getTargetNames);
  methods[17].selector = @selector(addTargetGroupWithLibOrgBouncycastleAsn1X509GeneralName:);
  methods[18].selector = @selector(addTargetGroupWithByteArray:);
  methods[19].selector = @selector(setTargetGroupsWithJavaUtilCollection:);
  methods[20].selector = @selector(getTargetGroups);
  methods[21].selector = @selector(extractGeneralNamesWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "holder_", "LLibOrgBouncycastleX509AttributeCertificateHolder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuer_", "LLibOrgBouncycastleX509AttributeCertificateIssuer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeCertificateValid_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributeCert_", "LLibOrgBouncycastleX509X509AttributeCertificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "targetNames_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "targetGroups_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "match", "LNSObject;", "clone", "setAttributeCert", "LLibOrgBouncycastleX509X509AttributeCertificate;", "setAttributeCertificateValid", "LJavaUtilDate;", "setHolder", "LLibOrgBouncycastleX509AttributeCertificateHolder;", "setIssuer", "LLibOrgBouncycastleX509AttributeCertificateIssuer;", "setSerialNumber", "LJavaMathBigInteger;", "addTargetName", "LLibOrgBouncycastleAsn1X509GeneralName;", "[B", "LJavaIoIOException;", "setTargetNames", "LJavaUtilCollection;", "addTargetGroup", "setTargetGroups", "extractGeneralNames" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509AttributeCertStoreSelector = { "X509AttributeCertStoreSelector", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0x1, 22, 7, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509AttributeCertStoreSelector;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleX509X509AttributeCertStoreSelector_init(LibOrgBouncycastleX509X509AttributeCertStoreSelector *self) {
  NSObject_init(self);
  self->targetNames_ = new_JavaUtilHashSet_init();
  self->targetGroups_ = new_JavaUtilHashSet_init();
}

LibOrgBouncycastleX509X509AttributeCertStoreSelector *new_LibOrgBouncycastleX509X509AttributeCertStoreSelector_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509X509AttributeCertStoreSelector, init)
}

LibOrgBouncycastleX509X509AttributeCertStoreSelector *create_LibOrgBouncycastleX509X509AttributeCertStoreSelector_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509X509AttributeCertStoreSelector, init)
}

id<JavaUtilSet> LibOrgBouncycastleX509X509AttributeCertStoreSelector_extractGeneralNamesWithJavaUtilCollection_(LibOrgBouncycastleX509X509AttributeCertStoreSelector *self, id<JavaUtilCollection> names) {
  if (names == nil || [names isEmpty]) {
    return new_JavaUtilHashSet_init();
  }
  id<JavaUtilSet> temp = new_JavaUtilHashSet_init();
  for (id<JavaUtilIterator> it = [names iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id o = [it next];
    if ([o isKindOfClass:[LibOrgBouncycastleAsn1X509GeneralName class]]) {
      [temp addWithId:o];
    }
    else {
      [temp addWithId:LibOrgBouncycastleAsn1X509GeneralName_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(o, [IOSByteArray class])))];
    }
  }
  return temp;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509AttributeCertStoreSelector)
