//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/KTSParameterSpec.java
//

#ifndef KTSParameterSpec_H
#define KTSParameterSpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleJcajceSpecKTSParameterSpec : NSObject < JavaSecuritySpecAlgorithmParameterSpec >

#pragma mark Public

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getKdfAlgorithm;

- (NSString *)getKeyAlgorithmName;

- (jint)getKeySize;

- (IOSByteArray *)getOtherInfo;

- (id<JavaSecuritySpecAlgorithmParameterSpec>)getParameterSpec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceSpecKTSParameterSpec)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceSpecKTSParameterSpec)

@interface LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)algorithmName
                                   withInt:(jint)keySizeInBits;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithmName
                                   withInt:(jint)keySizeInBits
                             withByteArray:(IOSByteArray *)otherInfo;

- (LibOrgBouncycastleJcajceSpecKTSParameterSpec *)build;

- (LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *)withKdfAlgorithmWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)kdfAlgorithm;

- (LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *)withParameterSpecWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)parameterSpec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_(LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *self, NSString *algorithmName, jint keySizeInBits);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *new_LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_(NSString *algorithmName, jint keySizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *create_LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_(NSString *algorithmName, jint keySizeInBits);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_withByteArray_(LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *self, NSString *algorithmName, jint keySizeInBits, IOSByteArray *otherInfo);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *new_LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_withByteArray_(NSString *algorithmName, jint keySizeInBits, IOSByteArray *otherInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder *create_LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_withByteArray_(NSString *algorithmName, jint keySizeInBits, IOSByteArray *otherInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceSpecKTSParameterSpec_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KTSParameterSpec_H
