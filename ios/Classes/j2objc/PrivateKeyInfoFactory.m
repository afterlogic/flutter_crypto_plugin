//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/util/PrivateKeyInfoFactory.java
//

#include "ASN1Encodable.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Set.h"
#include "AlgorithmIdentifier.h"
#include "AsymmetricKeyParameter.h"
#include "CryptoProObjectIdentifiers.h"
#include "DERBitString.h"
#include "DERNull.h"
#include "DEROctetString.h"
#include "DSAParameter.h"
#include "DSAParameters.h"
#include "DSAPrivateKeyParameters.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECGOST3410Parameters.h"
#include "ECNamedDomainParameters.h"
#include "ECPoint.h"
#include "ECPrivateKey.h"
#include "ECPrivateKeyParameters.h"
#include "Ed25519PrivateKeyParameters.h"
#include "Ed25519PublicKeyParameters.h"
#include "Ed448PrivateKeyParameters.h"
#include "Ed448PublicKeyParameters.h"
#include "EdECObjectIdentifiers.h"
#include "GOST3410PublicKeyAlgParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKCSObjectIdentifiers.h"
#include "PrivateKeyInfo.h"
#include "PrivateKeyInfoFactory.h"
#include "RSAKeyParameters.h"
#include "RSAPrivateCrtKeyParameters.h"
#include "RSAPrivateKey.h"
#include "RosstandartObjectIdentifiers.h"
#include "X25519PrivateKeyParameters.h"
#include "X25519PublicKeyParameters.h"
#include "X448PrivateKeyParameters.h"
#include "X448PublicKeyParameters.h"
#include "X962Parameters.h"
#include "X9ECParameters.h"
#include "X9ObjectIdentifiers.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@interface LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory ()

- (instancetype)init;

+ (void)extractBytesWithByteArray:(IOSByteArray *)encKey
                          withInt:(jint)size
                          withInt:(jint)offSet
           withJavaMathBigInteger:(JavaMathBigInteger *)bI;

@end

inline id<JavaUtilSet> LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_get_cryptoProOids(void);
inline id<JavaUtilSet> LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_set_cryptoProOids(id<JavaUtilSet> value);
static id<JavaUtilSet> LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory, cryptoProOids, id<JavaUtilSet>)

__attribute__((unused)) static void LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *self);

__attribute__((unused)) static LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *new_LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *create_LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init(void);

__attribute__((unused)) static void LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_extractBytesWithByteArray_withInt_withInt_withJavaMathBigInteger_(IOSByteArray *encKey, jint size, jint offSet, JavaMathBigInteger *bI);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory)

@implementation LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey {
  return LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(privateKey);
}

+ (LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                                         withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes {
  return LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleAsn1ASN1Set_(privateKey, attributes);
}

+ (void)extractBytesWithByteArray:(IOSByteArray *)encKey
                          withInt:(jint)size
                          withInt:(jint)offSet
           withJavaMathBigInteger:(JavaMathBigInteger *)bI {
  LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_extractBytesWithByteArray_withInt_withInt_withJavaMathBigInteger_(encKey, size, offSet, bI);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  methods[2].selector = @selector(createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withLibOrgBouncycastleAsn1ASN1Set:);
  methods[3].selector = @selector(extractBytesWithByteArray:withInt:withInt:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cryptoProOids", "LJavaUtilSet;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "createPrivateKeyInfo", "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "LJavaIoIOException;", "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;LLibOrgBouncycastleAsn1ASN1Set;", "extractBytes", "[BIILJavaMathBigInteger;", &LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory = { "PrivateKeyInfoFactory", "lib.org.bouncycastle.crypto.util", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory class]) {
    LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids = new_JavaUtilHashSet_initWithInt_(5);
    {
      [LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids addWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001_CryptoPro_A)];
      [((id<JavaUtilSet>) nil_chk(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids)) addWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001_CryptoPro_B)];
      [((id<JavaUtilSet>) nil_chk(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids)) addWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001_CryptoPro_C)];
      [((id<JavaUtilSet>) nil_chk(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids)) addWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001_CryptoPro_XchA)];
      [((id<JavaUtilSet>) nil_chk(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids)) addWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001_CryptoPro_XchB)];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory)
  }
}

@end

void LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *new_LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory, init)
}

LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory *create_LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory, init)
}

LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateKey) {
  LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_initialize();
  return LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleAsn1ASN1Set_(privateKey, nil);
}

LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateKey, LibOrgBouncycastleAsn1ASN1Set *attributes) {
  LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_initialize();
  if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsRSAKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *priv = (LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *) cast_chk(privateKey, [LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters class]);
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, rsaEncryption), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE)), new_LibOrgBouncycastleAsn1PkcsRSAPrivateKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *) nil_chk(priv)) getModulus], [priv getPublicExponent], [priv getExponent], [priv getP], [priv getQ], [priv getDP], [priv getDQ], [priv getQInv]), attributes);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *priv = (LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *) privateKey;
    LibOrgBouncycastleCryptoParamsDSAParameters *params = [((LibOrgBouncycastleCryptoParamsDSAPrivateKeyParameters *) nil_chk(priv)) getParameters];
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_dsa), new_LibOrgBouncycastleAsn1X509DSAParameter_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleCryptoParamsDSAParameters *) nil_chk(params)) getP], [params getQ], [params getG])), new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([priv getX]), attributes);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsECPrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *priv = (LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) privateKey;
    LibOrgBouncycastleCryptoParamsECDomainParameters *domainParams = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(priv)) getParameters];
    id<LibOrgBouncycastleAsn1ASN1Encodable> params;
    jint orderBitLength;
    if (domainParams == nil) {
      params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1ASN1Null_(JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
      orderBitLength = [((JavaMathBigInteger *) nil_chk([priv getD])) bitLength];
    }
    else if ([domainParams isKindOfClass:[LibOrgBouncycastleCryptoParamsECGOST3410Parameters class]]) {
      LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *gostParams = new_LibOrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_([((LibOrgBouncycastleCryptoParamsECGOST3410Parameters *) domainParams) getPublicKeyParamSet], [((LibOrgBouncycastleCryptoParamsECGOST3410Parameters *) domainParams) getDigestParamSet], [((LibOrgBouncycastleCryptoParamsECGOST3410Parameters *) domainParams) getEncryptionParamSet]);
      jint size;
      LibOrgBouncycastleAsn1ASN1ObjectIdentifier *identifier;
      if ([((id<JavaUtilSet>) nil_chk(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_cryptoProOids)) containsWithId:[gostParams getPublicKeyParamSet]]) {
        size = 32;
        identifier = JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001);
      }
      else {
        jboolean is512 = [((JavaMathBigInteger *) nil_chk([priv getD])) bitLength] > 256;
        identifier = (is512) ? JreLoadStatic(LibOrgBouncycastleAsn1RosstandartRosstandartObjectIdentifiers, id_tc26_gost_3410_12_512) : JreLoadStatic(LibOrgBouncycastleAsn1RosstandartRosstandartObjectIdentifiers, id_tc26_gost_3410_12_256);
        size = (is512) ? 64 : 32;
      }
      IOSByteArray *encKey = [IOSByteArray newArrayWithLength:size];
      LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_extractBytesWithByteArray_withInt_withInt_withJavaMathBigInteger_(encKey, size, 0, [priv getD]);
      return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(identifier, gostParams), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(encKey));
    }
    else if ([domainParams isKindOfClass:[LibOrgBouncycastleCryptoParamsECNamedDomainParameters class]]) {
      params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_([((LibOrgBouncycastleCryptoParamsECNamedDomainParameters *) domainParams) getName]);
      orderBitLength = [((JavaMathBigInteger *) nil_chk([domainParams getN])) bitLength];
    }
    else {
      LibOrgBouncycastleAsn1X9X9ECParameters *ecP = new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([domainParams getCurve], [domainParams getG], [domainParams getN], [domainParams getH], [domainParams getSeed]);
      params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1X9X9ECParameters_(ecP);
      orderBitLength = [((JavaMathBigInteger *) nil_chk([domainParams getN])) bitLength];
    }
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_ecPublicKey), params), new_LibOrgBouncycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(orderBitLength, [priv getD], new_LibOrgBouncycastleAsn1DERBitString_initWithByteArray_([((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(domainParams)) getG])) multiplyWithJavaMathBigInteger:[priv getD]])) getEncodedWithBoolean:false]), params), attributes);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters *key = (LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters *) privateKey;
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_withByteArray_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_X448)), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters *) nil_chk(key)) getEncoded]), attributes, [((LibOrgBouncycastleCryptoParamsX448PublicKeyParameters *) nil_chk([key generatePublicKey])) getEncoded]);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters *key = (LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters *) privateKey;
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_withByteArray_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_X25519)), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters *) nil_chk(key)) getEncoded]), attributes, [((LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *) nil_chk([key generatePublicKey])) getEncoded]);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsEd448PrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsEd448PrivateKeyParameters *key = (LibOrgBouncycastleCryptoParamsEd448PrivateKeyParameters *) privateKey;
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_withByteArray_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_Ed448)), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleCryptoParamsEd448PrivateKeyParameters *) nil_chk(key)) getEncoded]), attributes, [((LibOrgBouncycastleCryptoParamsEd448PublicKeyParameters *) nil_chk([key generatePublicKey])) getEncoded]);
  }
  else if ([privateKey isKindOfClass:[LibOrgBouncycastleCryptoParamsEd25519PrivateKeyParameters class]]) {
    LibOrgBouncycastleCryptoParamsEd25519PrivateKeyParameters *key = (LibOrgBouncycastleCryptoParamsEd25519PrivateKeyParameters *) privateKey;
    return new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_withByteArray_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_Ed25519)), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleCryptoParamsEd25519PrivateKeyParameters *) nil_chk(key)) getEncoded]), attributes, [((LibOrgBouncycastleCryptoParamsEd25519PublicKeyParameters *) nil_chk([key generatePublicKey])) getEncoded]);
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(@"key parameters not recognized");
  }
}

void LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_extractBytesWithByteArray_withInt_withInt_withJavaMathBigInteger_(IOSByteArray *encKey, jint size, jint offSet, JavaMathBigInteger *bI) {
  LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_initialize();
  IOSByteArray *val = [((JavaMathBigInteger *) nil_chk(bI)) toByteArray];
  if (((IOSByteArray *) nil_chk(val))->size_ < size) {
    IOSByteArray *tmp = [IOSByteArray newArrayWithLength:size];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(val, 0, tmp, tmp->size_ - val->size_, val->size_);
    val = tmp;
  }
  for (jint i = 0; i != size; i++) {
    *IOSByteArray_GetRef(nil_chk(encKey), offSet + i) = IOSByteArray_Get(val, val->size_ - 1 - i);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory)
