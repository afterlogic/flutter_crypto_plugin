//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPEncryptedDataList.java
//

#ifndef PGPEncryptedDataList_H
#define PGPEncryptedDataList_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "Iterable.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleBcpgBCPGInputStream;
@class LibOrgBouncycastleBcpgInputStreamPacket;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSpliterator;

@interface LibOrgBouncycastleOpenpgpPGPEncryptedDataList : NSObject < LibOrgBouncycastleUtilIterable > {
 @public
  id<JavaUtilList> list_;
  LibOrgBouncycastleBcpgInputStreamPacket *data_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)pIn;

- (id)getWithInt:(jint)index;

- (id<JavaUtilIterator>)getEncryptedDataObjects;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jint)size;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPEncryptedDataList)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPEncryptedDataList, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPEncryptedDataList, data_, LibOrgBouncycastleBcpgInputStreamPacket *)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPEncryptedDataList_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleOpenpgpPGPEncryptedDataList *self, LibOrgBouncycastleBcpgBCPGInputStream *pIn);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPEncryptedDataList *new_LibOrgBouncycastleOpenpgpPGPEncryptedDataList_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *pIn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPEncryptedDataList *create_LibOrgBouncycastleOpenpgpPGPEncryptedDataList_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *pIn);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPEncryptedDataList)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPEncryptedDataList_H
