//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/ECDHCUnifiedAgreement.java
//

#ifndef ECDHCUnifiedAgreement_H
#define ECDHCUnifiedAgreement_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)pubKey;

- (jint)getFieldSize;

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)key OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *new_LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *create_LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECDHCUnifiedAgreement_H
