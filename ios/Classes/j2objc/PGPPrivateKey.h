//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPPrivateKey.java
//

#ifndef PGPPrivateKey_H
#define PGPPrivateKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleBcpgPublicKeyPacket;
@protocol LibOrgBouncycastleBcpgBCPGKey;

@interface LibOrgBouncycastleOpenpgpPGPPrivateKey : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLong:(jlong)keyID
withLibOrgBouncycastleBcpgPublicKeyPacket:(LibOrgBouncycastleBcpgPublicKeyPacket *)publicKeyPacket
     withLibOrgBouncycastleBcpgBCPGKey:(id<LibOrgBouncycastleBcpgBCPGKey>)privateKeyDataPacket;

- (jlong)getKeyID;

- (id<LibOrgBouncycastleBcpgBCPGKey>)getPrivateKeyDataPacket;

- (LibOrgBouncycastleBcpgPublicKeyPacket *)getPublicKeyPacket;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPPrivateKey)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(LibOrgBouncycastleOpenpgpPGPPrivateKey *self, jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPrivateKey *new_LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPrivateKey *create_LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPPrivateKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPPrivateKey_H
