//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSMTSignature.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "WOTSPlus.h"
#include "WOTSPlusParameters.h"
#include "XMSSMTParameters.h"
#include "XMSSMTSignature.h"
#include "XMSSParameters.h"
#include "XMSSReducedSignature.h"
#include "XMSSUtil.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature () {
 @public
  LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params_;
  jlong index_;
  IOSByteArray *random_;
  id<JavaUtilList> reducedSignatures_;
}

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature, params_, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature, random_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature, reducedSignatures_, id<JavaUtilList>)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *self, LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *new_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *create_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder);

@interface LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder () {
 @public
  LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params_;
  jlong index_;
  IOSByteArray *random_;
  id<JavaUtilList> reducedSignatures_;
  IOSByteArray *signature_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, params_, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, random_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, reducedSignatures_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, signature_, IOSByteArray *)

@implementation LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)builder {
  LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(self, builder);
  return self;
}

- (IOSByteArray *)toByteArray {
  jint n = [((LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk(params_)) getDigestSize];
  jint len = [((LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([params_ getWOTSPlus])) getParams])) getLen];
  jint indexSize = JreFpToInt(JavaLangMath_ceilWithDouble_([params_ getHeight] / (jdouble) 8));
  jint randomSize = n;
  jint reducedSignatureSizeSingle = (([params_ getHeight] / [params_ getLayers]) + len) * n;
  jint reducedSignaturesSizeTotal = reducedSignatureSizeSingle * [params_ getLayers];
  jint totalSize = indexSize + randomSize + reducedSignaturesSizeTotal;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:totalSize];
  jint position = 0;
  IOSByteArray *indexBytes = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_toBytesBigEndianWithLong_withInt_(index_, indexSize);
  LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, indexBytes, position);
  position += indexSize;
  LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, random_, position);
  position += randomSize;
  for (LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature * __strong reducedSignature in nil_chk(reducedSignatures_)) {
    IOSByteArray *signature = [((LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature *) nil_chk(reducedSignature)) toByteArray];
    LibOrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, signature, position);
    position += reducedSignatureSizeSingle;
  }
  return out;
}

- (jlong)getIndex {
  return index_;
}

- (IOSByteArray *)getRandom {
  return LibOrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(random_);
}

- (id<JavaUtilList>)getReducedSignatures {
  return reducedSignatures_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getIndex);
  methods[3].selector = @selector(getRandom);
  methods[4].selector = @selector(getReducedSignatures);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reducedSignatures_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;", "()Ljava/util/List<Llib/org/bouncycastle/pqc/crypto/xmss/XMSSReducedSignature;>;", "Ljava/util/List<Llib/org/bouncycastle/pqc/crypto/xmss/XMSSReducedSignature;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature = { "XMSSMTSignature", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 5, 4, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature;
}

@end

void LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *self, LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder) {
  NSObject_init(self);
  self->params_ = ((LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *) nil_chk(builder))->params_;
  if (self->params_ == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"params == null");
  }
  jint n = [self->params_ getDigestSize];
  IOSByteArray *signature = builder->signature_;
  if (signature != nil) {
    jint len = [((LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((LibOrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([self->params_ getWOTSPlus])) getParams])) getLen];
    jint indexSize = JreFpToInt(JavaLangMath_ceilWithDouble_([self->params_ getHeight] / (jdouble) 8));
    jint randomSize = n;
    jint reducedSignatureSizeSingle = (([self->params_ getHeight] / [self->params_ getLayers]) + len) * n;
    jint reducedSignaturesSizeTotal = reducedSignatureSizeSingle * [self->params_ getLayers];
    jint totalSize = indexSize + randomSize + reducedSignaturesSizeTotal;
    if (signature->size_ != totalSize) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"signature has wrong size");
    }
    jint position = 0;
    self->index_ = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_bytesToXBigEndianWithByteArray_withInt_withInt_(signature, position, indexSize);
    if (!LibOrgBouncycastlePqcCryptoXmssXMSSUtil_isIndexValidWithInt_withLong_([self->params_ getHeight], self->index_)) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"index out of bounds");
    }
    position += indexSize;
    self->random_ = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(signature, position, randomSize);
    position += randomSize;
    self->reducedSignatures_ = new_JavaUtilArrayList_init();
    while (position < signature->size_) {
      LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature *xmssSig = [((LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder *) nil_chk([new_LibOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_([self->params_ getXMSSParameters]) withReducedSignatureWithByteArray:LibOrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(signature, position, reducedSignatureSizeSingle)])) build];
      [self->reducedSignatures_ addWithId:xmssSig];
      position += reducedSignatureSizeSingle;
    }
  }
  else {
    self->index_ = builder->index_;
    IOSByteArray *tmpRandom = builder->random_;
    if (tmpRandom != nil) {
      if (tmpRandom->size_ != n) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of random needs to be equal to size of digest");
      }
      self->random_ = tmpRandom;
    }
    else {
      self->random_ = [IOSByteArray newArrayWithLength:n];
    }
    id<JavaUtilList> tmpReducedSignatures = builder->reducedSignatures_;
    if (tmpReducedSignatures != nil) {
      self->reducedSignatures_ = tmpReducedSignatures;
    }
    else {
      self->reducedSignatures_ = new_JavaUtilArrayList_init();
    }
  }
}

LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *new_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature, initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_, builder)
}

LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *create_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature, initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature)

@implementation LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params {
  LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(self, params);
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)withIndexWithLong:(jlong)val {
  index_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)withRandomWithByteArray:(IOSByteArray *)val {
  random_ = LibOrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)withReducedSignaturesWithJavaUtilList:(id<JavaUtilList>)val {
  reducedSignatures_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *)withSignatureWithByteArray:(IOSByteArray *)val {
  signature_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(val);
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature *)build {
  return new_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters:);
  methods[1].selector = @selector(withIndexWithLong:);
  methods[2].selector = @selector(withRandomWithByteArray:);
  methods[3].selector = @selector(withReducedSignaturesWithJavaUtilList:);
  methods[4].selector = @selector(withSignatureWithByteArray:);
  methods[5].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "index_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "reducedSignatures_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "signature_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", "withIndex", "J", "withRandom", "[B", "withReducedSignatures", "LJavaUtilList;", "(Ljava/util/List<Llib/org/bouncycastle/pqc/crypto/xmss/XMSSReducedSignature;>;)Llib/org/bouncycastle/pqc/crypto/xmss/XMSSMTSignature$Builder;", "withSignature", "Ljava/util/List<Llib/org/bouncycastle/pqc/crypto/xmss/XMSSReducedSignature;>;", "LLibOrgBouncycastlePqcCryptoXmssXMSSMTSignature;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder = { "Builder", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 6, 5, 10, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder;
}

@end

void LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *self, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  NSObject_init(self);
  self->index_ = 0LL;
  self->random_ = nil;
  self->reducedSignatures_ = nil;
  self->signature_ = nil;
  self->params_ = params;
}

LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *new_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_, params)
}

LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder *create_LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder, initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssXMSSMTSignature_Builder)
