//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DHPublicKeyParameters.java
//

#ifndef DHPublicKeyParameters_H
#define DHPublicKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DHKeyParameters.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDHParameters;

@interface LibOrgBouncycastleCryptoParamsDHPublicKeyParameters : LibOrgBouncycastleCryptoParamsDHKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
      withLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)params;

- (jboolean)isEqual:(id)obj;

- (JavaMathBigInteger *)getY;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoParamsDHPublicKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *self, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDHParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *new_LibOrgBouncycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDHParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHPublicKeyParameters *create_LibOrgBouncycastleCryptoParamsDHPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDHParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsDHPublicKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DHPublicKeyParameters_H
