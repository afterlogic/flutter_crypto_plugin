//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/RC6.java
//

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "BufferedBlockCipher.h"
#include "CBCBlockCipher.h"
#include "CFBBlockCipher.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "OFBBlockCipher.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "RC6.h"
#include "RC6Engine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricRC6 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricRC6_init(LibOrgBouncycastleJcajceProviderSymmetricRC6 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC6 *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC6 *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6_ECB;LLibOrgBouncycastleJcajceProviderSymmetricRC6_CBC;LLibOrgBouncycastleJcajceProviderSymmetricRC6_CFB;LLibOrgBouncycastleJcajceProviderSymmetricRC6_OFB;LLibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC;LLibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6 = { "RC6", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_init(LibOrgBouncycastleJcajceProviderSymmetricRC6 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6 *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6 *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesRC6Engine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC6Engine_init()), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB = { "CFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesRC6Engine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_CFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB = { "OFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesOFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesRC6Engine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_OFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC = { "GMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC6Engine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_GMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC6Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-RC6", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"RC6", 256, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for RC6 parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"RC6"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"RC6 IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Cipher.RC6" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.RC6" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.RC6" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$AlgParams")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"RC6" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$GMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$KeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"RC6" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricRC6;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricRC6_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC6_Mappings)
