//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/OcspCertID.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "AlgorithmIdentifier.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "OcspCertID.h"

@interface LibOrgBouncycastleAsn1OcspOcspCertID ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1OcspOcspCertID *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1OcspOcspCertID *new_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1OcspOcspCertID *create_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1OcspOcspCertID

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                            withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)issuerNameHash
                            withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)issuerKeyHash
                                withLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)serialNumber {
  LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_(self, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1OcspOcspCertID *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1OcspOcspCertID_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (LibOrgBouncycastleAsn1OcspOcspCertID *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1OcspOcspCertID_getInstanceWithId_(obj);
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  return hashAlgorithm_;
}

- (LibOrgBouncycastleAsn1ASN1OctetString *)getIssuerNameHash {
  return issuerNameHash_;
}

- (LibOrgBouncycastleAsn1ASN1OctetString *)getIssuerKeyHash {
  return issuerKeyHash_;
}

- (LibOrgBouncycastleAsn1ASN1Integer *)getSerialNumber {
  return serialNumber_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:hashAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:issuerNameHash_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:issuerKeyHash_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:serialNumber_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1OcspOcspCertID;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1OcspOcspCertID;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withLibOrgBouncycastleAsn1ASN1OctetString:withLibOrgBouncycastleAsn1ASN1OctetString:withLibOrgBouncycastleAsn1ASN1Integer:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(getHashAlgorithm);
  methods[5].selector = @selector(getIssuerNameHash);
  methods[6].selector = @selector(getIssuerKeyHash);
  methods[7].selector = @selector(getSerialNumber);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuerNameHash_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuerKeyHash_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "serialNumber_", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;LLibOrgBouncycastleAsn1ASN1OctetString;LLibOrgBouncycastleAsn1ASN1OctetString;LLibOrgBouncycastleAsn1ASN1Integer;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1OcspOcspCertID = { "OcspCertID", "lib.org.bouncycastle.asn1.ocsp", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1OcspOcspCertID;
}

@end

void LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1OcspOcspCertID *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *issuerNameHash, LibOrgBouncycastleAsn1ASN1OctetString *issuerKeyHash, LibOrgBouncycastleAsn1ASN1Integer *serialNumber) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->hashAlgorithm_ = hashAlgorithm;
  self->issuerNameHash_ = issuerNameHash;
  self->issuerKeyHash_ = issuerKeyHash;
  self->serialNumber_ = serialNumber;
}

LibOrgBouncycastleAsn1OcspOcspCertID *new_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *issuerNameHash, LibOrgBouncycastleAsn1ASN1OctetString *issuerKeyHash, LibOrgBouncycastleAsn1ASN1Integer *serialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1OcspOcspCertID, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber)
}

LibOrgBouncycastleAsn1OcspOcspCertID *create_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *issuerNameHash, LibOrgBouncycastleAsn1ASN1OctetString *issuerKeyHash, LibOrgBouncycastleAsn1ASN1Integer *serialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1OcspOcspCertID, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Integer_, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber)
}

void LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1OcspOcspCertID *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->hashAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->issuerNameHash_ = (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk([seq getObjectAtWithInt:1], [LibOrgBouncycastleAsn1ASN1OctetString class]);
  self->issuerKeyHash_ = (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk([seq getObjectAtWithInt:2], [LibOrgBouncycastleAsn1ASN1OctetString class]);
  self->serialNumber_ = (LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:3], [LibOrgBouncycastleAsn1ASN1Integer class]);
}

LibOrgBouncycastleAsn1OcspOcspCertID *new_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1OcspOcspCertID, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1OcspOcspCertID *create_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1OcspOcspCertID, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1OcspOcspCertID *LibOrgBouncycastleAsn1OcspOcspCertID_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1OcspOcspCertID_initialize();
  return LibOrgBouncycastleAsn1OcspOcspCertID_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

LibOrgBouncycastleAsn1OcspOcspCertID *LibOrgBouncycastleAsn1OcspOcspCertID_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1OcspOcspCertID_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1OcspOcspCertID class]]) {
    return (LibOrgBouncycastleAsn1OcspOcspCertID *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1OcspOcspCertID_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1OcspOcspCertID)
