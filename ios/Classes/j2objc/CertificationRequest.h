//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/CertificationRequest.java
//

#ifndef CertificationRequest_H
#define CertificationRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1PkcsCertificationRequestInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1PkcsCertificationRequest : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *reqInfo_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId_;
  LibOrgBouncycastleAsn1DERBitString *sigBits_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsCertificationRequestInfo:(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *)requestInfo
                                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                              withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signature;

- (LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *)getCertificationRequestInfo;

+ (LibOrgBouncycastleAsn1PkcsCertificationRequest *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1DERBitString *)getSignature;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1PkcsCertificationRequest)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequest, reqInfo_, LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequest, sigAlgId_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsCertificationRequest, sigBits_, LibOrgBouncycastleAsn1DERBitString *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *LibOrgBouncycastleAsn1PkcsCertificationRequest_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequest_init(LibOrgBouncycastleAsn1PkcsCertificationRequest *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *new_LibOrgBouncycastleAsn1PkcsCertificationRequest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *create_LibOrgBouncycastleAsn1PkcsCertificationRequest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1PkcsCertificationRequestInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1PkcsCertificationRequest *self, LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *requestInfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, LibOrgBouncycastleAsn1DERBitString *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *new_LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1PkcsCertificationRequestInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *requestInfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, LibOrgBouncycastleAsn1DERBitString *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *create_LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1PkcsCertificationRequestInfo_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *requestInfo, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, LibOrgBouncycastleAsn1DERBitString *signature);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsCertificationRequest *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *new_LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsCertificationRequest *create_LibOrgBouncycastleAsn1PkcsCertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsCertificationRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CertificationRequest_H
