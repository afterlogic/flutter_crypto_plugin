//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JDKDSAPublicKey.java
//

#include "ASN1Encodable.h"
#include "ASN1Encoding.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AlgorithmIdentifier.h"
#include "DERNull.h"
#include "DSAParameter.h"
#include "DSAParameters.h"
#include "DSAPublicKeyParameters.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JDKDSAPublicKey.h"
#include "Strings.h"
#include "SubjectPublicKeyInfo.h"
#include "X9ObjectIdentifiers.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/DSAParams.h"
#include "java/security/interfaces/DSAPublicKey.h"
#include "java/security/spec/DSAParameterSpec.h"
#include "java/security/spec/DSAPublicKeySpec.h"

@interface LibOrgBouncycastleJceProviderJDKDSAPublicKey () {
 @public
  JavaMathBigInteger *y_;
  id<JavaSecurityInterfacesDSAParams> dsaSpec_;
}

- (jboolean)isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)parameters;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJDKDSAPublicKey, y_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJDKDSAPublicKey, dsaSpec_, id<JavaSecurityInterfacesDSAParams>)

inline jlong LibOrgBouncycastleJceProviderJDKDSAPublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJceProviderJDKDSAPublicKey_serialVersionUID 1752452449903495175LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJceProviderJDKDSAPublicKey, serialVersionUID, jlong)

__attribute__((unused)) static jboolean LibOrgBouncycastleJceProviderJDKDSAPublicKey_isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters);

__attribute__((unused)) static void LibOrgBouncycastleJceProviderJDKDSAPublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastleJceProviderJDKDSAPublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastleJceProviderJDKDSAPublicKey

- (instancetype)initWithJavaSecuritySpecDSAPublicKeySpec:(JavaSecuritySpecDSAPublicKeySpec *)spec {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(self, spec);
  return self;
}

- (instancetype)initWithJavaSecurityInterfacesDSAPublicKey:(id<JavaSecurityInterfacesDSAPublicKey>)key {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(self, key);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters:(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *)params {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(self, params);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
      withJavaSecuritySpecDSAParameterSpec:(JavaSecuritySpecDSAParameterSpec *)dsaSpec {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(self, y, dsaSpec);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, info);
  return self;
}

- (jboolean)isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)parameters {
  return LibOrgBouncycastleJceProviderJDKDSAPublicKey_isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable_(self, parameters);
}

- (NSString *)getAlgorithm {
  return @"DSA";
}

- (NSString *)getFormat {
  return @"X.509";
}

- (IOSByteArray *)getEncoded {
  @try {
    if (dsaSpec_ == nil) {
      return [new_LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_dsa)), new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(y_)) getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
    }
    return [new_LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_dsa), new_LibOrgBouncycastleAsn1X509DSAParameter_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([dsaSpec_ getP], [((id<JavaSecurityInterfacesDSAParams>) nil_chk(dsaSpec_)) getQ], [((id<JavaSecurityInterfacesDSAParams>) nil_chk(dsaSpec_)) getG])), new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(y_)) getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (id<JavaSecurityInterfacesDSAParams>)getParams {
  return dsaSpec_;
}

- (JavaMathBigInteger *)getY {
  return y_;
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = LibOrgBouncycastleUtilStrings_lineSeparator();
  (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"DSA Public Key"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            y: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([self getY])) toStringWithInt:16]])) appendWithNSString:nl];
  return [buf description];
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getY])) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getG])) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getP])) hash]) ^ ((jint) [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getQ])) hash]);
}

- (jboolean)isEqual:(id)o {
  if (!([JavaSecurityInterfacesDSAPublicKey_class_() isInstance:o])) {
    return false;
  }
  id<JavaSecurityInterfacesDSAPublicKey> other = (id<JavaSecurityInterfacesDSAPublicKey>) cast_check(o, JavaSecurityInterfacesDSAPublicKey_class_());
  return [((JavaMathBigInteger *) nil_chk([self getY])) isEqual:[((id<JavaSecurityInterfacesDSAPublicKey>) nil_chk(other)) getY]] && [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getG])) isEqual:[((id<JavaSecurityInterfacesDSAParams>) nil_chk([other getParams])) getG]] && [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getP])) isEqual:[((id<JavaSecurityInterfacesDSAParams>) nil_chk([other getParams])) getP]] && [((JavaMathBigInteger *) nil_chk([((id<JavaSecurityInterfacesDSAParams>) nil_chk([self getParams])) getQ])) isEqual:[((id<JavaSecurityInterfacesDSAParams>) nil_chk([other getParams])) getQ]];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastleJceProviderJDKDSAPublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityInterfacesDSAParams;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, 16, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySpecDSAPublicKeySpec:);
  methods[1].selector = @selector(initWithJavaSecurityInterfacesDSAPublicKey:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters:);
  methods[3].selector = @selector(initWithJavaMathBigInteger:withJavaSecuritySpecDSAParameterSpec:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[5].selector = @selector(isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[6].selector = @selector(getAlgorithm);
  methods[7].selector = @selector(getFormat);
  methods[8].selector = @selector(getEncoded);
  methods[9].selector = @selector(getParams);
  methods[10].selector = @selector(getY);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(isEqual:);
  methods[14].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[15].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastleJceProviderJDKDSAPublicKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "y_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dsaSpec_", "LJavaSecurityInterfacesDSAParams;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySpecDSAPublicKeySpec;", "LJavaSecurityInterfacesDSAPublicKey;", "LLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters;", "LJavaMathBigInteger;LJavaSecuritySpecDSAParameterSpec;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "isNotNull", "LLibOrgBouncycastleAsn1ASN1Encodable;", "toString", "hashCode", "equals", "LNSObject;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceProviderJDKDSAPublicKey = { "JDKDSAPublicKey", "lib.org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 16, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceProviderJDKDSAPublicKey;
}

@end

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaSecuritySpecDSAPublicKeySpec *spec) {
  NSObject_init(self);
  self->y_ = [((JavaSecuritySpecDSAPublicKeySpec *) nil_chk(spec)) getY];
  self->dsaSpec_ = new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([spec getP], [spec getQ], [spec getG]);
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(JavaSecuritySpecDSAPublicKeySpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaSecuritySpecDSAPublicKeySpec_, spec)
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(JavaSecuritySpecDSAPublicKeySpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaSecuritySpecDSAPublicKeySpec_, spec)
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, id<JavaSecurityInterfacesDSAPublicKey> key) {
  NSObject_init(self);
  self->y_ = [((id<JavaSecurityInterfacesDSAPublicKey>) nil_chk(key)) getY];
  self->dsaSpec_ = [key getParams];
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(id<JavaSecurityInterfacesDSAPublicKey> key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaSecurityInterfacesDSAPublicKey_, key)
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(id<JavaSecurityInterfacesDSAPublicKey> key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaSecurityInterfacesDSAPublicKey_, key)
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params) {
  NSObject_init(self);
  self->y_ = [((LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *) nil_chk(params)) getY];
  self->dsaSpec_ = new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleCryptoParamsDSAParameters *) nil_chk([params getParameters])) getP], [((LibOrgBouncycastleCryptoParamsDSAParameters *) nil_chk([params getParameters])) getQ], [((LibOrgBouncycastleCryptoParamsDSAParameters *) nil_chk([params getParameters])) getG]);
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_, params)
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_, params)
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec) {
  NSObject_init(self);
  self->y_ = y;
  self->dsaSpec_ = dsaSpec;
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_, y, dsaSpec)
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_, y, dsaSpec)
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  NSObject_init(self);
  LibOrgBouncycastleAsn1ASN1Integer *derY;
  @try {
    derY = (LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) parsePublicKey], [LibOrgBouncycastleAsn1ASN1Integer class]);
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"invalid info structure in DSA public key");
  }
  self->y_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(derY)) getValue];
  if (LibOrgBouncycastleJceProviderJDKDSAPublicKey_isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable_(self, [((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getParameters])) {
    LibOrgBouncycastleAsn1X509DSAParameter *params = LibOrgBouncycastleAsn1X509DSAParameter_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getParameters]);
    self->dsaSpec_ = new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleAsn1X509DSAParameter *) nil_chk(params)) getP], [params getQ], [params getG]);
  }
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, info)
}

LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJDKDSAPublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, info)
}

jboolean LibOrgBouncycastleJceProviderJDKDSAPublicKey_isNotNullWithLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  return parameters != nil && ![((LibOrgBouncycastleAsn1DERNull *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE))) isEqual:parameters];
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaIoObjectInputStream *inArg) {
  self->y_ = (JavaMathBigInteger *) cast_chk([((JavaIoObjectInputStream *) nil_chk(inArg)) readObject], [JavaMathBigInteger class]);
  self->dsaSpec_ = new_JavaSecuritySpecDSAParameterSpec_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_((JavaMathBigInteger *) cast_chk([inArg readObject], [JavaMathBigInteger class]), (JavaMathBigInteger *) cast_chk([inArg readObject], [JavaMathBigInteger class]), (JavaMathBigInteger *) cast_chk([inArg readObject], [JavaMathBigInteger class]));
}

void LibOrgBouncycastleJceProviderJDKDSAPublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) writeObjectWithId:self->y_];
  [outArg writeObjectWithId:[((id<JavaSecurityInterfacesDSAParams>) nil_chk(self->dsaSpec_)) getP]];
  [outArg writeObjectWithId:[((id<JavaSecurityInterfacesDSAParams>) nil_chk(self->dsaSpec_)) getQ]];
  [outArg writeObjectWithId:[((id<JavaSecurityInterfacesDSAParams>) nil_chk(self->dsaSpec_)) getG]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceProviderJDKDSAPublicKey)
