//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/kdf/GSKKDFParameters.java
//

#include "GSKKDFParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters () {
 @public
  IOSByteArray *z_;
  jint startCounter_;
  IOSByteArray *nonce_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, z_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, nonce_, IOSByteArray *)

@implementation LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters

- (instancetype)initWithByteArray:(IOSByteArray *)z
                          withInt:(jint)startCounter {
  LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_(self, z, startCounter);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)z
                          withInt:(jint)startCounter
                    withByteArray:(IOSByteArray *)nonce {
  LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_withByteArray_(self, z, startCounter, nonce);
  return self;
}

- (IOSByteArray *)getZ {
  return z_;
}

- (jint)getStartCounter {
  return startCounter_;
}

- (IOSByteArray *)getNonce {
  return nonce_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withInt:);
  methods[1].selector = @selector(initWithByteArray:withInt:withByteArray:);
  methods[2].selector = @selector(getZ);
  methods[3].selector = @selector(getStartCounter);
  methods[4].selector = @selector(getNonce);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "z_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "startCounter_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nonce_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[BI", "[BI[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters = { "GSKKDFParameters", "lib.org.bouncycastle.crypto.agreement.kdf", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters;
}

@end

void LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *self, IOSByteArray *z, jint startCounter) {
  LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_withByteArray_(self, z, startCounter, nil);
}

LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *new_LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_(IOSByteArray *z, jint startCounter) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, initWithByteArray_withInt_, z, startCounter)
}

LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *create_LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_(IOSByteArray *z, jint startCounter) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, initWithByteArray_withInt_, z, startCounter)
}

void LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_withByteArray_(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *self, IOSByteArray *z, jint startCounter, IOSByteArray *nonce) {
  NSObject_init(self);
  self->z_ = z;
  self->startCounter_ = startCounter;
  self->nonce_ = nonce;
}

LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *new_LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_withByteArray_(IOSByteArray *z, jint startCounter, IOSByteArray *nonce) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, initWithByteArray_withInt_withByteArray_, z, startCounter, nonce)
}

LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters *create_LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters_initWithByteArray_withInt_withByteArray_(IOSByteArray *z, jint startCounter, IOSByteArray *nonce) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters, initWithByteArray_withInt_withByteArray_, z, startCounter, nonce)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoAgreementKdfGSKKDFParameters)
