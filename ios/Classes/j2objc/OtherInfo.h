//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x9/OtherInfo.java
//

#ifndef OtherInfo_H
#define OtherInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X9KeySpecificInfo;

@interface LibOrgBouncycastleAsn1X9OtherInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X9KeySpecificInfo:(LibOrgBouncycastleAsn1X9KeySpecificInfo *)keyInfo
                                withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)partyAInfo
                                withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)suppPubInfo;

+ (LibOrgBouncycastleAsn1X9OtherInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X9KeySpecificInfo *)getKeyInfo;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getPartyAInfo;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getSuppPubInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X9OtherInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X9OtherInfo_initWithLibOrgBouncycastleAsn1X9KeySpecificInfo_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X9OtherInfo *self, LibOrgBouncycastleAsn1X9KeySpecificInfo *keyInfo, LibOrgBouncycastleAsn1ASN1OctetString *partyAInfo, LibOrgBouncycastleAsn1ASN1OctetString *suppPubInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9OtherInfo *new_LibOrgBouncycastleAsn1X9OtherInfo_initWithLibOrgBouncycastleAsn1X9KeySpecificInfo_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X9KeySpecificInfo *keyInfo, LibOrgBouncycastleAsn1ASN1OctetString *partyAInfo, LibOrgBouncycastleAsn1ASN1OctetString *suppPubInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9OtherInfo *create_LibOrgBouncycastleAsn1X9OtherInfo_initWithLibOrgBouncycastleAsn1X9KeySpecificInfo_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X9KeySpecificInfo *keyInfo, LibOrgBouncycastleAsn1ASN1OctetString *partyAInfo, LibOrgBouncycastleAsn1ASN1OctetString *suppPubInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9OtherInfo *LibOrgBouncycastleAsn1X9OtherInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X9OtherInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OtherInfo_H
