//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/AuthorityKeyIdentifier.java
//

#ifndef AuthorityKeyIdentifier_H
#define AuthorityKeyIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509Extensions;
@class LibOrgBouncycastleAsn1X509GeneralNames;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;

@interface LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1ASN1OctetString *keyidentifier_;
  LibOrgBouncycastleAsn1X509GeneralNames *certissuer_;
  LibOrgBouncycastleAsn1ASN1Integer *certserno_;
}

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)keyIdentifier;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)keyIdentifier
 withLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)name
                     withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)name
                                                  withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)spki;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)spki
                                      withLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)name
                                                          withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

+ (LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *)fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)extensions;

- (LibOrgBouncycastleAsn1X509GeneralNames *)getAuthorityCertIssuer;

- (JavaMathBigInteger *)getAuthorityCertSerialNumber;

+ (LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getKeyIdentifier;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier, keyidentifier_, LibOrgBouncycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier, certissuer_, LibOrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier, certserno_, LibOrgBouncycastleAsn1ASN1Integer *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_fromExtensionsWithLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *spki, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, IOSByteArray *keyIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_(IOSByteArray *keyIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_(IOSByteArray *keyIdentifier);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *self, IOSByteArray *keyIdentifier, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *new_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(IOSByteArray *keyIdentifier, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier *create_LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier_initWithByteArray_withLibOrgBouncycastleAsn1X509GeneralNames_withJavaMathBigInteger_(IOSByteArray *keyIdentifier, LibOrgBouncycastleAsn1X509GeneralNames *name, JavaMathBigInteger *serialNumber);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509AuthorityKeyIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AuthorityKeyIdentifier_H
