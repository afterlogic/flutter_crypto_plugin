//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/SessionParameters.java
//

#ifndef SessionParameters_H
#define SessionParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaUtilHashtable;
@class LibOrgBouncycastleCryptoTlsCertificate;

@interface LibOrgBouncycastleCryptoTlsSessionParameters : NSObject

#pragma mark Public

- (void)clear;

- (LibOrgBouncycastleCryptoTlsSessionParameters *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)getCipherSuite;

- (jshort)getCompressionAlgorithm;

- (IOSByteArray *)getMasterSecret;

- (LibOrgBouncycastleCryptoTlsCertificate *)getPeerCertificate;

- (IOSByteArray *)getPskIdentity;

- (IOSByteArray *)getPSKIdentity;

- (IOSByteArray *)getSRPIdentity;

- (jboolean)isExtendedMasterSecret;

- (JavaUtilHashtable *)readServerExtensions;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsSessionParameters)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsSessionParameters)

@interface LibOrgBouncycastleCryptoTlsSessionParameters_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (LibOrgBouncycastleCryptoTlsSessionParameters *)build;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setCipherSuiteWithInt:(jint)cipherSuite;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setCompressionAlgorithmWithShort:(jshort)compressionAlgorithm;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setExtendedMasterSecretWithBoolean:(jboolean)extendedMasterSecret;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setMasterSecretWithByteArray:(IOSByteArray *)masterSecret;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setPeerCertificateWithLibOrgBouncycastleCryptoTlsCertificate:(LibOrgBouncycastleCryptoTlsCertificate *)peerCertificate;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setPskIdentityWithByteArray:(IOSByteArray *)pskIdentity;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setPSKIdentityWithByteArray:(IOSByteArray *)pskIdentity;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setServerExtensionsWithJavaUtilHashtable:(JavaUtilHashtable *)serverExtensions;

- (LibOrgBouncycastleCryptoTlsSessionParameters_Builder *)setSRPIdentityWithByteArray:(IOSByteArray *)srpIdentity;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsSessionParameters_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsSessionParameters_Builder_init(LibOrgBouncycastleCryptoTlsSessionParameters_Builder *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsSessionParameters_Builder *new_LibOrgBouncycastleCryptoTlsSessionParameters_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsSessionParameters_Builder *create_LibOrgBouncycastleCryptoTlsSessionParameters_Builder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsSessionParameters_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SessionParameters_H
