//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/KeyFlags.java
//

#ifndef KeyFlags_H
#define KeyFlags_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SignatureSubpacket.h"

@class IOSByteArray;

@interface LibOrgBouncycastleBcpgSigKeyFlags : LibOrgBouncycastleBcpgSignatureSubpacket
@property (readonly, class) jint CERTIFY_OTHER NS_SWIFT_NAME(CERTIFY_OTHER);
@property (readonly, class) jint SIGN_DATA NS_SWIFT_NAME(SIGN_DATA);
@property (readonly, class) jint ENCRYPT_COMMS NS_SWIFT_NAME(ENCRYPT_COMMS);
@property (readonly, class) jint ENCRYPT_STORAGE NS_SWIFT_NAME(ENCRYPT_STORAGE);
@property (readonly, class) jint SPLIT NS_SWIFT_NAME(SPLIT);
@property (readonly, class) jint AUTHENTICATION NS_SWIFT_NAME(AUTHENTICATION);
@property (readonly, class) jint SHARED NS_SWIFT_NAME(SHARED);

+ (jint)CERTIFY_OTHER;

+ (jint)SIGN_DATA;

+ (jint)ENCRYPT_COMMS;

+ (jint)ENCRYPT_STORAGE;

+ (jint)SPLIT;

+ (jint)AUTHENTICATION;

+ (jint)SHARED;

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)critical
                              withBoolean:(jboolean)isLongLength
                            withByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithBoolean:(jboolean)critical
                                  withInt:(jint)flags;

- (jint)getFlags;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                          withBoolean:(jboolean)arg1
                          withBoolean:(jboolean)arg2
                        withByteArray:(IOSByteArray *)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgSigKeyFlags)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_CERTIFY_OTHER(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_CERTIFY_OTHER 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, CERTIFY_OTHER, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_SIGN_DATA(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_SIGN_DATA 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, SIGN_DATA, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_ENCRYPT_COMMS(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_ENCRYPT_COMMS 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, ENCRYPT_COMMS, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_ENCRYPT_STORAGE(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_ENCRYPT_STORAGE 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, ENCRYPT_STORAGE, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_SPLIT(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_SPLIT 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, SPLIT, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_AUTHENTICATION(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_AUTHENTICATION 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, AUTHENTICATION, jint)

inline jint LibOrgBouncycastleBcpgSigKeyFlags_get_SHARED(void);
#define LibOrgBouncycastleBcpgSigKeyFlags_SHARED 128
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgSigKeyFlags, SHARED, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigKeyFlags *self, jboolean critical, jboolean isLongLength, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigKeyFlags *new_LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigKeyFlags *create_LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withInt_(LibOrgBouncycastleBcpgSigKeyFlags *self, jboolean critical, jint flags);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigKeyFlags *new_LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withInt_(jboolean critical, jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgSigKeyFlags *create_LibOrgBouncycastleBcpgSigKeyFlags_initWithBoolean_withInt_(jboolean critical, jint flags);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgSigKeyFlags)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyFlags_H
