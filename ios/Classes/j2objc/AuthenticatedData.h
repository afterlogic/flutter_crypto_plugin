//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/AuthenticatedData.java
//

#ifndef AuthenticatedData_H
#define AuthenticatedData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;
@class LibOrgBouncycastleAsn1CmsOriginatorInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmsAuthenticatedData : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsOriginatorInfo:(LibOrgBouncycastleAsn1CmsOriginatorInfo *)originatorInfo
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)recipientInfos
                        withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)macAlgorithm
                        withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)digestAlgorithm
                          withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)encapsulatedContent
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)authAttrs
                                withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)mac
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)unauthAttrs;

+ (jint)calculateVersionWithLibOrgBouncycastleAsn1CmsOriginatorInfo:(LibOrgBouncycastleAsn1CmsOriginatorInfo *)origInfo;

- (LibOrgBouncycastleAsn1ASN1Set *)getAuthAttrs;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getEncapsulatedContentInfo;

+ (LibOrgBouncycastleAsn1CmsAuthenticatedData *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                          withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsAuthenticatedData *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getMac;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMacAlgorithm;

- (LibOrgBouncycastleAsn1CmsOriginatorInfo *)getOriginatorInfo;

- (LibOrgBouncycastleAsn1ASN1Set *)getRecipientInfos;

- (LibOrgBouncycastleAsn1ASN1Set *)getUnauthAttrs;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAuthenticatedData)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAuthenticatedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsAuthenticatedData *self, LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapsulatedContent, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedData *new_LibOrgBouncycastleAsn1CmsAuthenticatedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapsulatedContent, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedData *create_LibOrgBouncycastleAsn1CmsAuthenticatedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *macAlgorithm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *encapsulatedContent, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedData *LibOrgBouncycastleAsn1CmsAuthenticatedData_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedData *LibOrgBouncycastleAsn1CmsAuthenticatedData_getInstanceWithId_(id obj);

FOUNDATION_EXPORT jint LibOrgBouncycastleAsn1CmsAuthenticatedData_calculateVersionWithLibOrgBouncycastleAsn1CmsOriginatorInfo_(LibOrgBouncycastleAsn1CmsOriginatorInfo *origInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAuthenticatedData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AuthenticatedData_H
