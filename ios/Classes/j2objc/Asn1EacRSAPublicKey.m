//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/Asn1EacRSAPublicKey.java
//

#include "ASN1EncodableVector.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "Asn1EacRSAPublicKey.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "PublicKeyDataObject.h"
#include "UnsignedInteger.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey () {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage_;
  JavaMathBigInteger *modulus_;
  JavaMathBigInteger *exponent_;
  jint valid_;
}

- (void)setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger:(LibOrgBouncycastleAsn1EacUnsignedInteger *)modulus;

- (void)setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger:(LibOrgBouncycastleAsn1EacUnsignedInteger *)exponent;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, usage_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, modulus_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, exponent_, JavaMathBigInteger *)

inline jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_get_modulusValid(void);
inline jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_set_modulusValid(jint value);
inline jint *LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_getRef_modulusValid(void);
static jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_modulusValid = 1;
J2OBJC_STATIC_FIELD_PRIMITIVE(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, modulusValid, jint)

inline jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_get_exponentValid(void);
inline jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_set_exponentValid(jint value);
inline jint *LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_getRef_exponentValid(void);
static jint LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_exponentValid = 2;
J2OBJC_STATIC_FIELD_PRIMITIVE(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, exponentValid, jint)

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1EacUnsignedInteger *modulus);

__attribute__((unused)) static void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1EacUnsignedInteger *exponent);

@implementation LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)usage
                                            withJavaMathBigInteger:(JavaMathBigInteger *)modulus
                                            withJavaMathBigInteger:(JavaMathBigInteger *)exponent {
  LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_(self, usage, modulus, exponent);
  return self;
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getUsage {
  return usage_;
}

- (JavaMathBigInteger *)getModulus {
  return modulus_;
}

- (JavaMathBigInteger *)getPublicExponent {
  return exponent_;
}

- (void)setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger:(LibOrgBouncycastleAsn1EacUnsignedInteger *)modulus {
  LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger_(self, modulus);
}

- (void)setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger:(LibOrgBouncycastleAsn1EacUnsignedInteger *)exponent {
  LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger_(self, exponent);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:usage_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x01, [self getModulus])];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1EacUnsignedInteger_initWithInt_withJavaMathBigInteger_((jint) 0x02, [self getPublicExponent])];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(getUsage);
  methods[3].selector = @selector(getModulus);
  methods[4].selector = @selector(getPublicExponent);
  methods[5].selector = @selector(setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger:);
  methods[6].selector = @selector(setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger:);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "usage_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "modulus_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exponent_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "valid_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "modulusValid", "I", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "exponentValid", "I", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LJavaMathBigInteger;LJavaMathBigInteger;", "setModulus", "LLibOrgBouncycastleAsn1EacUnsignedInteger;", "setExponent", &LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_modulusValid, &LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_exponentValid };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey = { "Asn1EacRSAPublicKey", "lib.org.bouncycastle.asn1.eac", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey;
}

@end

void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  self->valid_ = 0;
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->usage_ = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
  while ([en hasMoreElements]) {
    LibOrgBouncycastleAsn1EacUnsignedInteger *val = LibOrgBouncycastleAsn1EacUnsignedInteger_getInstanceWithId_([en nextElement]);
    switch ([((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(val)) getTagNo]) {
      case (jint) 0x1:
      LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger_(self, val);
      break;
      case (jint) 0x2:
      LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger_(self, val);
      break;
      default:
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Unknown DERTaggedObject :", [val getTagNo], @"-> not an Iso7816RSAPublicKeyStructure"));
    }
  }
  if (self->valid_ != (jint) 0x3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"missing argument -> not an Iso7816RSAPublicKeyStructure");
  }
}

LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *new_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *create_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *modulus, JavaMathBigInteger *exponent) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  self->valid_ = 0;
  self->usage_ = usage;
  self->modulus_ = modulus;
  self->exponent_ = exponent;
}

LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *new_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *modulus, JavaMathBigInteger *exponent) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_, usage, modulus, exponent)
}

LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *create_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage, JavaMathBigInteger *modulus, JavaMathBigInteger *exponent) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_withJavaMathBigInteger_, usage, modulus, exponent)
}

void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setModulusWithLibOrgBouncycastleAsn1EacUnsignedInteger_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1EacUnsignedInteger *modulus) {
  if ((self->valid_ & LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_modulusValid) == 0) {
    self->valid_ |= LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_modulusValid;
    self->modulus_ = [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(modulus)) getValue];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Modulus already set");
  }
}

void LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_setExponentWithLibOrgBouncycastleAsn1EacUnsignedInteger_(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey *self, LibOrgBouncycastleAsn1EacUnsignedInteger *exponent) {
  if ((self->valid_ & LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_exponentValid) == 0) {
    self->valid_ |= LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_exponentValid;
    self->exponent_ = [((LibOrgBouncycastleAsn1EacUnsignedInteger *) nil_chk(exponent)) getValue];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Exponent already set");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey)
