//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/util/DerUtil.java
//

#ifndef DerUtil_H
#define DerUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleCryptoUtilDerUtil : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1ASN1OctetString *)getOctetStringWithByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)toByteArrayWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)primitive;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoUtilDerUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoUtilDerUtil_init(LibOrgBouncycastleCryptoUtilDerUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDerUtil *new_LibOrgBouncycastleCryptoUtilDerUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDerUtil *create_LibOrgBouncycastleCryptoUtilDerUtil_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1OctetString *LibOrgBouncycastleCryptoUtilDerUtil_getOctetStringWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoUtilDerUtil_toByteArrayWithLibOrgBouncycastleAsn1ASN1Primitive_(LibOrgBouncycastleAsn1ASN1Primitive *primitive);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoUtilDerUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DerUtil_H
