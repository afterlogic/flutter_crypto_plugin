//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Camellia.java
//

#include "ASN1ObjectIdentifier.h"
#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseSecretKeyFactory.h"
#include "BaseWrapCipher.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "CBCBlockCipher.h"
#include "Camellia.h"
#include "CamelliaEngine.h"
#include "CamelliaWrapEngine.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "NTTObjectIdentifiers.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "RFC3211WrapEngine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricCamellia ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricCamellia_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricCamellia *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricCamellia *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia = { "Camellia", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesCamelliaEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesCamelliaEngine_init()), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap = { "Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesCamelliaWrapEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap = { "RFC3211Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_withInt_(self, new_LibOrgBouncycastleCryptoEnginesRFC3211WrapEngine_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesCamelliaEngine_init()), 16);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_RFC3211Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC = { "GMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesCamelliaEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_GMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory = { "KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, @"Camellia", nil);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesCamelliaEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-Camellia", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)keySize {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(self, keySize);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen, init)
}

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *self, jint keySize) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Camellia", keySize, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen, initWithInt_, keySize)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen, initWithInt_, keySize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128 = { "KeyGen128", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(self, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen128)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192 = { "KeyGen192", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(self, 192);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen192)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256 = { "KeyGen256", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256 *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256 *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_KeyGen256)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for Camellia parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"Camellia"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"Camellia IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameters.CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameterGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameterGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameterGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Cipher.CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher.CAMELLIARFC3211WRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$RFC3211Wrap")];
  [provider addAlgorithmWithNSString:@"Cipher.CAMELLIAWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) withNSString:@"CAMELLIAWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) withNSString:@"CAMELLIAWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) withNSString:@"CAMELLIAWRAP"];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc) withNSString:@"CAMELLIA"];
  [provider addAlgorithmWithNSString:@"KeyGenerator.CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen256")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$GMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$KeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"CAMELLIA" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricCamellia;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricCamellia_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricCamellia_Mappings)
