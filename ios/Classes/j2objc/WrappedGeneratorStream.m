//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/WrappedGeneratorStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StreamGenerator.h"
#include "WrappedGeneratorStream.h"
#include "java/io/OutputStream.h"

@interface LibOrgBouncycastleOpenpgpWrappedGeneratorStream () {
 @public
  JavaIoOutputStream *_out_;
  id<LibOrgBouncycastleOpenpgpStreamGenerator> _sGen_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpWrappedGeneratorStream, _out_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpWrappedGeneratorStream, _sGen_, id<LibOrgBouncycastleOpenpgpStreamGenerator>)

@implementation LibOrgBouncycastleOpenpgpWrappedGeneratorStream

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
withLibOrgBouncycastleOpenpgpStreamGenerator:(id<LibOrgBouncycastleOpenpgpStreamGenerator>)sGen {
  LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(self, outArg, sGen);
  return self;
}

- (void)writeWithByteArray:(IOSByteArray *)bytes {
  [((JavaIoOutputStream *) nil_chk(_out_)) writeWithByteArray:bytes];
}

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)offset
                   withInt:(jint)length {
  [((JavaIoOutputStream *) nil_chk(_out_)) writeWithByteArray:bytes withInt:offset withInt:length];
}

- (void)writeWithInt:(jint)b {
  [((JavaIoOutputStream *) nil_chk(_out_)) writeWithInt:b];
}

- (void)flush {
  [((JavaIoOutputStream *) nil_chk(_out_)) flush];
}

- (void)close {
  [((id<LibOrgBouncycastleOpenpgpStreamGenerator>) nil_chk(_sGen_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:withLibOrgBouncycastleOpenpgpStreamGenerator:);
  methods[1].selector = @selector(writeWithByteArray:);
  methods[2].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(writeWithInt:);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_out_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_sGen_", "LLibOrgBouncycastleOpenpgpStreamGenerator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;LLibOrgBouncycastleOpenpgpStreamGenerator;", "write", "[B", "LJavaIoIOException;", "[BII", "I" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpWrappedGeneratorStream = { "WrappedGeneratorStream", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x0, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpWrappedGeneratorStream;
}

@end

void LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(LibOrgBouncycastleOpenpgpWrappedGeneratorStream *self, JavaIoOutputStream *outArg, id<LibOrgBouncycastleOpenpgpStreamGenerator> sGen) {
  JavaIoOutputStream_init(self);
  self->_out_ = outArg;
  self->_sGen_ = sGen;
}

LibOrgBouncycastleOpenpgpWrappedGeneratorStream *new_LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(JavaIoOutputStream *outArg, id<LibOrgBouncycastleOpenpgpStreamGenerator> sGen) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpWrappedGeneratorStream, initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_, outArg, sGen)
}

LibOrgBouncycastleOpenpgpWrappedGeneratorStream *create_LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(JavaIoOutputStream *outArg, id<LibOrgBouncycastleOpenpgpStreamGenerator> sGen) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpWrappedGeneratorStream, initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_, outArg, sGen)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpWrappedGeneratorStream)
