//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters.java
//

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_source.h"
#include "McElieceCCA2KeyParameters.h"

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters () {
 @public
  NSString *params_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters, params_, NSString *)

@implementation LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters

- (instancetype)initWithBoolean:(jboolean)isPrivate
                   withNSString:(NSString *)params {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters_initWithBoolean_withNSString_(self, isPrivate, params);
  return self;
}

- (NSString *)getDigest {
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withNSString:);
  methods[1].selector = @selector(getDigest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters = { "McElieceCCA2KeyParameters", "lib.org.bouncycastle.pqc.crypto.mceliece", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters;
}

@end

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters_initWithBoolean_withNSString_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *self, jboolean isPrivate, NSString *params) {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, isPrivate);
  self->params_ = params;
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters_initWithBoolean_withNSString_(jboolean isPrivate, NSString *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters, initWithBoolean_withNSString_, isPrivate, params)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters_initWithBoolean_withNSString_(jboolean isPrivate, NSString *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters, initWithBoolean_withNSString_, isPrivate, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters)
