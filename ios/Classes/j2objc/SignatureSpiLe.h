//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dstu/SignatureSpiLe.java
//

#ifndef SignatureSpiLe_H
#define SignatureSpiLe_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "JcajceDstuSignatureSpi.h"

@class IOSByteArray;

@interface LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe : LibOrgBouncycastleJcajceProviderAsymmetricDstuJcajceDstuSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (IOSByteArray *)engineSign;

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes;

#pragma mark Package-Private

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe_init(LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricDstuSignatureSpiLe)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SignatureSpiLe_H
