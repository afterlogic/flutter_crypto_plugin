//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/CrlIdentifier.java
//

#ifndef CrlIdentifier_H
#define CrlIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1UTCTime;
@class LibOrgBouncycastleAsn1X500X500Name;

@interface LibOrgBouncycastleAsn1EsfCrlIdentifier : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)crlIssuer
                               withLibOrgBouncycastleAsn1ASN1UTCTime:(LibOrgBouncycastleAsn1ASN1UTCTime *)crlIssuedTime;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)crlIssuer
                               withLibOrgBouncycastleAsn1ASN1UTCTime:(LibOrgBouncycastleAsn1ASN1UTCTime *)crlIssuedTime
                                              withJavaMathBigInteger:(JavaMathBigInteger *)crlNumber;

- (LibOrgBouncycastleAsn1ASN1UTCTime *)getCrlIssuedTime;

- (LibOrgBouncycastleAsn1X500X500Name *)getCrlIssuer;

- (JavaMathBigInteger *)getCrlNumber;

+ (LibOrgBouncycastleAsn1EsfCrlIdentifier *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfCrlIdentifier)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfCrlIdentifier *LibOrgBouncycastleAsn1EsfCrlIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_(LibOrgBouncycastleAsn1EsfCrlIdentifier *self, LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfCrlIdentifier *new_LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_(LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfCrlIdentifier *create_LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_(LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(LibOrgBouncycastleAsn1EsfCrlIdentifier *self, LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfCrlIdentifier *new_LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfCrlIdentifier *create_LibOrgBouncycastleAsn1EsfCrlIdentifier_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1UTCTime_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *crlIssuer, LibOrgBouncycastleAsn1ASN1UTCTime *crlIssuedTime, JavaMathBigInteger *crlNumber);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfCrlIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CrlIdentifier_H
