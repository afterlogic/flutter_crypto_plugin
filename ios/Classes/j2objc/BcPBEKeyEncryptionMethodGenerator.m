//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/BcPBEKeyEncryptionMethodGenerator.java
//

#include "BcImplProvider.h"
#include "BcPBEKeyEncryptionMethodGenerator.h"
#include "BcUtil.h"
#include "BlockCipher.h"
#include "BufferedBlockCipher.h"
#include "IOSPrimitiveArray.h"
#include "InvalidCipherTextException.h"
#include "J2ObjC_source.h"
#include "OpenPgpBcSHA1PGPDigestCalculator.h"
#include "PBEKeyEncryptionMethodGenerator.h"
#include "PGPDigestCalculator.h"
#include "PGPException.h"
#include "java/security/SecureRandom.h"

@implementation LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator

- (instancetype)initWithCharArray:(IOSCharArray *)passPhrase
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)s2kDigestCalculator {
  LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(self, passPhrase, s2kDigestCalculator);
  return self;
}

- (instancetype)initWithCharArray:(IOSCharArray *)passPhrase {
  LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_(self, passPhrase);
  return self;
}

- (instancetype)initWithCharArray:(IOSCharArray *)passPhrase
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)s2kDigestCalculator
                          withInt:(jint)s2kCount {
  LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(self, passPhrase, s2kDigestCalculator, s2kCount);
  return self;
}

- (instancetype)initWithCharArray:(IOSCharArray *)passPhrase
                          withInt:(jint)s2kCount {
  LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withInt_(self, passPhrase, s2kCount);
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorPBEKeyEncryptionMethodGenerator *)setSecureRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  (void) [super setSecureRandomWithJavaSecuritySecureRandom:random];
  return self;
}

- (IOSByteArray *)encryptSessionInfoWithInt:(jint)encAlgorithm
                              withByteArray:(IOSByteArray *)key
                              withByteArray:(IOSByteArray *)sessionInfo {
  @try {
    id<LibOrgBouncycastleCryptoBlockCipher> engine = LibOrgBouncycastleOpenpgpOperatorBcBcImplProvider_createBlockCipherWithInt_(encAlgorithm);
    LibOrgBouncycastleCryptoBufferedBlockCipher *cipher = LibOrgBouncycastleOpenpgpOperatorBcBcUtil_createSymmetricKeyWrapperWithBoolean_withLibOrgBouncycastleCryptoBlockCipher_withByteArray_withByteArray_(true, engine, key, [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoBlockCipher>) nil_chk(engine)) getBlockSize]]);
    IOSByteArray *out = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(sessionInfo))->size_];
    jint len = [((LibOrgBouncycastleCryptoBufferedBlockCipher *) nil_chk(cipher)) processBytesWithByteArray:sessionInfo withInt:0 withInt:sessionInfo->size_ withByteArray:out withInt:0];
    len += [cipher doFinalWithByteArray:out withInt:len];
    return out;
  }
  @catch (LibOrgBouncycastleCryptoInvalidCipherTextException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"encryption failed: ", [e getMessage]), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPBEKeyEncryptionMethodGenerator;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 6, 7, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:);
  methods[1].selector = @selector(initWithCharArray:);
  methods[2].selector = @selector(initWithCharArray:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:withInt:);
  methods[3].selector = @selector(initWithCharArray:withInt:);
  methods[4].selector = @selector(setSecureRandomWithJavaSecuritySecureRandom:);
  methods[5].selector = @selector(encryptSessionInfoWithInt:withByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[CLLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;", "[C", "[CLLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;I", "[CI", "setSecureRandom", "LJavaSecuritySecureRandom;", "encryptSessionInfo", "I[B[B", "LLibOrgBouncycastleOpenpgpPGPException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator = { "BcPBEKeyEncryptionMethodGenerator", "lib.org.bouncycastle.openpgp.operator.bc", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator;
}

@end

void LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *self, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator) {
  LibOrgBouncycastleOpenpgpOperatorPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(self, passPhrase, s2kDigestCalculator);
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *new_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_, passPhrase, s2kDigestCalculator)
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *create_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_, passPhrase, s2kDigestCalculator)
}

void LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *self, IOSCharArray *passPhrase) {
  LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(self, passPhrase, new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init());
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *new_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_(IOSCharArray *passPhrase) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_, passPhrase)
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *create_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_(IOSCharArray *passPhrase) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_, passPhrase)
}

void LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *self, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount) {
  LibOrgBouncycastleOpenpgpOperatorPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(self, passPhrase, s2kDigestCalculator, s2kCount);
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *new_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_, passPhrase, s2kDigestCalculator, s2kCount)
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *create_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> s2kDigestCalculator, jint s2kCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_, passPhrase, s2kDigestCalculator, s2kCount)
}

void LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withInt_(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *self, IOSCharArray *passPhrase, jint s2kCount) {
  LibOrgBouncycastleOpenpgpOperatorPBEKeyEncryptionMethodGenerator_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withInt_(self, passPhrase, new_LibOrgBouncycastleOpenpgpOperatorBcOpenPgpBcSHA1PGPDigestCalculator_init(), s2kCount);
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *new_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withInt_(IOSCharArray *passPhrase, jint s2kCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withInt_, passPhrase, s2kCount)
}

LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator *create_LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator_initWithCharArray_withInt_(IOSCharArray *passPhrase, jint s2kCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator, initWithCharArray_withInt_, passPhrase, s2kCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorBcBcPBEKeyEncryptionMethodGenerator)
