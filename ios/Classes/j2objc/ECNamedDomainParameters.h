//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ECNamedDomainParameters.java
//

#ifndef ECNamedDomainParameters_H
#define ECNamedDomainParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECDomainParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleMathEcECCurve;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleCryptoParamsECNamedDomainParameters : LibOrgBouncycastleCryptoParamsECDomainParameters

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)name
                                         withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                         withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)name
                                         withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                         withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)n
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)name
                                         withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                         withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)n
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)h
                                                               withByteArray:(IOSByteArray *)seed;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)name
                        withLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)domainParameters;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg3 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg3
                                                    withByteArray:(IOSByteArray *)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsECNamedDomainParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsECNamedDomainParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *new_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *create_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsECNamedDomainParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *new_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *create_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleCryptoParamsECNamedDomainParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *new_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *create_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECNamedDomainParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleCryptoParamsECDomainParameters *domainParameters);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *new_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleCryptoParamsECDomainParameters *domainParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECNamedDomainParameters *create_LibOrgBouncycastleCryptoParamsECNamedDomainParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *name, LibOrgBouncycastleCryptoParamsECDomainParameters *domainParameters);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsECNamedDomainParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECNamedDomainParameters_H
