//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSParameters.java
//

#ifndef GMSSParameters_H
#define GMSSParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSIntArray;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSParameters : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)keySize;

- (instancetype __nonnull)initWithInt:(jint)layers
                         withIntArray:(IOSIntArray *)heightOfTrees
                         withIntArray:(IOSIntArray *)winternitzParameter
                         withIntArray:(IOSIntArray *)K;

- (IOSIntArray *)getHeightOfTrees;

- (IOSIntArray *)getK;

- (jint)getNumOfLayers;

- (IOSIntArray *)getWinternitzParameter;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *self, jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_withIntArray_withIntArray_withIntArray_(jint layers, IOSIntArray *heightOfTrees, IOSIntArray *winternitzParameter, IOSIntArray *K);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *self, jint keySize);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_(jint keySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSParameters_initWithInt_(jint keySize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSParameters_H
