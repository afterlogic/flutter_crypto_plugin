//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/keystore/BCFKS.java
//

#include "AsymmetricAlgorithmProvider.h"
#include "BCFKS.h"
#include "ConfigurableProvider.h"
#include "J2ObjC_source.h"

inline NSString *LibOrgBouncycastleJcajceProviderKeystoreBCFKS_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX = @"lib.org.bouncycastle.jcajce.provider.keystore.bcfks.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderKeystoreBCFKS, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderKeystoreBCFKS

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderKeystoreBCFKS_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX, "LLibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderKeystoreBCFKS = { "BCFKS", "lib.org.bouncycastle.jcajce.provider.keystore", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, 1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderKeystoreBCFKS;
}

@end

void LibOrgBouncycastleJcajceProviderKeystoreBCFKS_init(LibOrgBouncycastleJcajceProviderKeystoreBCFKS *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderKeystoreBCFKS *new_LibOrgBouncycastleJcajceProviderKeystoreBCFKS_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderKeystoreBCFKS, init)
}

LibOrgBouncycastleJcajceProviderKeystoreBCFKS *create_LibOrgBouncycastleJcajceProviderKeystoreBCFKS_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderKeystoreBCFKS, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderKeystoreBCFKS)

@implementation LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"KeyStore.BCFKS" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX, @"BcFKSKeyStoreSpi$Std")];
  [provider addAlgorithmWithNSString:@"KeyStore.BCFKS-DEF" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX, @"BcFKSKeyStoreSpi$Def")];
  [provider addAlgorithmWithNSString:@"KeyStore.IBCFKS" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX, @"BcFKSKeyStoreSpi$StdShared")];
  [provider addAlgorithmWithNSString:@"KeyStore.IBCFKS-DEF" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderKeystoreBCFKS_PREFIX, @"BcFKSKeyStoreSpi$DefShared")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "LLibOrgBouncycastleJcajceProviderKeystoreBCFKS;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.keystore", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings;
}

@end

void LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings_init(LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings *new_LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings, init)
}

LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings *create_LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderKeystoreBCFKS_Mappings)
