//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/AbstractTlsSigner.java
//

#include "AbstractTlsSigner.h"
#include "AsymmetricKeyParameter.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Signer.h"
#include "TlsContext.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation LibOrgBouncycastleCryptoTlsAbstractTlsSigner

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsAbstractTlsSigner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context {
  self->context_ = context;
}

- (IOSByteArray *)generateRawSignatureWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                                 withByteArray:(IOSByteArray *)md5AndSha1 {
  return [self generateRawSignatureWithLibOrgBouncycastleCryptoTlsSignatureAndHashAlgorithm:nil withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:privateKey withByteArray:md5AndSha1];
}

- (jboolean)verifyRawSignatureWithByteArray:(IOSByteArray *)sigBytes
withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                              withByteArray:(IOSByteArray *)md5AndSha1 {
  return [self verifyRawSignatureWithLibOrgBouncycastleCryptoTlsSignatureAndHashAlgorithm:nil withByteArray:sigBytes withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:publicKey withByteArray:md5AndSha1];
}

- (id<LibOrgBouncycastleCryptoSigner>)createSignerWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey {
  return [self createSignerWithLibOrgBouncycastleCryptoTlsSignatureAndHashAlgorithm:nil withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:privateKey];
}

- (id<LibOrgBouncycastleCryptoSigner>)createVerifyerWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicKey {
  return [self createVerifyerWithLibOrgBouncycastleCryptoTlsSignatureAndHashAlgorithm:nil withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:publicKey];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoSigner;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoSigner;", 0x1, 9, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithLibOrgBouncycastleCryptoTlsTlsContext:);
  methods[2].selector = @selector(generateRawSignatureWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withByteArray:);
  methods[3].selector = @selector(verifyRawSignatureWithByteArray:withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withByteArray:);
  methods[4].selector = @selector(createSignerWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  methods[5].selector = @selector(createVerifyerWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "context_", "LLibOrgBouncycastleCryptoTlsTlsContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LLibOrgBouncycastleCryptoTlsTlsContext;", "generateRawSignature", "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;[B", "LLibOrgBouncycastleCryptoCryptoException;", "verifyRawSignature", "[BLLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;[B", "createSigner", "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "createVerifyer" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsAbstractTlsSigner = { "AbstractTlsSigner", "lib.org.bouncycastle.crypto.tls", ptrTable, methods, fields, 7, 0x401, 6, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsAbstractTlsSigner;
}

@end

void LibOrgBouncycastleCryptoTlsAbstractTlsSigner_init(LibOrgBouncycastleCryptoTlsAbstractTlsSigner *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsAbstractTlsSigner)
