//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/CramerShoupKeyGenerationParameters.java
//

#include "CramerShoupKeyGenerationParameters.h"
#include "CramerShoupParameters.h"
#include "J2ObjC_source.h"
#include "KeyGenerationParameters.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"

@interface LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters () {
 @public
  LibOrgBouncycastleCryptoParamsCramerShoupParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters, params_, LibOrgBouncycastleCryptoParamsCramerShoupParameters *)

@implementation LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
withLibOrgBouncycastleCryptoParamsCramerShoupParameters:(LibOrgBouncycastleCryptoParamsCramerShoupParameters *)params {
  LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_(self, random, params);
  return self;
}

- (LibOrgBouncycastleCryptoParamsCramerShoupParameters *)getParameters {
  return params_;
}

+ (jint)getStrengthWithLibOrgBouncycastleCryptoParamsCramerShoupParameters:(LibOrgBouncycastleCryptoParamsCramerShoupParameters *)params {
  return LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_getStrengthWithLibOrgBouncycastleCryptoParamsCramerShoupParameters_(params);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsCramerShoupParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withLibOrgBouncycastleCryptoParamsCramerShoupParameters:);
  methods[1].selector = @selector(getParameters);
  methods[2].selector = @selector(getStrengthWithLibOrgBouncycastleCryptoParamsCramerShoupParameters:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LLibOrgBouncycastleCryptoParamsCramerShoupParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;LLibOrgBouncycastleCryptoParamsCramerShoupParameters;", "getStrength", "LLibOrgBouncycastleCryptoParamsCramerShoupParameters;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters = { "CramerShoupKeyGenerationParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters;
}

@end

void LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_(LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters *self, JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsCramerShoupParameters *params) {
  LibOrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_getStrengthWithLibOrgBouncycastleCryptoParamsCramerShoupParameters_(params));
  self->params_ = params;
}

LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters *new_LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsCramerShoupParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters, initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_, random, params)
}

LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters *create_LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_(JavaSecuritySecureRandom *random, LibOrgBouncycastleCryptoParamsCramerShoupParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters, initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsCramerShoupParameters_, random, params)
}

jint LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_getStrengthWithLibOrgBouncycastleCryptoParamsCramerShoupParameters_(LibOrgBouncycastleCryptoParamsCramerShoupParameters *params) {
  LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters_initialize();
  return [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleCryptoParamsCramerShoupParameters *) nil_chk(params)) getP])) bitLength];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsCramerShoupKeyGenerationParameters)
