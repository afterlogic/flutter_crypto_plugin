//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/generation/type/curve/EllipticCurve.java
//

#include "EllipticCurve.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve () {
 @public
  NSString *name_EllipticCurve_;
}

@end

J2OBJC_FIELD_SETTER(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve, name_EllipticCurve_, NSString *)

__attribute__((unused)) static void LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initWithNSString_withNSString_withInt_(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *self, NSString *name, NSString *__name, jint __ordinal);

__attribute__((unused)) static LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *new_LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initWithNSString_withNSString_withInt_(NSString *name, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve)

LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values_[1];

@implementation LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve

+ (LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *)_P256 {
  return JreEnum(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve, _P256);
}

- (NSString *)getName {
  return name_EllipticCurve_;
}

+ (IOSObjectArray *)values {
  return LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values();
}

+ (LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *)valueOfWithNSString:(NSString *)name {
  return LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_valueOfWithNSString_(name);
}

- (LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_Enum)toNSEnum {
  return (LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getName);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_P256", "LLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "name_EllipticCurve_", "LNSString;", .constantValue.asLong = 0, 0x12, 3, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve, _P256), "name", "Ljava/lang/Enum<Llib/com/afterlogic/pgp/key/generation/type/curve/EllipticCurve;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve = { "EllipticCurve", "lib.com.afterlogic.pgp.key.generation.type.curve", ptrTable, methods, fields, 7, 0x4011, 3, 2, -1, -1, -1, 4, -1 };
  return &_LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve;
}

+ (void)initialize {
  if (self == [LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve class]) {
    JreEnum(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve, _P256) = new_LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initWithNSString_withNSString_withInt_(@"P-256", JreEnumConstantName(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_class_(), 0), 0);
    J2OBJC_SET_INITIALIZED(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve)
  }
}

@end

void LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initWithNSString_withNSString_withInt_(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *self, NSString *name, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->name_EllipticCurve_ = name;
}

LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *new_LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initWithNSString_withNSString_withInt_(NSString *name, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve, initWithNSString_withNSString_withInt_, name, __name, __ordinal)
}

IOSObjectArray *LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values() {
  LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initialize();
  return [IOSObjectArray arrayWithObjects:LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values_ count:1 type:LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_class_()];
}

LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_valueOfWithNSString_(NSString *name) {
  LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initialize();
  for (int i = 0; i < 1; i++) {
    LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *e = LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_fromOrdinal(NSUInteger ordinal) {
  LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve)
