//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/util/PBKDF2Config.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "CryptoProObjectIdentifiers.h"
#include "DERNull.h"
#include "GMObjectIdentifiers.h"
#include "Integers.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "PBKDF2Config.h"
#include "PBKDFConfig.h"
#include "PKCSObjectIdentifiers.h"
#include "RosstandartObjectIdentifiers.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface LibOrgBouncycastleCryptoUtilPBKDF2Config () {
 @public
  jint iterationCount_;
  jint saltLength_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *prf_;
}

- (instancetype)initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder:(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoUtilPBKDF2Config, prf_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

inline id<JavaUtilMap> LibOrgBouncycastleCryptoUtilPBKDF2Config_get_PRFS_SALT(void);
static id<JavaUtilMap> LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoUtilPBKDF2Config, PRFS_SALT, id<JavaUtilMap>)

__attribute__((unused)) static void LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config *self, LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastleCryptoUtilPBKDF2Config *new_LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleCryptoUtilPBKDF2Config *create_LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder);

@interface LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder () {
 @public
  jint iterationCount_;
  jint saltLength_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *prf_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder, prf_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleCryptoUtilPBKDF2Config)

LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA1;
LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA256;
LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA512;
LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_256;
LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_512;

@implementation LibOrgBouncycastleCryptoUtilPBKDF2Config

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)PRF_SHA1 {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA1;
}

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)PRF_SHA256 {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA256;
}

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)PRF_SHA512 {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA512;
}

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)PRF_SHA3_256 {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_256;
}

+ (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)PRF_SHA3_512 {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_512;
}

+ (jint)getSaltSizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  return LibOrgBouncycastleCryptoUtilPBKDF2Config_getSaltSizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(algorithm);
}

- (instancetype)initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder:(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *)builder {
  LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(self, builder);
  return self;
}

- (jint)getIterationCount {
  return iterationCount_;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getPRF {
  return prf_;
}

- (jint)getSaltLength {
  return saltLength_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getSaltSizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder:);
  methods[2].selector = @selector(getIterationCount);
  methods[3].selector = @selector(getPRF);
  methods[4].selector = @selector(getSaltLength);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRF_SHA1", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "PRF_SHA256", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "PRF_SHA512", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "PRF_SHA3_256", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "PRF_SHA3_512", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "PRFS_SALT", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "iterationCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "saltLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "prf_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getSaltSize", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "LLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder;", &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA1, &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA256, &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA512, &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_256, &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_512, &LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoUtilPBKDF2Config = { "PBKDF2Config", "lib.org.bouncycastle.crypto.util", ptrTable, methods, fields, 7, 0x1, 5, 9, -1, 2, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoUtilPBKDF2Config;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleCryptoUtilPBKDF2Config class]) {
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA1 = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA256 = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA512 = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_256 = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_256), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRF_SHA3_512 = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_512), JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT = new_JavaUtilHashMap_init();
    {
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(20)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(32)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(64)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA224) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(28)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(48)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_224) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(28)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_256) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(32)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_384) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(48)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_512) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(64)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3411Hmac) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(32)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1RosstandartRosstandartObjectIdentifiers, id_tc26_hmac_gost_3411_12_256) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(32)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1RosstandartRosstandartObjectIdentifiers, id_tc26_hmac_gost_3411_12_512) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(64)];
      (void) [LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT putWithId:JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, hmac_sm3) withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(32)];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleCryptoUtilPBKDF2Config)
  }
}

@end

jint LibOrgBouncycastleCryptoUtilPBKDF2Config_getSaltSizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algorithm) {
  LibOrgBouncycastleCryptoUtilPBKDF2Config_initialize();
  if (![((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT)) containsKeyWithId:algorithm]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"no salt size for algorithm: ", algorithm));
  }
  return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([LibOrgBouncycastleCryptoUtilPBKDF2Config_PRFS_SALT getWithId:algorithm], [JavaLangInteger class])))) intValue];
}

void LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config *self, LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder) {
  LibOrgBouncycastleCryptoUtilPBKDFConfig_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_PBKDF2));
  self->iterationCount_ = ((LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *) nil_chk(builder))->iterationCount_;
  self->prf_ = builder->prf_;
  if (builder->saltLength_ < 0) {
    self->saltLength_ = LibOrgBouncycastleCryptoUtilPBKDF2Config_getSaltSizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(self->prf_)) getAlgorithm]);
  }
  else {
    self->saltLength_ = builder->saltLength_;
  }
}

LibOrgBouncycastleCryptoUtilPBKDF2Config *new_LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoUtilPBKDF2Config, initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_, builder)
}

LibOrgBouncycastleCryptoUtilPBKDF2Config *create_LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoUtilPBKDF2Config, initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoUtilPBKDF2Config)

@implementation LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *)withIterationCountWithInt:(jint)iterationCount {
  self->iterationCount_ = iterationCount;
  return self;
}

- (LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *)withPRFWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)prf {
  self->prf_ = prf;
  return self;
}

- (LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *)withSaltLengthWithInt:(jint)saltLength {
  self->saltLength_ = saltLength;
  return self;
}

- (LibOrgBouncycastleCryptoUtilPBKDF2Config *)build {
  return new_LibOrgBouncycastleCryptoUtilPBKDF2Config_initWithLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoUtilPBKDF2Config_Builder;", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoUtilPBKDF2Config;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(withIterationCountWithInt:);
  methods[2].selector = @selector(withPRFWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[3].selector = @selector(withSaltLengthWithInt:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iterationCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "saltLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prf_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "withIterationCount", "I", "withPRF", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", "withSaltLength", "LLibOrgBouncycastleCryptoUtilPBKDF2Config;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder = { "Builder", "lib.org.bouncycastle.crypto.util", ptrTable, methods, fields, 7, 0x9, 5, 3, 5, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder;
}

@end

void LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_init(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *self) {
  NSObject_init(self);
  self->iterationCount_ = 1024;
  self->saltLength_ = -1;
  self->prf_ = JreLoadStatic(LibOrgBouncycastleCryptoUtilPBKDF2Config, PRF_SHA1);
}

LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *new_LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder, init)
}

LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder *create_LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoUtilPBKDF2Config_Builder)
