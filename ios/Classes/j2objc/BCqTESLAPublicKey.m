//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/qtesla/BCqTESLAPublicKey.java
//

#include "Arrays.h"
#include "AsymmetricKeyParameter.h"
#include "BCqTESLAPublicKey.h"
#include "CipherParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PqcCryptoPublicKeyFactory.h"
#include "PqcSubjectPublicKeyInfoFactory.h"
#include "QTESLAParameterSpec.h"
#include "QTESLAPublicKeyParameters.h"
#include "QTESLASecurityCategory.h"
#include "SubjectPublicKeyInfo.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"

@interface LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey () {
 @public
  LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *keyParams_;
}

- (void)init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, keyParams_, LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *)

inline jlong LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, serialVersionUID, jlong)

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

__attribute__((unused)) static NSString *LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_getAlgorithm(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self);

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey

- (instancetype)initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters:(LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *)keyParams {
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_(self, keyParams);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
  return self;
}

- (void)init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}

- (NSString *)getAlgorithm {
  return LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_getAlgorithm(self);
}

- (IOSByteArray *)getEncoded {
  @try {
    LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *pki = LibOrgBouncycastlePqcCryptoUtilPqcSubjectPublicKeyInfoFactory_createSubjectPublicKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(keyParams_);
    return [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (NSString *)getFormat {
  return @"X.509";
}

- (LibOrgBouncycastlePqcJcajceSpecQTESLAParameterSpec *)getParams {
  return new_LibOrgBouncycastlePqcJcajceSpecQTESLAParameterSpec_initWithNSString_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_getAlgorithm(self));
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)getKeyParams {
  return keyParams_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if ([o isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey class]]) {
    LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *otherKey = (LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *) o;
    return [((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(keyParams_)) getSecurityCategory] == [((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(((LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *) nil_chk(otherKey))->keyParams_)) getSecurityCategory] && LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(keyParams_)) getPublicData], [((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(otherKey->keyParams_)) getPublicData]);
  }
  return false;
}

- (NSUInteger)hash {
  return [((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(keyParams_)) getSecurityCategory] + 37 * LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_([((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(keyParams_)) getPublicData]);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcJcajceSpecQTESLAParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[2].selector = @selector(init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getEncoded);
  methods[5].selector = @selector(getFormat);
  methods[6].selector = @selector(getParams);
  methods[7].selector = @selector(getKeyParams);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[11].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "keyParams_", "LLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LJavaIoIOException;", "init", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey = { "BCqTESLAPublicKey", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *keyParams) {
  NSObject_init(self);
  self->keyParams_ = keyParams;
}

LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *new_LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_(LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *keyParams) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_, keyParams)
}

LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *create_LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_(LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *keyParams) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, initWithLibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_, keyParams)
}

void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  NSObject_init(self);
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}

LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *new_LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}

LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *create_LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}

void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  self->keyParams_ = (LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) cast_chk(LibOrgBouncycastlePqcCryptoUtilPqcCryptoPublicKeyFactory_createKeyWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(keyInfo), [LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters class]);
}

NSString *LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_getAlgorithm(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self) {
  return LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_([((LibOrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(self->keyParams_)) getSecurityCategory]);
}

void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_init__WithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(enc));
}

void LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey)
