//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/rsa/JcajceRsaKeyPairGeneratorSpi.java
//

#ifndef JcajceRsaKeyPairGeneratorSpi_H
#define JcajceRsaKeyPairGeneratorSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/KeyPairGenerator.h"

@class JavaMathBigInteger;
@class JavaSecurityKeyPair;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoGeneratorsCryptoRSAKeyPairGenerator;
@class LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi : JavaSecurityKeyPairGenerator {
 @public
  LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters *param_;
  LibOrgBouncycastleCryptoGeneratorsCryptoRSAKeyPairGenerator *engine_;
}
@property (readonly, class) JavaMathBigInteger *defaultPublicExponent NS_SWIFT_NAME(defaultPublicExponent);

+ (JavaMathBigInteger *)defaultPublicExponent;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithmName;

- (JavaSecurityKeyPair *)generateKeyPair;

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi, param_, LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi, engine_, LibOrgBouncycastleCryptoGeneratorsCryptoRSAKeyPairGenerator *)

inline JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_get_defaultPublicExponent(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaMathBigInteger *LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_defaultPublicExponent;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi, defaultPublicExponent, JavaMathBigInteger *)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_initWithNSString_(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *self, NSString *algorithmName);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_initWithNSString_(NSString *algorithmName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_initWithNSString_(NSString *algorithmName);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricRsaJcajceRsaKeyPairGeneratorSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajceRsaKeyPairGeneratorSpi_H
