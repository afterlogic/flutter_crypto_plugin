//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/NTRUSigningParameters.java
//

#ifndef NTRUSigningParameters_H
#define NTRUSigningParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters : NSObject < NSCopying > {
 @public
  jint N_;
  jint q_;
  jint d_;
  jint d1_;
  jint d2_;
  jint d3_;
  jint B_;
  jdouble beta_;
  jdouble betaSq_;
  jdouble normBound_;
  jdouble normBoundSq_;
  jint signFailTolerance_;
  jint bitsF_;
  id<LibOrgBouncycastleCryptoDigest> hashAlg_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype __nonnull)initWithInt:(jint)N
                              withInt:(jint)q
                              withInt:(jint)d
                              withInt:(jint)B
                           withDouble:(jdouble)beta
                           withDouble:(jdouble)normBound
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hashAlg;

- (instancetype __nonnull)initWithInt:(jint)N
                              withInt:(jint)q
                              withInt:(jint)d1
                              withInt:(jint)d2
                              withInt:(jint)d3
                              withInt:(jint)B
                           withDouble:(jdouble)beta
                           withDouble:(jdouble)normBound
                           withDouble:(jdouble)keyNormBound
   withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hashAlg;

- (LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *)java_clone;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)description;

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)os;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters, hashAlg_, id<LibOrgBouncycastleCryptoDigest>)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *self, jint N, jint q, jint d, jint B, jdouble beta, jdouble normBound, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint d, jint B, jdouble beta, jdouble normBound, id<LibOrgBouncycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint d, jint B, jdouble beta, jdouble normBound, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *self, jint N, jint q, jint d1, jint d2, jint d3, jint B, jdouble beta, jdouble normBound, jdouble keyNormBound, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint d1, jint d2, jint d3, jint B, jdouble beta, jdouble normBound, jdouble keyNormBound, id<LibOrgBouncycastleCryptoDigest> hashAlg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withLibOrgBouncycastleCryptoDigest_(jint N, jint q, jint d1, jint d2, jint d3, jint B, jdouble beta, jdouble normBound, jdouble keyNormBound, id<LibOrgBouncycastleCryptoDigest> hashAlg);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithJavaIoInputStream_(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *self, JavaIoInputStream *is);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters_initWithJavaIoInputStream_(JavaIoInputStream *is);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNtruNTRUSigningParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NTRUSigningParameters_H
