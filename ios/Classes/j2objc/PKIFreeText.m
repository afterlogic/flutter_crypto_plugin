//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIFreeText.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "DERUTF8String.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PKIFreeText.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1CmpPKIFreeText ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmpPKIFreeText

+ (LibOrgBouncycastleAsn1CmpPKIFreeText *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (LibOrgBouncycastleAsn1CmpPKIFreeText *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)p {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8String_(self, p);
  return self;
}

- (instancetype)initWithNSString:(NSString *)p {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSString_(self, p);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1DERUTF8StringArray:(IOSObjectArray *)strs {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8StringArray_(self, strs);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)strs {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSStringArray_(self, strs);
  return self;
}

- (jint)size {
  return [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(strings_)) size];
}

- (LibOrgBouncycastleAsn1DERUTF8String *)getStringAtWithInt:(jint)i {
  return (LibOrgBouncycastleAsn1DERUTF8String *) cast_chk([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(strings_)) getObjectAtWithInt:i], [LibOrgBouncycastleAsn1DERUTF8String class]);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return strings_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIFreeText;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIFreeText;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERUTF8String;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1DERUTF8String:);
  methods[4].selector = @selector(initWithNSString:);
  methods[5].selector = @selector(initWithLibOrgBouncycastleAsn1DERUTF8StringArray:);
  methods[6].selector = @selector(initWithNSStringArray:);
  methods[7].selector = @selector(size);
  methods[8].selector = @selector(getStringAtWithInt:);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "strings_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1DERUTF8String;", "LNSString;", "[LLibOrgBouncycastleAsn1DERUTF8String;", "[LNSString;", "getStringAt", "I" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpPKIFreeText = { "PKIFreeText", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpPKIFreeText;
}

@end

LibOrgBouncycastleAsn1CmpPKIFreeText *LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initialize();
  return LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

LibOrgBouncycastleAsn1CmpPKIFreeText *LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1CmpPKIFreeText class]]) {
    return (LibOrgBouncycastleAsn1CmpPKIFreeText *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> e = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    if (!([[e nextElement] isKindOfClass:[LibOrgBouncycastleAsn1DERUTF8String class]])) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"attempt to insert non UTF8 STRING into PKIFreeText");
    }
  }
  self->strings_ = seq;
}

LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, LibOrgBouncycastleAsn1DERUTF8String *p) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->strings_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1Encodable_(p);
}

LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1DERUTF8String *p) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1DERUTF8String_, p)
}

LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1DERUTF8String *p) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1DERUTF8String_, p)
}

void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSString_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, NSString *p) {
  LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8String_(self, new_LibOrgBouncycastleAsn1DERUTF8String_initWithNSString_(p));
}

LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSString_(NSString *p) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithNSString_, p)
}

LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSString_(NSString *p) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithNSString_, p)
}

void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8StringArray_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, IOSObjectArray *strs) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->strings_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableArray_(strs);
}

LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8StringArray_(IOSObjectArray *strs) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1DERUTF8StringArray_, strs)
}

LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithLibOrgBouncycastleAsn1DERUTF8StringArray_(IOSObjectArray *strs) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithLibOrgBouncycastleAsn1DERUTF8StringArray_, strs)
}

void LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSStringArray_(LibOrgBouncycastleAsn1CmpPKIFreeText *self, IOSObjectArray *strs) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(strs))->size_; i++) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERUTF8String_initWithNSString_(IOSObjectArray_Get(strs, i))];
  }
  self->strings_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

LibOrgBouncycastleAsn1CmpPKIFreeText *new_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSStringArray_(IOSObjectArray *strs) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithNSStringArray_, strs)
}

LibOrgBouncycastleAsn1CmpPKIFreeText *create_LibOrgBouncycastleAsn1CmpPKIFreeText_initWithNSStringArray_(IOSObjectArray *strs) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFreeText, initWithNSStringArray_, strs)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpPKIFreeText)
