//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/KeyParameter.java
//

#ifndef KeyParameter_H
#define KeyParameter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsKeyParameter : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key
                                    withInt:(jint)keyOff
                                    withInt:(jint)keyLen;

- (IOSByteArray *)getKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsKeyParameter)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_(LibOrgBouncycastleCryptoParamsKeyParameter *self, IOSByteArray *key);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKeyParameter *new_LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_(IOSByteArray *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKeyParameter *create_LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_(IOSByteArray *key);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_withInt_withInt_(LibOrgBouncycastleCryptoParamsKeyParameter *self, IOSByteArray *key, jint keyOff, jint keyLen);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKeyParameter *new_LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_withInt_withInt_(IOSByteArray *key, jint keyOff, jint keyLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKeyParameter *create_LibOrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_withInt_withInt_(IOSByteArray *key, jint keyOff, jint keyLen);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsKeyParameter)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyParameter_H
