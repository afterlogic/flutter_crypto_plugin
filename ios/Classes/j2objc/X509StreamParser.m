//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509StreamParser.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NoSuchParserException.h"
#include "X509StreamParser.h"
#include "X509StreamParserSpi.h"
#include "X509Util.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/security/Provider.h"
#include "java/util/Collection.h"

@interface LibOrgBouncycastleX509X509StreamParser () {
 @public
  JavaSecurityProvider *_provider_;
  LibOrgBouncycastleX509X509StreamParserSpi *_spi_;
}

+ (LibOrgBouncycastleX509X509StreamParser *)createParserWithLibOrgBouncycastleX509X509Util_Implementation:(LibOrgBouncycastleX509X509Util_Implementation *)impl;

- (instancetype)initWithJavaSecurityProvider:(JavaSecurityProvider *)provider
withLibOrgBouncycastleX509X509StreamParserSpi:(LibOrgBouncycastleX509X509StreamParserSpi *)spi;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509StreamParser, _provider_, JavaSecurityProvider *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509StreamParser, _spi_, LibOrgBouncycastleX509X509StreamParserSpi *)

__attribute__((unused)) static LibOrgBouncycastleX509X509StreamParser *LibOrgBouncycastleX509X509StreamParser_createParserWithLibOrgBouncycastleX509X509Util_Implementation_(LibOrgBouncycastleX509X509Util_Implementation *impl);

__attribute__((unused)) static void LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(LibOrgBouncycastleX509X509StreamParser *self, JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi);

__attribute__((unused)) static LibOrgBouncycastleX509X509StreamParser *new_LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleX509X509StreamParser *create_LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi);

@implementation LibOrgBouncycastleX509X509StreamParser

+ (LibOrgBouncycastleX509X509StreamParser *)getInstanceWithNSString:(NSString *)type {
  return LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_(type);
}

+ (LibOrgBouncycastleX509X509StreamParser *)getInstanceWithNSString:(NSString *)type
                                                       withNSString:(NSString *)provider {
  return LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_withNSString_(type, provider);
}

+ (LibOrgBouncycastleX509X509StreamParser *)getInstanceWithNSString:(NSString *)type
                                           withJavaSecurityProvider:(JavaSecurityProvider *)provider {
  return LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_withJavaSecurityProvider_(type, provider);
}

+ (LibOrgBouncycastleX509X509StreamParser *)createParserWithLibOrgBouncycastleX509X509Util_Implementation:(LibOrgBouncycastleX509X509Util_Implementation *)impl {
  return LibOrgBouncycastleX509X509StreamParser_createParserWithLibOrgBouncycastleX509X509Util_Implementation_(impl);
}

- (instancetype)initWithJavaSecurityProvider:(JavaSecurityProvider *)provider
withLibOrgBouncycastleX509X509StreamParserSpi:(LibOrgBouncycastleX509X509StreamParserSpi *)spi {
  LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(self, provider, spi);
  return self;
}

- (JavaSecurityProvider *)getProvider {
  return _provider_;
}

- (void)init__WithJavaIoInputStream:(JavaIoInputStream *)stream {
  [((LibOrgBouncycastleX509X509StreamParserSpi *) nil_chk(_spi_)) engineInitWithJavaIoInputStream:stream];
}

- (void)init__WithByteArray:(IOSByteArray *)data {
  [((LibOrgBouncycastleX509X509StreamParserSpi *) nil_chk(_spi_)) engineInitWithJavaIoInputStream:new_JavaIoByteArrayInputStream_initWithByteArray_(data)];
}

- (id)read {
  return [((LibOrgBouncycastleX509X509StreamParserSpi *) nil_chk(_spi_)) engineRead];
}

- (id<JavaUtilCollection>)readAll {
  return [((LibOrgBouncycastleX509X509StreamParserSpi *) nil_chk(_spi_)) engineReadAll];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleX509X509StreamParser;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509StreamParser;", 0x9, 0, 3, 4, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509StreamParser;", 0x9, 0, 5, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509X509StreamParser;", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 8, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithNSString:);
  methods[1].selector = @selector(getInstanceWithNSString:withNSString:);
  methods[2].selector = @selector(getInstanceWithNSString:withJavaSecurityProvider:);
  methods[3].selector = @selector(createParserWithLibOrgBouncycastleX509X509Util_Implementation:);
  methods[4].selector = @selector(initWithJavaSecurityProvider:withLibOrgBouncycastleX509X509StreamParserSpi:);
  methods[5].selector = @selector(getProvider);
  methods[6].selector = @selector(init__WithJavaIoInputStream:);
  methods[7].selector = @selector(init__WithByteArray:);
  methods[8].selector = @selector(read);
  methods[9].selector = @selector(readAll);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_provider_", "LJavaSecurityProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_spi_", "LLibOrgBouncycastleX509X509StreamParserSpi;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSString;", "LLibOrgBouncycastleX509NoSuchParserException;", "LNSString;LNSString;", "LLibOrgBouncycastleX509NoSuchParserException;LJavaSecurityNoSuchProviderException;", "LNSString;LJavaSecurityProvider;", "createParser", "LLibOrgBouncycastleX509X509Util_Implementation;", "LJavaSecurityProvider;LLibOrgBouncycastleX509X509StreamParserSpi;", "init", "LJavaIoInputStream;", "[B", "LLibOrgBouncycastleX509UtilX509StreamParsingException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509StreamParser = { "X509StreamParser", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509StreamParser;
}

@end

LibOrgBouncycastleX509X509StreamParser *LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_(NSString *type) {
  LibOrgBouncycastleX509X509StreamParser_initialize();
  @try {
    LibOrgBouncycastleX509X509Util_Implementation *impl = LibOrgBouncycastleX509X509Util_getImplementationWithNSString_withNSString_(@"X509UtilX509StreamParser", type);
    return LibOrgBouncycastleX509X509StreamParser_createParserWithLibOrgBouncycastleX509X509Util_Implementation_(impl);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_LibOrgBouncycastleX509NoSuchParserException_initWithNSString_([e getMessage]);
  }
}

LibOrgBouncycastleX509X509StreamParser *LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_withNSString_(NSString *type, NSString *provider) {
  LibOrgBouncycastleX509X509StreamParser_initialize();
  return LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_withJavaSecurityProvider_(type, LibOrgBouncycastleX509X509Util_getProviderWithNSString_(provider));
}

LibOrgBouncycastleX509X509StreamParser *LibOrgBouncycastleX509X509StreamParser_getInstanceWithNSString_withJavaSecurityProvider_(NSString *type, JavaSecurityProvider *provider) {
  LibOrgBouncycastleX509X509StreamParser_initialize();
  @try {
    LibOrgBouncycastleX509X509Util_Implementation *impl = LibOrgBouncycastleX509X509Util_getImplementationWithNSString_withNSString_withJavaSecurityProvider_(@"X509UtilX509StreamParser", type, provider);
    return LibOrgBouncycastleX509X509StreamParser_createParserWithLibOrgBouncycastleX509X509Util_Implementation_(impl);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_LibOrgBouncycastleX509NoSuchParserException_initWithNSString_([e getMessage]);
  }
}

LibOrgBouncycastleX509X509StreamParser *LibOrgBouncycastleX509X509StreamParser_createParserWithLibOrgBouncycastleX509X509Util_Implementation_(LibOrgBouncycastleX509X509Util_Implementation *impl) {
  LibOrgBouncycastleX509X509StreamParser_initialize();
  LibOrgBouncycastleX509X509StreamParserSpi *spi = (LibOrgBouncycastleX509X509StreamParserSpi *) cast_chk([((LibOrgBouncycastleX509X509Util_Implementation *) nil_chk(impl)) getEngine], [LibOrgBouncycastleX509X509StreamParserSpi class]);
  return new_LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_([impl getProvider], spi);
}

void LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(LibOrgBouncycastleX509X509StreamParser *self, JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi) {
  NSObject_init(self);
  self->_provider_ = provider;
  self->_spi_ = spi;
}

LibOrgBouncycastleX509X509StreamParser *new_LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509X509StreamParser, initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_, provider, spi)
}

LibOrgBouncycastleX509X509StreamParser *create_LibOrgBouncycastleX509X509StreamParser_initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_(JavaSecurityProvider *provider, LibOrgBouncycastleX509X509StreamParserSpi *spi) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509X509StreamParser, initWithJavaSecurityProvider_withLibOrgBouncycastleX509X509StreamParserSpi_, provider, spi)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509StreamParser)
