//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/qtesla/QTESLAKeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "KeyGenerationParameters.h"
#include "QTESLAKeyGenerationParameters.h"
#include "QTESLASecurityCategory.h"
#include "java/security/SecureRandom.h"

@interface LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters () {
 @public
  jint securityCategory_;
}

@end

@implementation LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters

- (instancetype)initWithInt:(jint)securityCategory
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters_initWithInt_withJavaSecuritySecureRandom_(self, securityCategory, random);
  return self;
}

- (jint)getSecurityCategory {
  return securityCategory_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withJavaSecuritySecureRandom:);
  methods[1].selector = @selector(getSecurityCategory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "securityCategory_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILJavaSecuritySecureRandom;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters = { "QTESLAKeyGenerationParameters", "lib.org.bouncycastle.pqc.crypto.qtesla", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters;
}

@end

void LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters_initWithInt_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters *self, jint securityCategory, JavaSecuritySecureRandom *random) {
  LibOrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, -1);
  LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPrivateSizeWithInt_(securityCategory);
  self->securityCategory_ = securityCategory;
}

LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters_initWithInt_withJavaSecuritySecureRandom_(jint securityCategory, JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters, initWithInt_withJavaSecuritySecureRandom_, securityCategory, random)
}

LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters_initWithInt_withJavaSecuritySecureRandom_(jint securityCategory, JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters, initWithInt_withJavaSecuritySecureRandom_, securityCategory, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoQteslaQTESLAKeyGenerationParameters)
