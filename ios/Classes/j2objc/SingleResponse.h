//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/SingleResponse.java
//

#ifndef SingleResponse_H
#define SingleResponse_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus;
@class LibOrgBouncycastleAsn1OcspOcspCertID;
@class LibOrgBouncycastleAsn1X509Extensions;
@class LibOrgBouncycastleAsn1X509X509Extensions;

@interface LibOrgBouncycastleAsn1OcspSingleResponse : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1OcspOcspCertID:(LibOrgBouncycastleAsn1OcspOcspCertID *)certID
                      withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus:(LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *)certStatus
                         withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)thisUpdate
                         withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)nextUpdate
                              withLibOrgBouncycastleAsn1X509Extensions:(LibOrgBouncycastleAsn1X509Extensions *)singleExtensions;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1OcspOcspCertID:(LibOrgBouncycastleAsn1OcspOcspCertID *)certID
                      withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus:(LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *)certStatus
                         withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)thisUpdate
                         withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)nextUpdate
                          withLibOrgBouncycastleAsn1X509X509Extensions:(LibOrgBouncycastleAsn1X509X509Extensions *)singleExtensions;

- (LibOrgBouncycastleAsn1OcspOcspCertID *)getCertID;

- (LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *)getCertStatus;

+ (LibOrgBouncycastleAsn1OcspSingleResponse *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                        withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspSingleResponse *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getNextUpdate;

- (LibOrgBouncycastleAsn1X509Extensions *)getSingleExtensions;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getThisUpdate;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspSingleResponse)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509X509Extensions_(LibOrgBouncycastleAsn1OcspSingleResponse *self, LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509X509Extensions *singleExtensions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *new_LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509X509Extensions *singleExtensions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *create_LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509X509Extensions *singleExtensions);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspSingleResponse *self, LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509Extensions *singleExtensions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *new_LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509Extensions *singleExtensions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *create_LibOrgBouncycastleAsn1OcspSingleResponse_initWithLibOrgBouncycastleAsn1OcspOcspCertID_withLibOrgBouncycastleAsn1OcspAsn1OcspCertStatus_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509Extensions_(LibOrgBouncycastleAsn1OcspOcspCertID *certID, LibOrgBouncycastleAsn1OcspAsn1OcspCertStatus *certStatus, LibOrgBouncycastleAsn1ASN1GeneralizedTime *thisUpdate, LibOrgBouncycastleAsn1ASN1GeneralizedTime *nextUpdate, LibOrgBouncycastleAsn1X509Extensions *singleExtensions);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *LibOrgBouncycastleAsn1OcspSingleResponse_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspSingleResponse *LibOrgBouncycastleAsn1OcspSingleResponse_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspSingleResponse)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SingleResponse_H
