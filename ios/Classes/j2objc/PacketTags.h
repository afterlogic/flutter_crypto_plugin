//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/PacketTags.java
//

#ifndef PacketTags_H
#define PacketTags_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleBcpgPacketTags < JavaObject >

@end

@interface LibOrgBouncycastleBcpgPacketTags : NSObject
@property (readonly, class) jint RESERVED NS_SWIFT_NAME(RESERVED);
@property (readonly, class) jint PUBLIC_KEY_ENC_SESSION NS_SWIFT_NAME(PUBLIC_KEY_ENC_SESSION);
@property (readonly, class) jint SIGNATURE NS_SWIFT_NAME(SIGNATURE);
@property (readonly, class) jint SYMMETRIC_KEY_ENC_SESSION NS_SWIFT_NAME(SYMMETRIC_KEY_ENC_SESSION);
@property (readonly, class) jint ONE_PASS_SIGNATURE NS_SWIFT_NAME(ONE_PASS_SIGNATURE);
@property (readonly, class) jint SECRET_KEY NS_SWIFT_NAME(SECRET_KEY);
@property (readonly, class) jint PUBLIC_KEY NS_SWIFT_NAME(PUBLIC_KEY);
@property (readonly, class) jint SECRET_SUBKEY NS_SWIFT_NAME(SECRET_SUBKEY);
@property (readonly, class) jint COMPRESSED_DATA NS_SWIFT_NAME(COMPRESSED_DATA);
@property (readonly, class) jint SYMMETRIC_KEY_ENC NS_SWIFT_NAME(SYMMETRIC_KEY_ENC);
@property (readonly, class) jint MARKER NS_SWIFT_NAME(MARKER);
@property (readonly, class) jint LITERAL_DATA NS_SWIFT_NAME(LITERAL_DATA);
@property (readonly, class) jint TRUST NS_SWIFT_NAME(TRUST);
@property (readonly, class) jint USER_ID NS_SWIFT_NAME(USER_ID);
@property (readonly, class) jint PUBLIC_SUBKEY NS_SWIFT_NAME(PUBLIC_SUBKEY);
@property (readonly, class) jint USER_ATTRIBUTE NS_SWIFT_NAME(USER_ATTRIBUTE);
@property (readonly, class) jint SYM_ENC_INTEGRITY_PRO NS_SWIFT_NAME(SYM_ENC_INTEGRITY_PRO);
@property (readonly, class) jint MOD_DETECTION_CODE NS_SWIFT_NAME(MOD_DETECTION_CODE);
@property (readonly, class) jint EXPERIMENTAL_1 NS_SWIFT_NAME(EXPERIMENTAL_1);
@property (readonly, class) jint EXPERIMENTAL_2 NS_SWIFT_NAME(EXPERIMENTAL_2);
@property (readonly, class) jint EXPERIMENTAL_3 NS_SWIFT_NAME(EXPERIMENTAL_3);
@property (readonly, class) jint EXPERIMENTAL_4 NS_SWIFT_NAME(EXPERIMENTAL_4);

+ (jint)RESERVED;

+ (jint)PUBLIC_KEY_ENC_SESSION;

+ (jint)SIGNATURE;

+ (jint)SYMMETRIC_KEY_ENC_SESSION;

+ (jint)ONE_PASS_SIGNATURE;

+ (jint)SECRET_KEY;

+ (jint)PUBLIC_KEY;

+ (jint)SECRET_SUBKEY;

+ (jint)COMPRESSED_DATA;

+ (jint)SYMMETRIC_KEY_ENC;

+ (jint)MARKER;

+ (jint)LITERAL_DATA;

+ (jint)TRUST;

+ (jint)USER_ID;

+ (jint)PUBLIC_SUBKEY;

+ (jint)USER_ATTRIBUTE;

+ (jint)SYM_ENC_INTEGRITY_PRO;

+ (jint)MOD_DETECTION_CODE;

+ (jint)EXPERIMENTAL_1;

+ (jint)EXPERIMENTAL_2;

+ (jint)EXPERIMENTAL_3;

+ (jint)EXPERIMENTAL_4;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgPacketTags)

inline jint LibOrgBouncycastleBcpgPacketTags_get_RESERVED(void);
#define LibOrgBouncycastleBcpgPacketTags_RESERVED 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, RESERVED, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_PUBLIC_KEY_ENC_SESSION(void);
#define LibOrgBouncycastleBcpgPacketTags_PUBLIC_KEY_ENC_SESSION 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, PUBLIC_KEY_ENC_SESSION, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SIGNATURE(void);
#define LibOrgBouncycastleBcpgPacketTags_SIGNATURE 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SIGNATURE, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SYMMETRIC_KEY_ENC_SESSION(void);
#define LibOrgBouncycastleBcpgPacketTags_SYMMETRIC_KEY_ENC_SESSION 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SYMMETRIC_KEY_ENC_SESSION, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_ONE_PASS_SIGNATURE(void);
#define LibOrgBouncycastleBcpgPacketTags_ONE_PASS_SIGNATURE 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, ONE_PASS_SIGNATURE, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SECRET_KEY(void);
#define LibOrgBouncycastleBcpgPacketTags_SECRET_KEY 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SECRET_KEY, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_PUBLIC_KEY(void);
#define LibOrgBouncycastleBcpgPacketTags_PUBLIC_KEY 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, PUBLIC_KEY, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SECRET_SUBKEY(void);
#define LibOrgBouncycastleBcpgPacketTags_SECRET_SUBKEY 7
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SECRET_SUBKEY, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_COMPRESSED_DATA(void);
#define LibOrgBouncycastleBcpgPacketTags_COMPRESSED_DATA 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, COMPRESSED_DATA, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SYMMETRIC_KEY_ENC(void);
#define LibOrgBouncycastleBcpgPacketTags_SYMMETRIC_KEY_ENC 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SYMMETRIC_KEY_ENC, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_MARKER(void);
#define LibOrgBouncycastleBcpgPacketTags_MARKER 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, MARKER, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_LITERAL_DATA(void);
#define LibOrgBouncycastleBcpgPacketTags_LITERAL_DATA 11
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, LITERAL_DATA, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_TRUST(void);
#define LibOrgBouncycastleBcpgPacketTags_TRUST 12
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, TRUST, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_USER_ID(void);
#define LibOrgBouncycastleBcpgPacketTags_USER_ID 13
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, USER_ID, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_PUBLIC_SUBKEY(void);
#define LibOrgBouncycastleBcpgPacketTags_PUBLIC_SUBKEY 14
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, PUBLIC_SUBKEY, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_USER_ATTRIBUTE(void);
#define LibOrgBouncycastleBcpgPacketTags_USER_ATTRIBUTE 17
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, USER_ATTRIBUTE, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_SYM_ENC_INTEGRITY_PRO(void);
#define LibOrgBouncycastleBcpgPacketTags_SYM_ENC_INTEGRITY_PRO 18
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, SYM_ENC_INTEGRITY_PRO, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_MOD_DETECTION_CODE(void);
#define LibOrgBouncycastleBcpgPacketTags_MOD_DETECTION_CODE 19
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, MOD_DETECTION_CODE, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_EXPERIMENTAL_1(void);
#define LibOrgBouncycastleBcpgPacketTags_EXPERIMENTAL_1 60
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, EXPERIMENTAL_1, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_EXPERIMENTAL_2(void);
#define LibOrgBouncycastleBcpgPacketTags_EXPERIMENTAL_2 61
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, EXPERIMENTAL_2, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_EXPERIMENTAL_3(void);
#define LibOrgBouncycastleBcpgPacketTags_EXPERIMENTAL_3 62
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, EXPERIMENTAL_3, jint)

inline jint LibOrgBouncycastleBcpgPacketTags_get_EXPERIMENTAL_4(void);
#define LibOrgBouncycastleBcpgPacketTags_EXPERIMENTAL_4 63
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPacketTags, EXPERIMENTAL_4, jint)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgPacketTags)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PacketTags_H
