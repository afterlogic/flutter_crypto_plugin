//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPrivateKey.java
//

#ifndef BCNHPrivateKey_H
#define BCNHPrivateKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "NHPrivateKey.h"

@class IOSByteArray;
@class IOSShortArray;
@class LibOrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class LibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey : NSObject < LibOrgBouncycastlePqcJcajceInterfacesNHPrivateKey >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters:(LibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *)params;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (IOSShortArray *)getSecretData;

- (NSUInteger)hash;

#pragma mark Package-Private

- (id<LibOrgBouncycastleCryptoCipherParameters>)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters_(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *self, LibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *new_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters_(LibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *create_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters_(LibOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *new_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey *create_LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCNHPrivateKey_H
