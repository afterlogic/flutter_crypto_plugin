//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ECPublicBCPGKey.java
//

#ifndef ECPublicBCPGKey_H
#define ECPublicBCPGKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCPGKey.h"
#include "BCPGObject.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleBcpgBCPGInputStream;
@class LibOrgBouncycastleBcpgBCPGOutputStream;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleBcpgECPublicBCPGKey : LibOrgBouncycastleBcpgBCPGObject < LibOrgBouncycastleBcpgBCPGKey > {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid_;
  JavaMathBigInteger *point_;
}

#pragma mark Public

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getCurveOID;

- (IOSByteArray *)getEncoded;

- (JavaMathBigInteger *)getEncodedPoint;

- (NSString *)getFormat;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                      withJavaMathBigInteger:(JavaMathBigInteger *)encodedPoint;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                         withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)point;

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg;

+ (IOSByteArray *)readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgECPublicBCPGKey)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgECPublicBCPGKey, oid_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgECPublicBCPGKey, point_, JavaMathBigInteger *)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECPoint_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleMathEcECPoint *point);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, JavaMathBigInteger *encodedPoint);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleBcpgECPublicBCPGKey_readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgECPublicBCPGKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECPublicBCPGKey_H
