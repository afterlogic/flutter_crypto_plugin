//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/JcajcePoly1305.java
//

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "ConfigurableProvider.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "JcajcePoly1305.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac;LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 = { "JcajcePoly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac = { "Mac", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mac)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_KeyGen)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Mac.POLY1305" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_PREFIX, @"$Mac")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.POLY1305" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_PREFIX, @"$KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricJcajcePoly1305_Mappings)
