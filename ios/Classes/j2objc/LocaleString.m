//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/i18n/LocaleString.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LocaleString.h"
#include "LocalizedMessage.h"
#include "java/util/Locale.h"

@implementation LibOrgBouncycastleI18nLocaleString

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_ {
  LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(self, resource, id_);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding {
  LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(self, resource, id_, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding
               withNSObjectArray:(IOSObjectArray *)arguments {
  LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(self, resource, id_, encoding, arguments);
  return self;
}

- (NSString *)getLocaleStringWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [self getEntryWithNSString:nil withJavaUtilLocale:locale withJavaUtilTimeZone:nil];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[2].selector = @selector(initWithNSString:withNSString:withNSString:withNSObjectArray:);
  methods[3].selector = @selector(getLocaleStringWithJavaUtilLocale:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LNSString;", "LNSString;LNSString;LNSString;", "LJavaLangNullPointerException;LJavaIoUnsupportedEncodingException;", "LNSString;LNSString;LNSString;[LNSObject;", "getLocaleString", "LJavaUtilLocale;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleI18nLocaleString = { "LocaleString", "lib.org.bouncycastle.i18n", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleI18nLocaleString;
}

@end

void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_) {
  LibOrgBouncycastleI18nLocalizedMessage_initWithNSString_withNSString_(self, resource, id_);
}

LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_, resource, id_)
}

LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_, resource, id_)
}

void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_, NSString *encoding) {
  LibOrgBouncycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_(self, resource, id_, encoding);
}

LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  LibOrgBouncycastleI18nLocalizedMessage_initWithNSString_withNSString_withNSString_withNSObjectArray_(self, resource, id_, encoding, arguments);
}

LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nLocaleString, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleI18nLocaleString)
