//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/io/pem/PemObject.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PemObject.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface LibOrgBouncycastleUtilIoPemPemObject () {
 @public
  NSString *type_;
  id<JavaUtilList> headers_;
  IOSByteArray *content_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoPemPemObject, type_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoPemPemObject, headers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleUtilIoPemPemObject, content_, IOSByteArray *)

inline id<JavaUtilList> LibOrgBouncycastleUtilIoPemPemObject_get_EMPTY_LIST(void);
static id<JavaUtilList> LibOrgBouncycastleUtilIoPemPemObject_EMPTY_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleUtilIoPemPemObject, EMPTY_LIST, id<JavaUtilList>)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleUtilIoPemPemObject)

@implementation LibOrgBouncycastleUtilIoPemPemObject

- (instancetype)initWithNSString:(NSString *)type
                   withByteArray:(IOSByteArray *)content {
  LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withByteArray_(self, type, content);
  return self;
}

- (instancetype)initWithNSString:(NSString *)type
                withJavaUtilList:(id<JavaUtilList>)headers
                   withByteArray:(IOSByteArray *)content {
  LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withJavaUtilList_withByteArray_(self, type, headers, content);
  return self;
}

- (NSString *)getType {
  return type_;
}

- (id<JavaUtilList>)getHeaders {
  return headers_;
}

- (IOSByteArray *)getContent {
  return content_;
}

- (LibOrgBouncycastleUtilIoPemPemObject *)generate {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleUtilIoPemPemObject;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withByteArray:);
  methods[1].selector = @selector(initWithNSString:withJavaUtilList:withByteArray:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getHeaders);
  methods[4].selector = @selector(getContent);
  methods[5].selector = @selector(generate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_LIST", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "type_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "headers_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "content_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[B", "LNSString;LJavaUtilList;[B", "LLibOrgBouncycastleUtilIoPemPemGenerationException;", &LibOrgBouncycastleUtilIoPemPemObject_EMPTY_LIST };
  static const J2ObjcClassInfo _LibOrgBouncycastleUtilIoPemPemObject = { "PemObject", "lib.org.bouncycastle.util.io.pem", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleUtilIoPemPemObject;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleUtilIoPemPemObject class]) {
    LibOrgBouncycastleUtilIoPemPemObject_EMPTY_LIST = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_init());
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleUtilIoPemPemObject)
  }
}

@end

void LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withByteArray_(LibOrgBouncycastleUtilIoPemPemObject *self, NSString *type, IOSByteArray *content) {
  LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withJavaUtilList_withByteArray_(self, type, LibOrgBouncycastleUtilIoPemPemObject_EMPTY_LIST, content);
}

LibOrgBouncycastleUtilIoPemPemObject *new_LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withByteArray_(NSString *type, IOSByteArray *content) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilIoPemPemObject, initWithNSString_withByteArray_, type, content)
}

LibOrgBouncycastleUtilIoPemPemObject *create_LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withByteArray_(NSString *type, IOSByteArray *content) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilIoPemPemObject, initWithNSString_withByteArray_, type, content)
}

void LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withJavaUtilList_withByteArray_(LibOrgBouncycastleUtilIoPemPemObject *self, NSString *type, id<JavaUtilList> headers, IOSByteArray *content) {
  NSObject_init(self);
  self->type_ = type;
  self->headers_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(headers);
  self->content_ = content;
}

LibOrgBouncycastleUtilIoPemPemObject *new_LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withJavaUtilList_withByteArray_(NSString *type, id<JavaUtilList> headers, IOSByteArray *content) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilIoPemPemObject, initWithNSString_withJavaUtilList_withByteArray_, type, headers, content)
}

LibOrgBouncycastleUtilIoPemPemObject *create_LibOrgBouncycastleUtilIoPemPemObject_initWithNSString_withJavaUtilList_withByteArray_(NSString *type, id<JavaUtilList> headers, IOSByteArray *content) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilIoPemPemObject, initWithNSString_withJavaUtilList_withByteArray_, type, headers, content)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleUtilIoPemPemObject)
