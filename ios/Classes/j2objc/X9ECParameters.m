//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x9/X9ECParameters.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "Arrays.h"
#include "DERSequence.h"
#include "ECAlgorithms.h"
#include "ECCurve.h"
#include "ECPoint.h"
#include "FiniteField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Polynomial.h"
#include "PolynomialExtensionField.h"
#include "X9Curve.h"
#include "X9ECParameters.h"
#include "X9ECPoint.h"
#include "X9FieldID.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1X9X9ECParameters () {
 @public
  LibOrgBouncycastleAsn1X9X9FieldID *fieldID_;
  LibOrgBouncycastleMathEcECCurve *curve_;
  LibOrgBouncycastleAsn1X9X9ECPoint *g_;
  JavaMathBigInteger *n_;
  JavaMathBigInteger *h_;
  IOSByteArray *seed_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, fieldID_, LibOrgBouncycastleAsn1X9X9FieldID *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, curve_, LibOrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, g_, LibOrgBouncycastleAsn1X9X9ECPoint *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, n_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, h_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X9X9ECParameters, seed_, IOSByteArray *)

inline JavaMathBigInteger *LibOrgBouncycastleAsn1X9X9ECParameters_get_ONE(void);
static JavaMathBigInteger *LibOrgBouncycastleAsn1X9X9ECParameters_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X9X9ECParameters, ONE, JavaMathBigInteger *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1X9X9ECParameters)

@implementation LibOrgBouncycastleAsn1X9X9ECParameters

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                    withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                                 withJavaMathBigInteger:(JavaMathBigInteger *)n {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(self, curve, g, n);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                  withLibOrgBouncycastleAsn1X9X9ECPoint:(LibOrgBouncycastleAsn1X9X9ECPoint *)g
                                 withJavaMathBigInteger:(JavaMathBigInteger *)n
                                 withJavaMathBigInteger:(JavaMathBigInteger *)h {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, curve, g, n, h);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                    withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                                 withJavaMathBigInteger:(JavaMathBigInteger *)n
                                 withJavaMathBigInteger:(JavaMathBigInteger *)h {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, curve, g, n, h);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                    withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                                 withJavaMathBigInteger:(JavaMathBigInteger *)n
                                 withJavaMathBigInteger:(JavaMathBigInteger *)h
                                          withByteArray:(IOSByteArray *)seed {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, h, seed);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                  withLibOrgBouncycastleAsn1X9X9ECPoint:(LibOrgBouncycastleAsn1X9X9ECPoint *)g
                                 withJavaMathBigInteger:(JavaMathBigInteger *)n
                                 withJavaMathBigInteger:(JavaMathBigInteger *)h
                                          withByteArray:(IOSByteArray *)seed {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, h, seed);
  return self;
}

- (LibOrgBouncycastleMathEcECCurve *)getCurve {
  return curve_;
}

- (LibOrgBouncycastleMathEcECPoint *)getG {
  return [((LibOrgBouncycastleAsn1X9X9ECPoint *) nil_chk(g_)) getPoint];
}

- (JavaMathBigInteger *)getN {
  return n_;
}

- (JavaMathBigInteger *)getH {
  return h_;
}

- (IOSByteArray *)getSeed {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(seed_);
}

- (LibOrgBouncycastleAsn1X9X9Curve *)getCurveEntry {
  return new_LibOrgBouncycastleAsn1X9X9Curve_initWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve_, seed_);
}

- (LibOrgBouncycastleAsn1X9X9FieldID *)getFieldIDEntry {
  return fieldID_;
}

- (LibOrgBouncycastleAsn1X9X9ECPoint *)getBaseEntry {
  return g_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(LibOrgBouncycastleAsn1X9X9ECParameters_ONE)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:fieldID_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1X9X9Curve_initWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve_, seed_)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:g_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(n_)];
  if (h_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(h_)];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECCurve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9Curve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9FieldID;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X9X9ECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleAsn1X9X9ECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[5].selector = @selector(initWithLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[6].selector = @selector(initWithLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleAsn1X9X9ECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[7].selector = @selector(getCurve);
  methods[8].selector = @selector(getG);
  methods[9].selector = @selector(getN);
  methods[10].selector = @selector(getH);
  methods[11].selector = @selector(getSeed);
  methods[12].selector = @selector(getCurveEntry);
  methods[13].selector = @selector(getFieldIDEntry);
  methods[14].selector = @selector(getBaseEntry);
  methods[15].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "fieldID_", "LLibOrgBouncycastleAsn1X9X9FieldID;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "curve_", "LLibOrgBouncycastleMathEcECCurve;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "g_", "LLibOrgBouncycastleAsn1X9X9ECPoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "h_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;", "LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleAsn1X9X9ECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B", "LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleAsn1X9X9ECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B", &LibOrgBouncycastleAsn1X9X9ECParameters_ONE };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X9X9ECParameters = { "X9ECParameters", "lib.org.bouncycastle.asn1.x9", ptrTable, methods, fields, 7, 0x1, 16, 7, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X9X9ECParameters;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1X9X9ECParameters class]) {
    LibOrgBouncycastleAsn1X9X9ECParameters_ONE = JavaMathBigInteger_valueOfWithLong_(1);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1X9X9ECParameters)
  }
}

@end

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (!([[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0] isKindOfClass:[LibOrgBouncycastleAsn1ASN1Integer class]]) || ![((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:0], [LibOrgBouncycastleAsn1ASN1Integer class])))) getValue])) isEqual:LibOrgBouncycastleAsn1X9X9ECParameters_ONE]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"bad version in X9ECParameters");
  }
  self->n_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:4], [LibOrgBouncycastleAsn1ASN1Integer class])))) getValue];
  if ([seq size] == 6) {
    self->h_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:5], [LibOrgBouncycastleAsn1ASN1Integer class])))) getValue];
  }
  LibOrgBouncycastleAsn1X9X9Curve *x9c = new_LibOrgBouncycastleAsn1X9X9Curve_initWithLibOrgBouncycastleAsn1X9X9FieldID_withJavaMathBigInteger_withJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X9X9FieldID_getInstanceWithId_([seq getObjectAtWithInt:1]), self->n_, self->h_, LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:2]));
  self->curve_ = [x9c getCurve];
  id p = [seq getObjectAtWithInt:3];
  if ([p isKindOfClass:[LibOrgBouncycastleAsn1X9X9ECPoint class]]) {
    self->g_ = (LibOrgBouncycastleAsn1X9X9ECPoint *) p;
  }
  else {
    self->g_ = new_LibOrgBouncycastleAsn1X9X9ECPoint_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1ASN1OctetString_(self->curve_, (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk(p, [LibOrgBouncycastleAsn1ASN1OctetString class]));
  }
  self->seed_ = [x9c getSeed];
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1X9X9ECParameters_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1X9X9ECParameters class]]) {
    return (LibOrgBouncycastleAsn1X9X9ECParameters *) obj;
  }
  if (obj != nil) {
    return new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, nil, nil);
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, curve, g, n)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, curve, g, n)
}

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, h, nil);
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, h, nil);
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, new_LibOrgBouncycastleAsn1X9X9ECPoint_initWithLibOrgBouncycastleMathEcECPoint_(g), n, h, seed);
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}

void LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleAsn1X9X9ECParameters *self, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->curve_ = curve;
  self->g_ = g;
  self->n_ = n;
  self->h_ = h;
  self->seed_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(seed);
  if (LibOrgBouncycastleMathEcECAlgorithms_isFpCurveWithLibOrgBouncycastleMathEcECCurve_(curve)) {
    self->fieldID_ = new_LibOrgBouncycastleAsn1X9X9FieldID_initWithJavaMathBigInteger_([((id<LibOrgBouncycastleMathFieldFiniteField>) nil_chk([((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField])) getCharacteristic]);
  }
  else if (LibOrgBouncycastleMathEcECAlgorithms_isF2mCurveWithLibOrgBouncycastleMathEcECCurve_(curve)) {
    id<LibOrgBouncycastleMathFieldPolynomialExtensionField> field = (id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) cast_check([((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField], LibOrgBouncycastleMathFieldPolynomialExtensionField_class_());
    IOSIntArray *exponents = [((id<LibOrgBouncycastleMathFieldPolynomial>) nil_chk([((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(field)) getMinimalPolynomial])) getExponentsPresent];
    if (((IOSIntArray *) nil_chk(exponents))->size_ == 3) {
      self->fieldID_ = new_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_(IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 1));
    }
    else if (exponents->size_ == 5) {
      self->fieldID_ = new_LibOrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_withInt_withInt_(IOSIntArray_Get(exponents, 4), IOSIntArray_Get(exponents, 1), IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 3));
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Only trinomial and pentomial curves are supported");
    }
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'curve' is of an unsupported type");
  }
}

LibOrgBouncycastleAsn1X9X9ECParameters *new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}

LibOrgBouncycastleAsn1X9X9ECParameters *create_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X9X9ECParameters, initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X9X9ECParameters)
