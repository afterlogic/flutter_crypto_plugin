//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/signers/PlainDSAEncoding.java
//

#ifndef PlainDSAEncoding_H
#define PlainDSAEncoding_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DSAEncoding.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;

@interface LibOrgBouncycastleCryptoSignersPlainDSAEncoding : NSObject < LibOrgBouncycastleCryptoSignersDSAEncoding >
@property (readonly, class) LibOrgBouncycastleCryptoSignersPlainDSAEncoding *INSTANCE NS_SWIFT_NAME(INSTANCE);

+ (LibOrgBouncycastleCryptoSignersPlainDSAEncoding *)INSTANCE;

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSObjectArray *)decodeWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                   withByteArray:(IOSByteArray *)encoding;

- (IOSByteArray *)encodeWithJavaMathBigInteger:(JavaMathBigInteger *)n
                        withJavaMathBigInteger:(JavaMathBigInteger *)r
                        withJavaMathBigInteger:(JavaMathBigInteger *)s;

#pragma mark Protected

- (JavaMathBigInteger *)checkValueWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                  withJavaMathBigInteger:(JavaMathBigInteger *)x;

- (JavaMathBigInteger *)decodeValueWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                            withByteArray:(IOSByteArray *)buf
                                                  withInt:(jint)off
                                                  withInt:(jint)len;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoSignersPlainDSAEncoding)

inline LibOrgBouncycastleCryptoSignersPlainDSAEncoding *LibOrgBouncycastleCryptoSignersPlainDSAEncoding_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleCryptoSignersPlainDSAEncoding *LibOrgBouncycastleCryptoSignersPlainDSAEncoding_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE, LibOrgBouncycastleCryptoSignersPlainDSAEncoding *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoSignersPlainDSAEncoding_init(LibOrgBouncycastleCryptoSignersPlainDSAEncoding *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoSignersPlainDSAEncoding *new_LibOrgBouncycastleCryptoSignersPlainDSAEncoding_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoSignersPlainDSAEncoding *create_LibOrgBouncycastleCryptoSignersPlainDSAEncoding_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoSignersPlainDSAEncoding)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PlainDSAEncoding_H
