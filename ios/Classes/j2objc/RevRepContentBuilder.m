//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/RevRepContentBuilder.java
//

#include "ASN1EncodableVector.h"
#include "CertId.h"
#include "CertificateList.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "J2ObjC_source.h"
#include "PKIStatusInfo.h"
#include "RevRepContent.h"
#include "RevRepContentBuilder.h"
#include "java/lang/IllegalStateException.h"

@interface LibOrgBouncycastleAsn1CmpRevRepContentBuilder () {
 @public
  LibOrgBouncycastleAsn1ASN1EncodableVector *status_;
  LibOrgBouncycastleAsn1ASN1EncodableVector *revCerts_;
  LibOrgBouncycastleAsn1ASN1EncodableVector *crls_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContentBuilder, status_, LibOrgBouncycastleAsn1ASN1EncodableVector *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContentBuilder, revCerts_, LibOrgBouncycastleAsn1ASN1EncodableVector *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContentBuilder, crls_, LibOrgBouncycastleAsn1ASN1EncodableVector *)

@implementation LibOrgBouncycastleAsn1CmpRevRepContentBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1CmpRevRepContentBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastleAsn1CmpRevRepContentBuilder *)addWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)status {
  [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->status_)) addWithLibOrgBouncycastleAsn1ASN1Encodable:status];
  return self;
}

- (LibOrgBouncycastleAsn1CmpRevRepContentBuilder *)addWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)status
                                                            withLibOrgBouncycastleAsn1CrmfCertId:(LibOrgBouncycastleAsn1CrmfCertId *)certId {
  if ([((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->status_)) size] != [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->revCerts_)) size]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"status and revCerts sequence must be in common order");
  }
  [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->status_)) addWithLibOrgBouncycastleAsn1ASN1Encodable:status];
  [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->revCerts_)) addWithLibOrgBouncycastleAsn1ASN1Encodable:certId];
  return self;
}

- (LibOrgBouncycastleAsn1CmpRevRepContentBuilder *)addCrlWithLibOrgBouncycastleAsn1X509CertificateList:(LibOrgBouncycastleAsn1X509CertificateList *)crl {
  [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(self->crls_)) addWithLibOrgBouncycastleAsn1ASN1Encodable:crl];
  return self;
}

- (LibOrgBouncycastleAsn1CmpRevRepContent *)build {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(status_)];
  if ([((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(revCerts_)) size] != 0) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 0, new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(revCerts_))];
  }
  if ([((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(crls_)) size] != 0) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 1, new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(crls_))];
  }
  return LibOrgBouncycastleAsn1CmpRevRepContent_getInstanceWithId_(new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpRevRepContentBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpRevRepContentBuilder;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpRevRepContentBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpRevRepContent;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:);
  methods[2].selector = @selector(addWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:withLibOrgBouncycastleAsn1CrmfCertId:);
  methods[3].selector = @selector(addCrlWithLibOrgBouncycastleAsn1X509CertificateList:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "status_", "LLibOrgBouncycastleAsn1ASN1EncodableVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "revCerts_", "LLibOrgBouncycastleAsn1ASN1EncodableVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crls_", "LLibOrgBouncycastleAsn1ASN1EncodableVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;", "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;LLibOrgBouncycastleAsn1CrmfCertId;", "addCrl", "LLibOrgBouncycastleAsn1X509CertificateList;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpRevRepContentBuilder = { "RevRepContentBuilder", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpRevRepContentBuilder;
}

@end

void LibOrgBouncycastleAsn1CmpRevRepContentBuilder_init(LibOrgBouncycastleAsn1CmpRevRepContentBuilder *self) {
  NSObject_init(self);
  self->status_ = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  self->revCerts_ = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  self->crls_ = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
}

LibOrgBouncycastleAsn1CmpRevRepContentBuilder *new_LibOrgBouncycastleAsn1CmpRevRepContentBuilder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpRevRepContentBuilder, init)
}

LibOrgBouncycastleAsn1CmpRevRepContentBuilder *create_LibOrgBouncycastleAsn1CmpRevRepContentBuilder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpRevRepContentBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpRevRepContentBuilder)
