//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIConfirmContent.java
//

#ifndef PKIConfirmContent_H
#define PKIConfirmContent_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CmpPKIConfirmContent : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1CmpPKIConfirmContent *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmpPKIConfirmContent)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIConfirmContent *LibOrgBouncycastleAsn1CmpPKIConfirmContent_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmpPKIConfirmContent_init(LibOrgBouncycastleAsn1CmpPKIConfirmContent *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIConfirmContent *new_LibOrgBouncycastleAsn1CmpPKIConfirmContent_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIConfirmContent *create_LibOrgBouncycastleAsn1CmpPKIConfirmContent_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmpPKIConfirmContent)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIConfirmContent_H
