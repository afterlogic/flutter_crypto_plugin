//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/signers/DSTU4145Signer.java
//

#ifndef DSTU4145Signer_H
#define DSTU4145Signer_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DSAExt.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleMathEcECMultiplier;

@interface LibOrgBouncycastleCryptoSignersDSTU4145Signer : NSObject < LibOrgBouncycastleCryptoDSAExt >

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSObjectArray *)generateSignatureWithByteArray:(IOSByteArray *)message;

- (JavaMathBigInteger *)getOrder;

- (void)init__WithBoolean:(jboolean)forSigning
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                  withJavaMathBigInteger:(JavaMathBigInteger *)r
                  withJavaMathBigInteger:(JavaMathBigInteger *)s;

#pragma mark Protected

- (id<LibOrgBouncycastleMathEcECMultiplier>)createBasePointMultiplier;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoSignersDSTU4145Signer)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoSignersDSTU4145Signer_init(LibOrgBouncycastleCryptoSignersDSTU4145Signer *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoSignersDSTU4145Signer *new_LibOrgBouncycastleCryptoSignersDSTU4145Signer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoSignersDSTU4145Signer *create_LibOrgBouncycastleCryptoSignersDSTU4145Signer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoSignersDSTU4145Signer)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSTU4145Signer_H
