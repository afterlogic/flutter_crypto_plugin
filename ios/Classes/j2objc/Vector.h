//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/math/linearalgebra/Vector.java
//

#ifndef Vector_H
#define Vector_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcMathLinearalgebraPermutation;

@interface LibOrgBouncycastlePqcMathLinearalgebraVector : NSObject {
 @public
  jint length_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (LibOrgBouncycastlePqcMathLinearalgebraVector *)addWithLibOrgBouncycastlePqcMathLinearalgebraVector:(LibOrgBouncycastlePqcMathLinearalgebraVector *)addend;

- (jboolean)isEqual:(id)other;

- (IOSByteArray *)getEncoded;

- (jint)getLength;

- (NSUInteger)hash;

- (jboolean)isZero;

- (LibOrgBouncycastlePqcMathLinearalgebraVector *)multiplyWithLibOrgBouncycastlePqcMathLinearalgebraPermutation:(LibOrgBouncycastlePqcMathLinearalgebraPermutation *)p;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcMathLinearalgebraVector)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcMathLinearalgebraVector_init(LibOrgBouncycastlePqcMathLinearalgebraVector *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcMathLinearalgebraVector)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Vector_H
