//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/MacData.java
//

#ifndef MacData_H
#define MacData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509DigestInfo;

@interface LibOrgBouncycastleAsn1PkcsMacData : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1X509DigestInfo *digInfo_;
  IOSByteArray *salt_;
  JavaMathBigInteger *iterationCount_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509DigestInfo:(LibOrgBouncycastleAsn1X509DigestInfo *)digInfo
                                                         withByteArray:(IOSByteArray *)salt
                                                               withInt:(jint)iterationCount;

+ (LibOrgBouncycastleAsn1PkcsMacData *)getInstanceWithId:(id)obj;

- (JavaMathBigInteger *)getIterationCount;

- (LibOrgBouncycastleAsn1X509DigestInfo *)getMac;

- (IOSByteArray *)getSalt;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1PkcsMacData)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsMacData, digInfo_, LibOrgBouncycastleAsn1X509DigestInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsMacData, salt_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsMacData, iterationCount_, JavaMathBigInteger *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsMacData *LibOrgBouncycastleAsn1PkcsMacData_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1PkcsMacData *self, LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsMacData *new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsMacData *create_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(LibOrgBouncycastleAsn1X509DigestInfo *digInfo, IOSByteArray *salt, jint iterationCount);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsMacData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MacData_H
