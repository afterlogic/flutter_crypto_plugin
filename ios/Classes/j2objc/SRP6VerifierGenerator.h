//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/srp/SRP6VerifierGenerator.java
//

#ifndef SRP6VerifierGenerator_H
#define SRP6VerifierGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsSRP6GroupParameters;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator : NSObject {
 @public
  JavaMathBigInteger *N_;
  JavaMathBigInteger *g_;
  id<LibOrgBouncycastleCryptoDigest> digest_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaMathBigInteger *)generateVerifierWithByteArray:(IOSByteArray *)salt
                                        withByteArray:(IOSByteArray *)identity
                                        withByteArray:(IOSByteArray *)password;

- (void)init__WithJavaMathBigInteger:(JavaMathBigInteger *)N
              withJavaMathBigInteger:(JavaMathBigInteger *)g
  withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest OBJC_METHOD_FAMILY_NONE;

- (void)init__WithLibOrgBouncycastleCryptoParamsSRP6GroupParameters:(LibOrgBouncycastleCryptoParamsSRP6GroupParameters *)group
                                 withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator, N_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator, digest_, id<LibOrgBouncycastleCryptoDigest>)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator_init(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator *new_LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator *create_LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoAgreementSrpSRP6VerifierGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SRP6VerifierGenerator_H
