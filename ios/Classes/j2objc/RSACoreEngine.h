//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/RSACoreEngine.java
//

#ifndef RSACoreEngine_H
#define RSACoreEngine_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoEnginesRSACoreEngine : NSObject

#pragma mark Public

- (JavaMathBigInteger *)convertInputWithByteArray:(IOSByteArray *)inArg
                                          withInt:(jint)inOff
                                          withInt:(jint)inLen;

- (IOSByteArray *)convertOutputWithJavaMathBigInteger:(JavaMathBigInteger *)result;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (JavaMathBigInteger *)processBlockWithJavaMathBigInteger:(JavaMathBigInteger *)input;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEnginesRSACoreEngine)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesRSACoreEngine_init(LibOrgBouncycastleCryptoEnginesRSACoreEngine *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesRSACoreEngine *new_LibOrgBouncycastleCryptoEnginesRSACoreEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesRSACoreEngine *create_LibOrgBouncycastleCryptoEnginesRSACoreEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEnginesRSACoreEngine)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RSACoreEngine_H
