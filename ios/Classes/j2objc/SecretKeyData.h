//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/bc/SecretKeyData.java
//

#ifndef SecretKeyData_H
#define SecretKeyData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1BcSecretKeyData : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)keyAlgorithm
                                                               withByteArray:(IOSByteArray *)keyBytes;

+ (LibOrgBouncycastleAsn1BcSecretKeyData *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getKeyAlgorithm;

- (IOSByteArray *)getKeyBytes;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1BcSecretKeyData)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BcSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1BcSecretKeyData *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, IOSByteArray *keyBytes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcSecretKeyData *new_LibOrgBouncycastleAsn1BcSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, IOSByteArray *keyBytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcSecretKeyData *create_LibOrgBouncycastleAsn1BcSecretKeyData_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, IOSByteArray *keyBytes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcSecretKeyData *LibOrgBouncycastleAsn1BcSecretKeyData_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1BcSecretKeyData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SecretKeyData_H
