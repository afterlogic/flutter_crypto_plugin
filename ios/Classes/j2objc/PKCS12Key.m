//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PKCS12Key.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PBEParametersGenerator.h"
#include "PKCS12Key.h"
#include "java/lang/System.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastleJcajcePKCS12Key () {
 @public
  IOSCharArray *password_;
  jboolean useWrongZeroLengthConversion_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKCS12Key, password_, IOSCharArray *)

@implementation LibOrgBouncycastleJcajcePKCS12Key

- (instancetype)initWithCharArray:(IOSCharArray *)password {
  LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_(self, password);
  return self;
}

- (instancetype)initWithCharArray:(IOSCharArray *)password
                      withBoolean:(jboolean)useWrongZeroLengthConversion {
  LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(self, password, useWrongZeroLengthConversion);
  return self;
}

- (IOSCharArray *)getPassword {
  return password_;
}

- (NSString *)getAlgorithm {
  return @"PKCS12";
}

- (NSString *)getFormat {
  return @"PKCS12";
}

- (IOSByteArray *)getEncoded {
  if (useWrongZeroLengthConversion_ && ((IOSCharArray *) nil_chk(password_))->size_ == 0) {
    return [IOSByteArray newArrayWithLength:2];
  }
  return LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS12PasswordToBytesWithCharArray_(password_);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:);
  methods[1].selector = @selector(initWithCharArray:withBoolean:);
  methods[2].selector = @selector(getPassword);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getFormat);
  methods[5].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "password_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "useWrongZeroLengthConversion_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[C", "[CZ" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKCS12Key = { "PKCS12Key", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKCS12Key;
}

@end

void LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_(LibOrgBouncycastleJcajcePKCS12Key *self, IOSCharArray *password) {
  LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(self, password, false);
}

LibOrgBouncycastleJcajcePKCS12Key *new_LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_(IOSCharArray *password) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKCS12Key, initWithCharArray_, password)
}

LibOrgBouncycastleJcajcePKCS12Key *create_LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_(IOSCharArray *password) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKCS12Key, initWithCharArray_, password)
}

void LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(LibOrgBouncycastleJcajcePKCS12Key *self, IOSCharArray *password, jboolean useWrongZeroLengthConversion) {
  NSObject_init(self);
  if (password == nil) {
    password = [IOSCharArray newArrayWithLength:0];
  }
  self->password_ = [IOSCharArray newArrayWithLength:password->size_];
  self->useWrongZeroLengthConversion_ = useWrongZeroLengthConversion;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(password, 0, self->password_, 0, password->size_);
}

LibOrgBouncycastleJcajcePKCS12Key *new_LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(IOSCharArray *password, jboolean useWrongZeroLengthConversion) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKCS12Key, initWithCharArray_withBoolean_, password, useWrongZeroLengthConversion)
}

LibOrgBouncycastleJcajcePKCS12Key *create_LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(IOSCharArray *password, jboolean useWrongZeroLengthConversion) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKCS12Key, initWithCharArray_withBoolean_, password, useWrongZeroLengthConversion)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKCS12Key)
