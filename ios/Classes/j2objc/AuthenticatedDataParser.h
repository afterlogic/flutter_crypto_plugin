//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/AuthenticatedDataParser.java
//

#ifndef AuthenticatedDataParser_H
#define AuthenticatedDataParser_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1CmsContentInfoParser;
@class LibOrgBouncycastleAsn1CmsOriginatorInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@protocol LibOrgBouncycastleAsn1ASN1SequenceParser;
@protocol LibOrgBouncycastleAsn1ASN1SetParser;

@interface LibOrgBouncycastleAsn1CmsAuthenticatedDataParser : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1SequenceParser:(id<LibOrgBouncycastleAsn1ASN1SequenceParser>)seq;

- (id<LibOrgBouncycastleAsn1ASN1SetParser>)getAuthAttrs;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

- (LibOrgBouncycastleAsn1CmsContentInfoParser *)getEncapsulatedContentInfo;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getMac;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMacAlgorithm;

- (LibOrgBouncycastleAsn1CmsOriginatorInfo *)getOriginatorInfo;

- (id<LibOrgBouncycastleAsn1ASN1SetParser>)getRecipientInfos;

- (id<LibOrgBouncycastleAsn1ASN1SetParser>)getUnauthAttrs;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAuthenticatedDataParser)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAuthenticatedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(LibOrgBouncycastleAsn1CmsAuthenticatedDataParser *self, id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedDataParser *new_LibOrgBouncycastleAsn1CmsAuthenticatedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthenticatedDataParser *create_LibOrgBouncycastleAsn1CmsAuthenticatedDataParser_initWithLibOrgBouncycastleAsn1ASN1SequenceParser_(id<LibOrgBouncycastleAsn1ASN1SequenceParser> seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAuthenticatedDataParser)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AuthenticatedDataParser_H
