//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DateUtil.java
//

#include "DateUtil.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@interface LibOrgBouncycastleAsn1DateUtil ()

+ (JavaUtilLocale *)forEN;

+ (JavaLangLong *)longValueOfWithLong:(jlong)v;

@end

inline JavaLangLong *LibOrgBouncycastleAsn1DateUtil_get_ZERO(void);
inline JavaLangLong *LibOrgBouncycastleAsn1DateUtil_set_ZERO(JavaLangLong *value);
static JavaLangLong *LibOrgBouncycastleAsn1DateUtil_ZERO;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleAsn1DateUtil, ZERO, JavaLangLong *)

inline id<JavaUtilMap> LibOrgBouncycastleAsn1DateUtil_get_localeCache(void);
static id<JavaUtilMap> LibOrgBouncycastleAsn1DateUtil_localeCache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1DateUtil, localeCache, id<JavaUtilMap>)

__attribute__((unused)) static JavaUtilLocale *LibOrgBouncycastleAsn1DateUtil_forEN(void);

__attribute__((unused)) static JavaLangLong *LibOrgBouncycastleAsn1DateUtil_longValueOfWithLong_(jlong v);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1DateUtil)

JavaUtilLocale *LibOrgBouncycastleAsn1DateUtil_EN_Locale;

@implementation LibOrgBouncycastleAsn1DateUtil

+ (JavaUtilLocale *)EN_Locale {
  return LibOrgBouncycastleAsn1DateUtil_EN_Locale;
}

+ (void)setEN_Locale:(JavaUtilLocale *)value {
  LibOrgBouncycastleAsn1DateUtil_EN_Locale = value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1DateUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaUtilLocale *)forEN {
  return LibOrgBouncycastleAsn1DateUtil_forEN();
}

+ (JavaUtilDate *)epochAdjustWithJavaUtilDate:(JavaUtilDate *)date {
  return LibOrgBouncycastleAsn1DateUtil_epochAdjustWithJavaUtilDate_(date);
}

+ (JavaLangLong *)longValueOfWithLong:(jlong)v {
  return LibOrgBouncycastleAsn1DateUtil_longValueOfWithLong_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0xa, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(forEN);
  methods[2].selector = @selector(epochAdjustWithJavaUtilDate:);
  methods[3].selector = @selector(longValueOfWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaLangLong;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "localeCache", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "EN_Locale", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x8, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "epochAdjust", "LJavaUtilDate;", "LJavaTextParseException;", "longValueOf", "J", &LibOrgBouncycastleAsn1DateUtil_ZERO, &LibOrgBouncycastleAsn1DateUtil_localeCache, &LibOrgBouncycastleAsn1DateUtil_EN_Locale };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1DateUtil = { "DateUtil", "lib.org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1DateUtil;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1DateUtil class]) {
    LibOrgBouncycastleAsn1DateUtil_ZERO = LibOrgBouncycastleAsn1DateUtil_longValueOfWithLong_(0);
    LibOrgBouncycastleAsn1DateUtil_localeCache = new_JavaUtilHashMap_init();
    LibOrgBouncycastleAsn1DateUtil_EN_Locale = LibOrgBouncycastleAsn1DateUtil_forEN();
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1DateUtil)
  }
}

@end

void LibOrgBouncycastleAsn1DateUtil_init(LibOrgBouncycastleAsn1DateUtil *self) {
  NSObject_init(self);
}

LibOrgBouncycastleAsn1DateUtil *new_LibOrgBouncycastleAsn1DateUtil_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1DateUtil, init)
}

LibOrgBouncycastleAsn1DateUtil *create_LibOrgBouncycastleAsn1DateUtil_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1DateUtil, init)
}

JavaUtilLocale *LibOrgBouncycastleAsn1DateUtil_forEN() {
  LibOrgBouncycastleAsn1DateUtil_initialize();
  if ([@"en" java_equalsIgnoreCase:[((JavaUtilLocale *) nil_chk(JavaUtilLocale_getDefault())) getLanguage]]) {
    return JavaUtilLocale_getDefault();
  }
  IOSObjectArray *locales = JavaUtilLocale_getAvailableLocales();
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(locales))->size_; i++) {
    if ([@"en" java_equalsIgnoreCase:[((JavaUtilLocale *) nil_chk(IOSObjectArray_Get(locales, i))) getLanguage]]) {
      return IOSObjectArray_Get(locales, i);
    }
  }
  return JavaUtilLocale_getDefault();
}

JavaUtilDate *LibOrgBouncycastleAsn1DateUtil_epochAdjustWithJavaUtilDate_(JavaUtilDate *date) {
  LibOrgBouncycastleAsn1DateUtil_initialize();
  JavaUtilLocale *locale = JavaUtilLocale_getDefault();
  if (locale == nil) {
    return date;
  }
  @synchronized(LibOrgBouncycastleAsn1DateUtil_localeCache) {
    JavaLangLong *adj = (JavaLangLong *) cast_chk([((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleAsn1DateUtil_localeCache)) getWithId:locale], [JavaLangLong class]);
    if (adj == nil) {
      JavaTextSimpleDateFormat *dateF = new_JavaTextSimpleDateFormat_initWithNSString_(@"yyyyMMddHHmmssz");
      jlong v = [((JavaUtilDate *) nil_chk([dateF parseWithNSString:@"19700101000000GMT+00:00"])) getTime];
      if (v == 0) {
        adj = LibOrgBouncycastleAsn1DateUtil_ZERO;
      }
      else {
        adj = LibOrgBouncycastleAsn1DateUtil_longValueOfWithLong_(v);
      }
      (void) [LibOrgBouncycastleAsn1DateUtil_localeCache putWithId:locale withId:adj];
    }
    if (adj != LibOrgBouncycastleAsn1DateUtil_ZERO) {
      return new_JavaUtilDate_initWithLong_([((JavaUtilDate *) nil_chk(date)) getTime] - [((JavaLangLong *) nil_chk(adj)) longLongValue]);
    }
    return date;
  }
}

JavaLangLong *LibOrgBouncycastleAsn1DateUtil_longValueOfWithLong_(jlong v) {
  LibOrgBouncycastleAsn1DateUtil_initialize();
  return JavaLangLong_valueOfWithLong_(v);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1DateUtil)
