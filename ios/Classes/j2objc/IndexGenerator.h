//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/IndexGenerator.java
//

#ifndef IndexGenerator_H
#define IndexGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters;

@interface LibOrgBouncycastlePqcCryptoNtruIndexGenerator : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)seed
withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters:(LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *)params;

- (jint)nextIndex;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNtruIndexGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruIndexGenerator_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(LibOrgBouncycastlePqcCryptoNtruIndexGenerator *self, IOSByteArray *seed, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruIndexGenerator *new_LibOrgBouncycastlePqcCryptoNtruIndexGenerator_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *seed, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruIndexGenerator *create_LibOrgBouncycastlePqcCryptoNtruIndexGenerator_initWithByteArray_withLibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters_(IOSByteArray *seed, LibOrgBouncycastlePqcCryptoNtruNTRUEncryptionParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNtruIndexGenerator)

@interface LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString : NSObject {
 @public
  IOSByteArray *bytes_;
  jint numBytes_;
  jint lastByteBits_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (void)appendBitsWithByte:(jbyte)b;

- (IOSByteArray *)getBytes;

- (jint)getLeadingAsIntWithInt:(jint)numBits;

- (LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString *)getTrailingWithInt:(jint)numBits;

#pragma mark Package-Private

- (void)appendBitsWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString, bytes_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString_init(LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString *new_LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString *create_LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNtruIndexGenerator_BitString)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IndexGenerator_H
