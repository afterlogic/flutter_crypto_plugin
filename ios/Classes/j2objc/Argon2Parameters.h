//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/Argon2Parameters.java
//

#ifndef Argon2Parameters_H
#define Argon2Parameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCharToByteConverter;

@interface LibOrgBouncycastleCryptoParamsArgon2Parameters : NSObject
@property (readonly, class) jint ARGON2_d NS_SWIFT_NAME(ARGON2_d);
@property (readonly, class) jint ARGON2_i NS_SWIFT_NAME(ARGON2_i);
@property (readonly, class) jint ARGON2_id NS_SWIFT_NAME(ARGON2_id);
@property (readonly, class) jint ARGON2_VERSION_10 NS_SWIFT_NAME(ARGON2_VERSION_10);
@property (readonly, class) jint ARGON2_VERSION_13 NS_SWIFT_NAME(ARGON2_VERSION_13);

+ (jint)ARGON2_d;

+ (jint)ARGON2_i;

+ (jint)ARGON2_id;

+ (jint)ARGON2_VERSION_10;

+ (jint)ARGON2_VERSION_13;

#pragma mark Public

- (void)clear;

- (IOSByteArray *)getAdditional;

- (id<LibOrgBouncycastleCryptoCharToByteConverter>)getCharToByteConverter;

- (jint)getIterations;

- (jint)getLanes;

- (jint)getMemory;

- (IOSByteArray *)getSalt;

- (IOSByteArray *)getSecret;

- (jint)getType;

- (jint)getVersion;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsArgon2Parameters)

inline jint LibOrgBouncycastleCryptoParamsArgon2Parameters_get_ARGON2_d(void);
#define LibOrgBouncycastleCryptoParamsArgon2Parameters_ARGON2_d 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsArgon2Parameters, ARGON2_d, jint)

inline jint LibOrgBouncycastleCryptoParamsArgon2Parameters_get_ARGON2_i(void);
#define LibOrgBouncycastleCryptoParamsArgon2Parameters_ARGON2_i 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsArgon2Parameters, ARGON2_i, jint)

inline jint LibOrgBouncycastleCryptoParamsArgon2Parameters_get_ARGON2_id(void);
#define LibOrgBouncycastleCryptoParamsArgon2Parameters_ARGON2_id 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsArgon2Parameters, ARGON2_id, jint)

inline jint LibOrgBouncycastleCryptoParamsArgon2Parameters_get_ARGON2_VERSION_10(void);
#define LibOrgBouncycastleCryptoParamsArgon2Parameters_ARGON2_VERSION_10 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsArgon2Parameters, ARGON2_VERSION_10, jint)

inline jint LibOrgBouncycastleCryptoParamsArgon2Parameters_get_ARGON2_VERSION_13(void);
#define LibOrgBouncycastleCryptoParamsArgon2Parameters_ARGON2_VERSION_13 19
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsArgon2Parameters, ARGON2_VERSION_13, jint)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsArgon2Parameters)

@interface LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)type;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters *)build;

- (void)clear;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withAdditionalWithByteArray:(IOSByteArray *)additional;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withCharToByteConverterWithLibOrgBouncycastleCryptoCharToByteConverter:(id<LibOrgBouncycastleCryptoCharToByteConverter>)converter;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withIterationsWithInt:(jint)iterations;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withMemoryAsKBWithInt:(jint)memory;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withMemoryPowOfTwoWithInt:(jint)memory;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withParallelismWithInt:(jint)parallelism;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withSaltWithByteArray:(IOSByteArray *)salt;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withSecretWithByteArray:(IOSByteArray *)secret;

- (LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *)withVersionWithInt:(jint)version_;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_init(LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *new_LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *create_LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_initWithInt_(LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *self, jint type);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *new_LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_initWithInt_(jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder *create_LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder_initWithInt_(jint type);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsArgon2Parameters_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Argon2Parameters_H
