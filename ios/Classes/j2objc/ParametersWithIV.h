//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ParametersWithIV.java
//

#ifndef ParametersWithIV_H
#define ParametersWithIV_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsParametersWithIV : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)parameters
                                                             withByteArray:(IOSByteArray *)iv;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)parameters
                                                             withByteArray:(IOSByteArray *)iv
                                                                   withInt:(jint)ivOff
                                                                   withInt:(jint)ivLen;

- (IOSByteArray *)getIV;

- (id<LibOrgBouncycastleCryptoCipherParameters>)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsParametersWithIV)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(LibOrgBouncycastleCryptoParamsParametersWithIV *self, id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsParametersWithIV *new_LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsParametersWithIV *create_LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_withInt_withInt_(LibOrgBouncycastleCryptoParamsParametersWithIV *self, id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv, jint ivOff, jint ivLen);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsParametersWithIV *new_LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_withInt_withInt_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv, jint ivOff, jint ivLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsParametersWithIV *create_LibOrgBouncycastleCryptoParamsParametersWithIV_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_withInt_withInt_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *iv, jint ivOff, jint ivLen);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsParametersWithIV)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ParametersWithIV_H
