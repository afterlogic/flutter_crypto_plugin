//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OTSHashAddress.h"
#include "Pack.h"
#include "XMSSAddress.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface LibOrgBouncycastlePqcCryptoXmssOTSHashAddress () {
 @public
  jint otsAddress_;
  jint chainAddress_;
  jint hashAddress_;
}

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)builder;

@end

inline jint LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_get_TYPE(void);
#define LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress, TYPE, jint)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *self, LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *new_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *create_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder);

@interface LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder () {
 @public
  jint otsAddress_;
  jint chainAddress_;
  jint hashAddress_;
}

@end

@implementation LibOrgBouncycastlePqcCryptoXmssOTSHashAddress

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)builder {
  LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(self, builder);
  return self;
}

- (IOSByteArray *)toByteArray {
  IOSByteArray *byteRepresentation = [super toByteArray];
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(otsAddress_, byteRepresentation, 16);
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(chainAddress_, byteRepresentation, 20);
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(hashAddress_, byteRepresentation, 24);
  return byteRepresentation;
}

- (jint)getOTSAddress {
  return otsAddress_;
}

- (jint)getChainAddress {
  return chainAddress_;
}

- (jint)getHashAddress {
  return hashAddress_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getOTSAddress);
  methods[3].selector = @selector(getChainAddress);
  methods[4].selector = @selector(getHashAddress);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE, 0x1a, -1, -1, -1, -1 },
    { "otsAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "chainAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hashAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssOTSHashAddress = { "OTSHashAddress", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x10, 5, 4, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress;
}

@end

void LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *self, LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  LibOrgBouncycastlePqcCryptoXmssXMSSAddress_initWithLibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_(self, builder);
  self->otsAddress_ = ((LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk(builder))->otsAddress_;
  self->chainAddress_ = builder->chainAddress_;
  self->hashAddress_ = builder->hashAddress_;
}

LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *new_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress, initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_, builder)
}

LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *create_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress, initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress)

@implementation LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withOTSAddressWithInt:(jint)val {
  otsAddress_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withChainAddressWithInt:(jint)val {
  chainAddress_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withHashAddressWithInt:(jint)val {
  hashAddress_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress *)build {
  return new_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_initWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(self);
}

- (LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)getThis {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 3, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSAddress;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(withOTSAddressWithInt:);
  methods[2].selector = @selector(withChainAddressWithInt:);
  methods[3].selector = @selector(withHashAddressWithInt:);
  methods[4].selector = @selector(build);
  methods[5].selector = @selector(getThis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "otsAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "chainAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "withOTSAddress", "I", "withChainAddress", "withHashAddress", "LLibOrgBouncycastlePqcCryptoXmssOTSHashAddress;", "Llib/org/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder<Llib/org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder = { "Builder", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0xc, 6, 3, 4, -1, -1, 5, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;
}

@end

void LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *self) {
  LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_initWithInt_(self, LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE);
  self->otsAddress_ = 0;
  self->chainAddress_ = 0;
  self->hashAddress_ = 0;
}

LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *new_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder, init)
}

LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *create_LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder)
