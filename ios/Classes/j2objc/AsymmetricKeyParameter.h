//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/AsymmetricKeyParameter.java
//

#ifndef AsymmetricKeyParameter_H
#define AsymmetricKeyParameter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@interface LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter : NSObject < LibOrgBouncycastleCryptoCipherParameters > {
 @public
  jboolean privateKey_;
}

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)privateKey;

- (jboolean)isPrivate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *self, jboolean privateKey);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *new_LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(jboolean privateKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *create_LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(jboolean privateKey);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AsymmetricKeyParameter_H
