//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/generators/OpenBSDBCrypt.java
//

#ifndef OpenBSDBCrypt_H
#define OpenBSDBCrypt_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSCharArray;

@interface LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)checkPasswordWithNSString:(NSString *)bcryptString
                        withCharArray:(IOSCharArray *)password;

+ (NSString *)generateWithCharArray:(IOSCharArray *)password
                      withByteArray:(IOSByteArray *)salt
                            withInt:(jint)cost;

+ (NSString *)generateWithNSString:(NSString *)version_
                     withCharArray:(IOSCharArray *)password
                     withByteArray:(IOSByteArray *)salt
                           withInt:(jint)cost;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_init(LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt *new_LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt *create_LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_init(void);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_generateWithCharArray_withByteArray_withInt_(IOSCharArray *password, IOSByteArray *salt, jint cost);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_generateWithNSString_withCharArray_withByteArray_withInt_(NSString *version_, IOSCharArray *password, IOSByteArray *salt, jint cost);

FOUNDATION_EXPORT jboolean LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt_checkPasswordWithNSString_withCharArray_(NSString *bcryptString, IOSCharArray *password);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoGeneratorsOpenBSDBCrypt)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OpenBSDBCrypt_H
