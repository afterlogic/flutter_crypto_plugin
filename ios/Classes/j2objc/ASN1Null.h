//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1Null.java
//

#ifndef ASN1Null_H
#define ASN1Null_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Primitive.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1OutputStream;

@interface LibOrgBouncycastleAsn1ASN1Null : LibOrgBouncycastleAsn1ASN1Primitive

#pragma mark Public

+ (LibOrgBouncycastleAsn1ASN1Null *)getInstanceWithId:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1ASN1Null)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1Null_init(LibOrgBouncycastleAsn1ASN1Null *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Null *LibOrgBouncycastleAsn1ASN1Null_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1Null)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1Null_H
