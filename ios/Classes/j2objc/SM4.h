//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/SM4.java
//

#ifndef SM4_H
#define SM4_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_header.h"
#include "SymmetricAlgorithmProvider.h"

@class JavaSecurityAlgorithmParameters;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoBufferedBlockCipher;
@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleCryptoModesAEADBlockCipher;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;
@protocol LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters;

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams)

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings : LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SM4_H
