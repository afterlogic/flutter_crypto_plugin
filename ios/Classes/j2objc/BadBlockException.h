//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/util/BadBlockException.java
//

#ifndef BadBlockException_H
#define BadBlockException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "javax/crypto/BadPaddingException.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleJcajceProviderUtilBadBlockException : JavaxCryptoBadPaddingException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderUtilBadBlockException)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderUtilBadBlockException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleJcajceProviderUtilBadBlockException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderUtilBadBlockException *new_LibOrgBouncycastleJcajceProviderUtilBadBlockException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderUtilBadBlockException *create_LibOrgBouncycastleJcajceProviderUtilBadBlockException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderUtilBadBlockException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BadBlockException_H
