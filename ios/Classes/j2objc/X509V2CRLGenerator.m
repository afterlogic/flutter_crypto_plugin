//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509V2CRLGenerator.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1GeneralizedTime.h"
#include "ASN1InputStream.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Asn1X509Time.h"
#include "BCJcaJceHelper.h"
#include "CertificateList.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "Extensions.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaJceHelper.h"
#include "TBSCertList.h"
#include "V2TBSCertListGenerator.h"
#include "X509CRLObject.h"
#include "X509Extensions.h"
#include "X509ExtensionsGenerator.h"
#include "X509Name.h"
#include "X509Principal.h"
#include "X509Util.h"
#include "X509V2CRLGenerator.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/Throwable.h"
#include "java/math/BigInteger.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/NoSuchProviderException.h"
#include "java/security/PrivateKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/SignatureException.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/X509CRL.h"
#include "java/security/cert/X509CRLEntry.h"
#include "java/util/Date.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "javax/security/auth/x500/X500Principal.h"

@interface LibOrgBouncycastleX509X509V2CRLGenerator () {
 @public
  id<LibOrgBouncycastleJcajceUtilJcaJceHelper> bcHelper_;
  LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *tbsGen_;
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigOID_;
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId_;
  NSString *signatureAlgorithm_;
  LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *extGenerator_;
}

- (LibOrgBouncycastleAsn1X509TBSCertList *)generateCertList;

- (JavaSecurityCertX509CRL *)generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList:(LibOrgBouncycastleAsn1X509TBSCertList *)tbsCrl
                                                                          withByteArray:(IOSByteArray *)signature;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, bcHelper_, id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, tbsGen_, LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, sigOID_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, sigAlgId_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, signatureAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator, extGenerator_, LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *)

__attribute__((unused)) static LibOrgBouncycastleAsn1X509TBSCertList *LibOrgBouncycastleX509X509V2CRLGenerator_generateCertList(LibOrgBouncycastleX509X509V2CRLGenerator *self);

__attribute__((unused)) static JavaSecurityCertX509CRL *LibOrgBouncycastleX509X509V2CRLGenerator_generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList_withByteArray_(LibOrgBouncycastleX509X509V2CRLGenerator *self, LibOrgBouncycastleAsn1X509TBSCertList *tbsCrl, IOSByteArray *signature);

@interface LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException : JavaSecurityCertCRLException {
 @public
  JavaLangThrowable *cause_ExtCRLException_;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException, cause_ExtCRLException_, JavaLangThrowable *)

__attribute__((unused)) static void LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *self, NSString *message, JavaLangThrowable *cause);

__attribute__((unused)) static LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *new_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *create_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException)

@implementation LibOrgBouncycastleX509X509V2CRLGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleX509X509V2CRLGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reset {
  tbsGen_ = new_LibOrgBouncycastleAsn1X509V2TBSCertListGenerator_init();
  [((LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *) nil_chk(extGenerator_)) reset];
}

- (void)setIssuerDNWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)issuer {
  @try {
    [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) setIssuerWithLibOrgBouncycastleAsn1X509X509Name:new_LibOrgBouncycastleJceX509Principal_initWithByteArray_([((JavaxSecurityAuthX500X500Principal *) nil_chk(issuer)) getEncoded])];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"can't process principal: ", e));
  }
}

- (void)setIssuerDNWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)issuer {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) setIssuerWithLibOrgBouncycastleAsn1X509X509Name:issuer];
}

- (void)setThisUpdateWithJavaUtilDate:(JavaUtilDate *)date {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) setThisUpdateWithLibOrgBouncycastleAsn1X509Asn1X509Time:new_LibOrgBouncycastleAsn1X509Asn1X509Time_initWithJavaUtilDate_(date)];
}

- (void)setNextUpdateWithJavaUtilDate:(JavaUtilDate *)date {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) setNextUpdateWithLibOrgBouncycastleAsn1X509Asn1X509Time:new_LibOrgBouncycastleAsn1X509Asn1X509Time_initWithJavaUtilDate_(date)];
}

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
                                  withInt:(jint)reason {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) addCRLEntryWithLibOrgBouncycastleAsn1ASN1Integer:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(userCertificate) withLibOrgBouncycastleAsn1X509Asn1X509Time:new_LibOrgBouncycastleAsn1X509Asn1X509Time_initWithJavaUtilDate_(revocationDate) withInt:reason];
}

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
                                  withInt:(jint)reason
                         withJavaUtilDate:(JavaUtilDate *)invalidityDate {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) addCRLEntryWithLibOrgBouncycastleAsn1ASN1Integer:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(userCertificate) withLibOrgBouncycastleAsn1X509Asn1X509Time:new_LibOrgBouncycastleAsn1X509Asn1X509Time_initWithJavaUtilDate_(revocationDate) withInt:reason withLibOrgBouncycastleAsn1ASN1GeneralizedTime:new_LibOrgBouncycastleAsn1ASN1GeneralizedTime_initWithJavaUtilDate_(invalidityDate)];
}

- (void)addCRLEntryWithJavaMathBigInteger:(JavaMathBigInteger *)userCertificate
                         withJavaUtilDate:(JavaUtilDate *)revocationDate
withLibOrgBouncycastleAsn1X509X509Extensions:(LibOrgBouncycastleAsn1X509X509Extensions *)extensions {
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) addCRLEntryWithLibOrgBouncycastleAsn1ASN1Integer:new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(userCertificate) withLibOrgBouncycastleAsn1X509Asn1X509Time:new_LibOrgBouncycastleAsn1X509Asn1X509Time_initWithJavaUtilDate_(revocationDate) withLibOrgBouncycastleAsn1X509Extensions:LibOrgBouncycastleAsn1X509Extensions_getInstanceWithId_(extensions)];
}

- (void)addCRLWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)other {
  id<JavaUtilSet> revocations = [((JavaSecurityCertX509CRL *) nil_chk(other)) getRevokedCertificates];
  if (revocations != nil) {
    id<JavaUtilIterator> it = [revocations iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      JavaSecurityCertX509CRLEntry *entry_ = (JavaSecurityCertX509CRLEntry *) cast_chk([it next], [JavaSecurityCertX509CRLEntry class]);
      LibOrgBouncycastleAsn1ASN1InputStream *aIn = new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_([((JavaSecurityCertX509CRLEntry *) nil_chk(entry_)) getEncoded]);
      @try {
        [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) addCRLEntryWithLibOrgBouncycastleAsn1ASN1Sequence:LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([aIn readObject])];
      }
      @catch (JavaIoIOException *e) {
        @throw new_JavaSecurityCertCRLException_initWithNSString_(JreStrcat("$$", @"exception processing encoding of CRL: ", [e description]));
      }
    }
  }
}

- (void)setSignatureAlgorithmWithNSString:(NSString *)signatureAlgorithm {
  self->signatureAlgorithm_ = signatureAlgorithm;
  @try {
    sigOID_ = LibOrgBouncycastleX509X509Util_getAlgorithmOIDWithNSString_(signatureAlgorithm);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown signature type requested");
  }
  sigAlgId_ = LibOrgBouncycastleX509X509Util_getSigAlgIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(sigOID_, signatureAlgorithm);
  [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(tbsGen_)) setSignatureWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:sigAlgId_];
}

- (void)addExtensionWithNSString:(NSString *)oid
                     withBoolean:(jboolean)critical
withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)value {
  [self addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oid) withBoolean:critical withLibOrgBouncycastleAsn1ASN1Encodable:value];
}

- (void)addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)critical
                           withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)value {
  [((LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *) nil_chk(extGenerator_)) addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]) withBoolean:critical withLibOrgBouncycastleAsn1ASN1Encodable:value];
}

- (void)addExtensionWithNSString:(NSString *)oid
                     withBoolean:(jboolean)critical
                   withByteArray:(IOSByteArray *)value {
  [self addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oid) withBoolean:critical withByteArray:value];
}

- (void)addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)critical
                                                     withByteArray:(IOSByteArray *)value {
  [((LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *) nil_chk(extGenerator_)) addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]) withBoolean:critical withByteArray:value];
}

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key {
  @try {
    return [self generateX509CRLWithJavaSecurityPrivateKey:key withNSString:@"BC" withJavaSecuritySecureRandom:nil];
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    @throw new_JavaLangSecurityException_initWithNSString_(@"BC provider not installed!");
  }
}

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @try {
    return [self generateX509CRLWithJavaSecurityPrivateKey:key withNSString:@"BC" withJavaSecuritySecureRandom:random];
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    @throw new_JavaLangSecurityException_initWithNSString_(@"BC provider not installed!");
  }
}

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                          withNSString:(NSString *)provider {
  return [self generateX509CRLWithJavaSecurityPrivateKey:key withNSString:provider withJavaSecuritySecureRandom:nil];
}

- (JavaSecurityCertX509CRL *)generateX509CRLWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                          withNSString:(NSString *)provider
                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @try {
    return [self generateWithJavaSecurityPrivateKey:key withNSString:provider withJavaSecuritySecureRandom:random];
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    @throw e;
  }
  @catch (JavaSecuritySignatureException *e) {
    @throw e;
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    @throw e;
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    @throw new_JavaLangSecurityException_initWithNSString_(JreStrcat("$@", @"exception: ", e));
  }
}

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key {
  return [self generateWithJavaSecurityPrivateKey:key withJavaSecuritySecureRandom:nil];
}

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  LibOrgBouncycastleAsn1X509TBSCertList *tbsCrl = LibOrgBouncycastleX509X509V2CRLGenerator_generateCertList(self);
  IOSByteArray *signature;
  @try {
    signature = LibOrgBouncycastleX509X509Util_calculateSignatureWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_withJavaSecurityPrivateKey_withJavaSecuritySecureRandom_withLibOrgBouncycastleAsn1ASN1Encodable_(sigOID_, signatureAlgorithm_, key, random, tbsCrl);
  }
  @catch (JavaIoIOException *e) {
    @throw new_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(@"cannot generate CRL encoding", e);
  }
  return LibOrgBouncycastleX509X509V2CRLGenerator_generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList_withByteArray_(self, tbsCrl, signature);
}

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                   withNSString:(NSString *)provider {
  return [self generateWithJavaSecurityPrivateKey:key withNSString:provider withJavaSecuritySecureRandom:nil];
}

- (JavaSecurityCertX509CRL *)generateWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                   withNSString:(NSString *)provider
                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  LibOrgBouncycastleAsn1X509TBSCertList *tbsCrl = LibOrgBouncycastleX509X509V2CRLGenerator_generateCertList(self);
  IOSByteArray *signature;
  @try {
    signature = LibOrgBouncycastleX509X509Util_calculateSignatureWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_withNSString_withJavaSecurityPrivateKey_withJavaSecuritySecureRandom_withLibOrgBouncycastleAsn1ASN1Encodable_(sigOID_, signatureAlgorithm_, provider, key, random, tbsCrl);
  }
  @catch (JavaIoIOException *e) {
    @throw new_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(@"cannot generate CRL encoding", e);
  }
  return LibOrgBouncycastleX509X509V2CRLGenerator_generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList_withByteArray_(self, tbsCrl, signature);
}

- (LibOrgBouncycastleAsn1X509TBSCertList *)generateCertList {
  return LibOrgBouncycastleX509X509V2CRLGenerator_generateCertList(self);
}

- (JavaSecurityCertX509CRL *)generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList:(LibOrgBouncycastleAsn1X509TBSCertList *)tbsCrl
                                                                          withByteArray:(IOSByteArray *)signature {
  return LibOrgBouncycastleX509X509V2CRLGenerator_generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList_withByteArray_(self, tbsCrl, signature);
}

- (id<JavaUtilIterator>)getSignatureAlgNames {
  return LibOrgBouncycastleX509X509Util_getAlgNames();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, 12, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 19, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 20, 21, 22, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 20, 23, 22, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 20, 24, 25, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 20, 26, 25, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 27, 21, 28, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 27, 23, 28, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 27, 24, 29, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x1, 27, 26, 29, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509TBSCertList;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509CRL;", 0x2, 30, 31, 12, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(setIssuerDNWithJavaxSecurityAuthX500X500Principal:);
  methods[3].selector = @selector(setIssuerDNWithLibOrgBouncycastleAsn1X509X509Name:);
  methods[4].selector = @selector(setThisUpdateWithJavaUtilDate:);
  methods[5].selector = @selector(setNextUpdateWithJavaUtilDate:);
  methods[6].selector = @selector(addCRLEntryWithJavaMathBigInteger:withJavaUtilDate:withInt:);
  methods[7].selector = @selector(addCRLEntryWithJavaMathBigInteger:withJavaUtilDate:withInt:withJavaUtilDate:);
  methods[8].selector = @selector(addCRLEntryWithJavaMathBigInteger:withJavaUtilDate:withLibOrgBouncycastleAsn1X509X509Extensions:);
  methods[9].selector = @selector(addCRLWithJavaSecurityCertX509CRL:);
  methods[10].selector = @selector(setSignatureAlgorithmWithNSString:);
  methods[11].selector = @selector(addExtensionWithNSString:withBoolean:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[12].selector = @selector(addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[13].selector = @selector(addExtensionWithNSString:withBoolean:withByteArray:);
  methods[14].selector = @selector(addExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withByteArray:);
  methods[15].selector = @selector(generateX509CRLWithJavaSecurityPrivateKey:);
  methods[16].selector = @selector(generateX509CRLWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[17].selector = @selector(generateX509CRLWithJavaSecurityPrivateKey:withNSString:);
  methods[18].selector = @selector(generateX509CRLWithJavaSecurityPrivateKey:withNSString:withJavaSecuritySecureRandom:);
  methods[19].selector = @selector(generateWithJavaSecurityPrivateKey:);
  methods[20].selector = @selector(generateWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[21].selector = @selector(generateWithJavaSecurityPrivateKey:withNSString:);
  methods[22].selector = @selector(generateWithJavaSecurityPrivateKey:withNSString:withJavaSecuritySecureRandom:);
  methods[23].selector = @selector(generateCertList);
  methods[24].selector = @selector(generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList:withByteArray:);
  methods[25].selector = @selector(getSignatureAlgNames);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bcHelper_", "LLibOrgBouncycastleJcajceUtilJcaJceHelper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tbsGen_", "LLibOrgBouncycastleAsn1X509V2TBSCertListGenerator;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigOID_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigAlgId_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signatureAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extGenerator_", "LLibOrgBouncycastleAsn1X509X509ExtensionsGenerator;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setIssuerDN", "LJavaxSecurityAuthX500X500Principal;", "LLibOrgBouncycastleAsn1X509X509Name;", "setThisUpdate", "LJavaUtilDate;", "setNextUpdate", "addCRLEntry", "LJavaMathBigInteger;LJavaUtilDate;I", "LJavaMathBigInteger;LJavaUtilDate;ILJavaUtilDate;", "LJavaMathBigInteger;LJavaUtilDate;LLibOrgBouncycastleAsn1X509X509Extensions;", "addCRL", "LJavaSecurityCertX509CRL;", "LJavaSecurityCertCRLException;", "setSignatureAlgorithm", "LNSString;", "addExtension", "LNSString;ZLLibOrgBouncycastleAsn1ASN1Encodable;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;ZLLibOrgBouncycastleAsn1ASN1Encodable;", "LNSString;Z[B", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;Z[B", "generateX509CRL", "LJavaSecurityPrivateKey;", "LJavaLangSecurityException;LJavaSecuritySignatureException;LJavaSecurityInvalidKeyException;", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;LNSString;", "LJavaSecurityNoSuchProviderException;LJavaLangSecurityException;LJavaSecuritySignatureException;LJavaSecurityInvalidKeyException;", "LJavaSecurityPrivateKey;LNSString;LJavaSecuritySecureRandom;", "generate", "LJavaSecurityCertCRLException;LJavaLangIllegalStateException;LJavaSecurityNoSuchAlgorithmException;LJavaSecuritySignatureException;LJavaSecurityInvalidKeyException;", "LJavaSecurityCertCRLException;LJavaLangIllegalStateException;LJavaSecurityNoSuchProviderException;LJavaSecurityNoSuchAlgorithmException;LJavaSecuritySignatureException;LJavaSecurityInvalidKeyException;", "generateJcaObject", "LLibOrgBouncycastleAsn1X509TBSCertList;[B", "LLibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509V2CRLGenerator = { "X509V2CRLGenerator", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0x1, 26, 6, -1, 32, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509V2CRLGenerator;
}

@end

void LibOrgBouncycastleX509X509V2CRLGenerator_init(LibOrgBouncycastleX509X509V2CRLGenerator *self) {
  NSObject_init(self);
  self->bcHelper_ = new_LibOrgBouncycastleJcajceUtilBCJcaJceHelper_init();
  self->tbsGen_ = new_LibOrgBouncycastleAsn1X509V2TBSCertListGenerator_init();
  self->extGenerator_ = new_LibOrgBouncycastleAsn1X509X509ExtensionsGenerator_init();
}

LibOrgBouncycastleX509X509V2CRLGenerator *new_LibOrgBouncycastleX509X509V2CRLGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509X509V2CRLGenerator, init)
}

LibOrgBouncycastleX509X509V2CRLGenerator *create_LibOrgBouncycastleX509X509V2CRLGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509X509V2CRLGenerator, init)
}

LibOrgBouncycastleAsn1X509TBSCertList *LibOrgBouncycastleX509X509V2CRLGenerator_generateCertList(LibOrgBouncycastleX509X509V2CRLGenerator *self) {
  if (![((LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *) nil_chk(self->extGenerator_)) isEmpty]) {
    [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(self->tbsGen_)) setExtensionsWithLibOrgBouncycastleAsn1X509X509Extensions:[((LibOrgBouncycastleAsn1X509X509ExtensionsGenerator *) nil_chk(self->extGenerator_)) generate]];
  }
  return [((LibOrgBouncycastleAsn1X509V2TBSCertListGenerator *) nil_chk(self->tbsGen_)) generateTBSCertList];
}

JavaSecurityCertX509CRL *LibOrgBouncycastleX509X509V2CRLGenerator_generateJcaObjectWithLibOrgBouncycastleAsn1X509TBSCertList_withByteArray_(LibOrgBouncycastleX509X509V2CRLGenerator *self, LibOrgBouncycastleAsn1X509TBSCertList *tbsCrl, IOSByteArray *signature) {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:tbsCrl];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:self->sigAlgId_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERBitString_initWithByteArray_(signature)];
  return new_LibOrgBouncycastleJceProviderX509CRLObject_initWithLibOrgBouncycastleAsn1X509CertificateList_(new_LibOrgBouncycastleAsn1X509CertificateList_initWithLibOrgBouncycastleAsn1ASN1Sequence_(new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509V2CRLGenerator)

@implementation LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  return cause_ExtCRLException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_ExtCRLException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x0, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "cause", "LLibOrgBouncycastleX509X509V2CRLGenerator;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException = { "ExtCRLException", "lib.org.bouncycastle.x509", ptrTable, methods, fields, 7, 0xa, 2, 1, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException;
}

@end

void LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *self, NSString *message, JavaLangThrowable *cause) {
  JavaSecurityCertCRLException_initWithNSString_(self, message);
  self->cause_ExtCRLException_ = cause;
}

LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *new_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException, initWithNSString_withJavaLangThrowable_, message, cause)
}

LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException *create_LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException, initWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509V2CRLGenerator_ExtCRLException)
