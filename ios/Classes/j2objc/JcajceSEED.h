//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/JcajceSEED.java
//

#ifndef JcajceSEED_H
#define JcajceSEED_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseSecretKeyFactory.h"
#include "BaseWrapCipher.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_header.h"
#include "SymmetricAlgorithmProvider.h"

@class JavaSecurityAlgorithmParameters;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleCryptoBufferedBlockCipher;
@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleCryptoModesAEADBlockCipher;
@protocol LibOrgBouncycastleCryptoWrapper;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;
@protocol LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider;

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_ECB)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                          withBoolean:(jboolean)arg1
                                                              withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)arg0
                                                              withInt:(jint)arg1
                                                              withInt:(jint)arg2
                                                              withInt:(jint)arg3
                                                              withInt:(jint)arg4 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                  withBoolean:(jboolean)arg1
                                                                      withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBufferedBlockCipher:(LibOrgBouncycastleCryptoBufferedBlockCipher *)arg0
                                                                      withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoModesAEADBlockCipher:(id<LibOrgBouncycastleCryptoModesAEADBlockCipher>)arg0
                                                                   withBoolean:(jboolean)arg1
                                                                       withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider:(id<LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CBC)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoWrapper:(id<LibOrgBouncycastleCryptoWrapper>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoWrapper:(id<LibOrgBouncycastleCryptoWrapper>)arg0
                                                          withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Wrap)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_CMAC)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_GMAC)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_KeyFactory)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Poly1305KeyGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters;

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParamGen)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams : LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (NSString *)engineToString;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_AlgParams)

@interface LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings : LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricJcajceSEED_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajceSEED_H
