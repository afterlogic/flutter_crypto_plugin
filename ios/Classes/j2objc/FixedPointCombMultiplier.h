//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/FixedPointCombMultiplier.java
//

#ifndef FixedPointCombMultiplier_H
#define FixedPointCombMultiplier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AbstractECMultiplier.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleMathEcFixedPointCombMultiplier : LibOrgBouncycastleMathEcAbstractECMultiplier

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (LibOrgBouncycastleMathEcECPoint *)multiplyPositiveWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)p
                                                                  withJavaMathBigInteger:(JavaMathBigInteger *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcFixedPointCombMultiplier)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcFixedPointCombMultiplier_init(LibOrgBouncycastleMathEcFixedPointCombMultiplier *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointCombMultiplier *new_LibOrgBouncycastleMathEcFixedPointCombMultiplier_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointCombMultiplier *create_LibOrgBouncycastleMathEcFixedPointCombMultiplier_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcFixedPointCombMultiplier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // FixedPointCombMultiplier_H
