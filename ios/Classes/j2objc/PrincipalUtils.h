//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/PrincipalUtils.java
//

#ifndef PrincipalUtils_H
#define PrincipalUtils_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaSecurityCertTrustAnchor;
@class JavaSecurityCertX509CRL;
@class JavaSecurityCertX509Certificate;
@class LibOrgBouncycastleAsn1X500X500Name;

@interface LibOrgBouncycastleJceProviderPrincipalUtils : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1X500X500Name *)getCAWithJavaSecurityCertTrustAnchor:(JavaSecurityCertTrustAnchor *)trustAnchor;

+ (LibOrgBouncycastleAsn1X500X500Name *)getEncodedIssuerPrincipalWithId:(id)cert;

+ (LibOrgBouncycastleAsn1X500X500Name *)getIssuerPrincipalWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

+ (LibOrgBouncycastleAsn1X500X500Name *)getIssuerPrincipalWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)crl;

+ (LibOrgBouncycastleAsn1X500X500Name *)getSubjectPrincipalWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderPrincipalUtils)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderPrincipalUtils_init(LibOrgBouncycastleJceProviderPrincipalUtils *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPrincipalUtils *new_LibOrgBouncycastleJceProviderPrincipalUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPrincipalUtils *create_LibOrgBouncycastleJceProviderPrincipalUtils_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJceProviderPrincipalUtils_getSubjectPrincipalWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJceProviderPrincipalUtils_getIssuerPrincipalWithJavaSecurityCertX509CRL_(JavaSecurityCertX509CRL *crl);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJceProviderPrincipalUtils_getIssuerPrincipalWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJceProviderPrincipalUtils_getCAWithJavaSecurityCertTrustAnchor_(JavaSecurityCertTrustAnchor *trustAnchor);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJceProviderPrincipalUtils_getEncodedIssuerPrincipalWithId_(id cert);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderPrincipalUtils)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PrincipalUtils_H
