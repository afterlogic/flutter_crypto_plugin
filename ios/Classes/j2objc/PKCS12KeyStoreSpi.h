//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/keystore/pkcs12/PKCS12KeyStoreSpi.java
//

#ifndef PKCS12KeyStoreSpi_H
#define PKCS12KeyStoreSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCKeyStore.h"
#include "J2ObjC_header.h"
#include "PKCSObjectIdentifiers.h"
#include "X509ObjectIdentifiers.h"
#include "java/security/KeyStoreSpi.h"

@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaSecurityCertCertificate;
@class JavaSecuritySecureRandom;
@class JavaUtilDate;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1PkcsPKCS12PBEParams;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@protocol JavaSecurityKey;
@protocol JavaSecurityKeyStore_LoadStoreParameter;
@protocol JavaSecurityPrivateKey;
@protocol JavaUtilEnumeration;
@protocol LibOrgBouncycastleJcajceUtilJcaJceHelper;

@interface LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi : JavaSecurityKeyStoreSpi < LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, LibOrgBouncycastleAsn1X509X509ObjectIdentifiers, LibOrgBouncycastleJceInterfacesBCKeyStore > {
 @public
  JavaSecuritySecureRandom *random_;
}
@property (readonly, copy, class) NSString *PKCS12_MAX_IT_COUNT_PROPERTY NS_SWIFT_NAME(PKCS12_MAX_IT_COUNT_PROPERTY);
@property (readonly, class) jint NULL_ NS_SWIFT_NAME(NULL_);
@property (readonly, class) jint CERTIFICATE NS_SWIFT_NAME(CERTIFICATE);
@property (readonly, class) jint KEY NS_SWIFT_NAME(KEY);
@property (readonly, class) jint SECRET NS_SWIFT_NAME(SECRET);
@property (readonly, class) jint SEALED NS_SWIFT_NAME(SEALED);
@property (readonly, class) jint KEY_PRIVATE NS_SWIFT_NAME(KEY_PRIVATE);
@property (readonly, class) jint KEY_PUBLIC NS_SWIFT_NAME(KEY_PUBLIC);
@property (readonly, class) jint KEY_SECRET NS_SWIFT_NAME(KEY_SECRET);

+ (NSString *)PKCS12_MAX_IT_COUNT_PROPERTY;

+ (jint)NULL_;

+ (jint)CERTIFICATE;

+ (jint)KEY;

+ (jint)SECRET;

+ (jint)SEALED;

+ (jint)KEY_PRIVATE;

+ (jint)KEY_PUBLIC;

+ (jint)KEY_SECRET;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceUtilJcaJceHelper:(id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)helper
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)keyAlgorithm
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)certAlgorithm;

- (id<JavaUtilEnumeration>)engineAliases;

- (jboolean)engineContainsAliasWithNSString:(NSString *)alias;

- (void)engineDeleteEntryWithNSString:(NSString *)alias;

- (JavaSecurityCertCertificate *)engineGetCertificateWithNSString:(NSString *)alias;

- (NSString *)engineGetCertificateAliasWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (IOSObjectArray *)engineGetCertificateChainWithNSString:(NSString *)alias;

- (JavaUtilDate *)engineGetCreationDateWithNSString:(NSString *)alias;

- (id<JavaSecurityKey>)engineGetKeyWithNSString:(NSString *)alias
                                  withCharArray:(IOSCharArray *)password;

- (jboolean)engineIsCertificateEntryWithNSString:(NSString *)alias;

- (jboolean)engineIsKeyEntryWithNSString:(NSString *)alias;

- (void)engineLoadWithJavaIoInputStream:(JavaIoInputStream *)stream
                          withCharArray:(IOSCharArray *)password;

- (void)engineSetCertificateEntryWithNSString:(NSString *)alias
              withJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (void)engineSetKeyEntryWithNSString:(NSString *)alias
                        withByteArray:(IOSByteArray *)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)chain;

- (void)engineSetKeyEntryWithNSString:(NSString *)alias
                  withJavaSecurityKey:(id<JavaSecurityKey>)key
                        withCharArray:(IOSCharArray *)password
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)chain;

- (jint)engineSize;

- (void)engineStoreWithJavaSecurityKeyStore_LoadStoreParameter:(id<JavaSecurityKeyStore_LoadStoreParameter>)param;

- (void)engineStoreWithJavaIoOutputStream:(JavaIoOutputStream *)stream
                            withCharArray:(IOSCharArray *)password;

- (void)setRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rand;

#pragma mark Protected

- (IOSByteArray *)cryptDataWithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                         withCharArray:(IOSCharArray *)password
                           withBoolean:(jboolean)wrongPKCS12Zero
                         withByteArray:(IOSByteArray *)data;

- (id<JavaSecurityPrivateKey>)unwrapKeyWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                                           withByteArray:(IOSByteArray *)data
                                                                           withCharArray:(IOSCharArray *)password
                                                                             withBoolean:(jboolean)wrongPKCS12Zero;

- (IOSByteArray *)wrapKeyWithNSString:(NSString *)algorithm
                  withJavaSecurityKey:(id<JavaSecurityKey>)key
withLibOrgBouncycastleAsn1PkcsPKCS12PBEParams:(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *)pbeParams
                        withCharArray:(IOSCharArray *)password;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, random_, JavaSecuritySecureRandom *)

inline NSString *LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_PKCS12_MAX_IT_COUNT_PROPERTY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_PKCS12_MAX_IT_COUNT_PROPERTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, PKCS12_MAX_IT_COUNT_PROPERTY, NSString *)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_NULL(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_NULL 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, NULL, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_CERTIFICATE(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_CERTIFICATE 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, CERTIFICATE, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_KEY(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_KEY 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, KEY, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_SECRET(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_SECRET 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, SECRET, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_SEALED(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_SEALED 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, SEALED, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_KEY_PRIVATE(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_KEY_PRIVATE 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, KEY_PRIVATE, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_KEY_PUBLIC(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_KEY_PUBLIC 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, KEY_PUBLIC, jint)

inline jint LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_get_KEY_SECRET(void);
#define LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_KEY_SECRET 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi, KEY_SECRET, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi *self, id<LibOrgBouncycastleJcajceUtilJcaJceHelper> helper, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *certAlgorithm);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi *new_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(id<LibOrgBouncycastleJcajceUtilJcaJceHelper> helper, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *certAlgorithm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi *create_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(id<LibOrgBouncycastleJcajceUtilJcaJceHelper> helper, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAlgorithm, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *certAlgorithm);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi)

@interface LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore : LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceUtilJcaJceHelper:(id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)arg0
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore_init(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore *new_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore *create_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore)

@interface LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES : LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceUtilJcaJceHelper:(id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)arg0
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES_init(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES *new_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES *create_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_BCPKCS12KeyStore3DES)

@interface LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore : LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceUtilJcaJceHelper:(id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)arg0
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore_init(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore *new_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore *create_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore)

@interface LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES : LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceUtilJcaJceHelper:(id<LibOrgBouncycastleJcajceUtilJcaJceHelper>)arg0
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1
                            withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES_init(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES *new_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES *create_LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderKeystorePkcs12PKCS12KeyStoreSpi_DefPKCS12KeyStore3DES)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKCS12KeyStoreSpi_H
