//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/generation/type/ECDSA.java
//

#include "ECDH.h"
#include "ECDSA.h"
#include "EllipticCurve.h"
#include "J2ObjC_source.h"
#include "PublicKeyAlgorithm.h"

@implementation LibComAfterlogicPgpKeyGenerationTypeECDSA

- (instancetype)initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve:(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *)curve {
  LibComAfterlogicPgpKeyGenerationTypeECDSA_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(self, curve);
  return self;
}

+ (LibComAfterlogicPgpKeyGenerationTypeECDSA *)fromCurveWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve:(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *)curve {
  return LibComAfterlogicPgpKeyGenerationTypeECDSA_fromCurveWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(curve);
}

- (NSString *)getName {
  return @"ECDSA";
}

- (LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm *)getAlgorithm {
  return JreLoadEnum(LibComAfterlogicPgpAlgorithmPublicKeyAlgorithm, ECDSA);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpKeyGenerationTypeECDSA;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpAlgorithmPublicKeyAlgorithm;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve:);
  methods[1].selector = @selector(fromCurveWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve:);
  methods[2].selector = @selector(getName);
  methods[3].selector = @selector(getAlgorithm);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve;", "fromCurve" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeyGenerationTypeECDSA = { "ECDSA", "lib.com.afterlogic.pgp.key.generation.type", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpKeyGenerationTypeECDSA;
}

@end

void LibComAfterlogicPgpKeyGenerationTypeECDSA_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(LibComAfterlogicPgpKeyGenerationTypeECDSA *self, LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *curve) {
  LibComAfterlogicPgpKeyGenerationTypeECDH_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(self, curve);
}

LibComAfterlogicPgpKeyGenerationTypeECDSA *new_LibComAfterlogicPgpKeyGenerationTypeECDSA_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *curve) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeyGenerationTypeECDSA, initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_, curve)
}

LibComAfterlogicPgpKeyGenerationTypeECDSA *create_LibComAfterlogicPgpKeyGenerationTypeECDSA_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *curve) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeyGenerationTypeECDSA, initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_, curve)
}

LibComAfterlogicPgpKeyGenerationTypeECDSA *LibComAfterlogicPgpKeyGenerationTypeECDSA_fromCurveWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(LibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve *curve) {
  LibComAfterlogicPgpKeyGenerationTypeECDSA_initialize();
  return new_LibComAfterlogicPgpKeyGenerationTypeECDSA_initWithLibComAfterlogicPgpKeyGenerationTypeCurveEllipticCurve_(curve);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeyGenerationTypeECDSA)
