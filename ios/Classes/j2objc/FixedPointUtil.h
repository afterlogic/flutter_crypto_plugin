//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/FixedPointUtil.java
//

#ifndef FixedPointUtil_H
#define FixedPointUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleMathEcECCurve;
@class LibOrgBouncycastleMathEcECPoint;
@class LibOrgBouncycastleMathEcFixedPointPreCompInfo;
@protocol LibOrgBouncycastleMathEcPreCompInfo;

@interface LibOrgBouncycastleMathEcFixedPointUtil : NSObject
@property (readonly, copy, class) NSString *PRECOMP_NAME NS_SWIFT_NAME(PRECOMP_NAME);

+ (NSString *)PRECOMP_NAME;

#pragma mark Public

- (instancetype __nonnull)init;

+ (jint)getCombSizeWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)c;

+ (LibOrgBouncycastleMathEcFixedPointPreCompInfo *)getFixedPointPreCompInfoWithLibOrgBouncycastleMathEcPreCompInfo:(id<LibOrgBouncycastleMathEcPreCompInfo>)preCompInfo;

+ (LibOrgBouncycastleMathEcFixedPointPreCompInfo *)precomputeWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcFixedPointUtil)

inline NSString *LibOrgBouncycastleMathEcFixedPointUtil_get_PRECOMP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleMathEcFixedPointUtil_PRECOMP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleMathEcFixedPointUtil, PRECOMP_NAME, NSString *)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcFixedPointUtil_init(LibOrgBouncycastleMathEcFixedPointUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointUtil *new_LibOrgBouncycastleMathEcFixedPointUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointUtil *create_LibOrgBouncycastleMathEcFixedPointUtil_init(void);

FOUNDATION_EXPORT jint LibOrgBouncycastleMathEcFixedPointUtil_getCombSizeWithLibOrgBouncycastleMathEcECCurve_(LibOrgBouncycastleMathEcECCurve *c);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointPreCompInfo *LibOrgBouncycastleMathEcFixedPointUtil_getFixedPointPreCompInfoWithLibOrgBouncycastleMathEcPreCompInfo_(id<LibOrgBouncycastleMathEcPreCompInfo> preCompInfo);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcFixedPointPreCompInfo *LibOrgBouncycastleMathEcFixedPointUtil_precomputeWithLibOrgBouncycastleMathEcECPoint_(LibOrgBouncycastleMathEcECPoint *p);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcFixedPointUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // FixedPointUtil_H
