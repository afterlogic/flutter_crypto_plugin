//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PBKDF1Key.java
//

#ifndef PBKDF1Key_H
#define PBKDF1Key_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PBKDFKey.h"

@class IOSByteArray;
@class IOSCharArray;
@protocol LibOrgBouncycastleCryptoCharToByteConverter;

@interface LibOrgBouncycastleJcajcePBKDF1Key : NSObject < LibOrgBouncycastleJcajcePBKDFKey >

#pragma mark Public

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)password
withLibOrgBouncycastleCryptoCharToByteConverter:(id<LibOrgBouncycastleCryptoCharToByteConverter>)converter;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (IOSCharArray *)getPassword;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajcePBKDF1Key)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajcePBKDF1Key_initWithCharArray_withLibOrgBouncycastleCryptoCharToByteConverter_(LibOrgBouncycastleJcajcePBKDF1Key *self, IOSCharArray *password, id<LibOrgBouncycastleCryptoCharToByteConverter> converter);

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePBKDF1Key *new_LibOrgBouncycastleJcajcePBKDF1Key_initWithCharArray_withLibOrgBouncycastleCryptoCharToByteConverter_(IOSCharArray *password, id<LibOrgBouncycastleCryptoCharToByteConverter> converter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePBKDF1Key *create_LibOrgBouncycastleJcajcePBKDF1Key_initWithCharArray_withLibOrgBouncycastleCryptoCharToByteConverter_(IOSCharArray *password, id<LibOrgBouncycastleCryptoCharToByteConverter> converter);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajcePBKDF1Key)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PBKDF1Key_H
