//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/BasicEntropySourceProvider.java
//

#ifndef BasicEntropySourceProvider_H
#define BasicEntropySourceProvider_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "EntropySourceProvider.h"
#include "J2ObjC_header.h"

@class JavaSecuritySecureRandom;
@protocol LibOrgBouncycastleCryptoPrngEntropySource;

@interface LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider : NSObject < LibOrgBouncycastleCryptoPrngEntropySourceProvider >

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                               withBoolean:(jboolean)isPredictionResistant;

- (id<LibOrgBouncycastleCryptoPrngEntropySource>)getWithInt:(jint)bitsRequired;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider *self, JavaSecuritySecureRandom *random, jboolean isPredictionResistant);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider *new_LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *random, jboolean isPredictionResistant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider *create_LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider_initWithJavaSecuritySecureRandom_withBoolean_(JavaSecuritySecureRandom *random, jboolean isPredictionResistant);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngBasicEntropySourceProvider)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BasicEntropySourceProvider_H
