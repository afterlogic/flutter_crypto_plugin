//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/WOTSPlus.java
//

#ifndef WOTSPlus_H
#define WOTSPlus_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions;
@class LibOrgBouncycastlePqcCryptoXmssOTSHashAddress;
@class LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters;
@class LibOrgBouncycastlePqcCryptoXmssWOTSPlusPrivateKeyParameters;
@class LibOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters;
@class LibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature;

@interface LibOrgBouncycastlePqcCryptoXmssWOTSPlus : NSObject

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters:(LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *)params;

- (LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions *)getKhf;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *)getParams;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlusPrivateKeyParameters *)getPrivateKey;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *)getPublicKeyWithLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *)getPublicKeyFromSignatureWithByteArray:(IOSByteArray *)messageDigest
                                                  withLibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature:(LibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)signature
                                                     withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (IOSByteArray *)getPublicSeed;

- (IOSByteArray *)getSecretKeySeed;

- (IOSByteArray *)getWOTSPlusSecretKeyWithByteArray:(IOSByteArray *)secretKeySeed
  withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (LibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)signWithByteArray:(IOSByteArray *)messageDigest
                      withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)messageDigest
withLibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature:(LibOrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)signature
withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

#pragma mark Package-Private

- (void)importKeysWithByteArray:(IOSByteArray *)secretKeySeed
                  withByteArray:(IOSByteArray *)publicSeed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssWOTSPlus)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssWOTSPlus_initWithLibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(LibOrgBouncycastlePqcCryptoXmssWOTSPlus *self, LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssWOTSPlus *new_LibOrgBouncycastlePqcCryptoXmssWOTSPlus_initWithLibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssWOTSPlus *create_LibOrgBouncycastlePqcCryptoXmssWOTSPlus_initWithLibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(LibOrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssWOTSPlus)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // WOTSPlus_H
