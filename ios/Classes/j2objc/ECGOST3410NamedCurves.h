//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cryptopro/ECGOST3410NamedCurves.java
//

#ifndef ECGOST3410NamedCurves_H
#define ECGOST3410NamedCurves_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilHashtable;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleCryptoParamsECDomainParameters;
@protocol JavaUtilEnumeration;

@interface LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves : NSObject
@property (readonly, class) JavaUtilHashtable *objIds NS_SWIFT_NAME(objIds);
@property (readonly, class) JavaUtilHashtable *params NS_SWIFT_NAME(params);
@property (readonly, nonatomic, getter=getNames, class) JavaUtilHashtable *names NS_SWIFT_NAME(names);

+ (JavaUtilHashtable *)objIds;

+ (JavaUtilHashtable *)params;

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleCryptoParamsECDomainParameters *)getByNameWithNSString:(NSString *)name;

+ (LibOrgBouncycastleCryptoParamsECDomainParameters *)getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (NSString *)getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (id<JavaUtilEnumeration>)getNames;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_get_objIds(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_objIds;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves, objIds, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_get_params(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_params;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves, params, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_get_names(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_names;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves, names, JavaUtilHashtable *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_init(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves *new_LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves *create_LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECDomainParameters *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT id<JavaUtilEnumeration> LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNames(void);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsECDomainParameters *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getOIDWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECGOST3410NamedCurves_H
