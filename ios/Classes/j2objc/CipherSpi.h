//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/elgamal/CipherSpi.java
//

#ifndef CipherSpi_H
#define CipherSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BaseCipherSpi.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecurityAlgorithmParameters;
@class JavaSecuritySecureRandom;
@protocol JavaSecurityKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoAsymmetricBlockCipher;

@interface LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi : LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseCipherSpi

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)engine;

#pragma mark Protected

- (IOSByteArray *)engineDoFinalWithByteArray:(IOSByteArray *)input
                                     withInt:(jint)inputOffset
                                     withInt:(jint)inputLen;

- (jint)engineDoFinalWithByteArray:(IOSByteArray *)input
                           withInt:(jint)inputOffset
                           withInt:(jint)inputLen
                     withByteArray:(IOSByteArray *)output
                           withInt:(jint)outputOffset;

- (jint)engineGetBlockSize;

- (jint)engineGetKeySizeWithJavaSecurityKey:(id<JavaSecurityKey>)key;

- (jint)engineGetOutputSizeWithInt:(jint)inputLen;

- (JavaSecurityAlgorithmParameters *)engineGetParameters;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecurityAlgorithmParameters:(JavaSecurityAlgorithmParameters *)params
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithInt:(jint)opmode
      withJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineSetModeWithNSString:(NSString *)mode;

- (void)engineSetPaddingWithNSString:(NSString *)padding;

- (IOSByteArray *)engineUpdateWithByteArray:(IOSByteArray *)input
                                    withInt:(jint)inputOffset
                                    withInt:(jint)inputLen;

- (jint)engineUpdateWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inputOffset
                          withInt:(jint)inputLen
                    withByteArray:(IOSByteArray *)output
                          withInt:(jint)outputOffset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> engine);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> engine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> engine);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi)

@interface LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding : LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding_init(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_NoPadding)

@interface LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding : LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding_init(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding *new_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding *create_LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricElgamalCipherSpi_PKCS1v1_5Padding)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CipherSpi_H
