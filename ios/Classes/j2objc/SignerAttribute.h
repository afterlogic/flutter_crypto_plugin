//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/SignerAttribute.java
//

#ifndef SignerAttribute_H
#define SignerAttribute_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AttributeCertificate;

@interface LibOrgBouncycastleAsn1EsfSignerAttribute : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AttributeCertificate:(LibOrgBouncycastleAsn1X509AttributeCertificate *)certifiedAttributes;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509AttributeArray:(IOSObjectArray *)claimedAttributes;

+ (LibOrgBouncycastleAsn1EsfSignerAttribute *)getInstanceWithId:(id)o;

- (IOSObjectArray *)getValues;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfSignerAttribute)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignerAttribute *LibOrgBouncycastleAsn1EsfSignerAttribute_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509X509AttributeArray_(LibOrgBouncycastleAsn1EsfSignerAttribute *self, IOSObjectArray *claimedAttributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignerAttribute *new_LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509X509AttributeArray_(IOSObjectArray *claimedAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignerAttribute *create_LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509X509AttributeArray_(IOSObjectArray *claimedAttributes);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleAsn1EsfSignerAttribute *self, LibOrgBouncycastleAsn1X509AttributeCertificate *certifiedAttributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignerAttribute *new_LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleAsn1X509AttributeCertificate *certifiedAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfSignerAttribute *create_LibOrgBouncycastleAsn1EsfSignerAttribute_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleAsn1X509AttributeCertificate *certifiedAttributes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfSignerAttribute)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SignerAttribute_H
