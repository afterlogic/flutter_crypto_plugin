//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/x509/JcajceX509CRLEntryObject.java
//

#include "ASN1Dump.h"
#include "ASN1Encodable.h"
#include "ASN1Encoding.h"
#include "ASN1Enumerated.h"
#include "ASN1InputStream.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "Asn1X509Time.h"
#include "CRLReason.h"
#include "Extension.h"
#include "Extensions.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceX509CRLEntryObject.h"
#include "Strings.h"
#include "TBSCertList.h"
#include "X500Name.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/X509CRLEntry.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "javax/security/auth/x500/X500Principal.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject () {
 @public
  LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c_;
  LibOrgBouncycastleAsn1X500X500Name *certificateIssuer_;
  jint hashValue_;
  jboolean isHashValueSet_;
}

- (LibOrgBouncycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer;

- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical;

- (LibOrgBouncycastleAsn1X509Extension *)getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, c_, LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, certificateIssuer_, LibOrgBouncycastleAsn1X500X500Name *)

__attribute__((unused)) static LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_loadCertificateIssuerWithBoolean_withLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, jboolean isIndirect, LibOrgBouncycastleAsn1X500X500Name *previousCertificateIssuer);

__attribute__((unused)) static id<JavaUtilSet> LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionOIDsWithBoolean_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, jboolean critical);

__attribute__((unused)) static LibOrgBouncycastleAsn1X509Extension *LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject

- (instancetype)initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry:(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *)c {
  LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(self, c);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry:(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *)c
                                                           withBoolean:(jboolean)isIndirect
                                withLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer {
  LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_(self, c, isIndirect, previousCertificateIssuer);
  return self;
}

- (jboolean)hasUnsupportedCriticalExtension {
  id<JavaUtilSet> extns = [self getCriticalExtensionOIDs];
  return extns != nil && ![extns isEmpty];
}

- (LibOrgBouncycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer {
  return LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_loadCertificateIssuerWithBoolean_withLibOrgBouncycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}

- (JavaxSecurityAuthX500X500Principal *)getCertificateIssuer {
  if (certificateIssuer_ == nil) {
    return nil;
  }
  @try {
    return new_JavaxSecurityAuthX500X500Principal_initWithByteArray_([certificateIssuer_ getEncoded]);
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical {
  return LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionOIDsWithBoolean_(self, critical);
}

- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  return LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionOIDsWithBoolean_(self, true);
}

- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  return LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionOIDsWithBoolean_(self, false);
}

- (LibOrgBouncycastleAsn1X509Extension *)getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, oid);
}

- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid {
  LibOrgBouncycastleAsn1X509Extension *ext = LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oid));
  if (ext != nil) {
    @try {
      return [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getEncoded];
    }
    @catch (JavaLangException *e) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Exception encoding: ", [e description]));
    }
  }
  return nil;
}

- (NSUInteger)hash {
  if (!isHashValueSet_) {
    hashValue_ = ((jint) [super hash]);
    isHashValueSet_ = true;
  }
  return hashValue_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if ([o isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject class]]) {
    LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *other = (LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *) o;
    return [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) isEqual:((LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *) nil_chk(other))->c_];
  }
  return [super isEqual:self];
}

- (IOSByteArray *)getEncoded {
  @try {
    return [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaSecurityCertCRLException_initWithNSString_([e description]);
  }
}

- (JavaMathBigInteger *)getSerialNumber {
  return [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk([((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getUserCertificate])) getValue];
}

- (JavaUtilDate *)getRevocationDate {
  return [((LibOrgBouncycastleAsn1X509Asn1X509Time *) nil_chk([((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getRevocationDate])) getDate];
}

- (jboolean)hasExtensions {
  return [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions] != nil;
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = LibOrgBouncycastleUtilStrings_lineSeparator();
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"      userCertificate: "])) appendWithId:[self getSerialNumber]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       revocationDate: "])) appendWithId:[self getRevocationDate]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       certificateIssuer: "])) appendWithId:[self getCertificateIssuer]])) appendWithNSString:nl];
  LibOrgBouncycastleAsn1X509Extensions *extensions = [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions];
  if (extensions != nil) {
    id<JavaUtilEnumeration> e = [extensions oids];
    if ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"   crlEntryExtensions:"])) appendWithNSString:nl];
      while ([e hasMoreElements]) {
        LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [LibOrgBouncycastleAsn1ASN1ObjectIdentifier class]);
        LibOrgBouncycastleAsn1X509Extension *ext = [extensions getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
        if ([((LibOrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnValue] != nil) {
          IOSByteArray *octs = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getOctets];
          LibOrgBouncycastleAsn1ASN1InputStream *dIn = new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(octs);
          (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"                       critical("])) appendWithBoolean:[ext isCritical]])) appendWithNSString:@") "];
          @try {
            if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, reasonCode)]) {
              (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithId:LibOrgBouncycastleAsn1X509CRLReason_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Enumerated_getInstanceWithId_([dIn readObject]))])) appendWithNSString:nl];
            }
            else if ([oid isEqual:JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, certificateIssuer)]) {
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"Certificate issuer: "])) appendWithId:LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([dIn readObject])])) appendWithNSString:nl];
            }
            else {
              (void) [buf appendWithNSString:[oid getId]];
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:LibOrgBouncycastleAsn1UtilASN1Dump_dumpAsStringWithId_([dIn readObject])])) appendWithNSString:nl];
            }
          }
          @catch (JavaLangException *ex) {
            (void) [buf appendWithNSString:[oid getId]];
            (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:@"*****"])) appendWithNSString:nl];
          }
        }
        else {
          (void) [buf appendWithNSString:nl];
        }
      }
    }
  }
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X500X500Name;", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509Extension;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 13, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry:withBoolean:withLibOrgBouncycastleAsn1X500X500Name:);
  methods[2].selector = @selector(hasUnsupportedCriticalExtension);
  methods[3].selector = @selector(loadCertificateIssuerWithBoolean:withLibOrgBouncycastleAsn1X500X500Name:);
  methods[4].selector = @selector(getCertificateIssuer);
  methods[5].selector = @selector(getExtensionOIDsWithBoolean:);
  methods[6].selector = @selector(getCriticalExtensionOIDs);
  methods[7].selector = @selector(getNonCriticalExtensionOIDs);
  methods[8].selector = @selector(getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(getExtensionValueWithNSString:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getSerialNumber);
  methods[14].selector = @selector(getRevocationDate);
  methods[15].selector = @selector(hasExtensions);
  methods[16].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateIssuer_", "LLibOrgBouncycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValue_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isHashValueSet_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", "LLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry;ZLLibOrgBouncycastleAsn1X500X500Name;", "loadCertificateIssuer", "ZLLibOrgBouncycastleAsn1X500X500Name;", "getExtensionOIDs", "Z", "getExtension", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getExtensionValue", "LNSString;", "hashCode", "equals", "LNSObject;", "LJavaSecurityCertCRLException;", "toString" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject = { "JcajceX509CRLEntryObject", "lib.org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 17, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  JavaSecurityCertX509CRLEntry_init(self);
  self->c_ = c;
  self->certificateIssuer_ = nil;
}

LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *new_LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_, c)
}

LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *create_LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_, c)
}

void LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, LibOrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  JavaSecurityCertX509CRLEntry_init(self);
  self->c_ = c;
  self->certificateIssuer_ = LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_loadCertificateIssuerWithBoolean_withLibOrgBouncycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}

LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *new_LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, LibOrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}

LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *create_LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, LibOrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject, initWithLibOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withLibOrgBouncycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}

LibOrgBouncycastleAsn1X500X500Name *LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_loadCertificateIssuerWithBoolean_withLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, jboolean isIndirect, LibOrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  if (!isIndirect) {
    return nil;
  }
  LibOrgBouncycastleAsn1X509Extension *ext = LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, certificateIssuer));
  if (ext == nil) {
    return previousCertificateIssuer;
  }
  @try {
    IOSObjectArray *names = [((LibOrgBouncycastleAsn1X509GeneralNames *) nil_chk(LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([ext getParsedValue]))) getNames];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(names))->size_; i++) {
      if ([((LibOrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == LibOrgBouncycastleAsn1X509GeneralName_directoryName) {
        return LibOrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName]);
      }
    }
    return nil;
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

id<JavaUtilSet> LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionOIDsWithBoolean_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, jboolean critical) {
  LibOrgBouncycastleAsn1X509Extensions *extensions = [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  if (extensions != nil) {
    id<JavaUtilSet> set = new_JavaUtilHashSet_init();
    id<JavaUtilEnumeration> e = [extensions oids];
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [LibOrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      LibOrgBouncycastleAsn1X509Extension *ext = [extensions getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
      if (critical == [((LibOrgBouncycastleAsn1X509Extension *) nil_chk(ext)) isCritical]) {
        [set addWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
      }
    }
    return set;
  }
  return nil;
}

LibOrgBouncycastleAsn1X509Extension *LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject_getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  LibOrgBouncycastleAsn1X509Extensions *exts = [((LibOrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  if (exts != nil) {
    return [exts getExtensionWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricX509JcajceX509CRLEntryObject)
