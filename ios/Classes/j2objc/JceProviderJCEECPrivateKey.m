//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JceProviderJCEECPrivateKey.java
//

#include "ASN1Encodable.h"
#include "ASN1Encoding.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "BouncyCastleProvider.h"
#include "CryptoProObjectIdentifiers.h"
#include "DERBitString.h"
#include "DERNull.h"
#include "EC5Util.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECGOST3410NamedCurves.h"
#include "ECNamedCurveSpec.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "ECPrivateKeyParameters.h"
#include "ECPrivateKeySpec.h"
#include "ECPrivateKeyStructure.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JCEECPublicKey.h"
#include "JcajceUtilECUtil.h"
#include "JceProviderJCEECPrivateKey.h"
#include "PKCS12BagAttributeCarrierImpl.h"
#include "PrivateKeyInfo.h"
#include "ProviderConfiguration.h"
#include "Strings.h"
#include "SubjectPublicKeyInfo.h"
#include "X962Parameters.h"
#include "X9ECParameters.h"
#include "X9ObjectIdentifiers.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/ECPrivateKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPrivateKeySpec.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey () {
 @public
  NSString *algorithm_;
  JavaMathBigInteger *d_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  jboolean withCompression_;
  LibOrgBouncycastleAsn1DERBitString *publicKey_;
  LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *attrCarrier_;
}

- (void)populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

- (LibOrgBouncycastleAsn1DERBitString *)getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pub;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, d_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, publicKey_, LibOrgBouncycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, attrCarrier_, LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *)

__attribute__((unused)) static void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

__attribute__((unused)) static LibOrgBouncycastleAsn1DERBitString *LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleJceProviderJCEECPublicKey *pub);

__attribute__((unused)) static void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(self, key);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceSpecECPrivateKeySpec:(LibOrgBouncycastleJceSpecECPrivateKeySpec *)spec {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(self, algorithm, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(self, algorithm, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey:(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *)key {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(self, algorithm, key);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pubKey
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(self, algorithm, params, pubKey, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pubKey
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(self, algorithm, params, pubKey, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(self, algorithm, params);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
  return self;
}

- (void)populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

- (NSString *)getAlgorithm {
  return algorithm_;
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  LibOrgBouncycastleAsn1X9X962Parameters *params;
  if ([ecSpec_ isKindOfClass:[LibOrgBouncycastleJceSpecECNamedCurveSpec class]]) {
    LibOrgBouncycastleAsn1ASN1ObjectIdentifier *curveOid = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getNamedCurveOidWithNSString_([((LibOrgBouncycastleJceSpecECNamedCurveSpec *) nil_chk(((LibOrgBouncycastleJceSpecECNamedCurveSpec *) ecSpec_))) getName]);
    if (curveOid == nil) {
      curveOid = new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((LibOrgBouncycastleJceSpecECNamedCurveSpec *) nil_chk(((LibOrgBouncycastleJceSpecECNamedCurveSpec *) ecSpec_))) getName]);
    }
    params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(curveOid);
  }
  else if (ecSpec_ == nil) {
    params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1ASN1Null_(JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
  }
  else {
    LibOrgBouncycastleMathEcECCurve *curve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([ecSpec_ getCurve]);
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getGenerator], withCompression_), [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], JavaMathBigInteger_valueOfWithLong_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve])) getSeed]);
    params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1X9X9ECParameters_(ecP);
  }
  LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info;
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure *keyStructure;
  if (publicKey_ != nil) {
    keyStructure = new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_([self getS], publicKey_, params);
  }
  else {
    keyStructure = new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_([self getS], params);
  }
  @try {
    if ([((NSString *) nil_chk(algorithm_)) isEqual:@"ECGOST3410"]) {
      info = new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001), [params toASN1Primitive]), [keyStructure toASN1Primitive]);
    }
    else {
      info = new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_ecPublicKey), [params toASN1Primitive]), [keyStructure toASN1Primitive]);
    }
    return [info getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (JavaSecuritySpecECParameterSpec *)getParams {
  return ecSpec_;
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters {
  if (ecSpec_ == nil) {
    return nil;
  }
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec {
  if (ecSpec_ != nil) {
    return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  }
  return [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(LibOrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getEcImplicitlyCa];
}

- (JavaMathBigInteger *)getS {
  return d_;
}

- (JavaMathBigInteger *)getD {
  return d_;
}

- (void)setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)attribute {
  [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withLibOrgBouncycastleAsn1ASN1Encodable:attribute];
}

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}

- (id<JavaUtilEnumeration>)getBagAttributeKeys {
  return [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeKeys];
}

- (void)setPointFormatWithNSString:(NSString *)style {
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey class]])) {
    return false;
  }
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *other = (LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *) cast_chk(o, [LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey class]);
  return [((JavaMathBigInteger *) nil_chk([self getD])) isEqual:[((LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *) nil_chk(other)) getD]] && ([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) isEqual:[other engineGetSpec]]);
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getD])) hash]) ^ ((jint) [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = LibOrgBouncycastleUtilStrings_lineSeparator();
  (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"EC Private Key"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"             S: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk(self->d_)) toStringWithInt:16]])) appendWithNSString:nl];
  return [buf description];
}

- (LibOrgBouncycastleAsn1DERBitString *)getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey:(LibOrgBouncycastleJceProviderJCEECPublicKey *)pub {
  return LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey_(self, pub);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 7, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x2, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 22, 23, 24, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 26, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaSecurityInterfacesECPrivateKey:);
  methods[2].selector = @selector(initWithNSString:withLibOrgBouncycastleJceSpecECPrivateKeySpec:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecECPrivateKeySpec:);
  methods[4].selector = @selector(initWithNSString:withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey:);
  methods[5].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:withLibOrgBouncycastleJceProviderJCEECPublicKey:withJavaSecuritySpecECParameterSpec:);
  methods[6].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:withLibOrgBouncycastleJceProviderJCEECPublicKey:withLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[7].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:);
  methods[8].selector = @selector(initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[9].selector = @selector(populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[10].selector = @selector(getAlgorithm);
  methods[11].selector = @selector(getFormat);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getParams);
  methods[14].selector = @selector(getParameters);
  methods[15].selector = @selector(engineGetSpec);
  methods[16].selector = @selector(getS);
  methods[17].selector = @selector(getD);
  methods[18].selector = @selector(setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[19].selector = @selector(getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[20].selector = @selector(getBagAttributeKeys);
  methods[21].selector = @selector(setPointFormatWithNSString:);
  methods[22].selector = @selector(isEqual:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(description);
  methods[25].selector = @selector(getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey:);
  methods[26].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[27].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "LLibOrgBouncycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attrCarrier_", "LLibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityInterfacesECPrivateKey;", "LNSString;LLibOrgBouncycastleJceSpecECPrivateKeySpec;", "LNSString;LJavaSecuritySpecECPrivateKeySpec;", "LNSString;LLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;LLibOrgBouncycastleJceProviderJCEECPublicKey;LJavaSecuritySpecECParameterSpec;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;LLibOrgBouncycastleJceProviderJCEECPublicKey;LLibOrgBouncycastleJceSpecECParameterSpec;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;", "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "populateFromPrivKeyInfo", "setBagAttribute", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleAsn1ASN1Encodable;", "getBagAttribute", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "getPublicKeyDetails", "LLibOrgBouncycastleJceProviderJCEECPublicKey;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey = { "JceProviderJCEECPrivateKey", "lib.org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 28, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey;
}

@end

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, init)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, init)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->d_ = [((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(key)) getS];
  self->algorithm_ = [key getAlgorithm];
  self->ecSpec_ = [key getParams];
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(id<JavaSecurityInterfacesECPrivateKey> key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_, key)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_(id<JavaSecurityInterfacesECPrivateKey> key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_, key)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleJceSpecECPrivateKeySpec *) nil_chk(spec)) getD];
  if ([spec getParams] != nil) {
    LibOrgBouncycastleMathEcECCurve *curve = [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve;
    ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    self->ecSpec_ = nil;
  }
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_, algorithm, spec)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_, algorithm, spec)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((JavaSecuritySpecECPrivateKeySpec *) nil_chk(spec)) getS];
  self->ecSpec_ = [spec getParams];
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_, algorithm, spec)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_, algorithm, spec)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = ((LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *) nil_chk(key))->d_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->attrCarrier_ = key->attrCarrier_;
  self->publicKey_ = key->publicKey_;
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_, algorithm, key)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_, algorithm, key)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  if (spec == nil) {
    LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([dp getG]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    self->ecSpec_ = spec;
  }
  self->publicKey_ = LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey_(self, pubKey);
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_, algorithm, params, pubKey, spec)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withJavaSecuritySpecECParameterSpec_, algorithm, params, pubKey, spec)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  if (spec == nil) {
    LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([dp getG]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([spec getG]), [spec getN], [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
  }
  self->publicKey_ = LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey_(self, pubKey);
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_, algorithm, params, pubKey, spec)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJceProviderJCEECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJceProviderJCEECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_, algorithm, params, pubKey, spec)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->ecSpec_ = nil;
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_, algorithm, params)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_, algorithm, params)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *new_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_, info)
}

LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *create_LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey, initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_, info)
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  LibOrgBouncycastleAsn1X9X962Parameters *params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1ASN1Primitive_((LibOrgBouncycastleAsn1ASN1Primitive *) cast_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(info)) getPrivateKeyAlgorithm])) getParameters], [LibOrgBouncycastleAsn1ASN1Primitive class]));
  if ([params isNamedCurve]) {
    LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([params getParameters]);
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getNamedCurveByOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
    if (ecP == nil) {
      LibOrgBouncycastleCryptoParamsECDomainParameters *gParam = LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
      JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(gParam)) getCurve], [gParam getSeed]);
      self->ecSpec_ = new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid), ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([gParam getG]), [gParam getN], [gParam getH]);
    }
    else {
      JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([ecP getCurve], [ecP getSeed]);
      self->ecSpec_ = new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getCurveNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid), ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([ecP getG]), [ecP getN], [ecP getH]);
    }
  }
  else if ([params isImplicitlyCA]) {
    self->ecSpec_ = nil;
  }
  else {
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve], [ecP getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([ecP getG]), [ecP getN], [((JavaMathBigInteger *) nil_chk([ecP getH])) intValue]);
  }
  id<LibOrgBouncycastleAsn1ASN1Encodable> privKey = [info parsePrivateKey];
  if ([privKey isKindOfClass:[LibOrgBouncycastleAsn1ASN1Integer class]]) {
    LibOrgBouncycastleAsn1ASN1Integer *derD = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(privKey);
    self->d_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(derD)) getValue];
  }
  else {
    LibOrgBouncycastleAsn1SecECPrivateKeyStructure *ec = new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_((LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk(privKey, [LibOrgBouncycastleAsn1ASN1Sequence class]));
    self->d_ = [ec getKey];
    self->publicKey_ = [ec getPublicKey];
  }
}

LibOrgBouncycastleAsn1DERBitString *LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJceProviderJCEECPublicKey_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, LibOrgBouncycastleJceProviderJCEECPublicKey *pub) {
  @try {
    LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info = LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((LibOrgBouncycastleJceProviderJCEECPublicKey *) nil_chk(pub)) getEncoded]));
    return [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, JavaIoObjectInputStream *inArg) {
  IOSByteArray *enc = (IOSByteArray *) cast_chk([((JavaIoObjectInputStream *) nil_chk(inArg)) readObject], [IOSByteArray class]);
  LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
  self->algorithm_ = (NSString *) cast_chk([inArg readObject], [NSString class]);
  self->withCompression_ = [inArg readBoolean];
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  [self->attrCarrier_ readObjectWithJavaIoObjectInputStream:inArg];
}

void LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) writeObjectWithId:[self getEncoded]];
  [outArg writeObjectWithId:self->algorithm_];
  [outArg writeBooleanWithBoolean:self->withCompression_];
  [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(self->attrCarrier_)) writeObjectWithJavaIoObjectOutputStream:outArg];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceProviderJceProviderJCEECPrivateKey)
