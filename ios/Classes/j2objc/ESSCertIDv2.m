//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ess/ESSCertIDv2.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "ESSCertIDv2.h"
#include "IOSPrimitiveArray.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1EssESSCertIDv2 () {
 @public
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm_;
  IOSByteArray *certHash_;
  LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EssESSCertIDv2, hashAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EssESSCertIDv2, certHash_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EssESSCertIDv2, issuerSerial_, LibOrgBouncycastleAsn1X509IssuerSerial *)

inline LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1EssESSCertIDv2_get_DEFAULT_ALG_ID(void);
static LibOrgBouncycastleAsn1X509AlgorithmIdentifier *LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EssESSCertIDv2, DEFAULT_ALG_ID, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1EssESSCertIDv2)

@implementation LibOrgBouncycastleAsn1EssESSCertIDv2

+ (LibOrgBouncycastleAsn1EssESSCertIDv2 *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1EssESSCertIDv2_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)certHash {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_(self, certHash);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                        withByteArray:(IOSByteArray *)certHash {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(self, algId, certHash);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)certHash
withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, certHash, issuerSerial);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                        withByteArray:(IOSByteArray *)certHash
                           withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)issuerSerial {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, algId, certHash, issuerSerial);
  return self;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  return self->hashAlgorithm_;
}

- (IOSByteArray *)getCertHash {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(certHash_);
}

- (LibOrgBouncycastleAsn1X509IssuerSerial *)getIssuerSerial {
  return issuerSerial_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (![((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(hashAlgorithm_)) isEqual:LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID]) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:hashAlgorithm_];
  }
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:[new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(certHash_) toASN1Primitive]];
  if (issuerSerial_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:issuerSerial_];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1EssESSCertIDv2;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509IssuerSerial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[4].selector = @selector(initWithByteArray:withLibOrgBouncycastleAsn1X509IssuerSerial:);
  methods[5].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:withLibOrgBouncycastleAsn1X509IssuerSerial:);
  methods[6].selector = @selector(getHashAlgorithm);
  methods[7].selector = @selector(getCertHash);
  methods[8].selector = @selector(getIssuerSerial);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certHash_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuerSerial_", "LLibOrgBouncycastleAsn1X509IssuerSerial;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DEFAULT_ALG_ID", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "[B", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "[BLLibOrgBouncycastleAsn1X509IssuerSerial;", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;[BLLibOrgBouncycastleAsn1X509IssuerSerial;", &LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EssESSCertIDv2 = { "ESSCertIDv2", "lib.org.bouncycastle.asn1.ess", ptrTable, methods, fields, 7, 0x1, 10, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EssESSCertIDv2;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1EssESSCertIDv2 class]) {
    LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256));
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1EssESSCertIDv2)
  }
}

@end

LibOrgBouncycastleAsn1EssESSCertIDv2 *LibOrgBouncycastleAsn1EssESSCertIDv2_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1EssESSCertIDv2 class]]) {
    return (LibOrgBouncycastleAsn1EssESSCertIDv2 *) o;
  }
  else if (o != nil) {
    return new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  jint count = 0;
  if ([[seq getObjectAtWithInt:0] isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
    self->hashAlgorithm_ = LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID;
  }
  else {
    self->hashAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:count++])) toASN1Primitive]);
  }
  self->certHash_ = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:count++])) toASN1Primitive]))) getOctets];
  if ([seq size] > count) {
    self->issuerSerial_ = LibOrgBouncycastleAsn1X509IssuerSerial_getInstanceWithId_([seq getObjectAtWithInt:count]);
  }
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, IOSByteArray *certHash) {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, nil, certHash, nil);
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_(IOSByteArray *certHash) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithByteArray_, certHash)
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_(IOSByteArray *certHash) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithByteArray_, certHash)
}

void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash) {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, algId, certHash, nil);
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, algId, certHash)
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_, algId, certHash)
}

void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, nil, certHash, issuerSerial);
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_, certHash, issuerSerial)
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_, certHash, issuerSerial)
}

void LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1EssESSCertIDv2 *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (algId == nil) {
    self->hashAlgorithm_ = LibOrgBouncycastleAsn1EssESSCertIDv2_DEFAULT_ALG_ID;
  }
  else {
    self->hashAlgorithm_ = algId;
  }
  self->certHash_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(certHash);
  self->issuerSerial_ = issuerSerial;
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *new_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_, algId, certHash, issuerSerial)
}

LibOrgBouncycastleAsn1EssESSCertIDv2 *create_LibOrgBouncycastleAsn1EssESSCertIDv2_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, LibOrgBouncycastleAsn1X509IssuerSerial *issuerSerial) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EssESSCertIDv2, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withLibOrgBouncycastleAsn1X509IssuerSerial_, algId, certHash, issuerSerial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EssESSCertIDv2)
