//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/RC2.java
//

#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AlgorithmProvider.h"
#include "Arrays.h"
#include "BaseAlgorithmParameterGenerator.h"
#include "BaseAlgorithmParameters.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseWrapCipher.h"
#include "CBCBlockCipher.h"
#include "CBCBlockCipherMac.h"
#include "CFBBlockCipherMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PBE.h"
#include "PBESecretKeyFactory.h"
#include "PKCSObjectIdentifiers.h"
#include "RC2.h"
#include "RC2CBCParameter.h"
#include "RC2Engine.h"
#include "RC2WrapEngine.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/InvalidParameterSpecException.h"
#include "javax/crypto/spec/IvParameterSpec.h"
#include "javax/crypto/spec/RC2ParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricRC2 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams () {
 @public
  IOSByteArray *iv_;
  jint parameterVersion_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams, iv_, IOSByteArray *)

inline IOSShortArray *LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_get_table(void);
static IOSShortArray *LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_table;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams, table, IOSShortArray *)

inline IOSShortArray *LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_get_ekb(void);
static IOSShortArray *LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_ekb;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams, ekb, IOSShortArray *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2_ECB;LLibOrgBouncycastleJcajceProviderSymmetricRC2_CBC;LLibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap;LLibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC;LLibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator;LLibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2 = { "RC2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(self, new_LibOrgBouncycastleCryptoEnginesRC2Engine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()), 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap = { "Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesRC2WrapEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC = { "CBCMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCBCBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_CBCMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC = { "CFB8MAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCFBBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_CFB8MAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory = { "PBEWithSHA1KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithSHA1andRC2", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHA1AndRC2_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS5S1, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 64, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory = { "PBEWithSHAAnd128BitKeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithSHAand128BitRC2-CBC", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd128BitRC2_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitKeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory = { "PBEWithSHAAnd40BitKeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithSHAand40BitRC2-CBC", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd40BitRC2_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 40, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitKeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2 = { "PBEWithMD5AndRC2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS5S1, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD5, 64, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5AndRC2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2 = { "PBEWithSHA1AndRC2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS5S1, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 64, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHA1AndRC2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2 = { "PBEWithSHAAnd128BitRC2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd128BitRC2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2 = { "PBEWithSHAAnd40BitRC2", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesRC2Engine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 40, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2 *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2 *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithSHAAnd40BitRC2)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory = { "PBEWithMD2KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithMD2andRC2", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD2AndRC2_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS5S1, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD2, 64, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD2KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory = { "PBEWithMD5KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithMD5andRC2", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD5AndRC2_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS5S1, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD5, 64, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_PBEWithMD5KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if ([genParamSpec isKindOfClass:[JavaxCryptoSpecRC2ParameterSpec class]]) {
    spec_ = (JavaxCryptoSpecRC2ParameterSpec *) genParamSpec;
    return;
  }
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for RC2 parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  JavaSecurityAlgorithmParameters *params;
  if (spec_ == nil) {
    IOSByteArray *iv = [IOSByteArray newArrayWithLength:8];
    if (random_ == nil) {
      random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
    }
    [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
    @try {
      params = [self createParametersInstanceWithNSString:@"RC2"];
      [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
    }
    @catch (JavaLangException *e) {
      @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
    }
  }
  else {
    @try {
      params = [self createParametersInstanceWithNSString:@"RC2"];
      [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:spec_];
    }
    @catch (JavaLangException *e) {
      @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
    }
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "spec_", "LJavaxCryptoSpecRC2ParameterSpec;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 3, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
  self->spec_ = nil;
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator = { "KeyGenerator", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"RC2", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_KeyGenerator)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSByteArray *)engineGetEncoded {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(iv_);
}

- (IOSByteArray *)engineGetEncodedWithNSString:(NSString *)format {
  if ([self isASN1FormatStringWithNSString:format]) {
    if (parameterVersion_ == -1) {
      return [new_LibOrgBouncycastleAsn1PkcsRC2CBCParameter_initWithByteArray_([self engineGetEncoded]) getEncoded];
    }
    else {
      return [new_LibOrgBouncycastleAsn1PkcsRC2CBCParameter_initWithInt_withByteArray_(parameterVersion_, [self engineGetEncoded]) getEncoded];
    }
  }
  if ([((NSString *) nil_chk(format)) isEqual:@"RAW"]) {
    return [self engineGetEncoded];
  }
  return nil;
}

- (id<JavaSecuritySpecAlgorithmParameterSpec>)localEngineGetParameterSpecWithIOSClass:(IOSClass *)paramSpec {
  if (paramSpec == JavaxCryptoSpecRC2ParameterSpec_class_() || paramSpec == JavaSecuritySpecAlgorithmParameterSpec_class_()) {
    if (parameterVersion_ != -1) {
      if (parameterVersion_ < 256) {
        return new_JavaxCryptoSpecRC2ParameterSpec_initWithInt_withByteArray_(IOSShortArray_Get(nil_chk(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_ekb), parameterVersion_), iv_);
      }
      else {
        return new_JavaxCryptoSpecRC2ParameterSpec_initWithInt_withByteArray_(parameterVersion_, iv_);
      }
    }
  }
  if (paramSpec == JavaxCryptoSpecIvParameterSpec_class_() || paramSpec == JavaSecuritySpecAlgorithmParameterSpec_class_()) {
    return new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv_);
  }
  @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(@"unknown parameter spec passed to RC2 parameters object.");
}

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec {
  if ([paramSpec isKindOfClass:[JavaxCryptoSpecIvParameterSpec class]]) {
    self->iv_ = [((JavaxCryptoSpecIvParameterSpec *) nil_chk(((JavaxCryptoSpecIvParameterSpec *) paramSpec))) getIV];
  }
  else if ([paramSpec isKindOfClass:[JavaxCryptoSpecRC2ParameterSpec class]]) {
    jint effKeyBits = [((JavaxCryptoSpecRC2ParameterSpec *) nil_chk(((JavaxCryptoSpecRC2ParameterSpec *) paramSpec))) getEffectiveKeyBits];
    if (effKeyBits != -1) {
      if (effKeyBits < 256) {
        parameterVersion_ = IOSShortArray_Get(nil_chk(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_table), effKeyBits);
      }
      else {
        parameterVersion_ = effKeyBits;
      }
    }
    self->iv_ = [((JavaxCryptoSpecRC2ParameterSpec *) nil_chk(((JavaxCryptoSpecRC2ParameterSpec *) paramSpec))) getIV];
  }
  else {
    @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(@"IvParameterSpec or RC2ParameterSpec required to initialise a RC2 parameters algorithm parameters object");
  }
}

- (void)engineInitWithByteArray:(IOSByteArray *)params {
  self->iv_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(params);
}

- (void)engineInitWithByteArray:(IOSByteArray *)params
                   withNSString:(NSString *)format {
  if ([self isASN1FormatStringWithNSString:format]) {
    LibOrgBouncycastleAsn1PkcsRC2CBCParameter *p = LibOrgBouncycastleAsn1PkcsRC2CBCParameter_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(params));
    if ([((LibOrgBouncycastleAsn1PkcsRC2CBCParameter *) nil_chk(p)) getRC2ParameterVersion] != nil) {
      parameterVersion_ = [((JavaMathBigInteger *) nil_chk([p getRC2ParameterVersion])) intValue];
    }
    iv_ = [p getIV];
    return;
  }
  if ([((NSString *) nil_chk(format)) isEqual:@"RAW"]) {
    [self engineInitWithByteArray:params];
    return;
  }
  @throw new_JavaIoIOException_initWithNSString_(@"Unknown parameters format in IV parameters object");
}

- (NSString *)engineToString {
  return @"RC2 Parameters";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecAlgorithmParameterSpec;", 0x4, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, 5, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 8, 2, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 9, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineGetEncoded);
  methods[2].selector = @selector(engineGetEncodedWithNSString:);
  methods[3].selector = @selector(localEngineGetParameterSpecWithIOSClass:);
  methods[4].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[5].selector = @selector(engineInitWithByteArray:);
  methods[6].selector = @selector(engineInitWithByteArray:withNSString:);
  methods[7].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "table", "[S", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "ekb", "[S", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "iv_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "parameterVersion_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineGetEncoded", "LNSString;", "LJavaIoIOException;", "localEngineGetParameterSpec", "LIOSClass;", "LJavaSecuritySpecInvalidParameterSpecException;", "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;", "[B", "[BLNSString;", &LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_table, &LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_ekb, "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 8, 4, 12, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams class]) {
    LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_table = [IOSShortArray newArrayWithShorts:(jshort[]){ (jint) 0xbd, (jint) 0x56, (jint) 0xea, (jint) 0xf2, (jint) 0xa2, (jint) 0xf1, (jint) 0xac, (jint) 0x2a, (jint) 0xb0, (jint) 0x93, (jint) 0xd1, (jint) 0x9c, (jint) 0x1b, (jint) 0x33, (jint) 0xfd, (jint) 0xd0, (jint) 0x30, (jint) 0x04, (jint) 0xb6, (jint) 0xdc, (jint) 0x7d, (jint) 0xdf, (jint) 0x32, (jint) 0x4b, (jint) 0xf7, (jint) 0xcb, (jint) 0x45, (jint) 0x9b, (jint) 0x31, (jint) 0xbb, (jint) 0x21, (jint) 0x5a, (jint) 0x41, (jint) 0x9f, (jint) 0xe1, (jint) 0xd9, (jint) 0x4a, (jint) 0x4d, (jint) 0x9e, (jint) 0xda, (jint) 0xa0, (jint) 0x68, (jint) 0x2c, (jint) 0xc3, (jint) 0x27, (jint) 0x5f, (jint) 0x80, (jint) 0x36, (jint) 0x3e, (jint) 0xee, (jint) 0xfb, (jint) 0x95, (jint) 0x1a, (jint) 0xfe, (jint) 0xce, (jint) 0xa8, (jint) 0x34, (jint) 0xa9, (jint) 0x13, (jint) 0xf0, (jint) 0xa6, (jint) 0x3f, (jint) 0xd8, (jint) 0x0c, (jint) 0x78, (jint) 0x24, (jint) 0xaf, (jint) 0x23, (jint) 0x52, (jint) 0xc1, (jint) 0x67, (jint) 0x17, (jint) 0xf5, (jint) 0x66, (jint) 0x90, (jint) 0xe7, (jint) 0xe8, (jint) 0x07, (jint) 0xb8, (jint) 0x60, (jint) 0x48, (jint) 0xe6, (jint) 0x1e, (jint) 0x53, (jint) 0xf3, (jint) 0x92, (jint) 0xa4, (jint) 0x72, (jint) 0x8c, (jint) 0x08, (jint) 0x15, (jint) 0x6e, (jint) 0x86, (jint) 0x00, (jint) 0x84, (jint) 0xfa, (jint) 0xf4, (jint) 0x7f, (jint) 0x8a, (jint) 0x42, (jint) 0x19, (jint) 0xf6, (jint) 0xdb, (jint) 0xcd, (jint) 0x14, (jint) 0x8d, (jint) 0x50, (jint) 0x12, (jint) 0xba, (jint) 0x3c, (jint) 0x06, (jint) 0x4e, (jint) 0xec, (jint) 0xb3, (jint) 0x35, (jint) 0x11, (jint) 0xa1, (jint) 0x88, (jint) 0x8e, (jint) 0x2b, (jint) 0x94, (jint) 0x99, (jint) 0xb7, (jint) 0x71, (jint) 0x74, (jint) 0xd3, (jint) 0xe4, (jint) 0xbf, (jint) 0x3a, (jint) 0xde, (jint) 0x96, (jint) 0x0e, (jint) 0xbc, (jint) 0x0a, (jint) 0xed, (jint) 0x77, (jint) 0xfc, (jint) 0x37, (jint) 0x6b, (jint) 0x03, (jint) 0x79, (jint) 0x89, (jint) 0x62, (jint) 0xc6, (jint) 0xd7, (jint) 0xc0, (jint) 0xd2, (jint) 0x7c, (jint) 0x6a, (jint) 0x8b, (jint) 0x22, (jint) 0xa3, (jint) 0x5b, (jint) 0x05, (jint) 0x5d, (jint) 0x02, (jint) 0x75, (jint) 0xd5, (jint) 0x61, (jint) 0xe3, (jint) 0x18, (jint) 0x8f, (jint) 0x55, (jint) 0x51, (jint) 0xad, (jint) 0x1f, (jint) 0x0b, (jint) 0x5e, (jint) 0x85, (jint) 0xe5, (jint) 0xc2, (jint) 0x57, (jint) 0x63, (jint) 0xca, (jint) 0x3d, (jint) 0x6c, (jint) 0xb4, (jint) 0xc5, (jint) 0xcc, (jint) 0x70, (jint) 0xb2, (jint) 0x91, (jint) 0x59, (jint) 0x0d, (jint) 0x47, (jint) 0x20, (jint) 0xc8, (jint) 0x4f, (jint) 0x58, (jint) 0xe0, (jint) 0x01, (jint) 0xe2, (jint) 0x16, (jint) 0x38, (jint) 0xc4, (jint) 0x6f, (jint) 0x3b, (jint) 0x0f, (jint) 0x65, (jint) 0x46, (jint) 0xbe, (jint) 0x7e, (jint) 0x2d, (jint) 0x7b, (jint) 0x82, (jint) 0xf9, (jint) 0x40, (jint) 0xb5, (jint) 0x1d, (jint) 0x73, (jint) 0xf8, (jint) 0xeb, (jint) 0x26, (jint) 0xc7, (jint) 0x87, (jint) 0x97, (jint) 0x25, (jint) 0x54, (jint) 0xb1, (jint) 0x28, (jint) 0xaa, (jint) 0x98, (jint) 0x9d, (jint) 0xa5, (jint) 0x64, (jint) 0x6d, (jint) 0x7a, (jint) 0xd4, (jint) 0x10, (jint) 0x81, (jint) 0x44, (jint) 0xef, (jint) 0x49, (jint) 0xd6, (jint) 0xae, (jint) 0x2e, (jint) 0xdd, (jint) 0x76, (jint) 0x5c, (jint) 0x2f, (jint) 0xa7, (jint) 0x1c, (jint) 0xc9, (jint) 0x09, (jint) 0x69, (jint) 0x9a, (jint) 0x83, (jint) 0xcf, (jint) 0x29, (jint) 0x39, (jint) 0xb9, (jint) 0xe9, (jint) 0x4c, (jint) 0xff, (jint) 0x43, (jint) 0xab } count:256];
    LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_ekb = [IOSShortArray newArrayWithShorts:(jshort[]){ (jint) 0x5d, (jint) 0xbe, (jint) 0x9b, (jint) 0x8b, (jint) 0x11, (jint) 0x99, (jint) 0x6e, (jint) 0x4d, (jint) 0x59, (jint) 0xf3, (jint) 0x85, (jint) 0xa6, (jint) 0x3f, (jint) 0xb7, (jint) 0x83, (jint) 0xc5, (jint) 0xe4, (jint) 0x73, (jint) 0x6b, (jint) 0x3a, (jint) 0x68, (jint) 0x5a, (jint) 0xc0, (jint) 0x47, (jint) 0xa0, (jint) 0x64, (jint) 0x34, (jint) 0x0c, (jint) 0xf1, (jint) 0xd0, (jint) 0x52, (jint) 0xa5, (jint) 0xb9, (jint) 0x1e, (jint) 0x96, (jint) 0x43, (jint) 0x41, (jint) 0xd8, (jint) 0xd4, (jint) 0x2c, (jint) 0xdb, (jint) 0xf8, (jint) 0x07, (jint) 0x77, (jint) 0x2a, (jint) 0xca, (jint) 0xeb, (jint) 0xef, (jint) 0x10, (jint) 0x1c, (jint) 0x16, (jint) 0x0d, (jint) 0x38, (jint) 0x72, (jint) 0x2f, (jint) 0x89, (jint) 0xc1, (jint) 0xf9, (jint) 0x80, (jint) 0xc4, (jint) 0x6d, (jint) 0xae, (jint) 0x30, (jint) 0x3d, (jint) 0xce, (jint) 0x20, (jint) 0x63, (jint) 0xfe, (jint) 0xe6, (jint) 0x1a, (jint) 0xc7, (jint) 0xb8, (jint) 0x50, (jint) 0xe8, (jint) 0x24, (jint) 0x17, (jint) 0xfc, (jint) 0x25, (jint) 0x6f, (jint) 0xbb, (jint) 0x6a, (jint) 0xa3, (jint) 0x44, (jint) 0x53, (jint) 0xd9, (jint) 0xa2, (jint) 0x01, (jint) 0xab, (jint) 0xbc, (jint) 0xb6, (jint) 0x1f, (jint) 0x98, (jint) 0xee, (jint) 0x9a, (jint) 0xa7, (jint) 0x2d, (jint) 0x4f, (jint) 0x9e, (jint) 0x8e, (jint) 0xac, (jint) 0xe0, (jint) 0xc6, (jint) 0x49, (jint) 0x46, (jint) 0x29, (jint) 0xf4, (jint) 0x94, (jint) 0x8a, (jint) 0xaf, (jint) 0xe1, (jint) 0x5b, (jint) 0xc3, (jint) 0xb3, (jint) 0x7b, (jint) 0x57, (jint) 0xd1, (jint) 0x7c, (jint) 0x9c, (jint) 0xed, (jint) 0x87, (jint) 0x40, (jint) 0x8c, (jint) 0xe2, (jint) 0xcb, (jint) 0x93, (jint) 0x14, (jint) 0xc9, (jint) 0x61, (jint) 0x2e, (jint) 0xe5, (jint) 0xcc, (jint) 0xf6, (jint) 0x5e, (jint) 0xa8, (jint) 0x5c, (jint) 0xd6, (jint) 0x75, (jint) 0x8d, (jint) 0x62, (jint) 0x95, (jint) 0x58, (jint) 0x69, (jint) 0x76, (jint) 0xa1, (jint) 0x4a, (jint) 0xb5, (jint) 0x55, (jint) 0x09, (jint) 0x78, (jint) 0x33, (jint) 0x82, (jint) 0xd7, (jint) 0xdd, (jint) 0x79, (jint) 0xf5, (jint) 0x1b, (jint) 0x0b, (jint) 0xde, (jint) 0x26, (jint) 0x21, (jint) 0x28, (jint) 0x74, (jint) 0x04, (jint) 0x97, (jint) 0x56, (jint) 0xdf, (jint) 0x3c, (jint) 0xf0, (jint) 0x37, (jint) 0x39, (jint) 0xdc, (jint) 0xff, (jint) 0x06, (jint) 0xa4, (jint) 0xea, (jint) 0x42, (jint) 0x08, (jint) 0xda, (jint) 0xb4, (jint) 0x71, (jint) 0xb0, (jint) 0xcf, (jint) 0x12, (jint) 0x7a, (jint) 0x4e, (jint) 0xfa, (jint) 0x6c, (jint) 0x1d, (jint) 0x84, (jint) 0x00, (jint) 0xc8, (jint) 0x7f, (jint) 0x91, (jint) 0x45, (jint) 0xaa, (jint) 0x2b, (jint) 0xc2, (jint) 0xb1, (jint) 0x8f, (jint) 0xd5, (jint) 0xba, (jint) 0xf2, (jint) 0xad, (jint) 0x19, (jint) 0xb2, (jint) 0x67, (jint) 0x36, (jint) 0xf7, (jint) 0x0f, (jint) 0x0a, (jint) 0x92, (jint) 0x7d, (jint) 0xe3, (jint) 0x9d, (jint) 0xe9, (jint) 0x90, (jint) 0x3e, (jint) 0x23, (jint) 0x27, (jint) 0x66, (jint) 0x13, (jint) 0xec, (jint) 0x81, (jint) 0x15, (jint) 0xbd, (jint) 0x22, (jint) 0xbf, (jint) 0x9f, (jint) 0x7e, (jint) 0xa9, (jint) 0x51, (jint) 0x4b, (jint) 0x4c, (jint) 0xfb, (jint) 0x02, (jint) 0xd3, (jint) 0x70, (jint) 0x86, (jint) 0x31, (jint) 0xe7, (jint) 0x3b, (jint) 0x05, (jint) 0x03, (jint) 0x54, (jint) 0x60, (jint) 0x48, (jint) 0x65, (jint) 0x18, (jint) 0xd2, (jint) 0xcd, (jint) 0x5f, (jint) 0x32, (jint) 0x88, (jint) 0x0e, (jint) 0x35, (jint) 0xfd } count:256];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameters_init(self);
  self->parameterVersion_ = 58;
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameterGenerator.RC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.1.2.840.113549.3.2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.RC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$KeyGenerator")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.1.2.840.113549.3.2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$KeyGenerator")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.RC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.1.2.840.113549.3.2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"Cipher.RC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher.RC2WRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMSRC2wrap) withNSString:@"RC2WRAP"];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, RC2_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Mac.RC2MAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$CBCMAC")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.RC2" withNSString:@"RC2MAC"];
  [provider addAlgorithmWithNSString:@"Mac.RC2MAC/CFB8" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$CFB8MAC")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.RC2/CFB8" withNSString:@"RC2MAC/CFB8"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHMD2ANDRC2-CBC" withNSString:@"PBEWITHMD2ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHMD5ANDRC2-CBC" withNSString:@"PBEWITHMD5ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA1ANDRC2-CBC" withNSString:@"PBEWITHSHA1ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD2AndRC2_CBC) withNSString:@"PBEWITHMD2ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD5AndRC2_CBC) withNSString:@"PBEWITHMD5ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHA1AndRC2_CBC) withNSString:@"PBEWITHSHA1ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.5" withNSString:@"PBEWITHSHAAND128BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.6" withNSString:@"PBEWITHSHAAND40BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHMD2ANDRC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithMD2KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHMD5ANDRC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithMD5KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHA1ANDRC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHA1KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND128BITRC2-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHAAnd128BitKeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND40BITRC2-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHAAnd40BitKeyFactory")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD2AndRC2_CBC) withNSString:@"PBEWITHMD2ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithMD5AndRC2_CBC) withNSString:@"PBEWITHMD5ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHA1AndRC2_CBC) withNSString:@"PBEWITHSHA1ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.5" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.6" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWithSHAAnd3KeyTripleDES" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd128BitRC2_CBC) withNSString:@"PBEWITHSHAAND128BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd40BitRC2_CBC) withNSString:@"PBEWITHSHAAND40BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND128BITRC2-CBC" withNSString:@"PBEWITHSHAAND128BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND40BITRC2-CBC" withNSString:@"PBEWITHSHAAND40BITRC2-CBC"];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHA1ANDRC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHA1AndRC2")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAANDRC2-CBC" withNSString:@"PBEWITHSHA1ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1ANDRC2-CBC" withNSString:@"PBEWITHSHA1ANDRC2"];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND128BITRC2-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHAAnd128BitRC2")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND40BITRC2-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithSHAAnd40BitRC2")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHMD5ANDRC2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, @"$PBEWithMD5AndRC2")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHMD5ANDRC2-CBC" withNSString:@"PBEWITHMD5ANDRC2"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA1ANDRC2" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAANDRC2" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA1ANDRC2-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND40BITRC2-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND128BITRC2-CBC" withNSString:@"PKCS12PBE"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricRC2;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricRC2_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricRC2_Mappings)
