//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DLBitString.java
//

#ifndef DLBitString_H
#define DLBitString_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1BitString.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1DLBitString : LibOrgBouncycastleAsn1ASN1BitString

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data
                                    withInt:(jint)padBits;

- (instancetype __nonnull)initWithInt:(jint)value;

+ (LibOrgBouncycastleAsn1ASN1BitString *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1ASN1BitString *)getInstanceWithId:(id)obj;

#pragma mark Protected

- (instancetype __nonnull)initWithByte:(jbyte)data
                               withInt:(jint)padBits;

#pragma mark Package-Private

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

+ (LibOrgBouncycastleAsn1DLBitString *)fromOctetStringWithByteArray:(IOSByteArray *)bytes;

- (jboolean)isConstructed;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1DLBitString)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1BitString *LibOrgBouncycastleAsn1DLBitString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1BitString *LibOrgBouncycastleAsn1DLBitString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLBitString_initWithByte_withInt_(LibOrgBouncycastleAsn1DLBitString *self, jbyte data, jint padBits);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *new_LibOrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *create_LibOrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(LibOrgBouncycastleAsn1DLBitString *self, IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *new_LibOrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *create_LibOrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLBitString_initWithByteArray_(LibOrgBouncycastleAsn1DLBitString *self, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *new_LibOrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *create_LibOrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLBitString_initWithInt_(LibOrgBouncycastleAsn1DLBitString *self, jint value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *new_LibOrgBouncycastleAsn1DLBitString_initWithInt_(jint value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *create_LibOrgBouncycastleAsn1DLBitString_initWithInt_(jint value);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLBitString_initWithLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1DLBitString *self, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *new_LibOrgBouncycastleAsn1DLBitString_initWithLibOrgBouncycastleAsn1ASN1Encodable_(id<LibOrgBouncycastleAsn1ASN1Encodable> obj) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *create_LibOrgBouncycastleAsn1DLBitString_initWithLibOrgBouncycastleAsn1ASN1Encodable_(id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLBitString *LibOrgBouncycastleAsn1DLBitString_fromOctetStringWithByteArray_(IOSByteArray *bytes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1DLBitString)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DLBitString_H
