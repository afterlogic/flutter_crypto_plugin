//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/CommitmentTypeIdentifier.java
//

#ifndef CommitmentTypeIdentifier_H
#define CommitmentTypeIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;

@protocol LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier < JavaObject >

@end

@interface LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier : NSObject
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfOrigin NS_SWIFT_NAME(proofOfOrigin);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfReceipt NS_SWIFT_NAME(proofOfReceipt);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfDelivery NS_SWIFT_NAME(proofOfDelivery);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfSender NS_SWIFT_NAME(proofOfSender);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfApproval NS_SWIFT_NAME(proofOfApproval);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *proofOfCreation NS_SWIFT_NAME(proofOfCreation);

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfOrigin;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfReceipt;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfDelivery;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfSender;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfApproval;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)proofOfCreation;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfOrigin(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfOrigin;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfOrigin, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfReceipt(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfReceipt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfReceipt, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfDelivery(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfDelivery;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfDelivery, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfSender(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfSender;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfSender, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfApproval(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfApproval;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfApproval, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_get_proofOfCreation(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier_proofOfCreation;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier, proofOfCreation, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfCommitmentTypeIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CommitmentTypeIdentifier_H
