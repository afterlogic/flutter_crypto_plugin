//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/BodyPartList.java
//

#ifndef BodyPartList_H
#define BodyPartList_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmcBodyPartID;

@interface LibOrgBouncycastleAsn1CmcBodyPartList : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmcBodyPartID:(LibOrgBouncycastleAsn1CmcBodyPartID *)bodyPartID;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmcBodyPartIDArray:(IOSObjectArray *)bodyPartIDs;

- (IOSObjectArray *)getBodyPartIDs;

+ (LibOrgBouncycastleAsn1CmcBodyPartList *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmcBodyPartList *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcBodyPartList)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *LibOrgBouncycastleAsn1CmcBodyPartList_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *LibOrgBouncycastleAsn1CmcBodyPartList_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartID_(LibOrgBouncycastleAsn1CmcBodyPartList *self, LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *new_LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartID_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *create_LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartID_(LibOrgBouncycastleAsn1CmcBodyPartID *bodyPartID);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartIDArray_(LibOrgBouncycastleAsn1CmcBodyPartList *self, IOSObjectArray *bodyPartIDs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *new_LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartIDArray_(IOSObjectArray *bodyPartIDs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcBodyPartList *create_LibOrgBouncycastleAsn1CmcBodyPartList_initWithLibOrgBouncycastleAsn1CmcBodyPartIDArray_(IOSObjectArray *bodyPartIDs);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcBodyPartList)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BodyPartList_H
