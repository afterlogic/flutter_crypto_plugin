//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/POPOSigningKey.java
//

#ifndef POPOSigningKey_H
#define POPOSigningKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CrmfPOPOSigningKey : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput:(LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput *)poposkIn
                              withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)aid
                                         withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signature;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier;

+ (LibOrgBouncycastleAsn1CrmfPOPOSigningKey *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                        withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CrmfPOPOSigningKey *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput *)getPoposkInput;

- (LibOrgBouncycastleAsn1DERBitString *)getSignature;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CrmfPOPOSigningKey)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPOPOSigningKey *LibOrgBouncycastleAsn1CrmfPOPOSigningKey_getInstanceWithId_(id o);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPOPOSigningKey *LibOrgBouncycastleAsn1CrmfPOPOSigningKey_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfPOPOSigningKey_initWithLibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CrmfPOPOSigningKey *self, LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput *poposkIn, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *aid, LibOrgBouncycastleAsn1DERBitString *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPOPOSigningKey *new_LibOrgBouncycastleAsn1CrmfPOPOSigningKey_initWithLibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput *poposkIn, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *aid, LibOrgBouncycastleAsn1DERBitString *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPOPOSigningKey *create_LibOrgBouncycastleAsn1CrmfPOPOSigningKey_initWithLibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CrmfPOPOSigningKeyInput *poposkIn, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *aid, LibOrgBouncycastleAsn1DERBitString *signature);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfPOPOSigningKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // POPOSigningKey_H
