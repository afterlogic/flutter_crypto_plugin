//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/EntropyUtil.java
//

#ifndef EntropyUtil_H
#define EntropyUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoPrngEntropySource;

@interface LibOrgBouncycastleCryptoPrngEntropyUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSByteArray *)generateSeedWithLibOrgBouncycastleCryptoPrngEntropySource:(id<LibOrgBouncycastleCryptoPrngEntropySource>)entropySource
                                                                    withInt:(jint)numBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngEntropyUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngEntropyUtil_init(LibOrgBouncycastleCryptoPrngEntropyUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngEntropyUtil *new_LibOrgBouncycastleCryptoPrngEntropyUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngEntropyUtil *create_LibOrgBouncycastleCryptoPrngEntropyUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoPrngEntropyUtil_generateSeedWithLibOrgBouncycastleCryptoPrngEntropySource_withInt_(id<LibOrgBouncycastleCryptoPrngEntropySource> entropySource, jint numBytes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngEntropyUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // EntropyUtil_H
