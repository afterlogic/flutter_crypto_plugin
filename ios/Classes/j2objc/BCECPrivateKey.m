//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.java
//

#include "ASN1Encodable.h"
#include "ASN1Encoding.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AlgorithmIdentifier.h"
#include "BCECPrivateKey.h"
#include "BCECPublicKey.h"
#include "BouncyCastleProvider.h"
#include "DERBitString.h"
#include "EC5Util.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "ECPrivateKey.h"
#include "ECPrivateKeyParameters.h"
#include "ECPrivateKeySpec.h"
#include "ECUtils.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceUtilECUtil.h"
#include "PKCS12BagAttributeCarrierImpl.h"
#include "PrivateKeyInfo.h"
#include "ProviderConfiguration.h"
#include "SubjectPublicKeyInfo.h"
#include "X962Parameters.h"
#include "X9ObjectIdentifiers.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/ECPrivateKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPrivateKeySpec.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey () {
 @public
  NSString *algorithm_;
  jboolean withCompression_;
  JavaMathBigInteger *d_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration_;
  LibOrgBouncycastleAsn1DERBitString *publicKey_;
  LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *attrCarrier_;
}

- (void)populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

- (LibOrgBouncycastleMathEcECPoint *)calculateQWithLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec;

- (LibOrgBouncycastleAsn1DERBitString *)getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pub;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, d_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, configuration_, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, publicKey_, LibOrgBouncycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, attrCarrier_, LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

__attribute__((unused)) static LibOrgBouncycastleMathEcECPoint *LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_calculateQWithLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleJceSpecECParameterSpec *spec);

__attribute__((unused)) static LibOrgBouncycastleAsn1DERBitString *LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pub);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey

+ (jlong)serialVersionUID {
  return LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_serialVersionUID;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, key, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceSpecECPrivateKeySpec:(LibOrgBouncycastleJceSpecECPrivateKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *)key {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(self, algorithm, key);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, info, configuration);
  return self;
}

- (void)populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

- (NSString *)getAlgorithm {
  return algorithm_;
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  LibOrgBouncycastleAsn1X9X962Parameters *params = LibOrgBouncycastleJcajceProviderAsymmetricEcECUtils_getDomainParametersFromNameWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  jint orderBitLength;
  if (ecSpec_ == nil) {
    orderBitLength = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getOrderBitLengthWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(configuration_, nil, [self getS]);
  }
  else {
    orderBitLength = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getOrderBitLengthWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(configuration_, [ecSpec_ getOrder], [self getS]);
  }
  LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info;
  LibOrgBouncycastleAsn1SecECPrivateKey *keyStructure;
  if (publicKey_ != nil) {
    keyStructure = new_LibOrgBouncycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(orderBitLength, [self getS], publicKey_, params);
  }
  else {
    keyStructure = new_LibOrgBouncycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_(orderBitLength, [self getS], params);
  }
  @try {
    info = new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1X9X9ObjectIdentifiers, id_ecPublicKey), params), keyStructure);
    return [info getEncodedWithNSString:LibOrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (JavaSecuritySpecECParameterSpec *)getParams {
  return ecSpec_;
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters {
  if (ecSpec_ == nil) {
    return nil;
  }
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec {
  if (ecSpec_ != nil) {
    return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  }
  return [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration_)) getEcImplicitlyCa];
}

- (JavaMathBigInteger *)getS {
  return d_;
}

- (JavaMathBigInteger *)getD {
  return d_;
}

- (void)setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)attribute {
  [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withLibOrgBouncycastleAsn1ASN1Encodable:attribute];
}

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}

- (id<JavaUtilEnumeration>)getBagAttributeKeys {
  return [((LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeKeys];
}

- (void)setPointFormatWithNSString:(NSString *)style {
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey class]])) {
    return false;
  }
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *other = (LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *) cast_chk(o, [LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey class]);
  return [((JavaMathBigInteger *) nil_chk([self getD])) isEqual:[((LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *) nil_chk(other)) getD]] && ([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) isEqual:[other engineGetSpec]]);
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getD])) hash]) ^ ((jint) [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (NSString *)description {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withLibOrgBouncycastleJceSpecECParameterSpec_(@"EC", d_, [self engineGetSpec]);
}

- (LibOrgBouncycastleMathEcECPoint *)calculateQWithLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  return LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_calculateQWithLibOrgBouncycastleJceSpecECParameterSpec_(self, spec);
}

- (LibOrgBouncycastleAsn1DERBitString *)getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pub {
  return LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pub);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x2, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 26, 27, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 29, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaSecurityInterfacesECPrivateKey:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[2].selector = @selector(initWithNSString:withLibOrgBouncycastleJceSpecECPrivateKeySpec:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecECPrivateKeySpec:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[4].selector = @selector(initWithNSString:withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:);
  methods[5].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:withJavaSecuritySpecECParameterSpec:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[6].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:withLibOrgBouncycastleJceSpecECParameterSpec:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[7].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[8].selector = @selector(initWithNSString:withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[9].selector = @selector(populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[10].selector = @selector(getAlgorithm);
  methods[11].selector = @selector(getFormat);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getParams);
  methods[14].selector = @selector(getParameters);
  methods[15].selector = @selector(engineGetSpec);
  methods[16].selector = @selector(getS);
  methods[17].selector = @selector(getD);
  methods[18].selector = @selector(setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[19].selector = @selector(getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[20].selector = @selector(getBagAttributeKeys);
  methods[21].selector = @selector(setPointFormatWithNSString:);
  methods[22].selector = @selector(isEqual:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(description);
  methods[25].selector = @selector(calculateQWithLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[26].selector = @selector(getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:);
  methods[27].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[28].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "configuration_", "LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "publicKey_", "LLibOrgBouncycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attrCarrier_", "LLibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityInterfacesECPrivateKey;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleJceSpecECPrivateKeySpec;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LJavaSecuritySpecECPrivateKeySpec;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;LLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;LJavaSecuritySpecECParameterSpec;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;LLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;LLibOrgBouncycastleJceSpecECParameterSpec;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleCryptoParamsECPrivateKeyParameters;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LJavaIoIOException;", "populateFromPrivKeyInfo", "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "setBagAttribute", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleAsn1ASN1Encodable;", "getBagAttribute", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "calculateQ", "LLibOrgBouncycastleJceSpecECParameterSpec;", "getPublicKeyDetails", "LLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey = { "BCECPrivateKey", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, fields, 7, 0x1, 29, 8, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, init)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->d_ = [((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(key)) getS];
  self->algorithm_ = [key getAlgorithm];
  self->ecSpec_ = [key getParams];
  self->configuration_ = configuration;
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, key, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, key, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleJceSpecECPrivateKeySpec *) nil_chk(spec)) getD];
  if ([spec getParams] != nil) {
    LibOrgBouncycastleMathEcECCurve *curve = [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve;
    ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    self->ecSpec_ = nil;
  }
  self->configuration_ = configuration;
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((JavaSecuritySpecECPrivateKeySpec *) nil_chk(spec)) getS];
  self->ecSpec_ = [spec getParams];
  self->configuration_ = configuration;
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = ((LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *) nil_chk(key))->d_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->attrCarrier_ = key->attrCarrier_;
  self->publicKey_ = key->publicKey_;
  self->configuration_ = key->configuration_;
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_, algorithm, key)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_, algorithm, key)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->configuration_ = configuration;
  if (spec == nil) {
    LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([dp getG]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    self->ecSpec_ = spec;
  }
  self->publicKey_ = LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pubKey);
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->configuration_ = configuration;
  if (spec == nil) {
    LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([dp getG]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, spec);
  }
  @try {
    self->publicKey_ = LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pubKey);
  }
  @catch (JavaLangException *e) {
    self->publicKey_ = nil;
  }
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->d_ = [((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->ecSpec_ = nil;
  self->configuration_ = configuration;
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"EC";
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  self->algorithm_ = algorithm;
  self->configuration_ = configuration;
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, info, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, info, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  LibOrgBouncycastleAsn1X9X962Parameters *params = LibOrgBouncycastleAsn1X9X962Parameters_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(info)) getPrivateKeyAlgorithm])) getParameters]);
  LibOrgBouncycastleMathEcECCurve *curve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withLibOrgBouncycastleAsn1X9X962Parameters_(self->configuration_, params);
  self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X962Parameters_withLibOrgBouncycastleMathEcECCurve_(params, curve);
  id<LibOrgBouncycastleAsn1ASN1Encodable> privKey = [info parsePrivateKey];
  if ([privKey isKindOfClass:[LibOrgBouncycastleAsn1ASN1Integer class]]) {
    LibOrgBouncycastleAsn1ASN1Integer *derD = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(privKey);
    self->d_ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(derD)) getValue];
  }
  else {
    LibOrgBouncycastleAsn1SecECPrivateKey *ec = LibOrgBouncycastleAsn1SecECPrivateKey_getInstanceWithId_(privKey);
    self->d_ = [((LibOrgBouncycastleAsn1SecECPrivateKey *) nil_chk(ec)) getKey];
    self->publicKey_ = [ec getPublicKey];
  }
}

LibOrgBouncycastleMathEcECPoint *LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_calculateQWithLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  return [((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk(spec)) getG])) multiplyWithJavaMathBigInteger:self->d_])) normalize];
}

LibOrgBouncycastleAsn1DERBitString *LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pub) {
  @try {
    LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info = LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *) nil_chk(pub)) getEncoded]));
    return [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  self->configuration_ = JreLoadStatic(LibOrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION);
  LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
  self->attrCarrier_ = new_LibOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}

void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)
