//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/CertReqMsg.java
//

#ifndef CertReqMsg_H
#define CertReqMsg_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CrmfCertRequest;
@class LibOrgBouncycastleAsn1CrmfProofOfPossession;

@interface LibOrgBouncycastleAsn1CrmfCertReqMsg : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfCertRequest:(LibOrgBouncycastleAsn1CrmfCertRequest *)certReq
                        withLibOrgBouncycastleAsn1CrmfProofOfPossession:(LibOrgBouncycastleAsn1CrmfProofOfPossession *)pop
           withLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray:(IOSObjectArray *)regInfo;

- (LibOrgBouncycastleAsn1CrmfCertRequest *)getCertReq;

+ (LibOrgBouncycastleAsn1CrmfCertReqMsg *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CrmfCertReqMsg *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CrmfProofOfPossession *)getPop;

- (LibOrgBouncycastleAsn1CrmfProofOfPossession *)getPopo;

- (IOSObjectArray *)getRegInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CrmfCertReqMsg)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfCertReqMsg *LibOrgBouncycastleAsn1CrmfCertReqMsg_getInstanceWithId_(id o);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfCertReqMsg *LibOrgBouncycastleAsn1CrmfCertReqMsg_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfCertReqMsg_initWithLibOrgBouncycastleAsn1CrmfCertRequest_withLibOrgBouncycastleAsn1CrmfProofOfPossession_withLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(LibOrgBouncycastleAsn1CrmfCertReqMsg *self, LibOrgBouncycastleAsn1CrmfCertRequest *certReq, LibOrgBouncycastleAsn1CrmfProofOfPossession *pop, IOSObjectArray *regInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfCertReqMsg *new_LibOrgBouncycastleAsn1CrmfCertReqMsg_initWithLibOrgBouncycastleAsn1CrmfCertRequest_withLibOrgBouncycastleAsn1CrmfProofOfPossession_withLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(LibOrgBouncycastleAsn1CrmfCertRequest *certReq, LibOrgBouncycastleAsn1CrmfProofOfPossession *pop, IOSObjectArray *regInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfCertReqMsg *create_LibOrgBouncycastleAsn1CrmfCertReqMsg_initWithLibOrgBouncycastleAsn1CrmfCertRequest_withLibOrgBouncycastleAsn1CrmfProofOfPossession_withLibOrgBouncycastleAsn1CrmfCrmfAttributeTypeAndValueArray_(LibOrgBouncycastleAsn1CrmfCertRequest *certReq, LibOrgBouncycastleAsn1CrmfProofOfPossession *pop, IOSObjectArray *regInfo);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfCertReqMsg)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CertReqMsg_H
