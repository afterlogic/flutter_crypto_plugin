//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/BERApplicationSpecific.java
//

#ifndef BERApplicationSpecific_H
#define BERApplicationSpecific_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1ApplicationSpecific.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1EncodableVector;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1BERApplicationSpecific : LibOrgBouncycastleAsn1ASN1ApplicationSpecific

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)constructed
                                  withInt:(jint)tag
  withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)object;

- (instancetype __nonnull)initWithInt:(jint)tag
withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)object;

- (instancetype __nonnull)initWithInt:(jint)tagNo
withLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)vec;

#pragma mark Package-Private

- (instancetype __nonnull)initWithBoolean:(jboolean)isConstructed
                                  withInt:(jint)tag
                            withByteArray:(IOSByteArray *)octets;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1BERApplicationSpecific)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withByteArray_(LibOrgBouncycastleAsn1BERApplicationSpecific *self, jboolean isConstructed, jint tag, IOSByteArray *octets);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *new_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withByteArray_(jboolean isConstructed, jint tag, IOSByteArray *octets) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *create_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withByteArray_(jboolean isConstructed, jint tag, IOSByteArray *octets);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1BERApplicationSpecific *self, jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *new_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *create_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1BERApplicationSpecific *self, jboolean constructed, jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *new_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean constructed, jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *create_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean constructed, jint tag, id<LibOrgBouncycastleAsn1ASN1Encodable> object);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1EncodableVector_(LibOrgBouncycastleAsn1BERApplicationSpecific *self, jint tagNo, LibOrgBouncycastleAsn1ASN1EncodableVector *vec);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *new_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1EncodableVector_(jint tagNo, LibOrgBouncycastleAsn1ASN1EncodableVector *vec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecific *create_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1EncodableVector_(jint tagNo, LibOrgBouncycastleAsn1ASN1EncodableVector *vec);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1BERApplicationSpecific)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BERApplicationSpecific_H
