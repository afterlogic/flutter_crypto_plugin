//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/newhope/Poly.java
//

#ifndef Poly_H
#define Poly_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSShortArray;

@interface LibOrgBouncycastlePqcCryptoNewhopePoly : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (void)addWithShortArray:(IOSShortArray *)x
           withShortArray:(IOSShortArray *)y
           withShortArray:(IOSShortArray *)z;

+ (void)fromBytesWithShortArray:(IOSShortArray *)r
                  withByteArray:(IOSByteArray *)a;

+ (void)fromNTTWithShortArray:(IOSShortArray *)r;

+ (void)getNoiseWithShortArray:(IOSShortArray *)r
                 withByteArray:(IOSByteArray *)seed
                      withByte:(jbyte)nonce;

+ (void)pointWiseWithShortArray:(IOSShortArray *)x
                 withShortArray:(IOSShortArray *)y
                 withShortArray:(IOSShortArray *)z;

+ (void)toBytesWithByteArray:(IOSByteArray *)r
              withShortArray:(IOSShortArray *)p;

+ (void)toNTTWithShortArray:(IOSShortArray *)r;

+ (void)uniformWithShortArray:(IOSShortArray *)a
                withByteArray:(IOSByteArray *)seed;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNewhopePoly)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_init(LibOrgBouncycastlePqcCryptoNewhopePoly *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopePoly *new_LibOrgBouncycastlePqcCryptoNewhopePoly_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopePoly *create_LibOrgBouncycastlePqcCryptoNewhopePoly_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_addWithShortArray_withShortArray_withShortArray_(IOSShortArray *x, IOSShortArray *y, IOSShortArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_fromBytesWithShortArray_withByteArray_(IOSShortArray *r, IOSByteArray *a);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_fromNTTWithShortArray_(IOSShortArray *r);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_getNoiseWithShortArray_withByteArray_withByte_(IOSShortArray *r, IOSByteArray *seed, jbyte nonce);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_pointWiseWithShortArray_withShortArray_withShortArray_(IOSShortArray *x, IOSShortArray *y, IOSShortArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_toBytesWithByteArray_withShortArray_(IOSByteArray *r, IOSShortArray *p);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_toNTTWithShortArray_(IOSShortArray *r);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopePoly_uniformWithShortArray_withByteArray_(IOSShortArray *a, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNewhopePoly)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Poly_H
