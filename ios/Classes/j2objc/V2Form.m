//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/V2Form.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "GeneralNames.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "ObjectDigestInfo.h"
#include "V2Form.h"
#include "java/lang/IllegalArgumentException.h"

@implementation LibOrgBouncycastleAsn1X509V2Form

+ (LibOrgBouncycastleAsn1X509V2Form *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1X509V2Form_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (LibOrgBouncycastleAsn1X509V2Form *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1X509V2Form_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(self, issuerName);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                    withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(self, issuerName, baseCertificateID);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                withLibOrgBouncycastleAsn1X509ObjectDigestInfo:(LibOrgBouncycastleAsn1X509ObjectDigestInfo *)objectDigestInfo {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(self, issuerName, objectDigestInfo);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                    withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID
                withLibOrgBouncycastleAsn1X509ObjectDigestInfo:(LibOrgBouncycastleAsn1X509ObjectDigestInfo *)objectDigestInfo {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(self, issuerName, baseCertificateID, objectDigestInfo);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (LibOrgBouncycastleAsn1X509GeneralNames *)getIssuerName {
  return issuerName_;
}

- (LibOrgBouncycastleAsn1X509IssuerSerial *)getBaseCertificateID {
  return baseCertificateID_;
}

- (LibOrgBouncycastleAsn1X509ObjectDigestInfo *)getObjectDigestInfo {
  return objectDigestInfo_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (issuerName_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:issuerName_];
  }
  if (baseCertificateID_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 0, baseCertificateID_)];
  }
  if (objectDigestInfo_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, 1, objectDigestInfo_)];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1X509V2Form;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509V2Form;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509GeneralNames;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509IssuerSerial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509ObjectDigestInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralNames:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralNames:withLibOrgBouncycastleAsn1X509IssuerSerial:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralNames:withLibOrgBouncycastleAsn1X509ObjectDigestInfo:);
  methods[5].selector = @selector(initWithLibOrgBouncycastleAsn1X509GeneralNames:withLibOrgBouncycastleAsn1X509IssuerSerial:withLibOrgBouncycastleAsn1X509ObjectDigestInfo:);
  methods[6].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[7].selector = @selector(getIssuerName);
  methods[8].selector = @selector(getBaseCertificateID);
  methods[9].selector = @selector(getObjectDigestInfo);
  methods[10].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "issuerName_", "LLibOrgBouncycastleAsn1X509GeneralNames;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "baseCertificateID_", "LLibOrgBouncycastleAsn1X509IssuerSerial;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "objectDigestInfo_", "LLibOrgBouncycastleAsn1X509ObjectDigestInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LLibOrgBouncycastleAsn1X509GeneralNames;", "LLibOrgBouncycastleAsn1X509GeneralNames;LLibOrgBouncycastleAsn1X509IssuerSerial;", "LLibOrgBouncycastleAsn1X509GeneralNames;LLibOrgBouncycastleAsn1X509ObjectDigestInfo;", "LLibOrgBouncycastleAsn1X509GeneralNames;LLibOrgBouncycastleAsn1X509IssuerSerial;LLibOrgBouncycastleAsn1X509ObjectDigestInfo;", "LLibOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509V2Form = { "V2Form", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 11, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509V2Form;
}

@end

LibOrgBouncycastleAsn1X509V2Form *LibOrgBouncycastleAsn1X509V2Form_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1X509V2Form_initialize();
  return LibOrgBouncycastleAsn1X509V2Form_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

LibOrgBouncycastleAsn1X509V2Form *LibOrgBouncycastleAsn1X509V2Form_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1X509V2Form_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1X509V2Form class]]) {
    return (LibOrgBouncycastleAsn1X509V2Form *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName) {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(self, issuerName, nil, nil);
}

LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_, issuerName)
}

LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_, issuerName)
}

void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID) {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(self, issuerName, baseCertificateID, nil);
}

LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_, issuerName, baseCertificateID)
}

LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_, issuerName, baseCertificateID)
}

void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(self, issuerName, nil, objectDigestInfo);
}

LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_, issuerName, objectDigestInfo)
}

LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_, issuerName, objectDigestInfo)
}

void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->issuerName_ = issuerName;
  self->baseCertificateID_ = baseCertificateID;
  self->objectDigestInfo_ = objectDigestInfo;
}

LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_, issuerName, baseCertificateID, objectDigestInfo)
}

LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_, issuerName, baseCertificateID, objectDigestInfo)
}

void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  jint index = 0;
  if (!([[seq getObjectAtWithInt:0] isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]])) {
    index++;
    self->issuerName_ = LibOrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([seq getObjectAtWithInt:0]);
  }
  for (jint i = index; i != [seq size]; i++) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *o = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:i]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(o)) getTagNo] == 0) {
      self->baseCertificateID_ = LibOrgBouncycastleAsn1X509IssuerSerial_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(o, false);
    }
    else if ([o getTagNo] == 1) {
      self->objectDigestInfo_ = LibOrgBouncycastleAsn1X509ObjectDigestInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(o, false);
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad tag number: ", [o getTagNo]));
    }
  }
}

LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509V2Form, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509V2Form)
