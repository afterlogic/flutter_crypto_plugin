//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/util/SecretKeyUtil.java
//

#ifndef SecretKeyUtil_H
#define SecretKeyUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;

@interface LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jint)getKeySizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil_init(LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil *new_LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil *create_LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil_init(void);

FOUNDATION_EXPORT jint LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil_getKeySizeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderUtilSecretKeyUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SecretKeyUtil_H
