//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/newhope/Reduce.java
//

#include "J2ObjC_source.h"
#include "Params.h"
#include "Reduce.h"

@implementation LibOrgBouncycastlePqcCryptoNewhopeReduce

+ (jint)QInv {
  return LibOrgBouncycastlePqcCryptoNewhopeReduce_QInv;
}

+ (jint)RLog {
  return LibOrgBouncycastlePqcCryptoNewhopeReduce_RLog;
}

+ (jint)RMask {
  return LibOrgBouncycastlePqcCryptoNewhopeReduce_RMask;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoNewhopeReduce_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jshort)montgomeryWithInt:(jint)a {
  return LibOrgBouncycastlePqcCryptoNewhopeReduce_montgomeryWithInt_(a);
}

+ (jshort)barrettWithShort:(jshort)a {
  return LibOrgBouncycastlePqcCryptoNewhopeReduce_barrettWithShort_(a);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "S", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "S", 0x8, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(montgomeryWithInt:);
  methods[2].selector = @selector(barrettWithShort:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "QInv", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoNewhopeReduce_QInv, 0x18, -1, -1, -1, -1 },
    { "RLog", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoNewhopeReduce_RLog, 0x18, -1, -1, -1, -1 },
    { "RMask", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoNewhopeReduce_RMask, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "montgomery", "I", "barrett", "S" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoNewhopeReduce = { "Reduce", "lib.org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x0, 3, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoNewhopeReduce;
}

@end

void LibOrgBouncycastlePqcCryptoNewhopeReduce_init(LibOrgBouncycastlePqcCryptoNewhopeReduce *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcCryptoNewhopeReduce *new_LibOrgBouncycastlePqcCryptoNewhopeReduce_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoNewhopeReduce, init)
}

LibOrgBouncycastlePqcCryptoNewhopeReduce *create_LibOrgBouncycastlePqcCryptoNewhopeReduce_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoNewhopeReduce, init)
}

jshort LibOrgBouncycastlePqcCryptoNewhopeReduce_montgomeryWithInt_(jint a) {
  LibOrgBouncycastlePqcCryptoNewhopeReduce_initialize();
  jint u = a * LibOrgBouncycastlePqcCryptoNewhopeReduce_QInv;
  u &= LibOrgBouncycastlePqcCryptoNewhopeReduce_RMask;
  u *= LibOrgBouncycastlePqcCryptoNewhopeParams_Q;
  u += a;
  return (jshort) (JreURShift32(u, LibOrgBouncycastlePqcCryptoNewhopeReduce_RLog));
}

jshort LibOrgBouncycastlePqcCryptoNewhopeReduce_barrettWithShort_(jshort a) {
  LibOrgBouncycastlePqcCryptoNewhopeReduce_initialize();
  jint t = a & (jint) 0xFFFF;
  jint u = JreURShift32((t * 5), 16);
  u *= LibOrgBouncycastlePqcCryptoNewhopeParams_Q;
  return (jshort) (t - u);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoNewhopeReduce)
