//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/iana/IANAObjectIdentifiers.java
//

#ifndef IANAObjectIdentifiers_H
#define IANAObjectIdentifiers_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;

@protocol LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers < JavaObject >

@end

@interface LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers : NSObject
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *internet NS_SWIFT_NAME(internet);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *directory NS_SWIFT_NAME(directory);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *mgmt NS_SWIFT_NAME(mgmt);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *experimental NS_SWIFT_NAME(experimental);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *_private NS_SWIFT_NAME(_private);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *security NS_SWIFT_NAME(security);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *SNMPv2 NS_SWIFT_NAME(SNMPv2);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *mail NS_SWIFT_NAME(mail);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *security_mechanisms NS_SWIFT_NAME(security_mechanisms);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *security_nametypes NS_SWIFT_NAME(security_nametypes);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *pkix NS_SWIFT_NAME(pkix);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *ipsec NS_SWIFT_NAME(ipsec);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *isakmpOakley NS_SWIFT_NAME(isakmpOakley);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *hmacMD5 NS_SWIFT_NAME(hmacMD5);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *hmacSHA1 NS_SWIFT_NAME(hmacSHA1);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *hmacTIGER NS_SWIFT_NAME(hmacTIGER);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1ObjectIdentifier *hmacRIPEMD160 NS_SWIFT_NAME(hmacRIPEMD160);

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)internet;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)directory;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)mgmt;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)experimental;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)_private;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)security;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)SNMPv2;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)mail;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)security_mechanisms;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)security_nametypes;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)pkix;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)ipsec;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)isakmpOakley;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)hmacMD5;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)hmacSHA1;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)hmacTIGER;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)hmacRIPEMD160;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_internet(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_internet;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, internet, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_directory(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_directory;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, directory, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_mgmt(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_mgmt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, mgmt, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_experimental(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_experimental;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, experimental, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get__private(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers__private;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, _private, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_security(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_security;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, security, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_SNMPv2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_SNMPv2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, SNMPv2, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_mail(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_mail;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, mail, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_security_mechanisms(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_security_mechanisms;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, security_mechanisms, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_security_nametypes(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_security_nametypes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, security_nametypes, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_pkix(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_pkix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, pkix, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_ipsec(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_ipsec;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, ipsec, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_isakmpOakley(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_isakmpOakley;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, isakmpOakley, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_hmacMD5(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_hmacMD5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacMD5, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_hmacSHA1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_hmacSHA1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacSHA1, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_hmacTIGER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_hmacTIGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacTIGER, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_get_hmacRIPEMD160(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers_hmacRIPEMD160;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers, hmacRIPEMD160, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1IanaIANAObjectIdentifiers)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IANAObjectIdentifiers_H
