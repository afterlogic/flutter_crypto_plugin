//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PKIXCRLStoreSelector.java
//

#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "Arrays.h"
#include "Extension.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKIXCRLStoreSelector.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CRL.h"
#include "java/security/cert/CRLSelector.h"
#include "java/security/cert/CertStore.h"
#include "java/security/cert/X509CRL.h"
#include "java/security/cert/X509CRLSelector.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"

@interface LibOrgBouncycastleJcajcePKIXCRLStoreSelector () {
 @public
  id<JavaSecurityCertCRLSelector> baseSelector_;
  jboolean deltaCRLIndicator_;
  jboolean completeCRLEnabled_;
  JavaMathBigInteger *maxBaseCRLNumber_;
  IOSByteArray *issuingDistributionPoint_;
  jboolean issuingDistributionPointEnabled_;
}

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder:(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *)baseBuilder;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector, baseSelector_, id<JavaSecurityCertCRLSelector>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector, maxBaseCRLNumber_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector, issuingDistributionPoint_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *self, LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder);

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXCRLStoreSelector *new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXCRLStoreSelector *create_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder);

@interface LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder () {
 @public
  id<JavaSecurityCertCRLSelector> baseSelector_;
  jboolean deltaCRLIndicator_;
  jboolean completeCRLEnabled_;
  JavaMathBigInteger *maxBaseCRLNumber_;
  IOSByteArray *issuingDistributionPoint_;
  jboolean issuingDistributionPointEnabled_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder, baseSelector_, id<JavaSecurityCertCRLSelector>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder, maxBaseCRLNumber_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder, issuingDistributionPoint_, IOSByteArray *)

@interface LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone : JavaSecurityCertX509CRLSelector {
 @public
  LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector_;
}

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector:(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *)selector;

- (jboolean)matchWithJavaSecurityCertCRL:(JavaSecurityCertCRL *)crl;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone, selector_, LibOrgBouncycastleJcajcePKIXCRLStoreSelector *)

__attribute__((unused)) static void LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *self, LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector);

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *create_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone)

@implementation LibOrgBouncycastleJcajcePKIXCRLStoreSelector

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder:(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *)baseBuilder {
  LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(self, baseBuilder);
  return self;
}

- (jboolean)isIssuingDistributionPointEnabled {
  return issuingDistributionPointEnabled_;
}

- (jboolean)matchWithId:(JavaSecurityCertCRL *)obj {
  if (!([obj isKindOfClass:[JavaSecurityCertX509CRL class]])) {
    return [((id<JavaSecurityCertCRLSelector>) nil_chk(baseSelector_)) matchWithJavaSecurityCertCRL:obj];
  }
  JavaSecurityCertX509CRL *crl = (JavaSecurityCertX509CRL *) cast_chk(obj, [JavaSecurityCertX509CRL class]);
  LibOrgBouncycastleAsn1ASN1Integer *dci = nil;
  @try {
    IOSByteArray *bytes = [((JavaSecurityCertX509CRL *) nil_chk(crl)) getExtensionValueWithNSString:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, deltaCRLIndicator))) getId]];
    if (bytes != nil) {
      dci = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(bytes))) getOctets]);
    }
  }
  @catch (JavaLangException *e) {
    return false;
  }
  if ([self isDeltaCRLIndicatorEnabled]) {
    if (dci == nil) {
      return false;
    }
  }
  if ([self isCompleteCRLEnabled]) {
    if (dci != nil) {
      return false;
    }
  }
  if (dci != nil) {
    if (maxBaseCRLNumber_ != nil) {
      if ([((JavaMathBigInteger *) nil_chk([dci getPositiveValue])) compareToWithId:maxBaseCRLNumber_] == 1) {
        return false;
      }
    }
  }
  if (issuingDistributionPointEnabled_) {
    IOSByteArray *idp = [crl getExtensionValueWithNSString:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1X509Extension, issuingDistributionPoint))) getId]];
    if (issuingDistributionPoint_ == nil) {
      if (idp != nil) {
        return false;
      }
    }
    else {
      if (!LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(idp, issuingDistributionPoint_)) {
        return false;
      }
    }
  }
  return [((id<JavaSecurityCertCRLSelector>) nil_chk(baseSelector_)) matchWithJavaSecurityCertCRL:obj];
}

- (jboolean)isDeltaCRLIndicatorEnabled {
  return deltaCRLIndicator_;
}

- (id)java_clone {
  return self;
}

- (jboolean)isCompleteCRLEnabled {
  return completeCRLEnabled_;
}

- (JavaMathBigInteger *)getMaxBaseCRLNumber {
  return maxBaseCRLNumber_;
}

- (IOSByteArray *)getIssuingDistributionPoint {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(issuingDistributionPoint_);
}

- (JavaSecurityCertX509Certificate *)getCertificateChecking {
  if ([baseSelector_ isKindOfClass:[JavaSecurityCertX509CRLSelector class]]) {
    return [((JavaSecurityCertX509CRLSelector *) nil_chk(((JavaSecurityCertX509CRLSelector *) baseSelector_))) getCertificateChecking];
  }
  return nil;
}

+ (id<JavaUtilCollection>)getCRLsWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector:(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *)selector
                                                    withJavaSecurityCertCertStore:(JavaSecurityCertCertStore *)certStore {
  return LibOrgBouncycastleJcajcePKIXCRLStoreSelector_getCRLsWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_withJavaSecurityCertCertStore_(selector, certStore);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509Certificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x9, 4, 5, 6, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder:);
  methods[1].selector = @selector(isIssuingDistributionPointEnabled);
  methods[2].selector = @selector(matchWithId:);
  methods[3].selector = @selector(isDeltaCRLIndicatorEnabled);
  methods[4].selector = @selector(java_clone);
  methods[5].selector = @selector(isCompleteCRLEnabled);
  methods[6].selector = @selector(getMaxBaseCRLNumber);
  methods[7].selector = @selector(getIssuingDistributionPoint);
  methods[8].selector = @selector(getCertificateChecking);
  methods[9].selector = @selector(getCRLsWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector:withJavaSecurityCertCertStore:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LJavaSecurityCertCRLSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deltaCRLIndicator_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "completeCRLEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxBaseCRLNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "issuingDistributionPoint_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "issuingDistributionPointEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder;", "match", "LJavaSecurityCertCRL;", "clone", "getCRLs", "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector;LJavaSecurityCertCertStore;", "LJavaSecurityCertCertStoreException;", "(Llib/org/bouncycastle/jcajce/PKIXCRLStoreSelector;Ljava/security/cert/CertStore;)Ljava/util/Collection<+Ljava/security/cert/CRL;>;", "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder;LLibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone;", "<T:Ljava/security/cert/CRL;>Ljava/lang/Object;Llib/org/bouncycastle/util/Selector<TT;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKIXCRLStoreSelector = { "PKIXCRLStoreSelector", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x1, 10, 6, -1, 8, -1, 9, -1 };
  return &_LibOrgBouncycastleJcajcePKIXCRLStoreSelector;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *self, LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  NSObject_init(self);
  self->baseSelector_ = ((LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *) nil_chk(baseBuilder))->baseSelector_;
  self->deltaCRLIndicator_ = baseBuilder->deltaCRLIndicator_;
  self->completeCRLEnabled_ = baseBuilder->completeCRLEnabled_;
  self->maxBaseCRLNumber_ = baseBuilder->maxBaseCRLNumber_;
  self->issuingDistributionPoint_ = baseBuilder->issuingDistributionPoint_;
  self->issuingDistributionPointEnabled_ = baseBuilder->issuingDistributionPointEnabled_;
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector *new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector, initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_, baseBuilder)
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector *create_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector, initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_, baseBuilder)
}

id<JavaUtilCollection> LibOrgBouncycastleJcajcePKIXCRLStoreSelector_getCRLsWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_withJavaSecurityCertCertStore_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector, JavaSecurityCertCertStore *certStore) {
  LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initialize();
  return [((JavaSecurityCertCertStore *) nil_chk(certStore)) getCRLsWithJavaSecurityCertCRLSelector:new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(selector)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKIXCRLStoreSelector)

@implementation LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder

- (instancetype)initWithJavaSecurityCertCRLSelector:(id<JavaSecurityCertCRLSelector>)crlSelector {
  LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(self, crlSelector);
  return self;
}

- (LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *)setCompleteCRLEnabledWithBoolean:(jboolean)completeCRLEnabled {
  self->completeCRLEnabled_ = completeCRLEnabled;
  return self;
}

- (LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *)setDeltaCRLIndicatorEnabledWithBoolean:(jboolean)deltaCRLIndicator {
  self->deltaCRLIndicator_ = deltaCRLIndicator;
  return self;
}

- (void)setMaxBaseCRLNumberWithJavaMathBigInteger:(JavaMathBigInteger *)maxBaseCRLNumber {
  self->maxBaseCRLNumber_ = maxBaseCRLNumber;
}

- (void)setIssuingDistributionPointEnabledWithBoolean:(jboolean)issuingDistributionPointEnabled {
  self->issuingDistributionPointEnabled_ = issuingDistributionPointEnabled;
}

- (void)setIssuingDistributionPointWithByteArray:(IOSByteArray *)issuingDistributionPoint {
  self->issuingDistributionPoint_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(issuingDistributionPoint);
}

- (LibOrgBouncycastleJcajcePKIXCRLStoreSelector *)build {
  return new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector;", 0x1, -1, -1, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityCertCRLSelector:);
  methods[1].selector = @selector(setCompleteCRLEnabledWithBoolean:);
  methods[2].selector = @selector(setDeltaCRLIndicatorEnabledWithBoolean:);
  methods[3].selector = @selector(setMaxBaseCRLNumberWithJavaMathBigInteger:);
  methods[4].selector = @selector(setIssuingDistributionPointEnabledWithBoolean:);
  methods[5].selector = @selector(setIssuingDistributionPointWithByteArray:);
  methods[6].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LJavaSecurityCertCRLSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deltaCRLIndicator_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "completeCRLEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxBaseCRLNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuingDistributionPoint_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuingDistributionPointEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityCertCRLSelector;", "setCompleteCRLEnabled", "Z", "setDeltaCRLIndicatorEnabled", "setMaxBaseCRLNumber", "LJavaMathBigInteger;", "setIssuingDistributionPointEnabled", "setIssuingDistributionPoint", "[B", "()Llib/org/bouncycastle/jcajce/PKIXCRLStoreSelector<+Ljava/security/cert/CRL;>;", "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder = { "Builder", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x9, 7, 6, 10, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder;
}

@end

void LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *self, id<JavaSecurityCertCRLSelector> crlSelector) {
  NSObject_init(self);
  self->deltaCRLIndicator_ = false;
  self->completeCRLEnabled_ = false;
  self->maxBaseCRLNumber_ = nil;
  self->issuingDistributionPoint_ = nil;
  self->issuingDistributionPointEnabled_ = false;
  self->baseSelector_ = (id<JavaSecurityCertCRLSelector>) cast_check([((id<JavaSecurityCertCRLSelector>) nil_chk(crlSelector)) clone], JavaSecurityCertCRLSelector_class_());
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(id<JavaSecurityCertCRLSelector> crlSelector) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder, initWithJavaSecurityCertCRLSelector_, crlSelector)
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder *create_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(id<JavaSecurityCertCRLSelector> crlSelector) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder, initWithJavaSecurityCertCRLSelector_, crlSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_Builder)

@implementation LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector:(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *)selector {
  LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(self, selector);
  return self;
}

- (jboolean)matchWithJavaSecurityCertCRL:(JavaSecurityCertCRL *)crl {
  return (selector_ == nil) ? (crl != nil) : [((LibOrgBouncycastleJcajcePKIXCRLStoreSelector *) nil_chk(selector_)) matchWithId:crl];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector:);
  methods[1].selector = @selector(matchWithJavaSecurityCertCRL:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "selector_", "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajcePKIXCRLStoreSelector;", "match", "LJavaSecurityCertCRL;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone = { "SelectorClone", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0xa, 2, 1, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone;
}

@end

void LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *self, LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector) {
  JavaSecurityCertX509CRLSelector_init(self);
  self->selector_ = selector;
  if ([((LibOrgBouncycastleJcajcePKIXCRLStoreSelector *) nil_chk(selector))->baseSelector_ isKindOfClass:[JavaSecurityCertX509CRLSelector class]]) {
    JavaSecurityCertX509CRLSelector *baseSelector = (JavaSecurityCertX509CRLSelector *) selector->baseSelector_;
    [self setCertificateCheckingWithJavaSecurityCertX509Certificate:[((JavaSecurityCertX509CRLSelector *) nil_chk(baseSelector)) getCertificateChecking]];
    [self setDateAndTimeWithJavaUtilDate:[baseSelector getDateAndTime]];
    [self setIssuersWithJavaUtilCollection:[baseSelector getIssuers]];
    [self setMinCRLNumberWithJavaMathBigInteger:[baseSelector getMinCRL]];
    [self setMaxCRLNumberWithJavaMathBigInteger:[baseSelector getMaxCRL]];
  }
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *new_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone, initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_, selector)
}

LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone *create_LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_(LibOrgBouncycastleJcajcePKIXCRLStoreSelector *selector) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone, initWithLibOrgBouncycastleJcajcePKIXCRLStoreSelector_, selector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKIXCRLStoreSelector_SelectorClone)
