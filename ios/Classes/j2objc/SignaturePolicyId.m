//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/SignaturePolicyId.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "OtherHashAlgAndValue.h"
#include "SigPolicyQualifiers.h"
#include "SignaturePolicyId.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1EsfSignaturePolicyId () {
 @public
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyId_;
  LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash_;
  LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *sigPolicyQualifiers_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EsfSignaturePolicyId, sigPolicyId_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EsfSignaturePolicyId, sigPolicyHash_, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EsfSignaturePolicyId, sigPolicyQualifiers_, LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1EsfSignaturePolicyId *new_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1EsfSignaturePolicyId *create_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1EsfSignaturePolicyId

+ (LibOrgBouncycastleAsn1EsfSignaturePolicyId *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1EsfSignaturePolicyId_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)sigPolicyIdentifier
                 withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue:(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)sigPolicyHash {
  LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(self, sigPolicyIdentifier, sigPolicyHash);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)sigPolicyId
                 withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue:(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)sigPolicyHash
                  withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers:(LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *)sigPolicyQualifiers {
  LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_(self, sigPolicyId, sigPolicyHash, sigPolicyQualifiers);
  return self;
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getSigPolicyId {
  return new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(sigPolicyId_)) getId]);
}

- (LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)getSigPolicyHash {
  return sigPolicyHash_;
}

- (LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *)getSigPolicyQualifiers {
  return sigPolicyQualifiers_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:sigPolicyId_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:sigPolicyHash_];
  if (sigPolicyQualifiers_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:sigPolicyQualifiers_];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1EsfSignaturePolicyId;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1EsfSigPolicyQualifiers;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue:withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers:);
  methods[4].selector = @selector(getSigPolicyId);
  methods[5].selector = @selector(getSigPolicyHash);
  methods[6].selector = @selector(getSigPolicyQualifiers);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sigPolicyId_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigPolicyHash_", "LLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigPolicyQualifiers_", "LLibOrgBouncycastleAsn1EsfSigPolicyQualifiers;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;LLibOrgBouncycastleAsn1EsfSigPolicyQualifiers;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EsfSignaturePolicyId = { "SignaturePolicyId", "lib.org.bouncycastle.asn1.esf", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EsfSignaturePolicyId;
}

@end

LibOrgBouncycastleAsn1EsfSignaturePolicyId *LibOrgBouncycastleAsn1EsfSignaturePolicyId_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1EsfSignaturePolicyId_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1EsfSignaturePolicyId class]]) {
    return (LibOrgBouncycastleAsn1EsfSignaturePolicyId *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2 && [seq size] != 3) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  self->sigPolicyId_ = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->sigPolicyHash_ = LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_getInstanceWithId_([seq getObjectAtWithInt:1]);
  if ([seq size] == 3) {
    self->sigPolicyQualifiers_ = LibOrgBouncycastleAsn1EsfSigPolicyQualifiers_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *new_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *create_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyIdentifier, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash) {
  LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_(self, sigPolicyIdentifier, sigPolicyHash, nil);
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *new_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyIdentifier, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_, sigPolicyIdentifier, sigPolicyHash)
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *create_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyIdentifier, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_, sigPolicyIdentifier, sigPolicyHash)
}

void LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_(LibOrgBouncycastleAsn1EsfSignaturePolicyId *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyId, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash, LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *sigPolicyQualifiers) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->sigPolicyId_ = sigPolicyId;
  self->sigPolicyHash_ = sigPolicyHash;
  self->sigPolicyQualifiers_ = sigPolicyQualifiers;
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *new_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyId, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash, LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *sigPolicyQualifiers) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_, sigPolicyId, sigPolicyHash, sigPolicyQualifiers)
}

LibOrgBouncycastleAsn1EsfSignaturePolicyId *create_LibOrgBouncycastleAsn1EsfSignaturePolicyId_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *sigPolicyId, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *sigPolicyHash, LibOrgBouncycastleAsn1EsfSigPolicyQualifiers *sigPolicyQualifiers) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EsfSignaturePolicyId, initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_withLibOrgBouncycastleAsn1EsfSigPolicyQualifiers_, sigPolicyId, sigPolicyHash, sigPolicyQualifiers)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EsfSignaturePolicyId)
