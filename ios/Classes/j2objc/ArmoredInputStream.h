//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ArmoredInputStream.java
//

#ifndef ArmoredInputStream_H
#define ArmoredInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/InputStream.h"

@class IOSIntArray;
@class IOSObjectArray;
@class LibOrgBouncycastleBcpgCRC24;
@protocol LibOrgBouncycastleUtilStringList;

@interface LibOrgBouncycastleBcpgArmoredInputStream : JavaIoInputStream {
 @public
  JavaIoInputStream *in_;
  jboolean start_;
  IOSIntArray *outBuf_;
  jint bufPtr_;
  LibOrgBouncycastleBcpgCRC24 *crc_;
  jboolean crcFound_;
  jboolean hasHeaders_;
  NSString *header_;
  jboolean newLineFound_;
  jboolean clearText_;
  jboolean restart_;
  id<LibOrgBouncycastleUtilStringList> headerList_;
  jint lastC_;
  jboolean isEndOfStream_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                        withBoolean:(jboolean)hasHeaders;

- (jint)available;

- (void)close;

- (NSString *)getArmorHeaderLine;

- (IOSObjectArray *)getArmorHeaders;

- (jboolean)isClearText;

- (jboolean)isEndOfStream;

- (jint)read;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleBcpgArmoredInputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredInputStream, in_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredInputStream, outBuf_, IOSIntArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredInputStream, crc_, LibOrgBouncycastleBcpgCRC24 *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredInputStream, header_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredInputStream, headerList_, id<LibOrgBouncycastleUtilStringList>)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_(LibOrgBouncycastleBcpgArmoredInputStream *self, JavaIoInputStream *inArg);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredInputStream *new_LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredInputStream *create_LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_(JavaIoInputStream *inArg);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_withBoolean_(LibOrgBouncycastleBcpgArmoredInputStream *self, JavaIoInputStream *inArg, jboolean hasHeaders);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredInputStream *new_LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *inArg, jboolean hasHeaders) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredInputStream *create_LibOrgBouncycastleBcpgArmoredInputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *inArg, jboolean hasHeaders);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgArmoredInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ArmoredInputStream_H
