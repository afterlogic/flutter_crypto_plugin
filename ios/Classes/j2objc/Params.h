//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/newhope/Params.java
//

#ifndef Params_H
#define Params_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastlePqcCryptoNewhopeParams : NSObject
@property (readonly, class) jint N NS_SWIFT_NAME(N);
@property (readonly, class) jint K NS_SWIFT_NAME(K);
@property (readonly, class) jint Q NS_SWIFT_NAME(Q);
@property (readonly, class) jint POLY_BYTES NS_SWIFT_NAME(POLY_BYTES);
@property (readonly, class) jint REC_BYTES NS_SWIFT_NAME(REC_BYTES);
@property (readonly, class) jint SEED_BYTES NS_SWIFT_NAME(SEED_BYTES);

+ (jint)N;

+ (jint)K;

+ (jint)Q;

+ (jint)POLY_BYTES;

+ (jint)REC_BYTES;

+ (jint)SEED_BYTES;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoNewhopeParams)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_N(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_N 1024
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, N, jint)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_K(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_K 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, K, jint)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_Q(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_Q 12289
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, Q, jint)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_POLY_BYTES(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_POLY_BYTES 1792
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, POLY_BYTES, jint)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_REC_BYTES(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_REC_BYTES 256
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, REC_BYTES, jint)

inline jint LibOrgBouncycastlePqcCryptoNewhopeParams_get_SEED_BYTES(void);
#define LibOrgBouncycastlePqcCryptoNewhopeParams_SEED_BYTES 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoNewhopeParams, SEED_BYTES, jint)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoNewhopeParams_init(LibOrgBouncycastlePqcCryptoNewhopeParams *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeParams *new_LibOrgBouncycastlePqcCryptoNewhopeParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoNewhopeParams *create_LibOrgBouncycastlePqcCryptoNewhopeParams_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoNewhopeParams)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Params_H
