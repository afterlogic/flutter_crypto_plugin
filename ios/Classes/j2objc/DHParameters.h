//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DHParameters.java
//

#ifndef DHParameters_H
#define DHParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDHValidationParameters;

@interface LibOrgBouncycastleCryptoParamsDHParameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)q;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)j
withLibOrgBouncycastleCryptoParamsDHValidationParameters:(LibOrgBouncycastleCryptoParamsDHValidationParameters *)validation;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                                             withInt:(jint)l;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                                             withInt:(jint)m
                                             withInt:(jint)l;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                                             withInt:(jint)m
                                             withInt:(jint)l
                              withJavaMathBigInteger:(JavaMathBigInteger *)j
withLibOrgBouncycastleCryptoParamsDHValidationParameters:(LibOrgBouncycastleCryptoParamsDHValidationParameters *)validation;

- (jboolean)isEqual:(id)obj;

- (JavaMathBigInteger *)getG;

- (JavaMathBigInteger *)getJ;

- (jint)getL;

- (jint)getM;

- (JavaMathBigInteger *)getP;

- (JavaMathBigInteger *)getQ;

- (LibOrgBouncycastleCryptoParamsDHValidationParameters *)getValidationParameters;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsDHParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint l);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(LibOrgBouncycastleCryptoParamsDHParameters *self, JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *new_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDHParameters *create_LibOrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHValidationParameters_(JavaMathBigInteger *p, JavaMathBigInteger *g, JavaMathBigInteger *q, jint m, jint l, JavaMathBigInteger *j, LibOrgBouncycastleCryptoParamsDHValidationParameters *validation);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsDHParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DHParameters_H
