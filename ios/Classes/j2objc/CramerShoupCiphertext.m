//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/CramerShoupCiphertext.java
//

#include "Arrays.h"
#include "CramerShoupCiphertext.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pack.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"

@implementation LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)u1
                    withJavaMathBigInteger:(JavaMathBigInteger *)u2
                    withJavaMathBigInteger:(JavaMathBigInteger *)e
                    withJavaMathBigInteger:(JavaMathBigInteger *)v {
  LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(self, u1, u2, e, v);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)c {
  LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(self, c);
  return self;
}

- (JavaMathBigInteger *)getU1 {
  return u1_;
}

- (void)setU1WithJavaMathBigInteger:(JavaMathBigInteger *)u1 {
  self->u1_ = u1;
}

- (JavaMathBigInteger *)getU2 {
  return u2_;
}

- (void)setU2WithJavaMathBigInteger:(JavaMathBigInteger *)u2 {
  self->u2_ = u2;
}

- (JavaMathBigInteger *)getE {
  return e_;
}

- (void)setEWithJavaMathBigInteger:(JavaMathBigInteger *)e {
  self->e_ = e;
}

- (JavaMathBigInteger *)getV {
  return v_;
}

- (void)setVWithJavaMathBigInteger:(JavaMathBigInteger *)v {
  self->v_ = v;
}

- (NSString *)description {
  JavaLangStringBuffer *result = new_JavaLangStringBuffer_init();
  (void) [result appendWithNSString:JreStrcat("$$", @"u1: ", [((JavaMathBigInteger *) nil_chk(u1_)) description])];
  (void) [result appendWithNSString:JreStrcat("$$", @"\nu2: ", [((JavaMathBigInteger *) nil_chk(u2_)) description])];
  (void) [result appendWithNSString:JreStrcat("$$", @"\ne: ", [((JavaMathBigInteger *) nil_chk(e_)) description])];
  (void) [result appendWithNSString:JreStrcat("$$", @"\nv: ", [((JavaMathBigInteger *) nil_chk(v_)) description])];
  return [result description];
}

- (IOSByteArray *)toByteArray {
  IOSByteArray *u1Bytes = [((JavaMathBigInteger *) nil_chk(u1_)) toByteArray];
  jint u1Length = ((IOSByteArray *) nil_chk(u1Bytes))->size_;
  IOSByteArray *u2Bytes = [((JavaMathBigInteger *) nil_chk(u2_)) toByteArray];
  jint u2Length = ((IOSByteArray *) nil_chk(u2Bytes))->size_;
  IOSByteArray *eBytes = [((JavaMathBigInteger *) nil_chk(e_)) toByteArray];
  jint eLength = ((IOSByteArray *) nil_chk(eBytes))->size_;
  IOSByteArray *vBytes = [((JavaMathBigInteger *) nil_chk(v_)) toByteArray];
  jint vLength = ((IOSByteArray *) nil_chk(vBytes))->size_;
  jint off = 0;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:u1Length + u2Length + eLength + vLength + 4 * 4];
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(u1Length, result, off);
  off += 4;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(u1Bytes, 0, result, off, u1Length);
  off += u1Length;
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(u2Length, result, off);
  off += 4;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(u2Bytes, 0, result, off, u2Length);
  off += u2Length;
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(eLength, result, off);
  off += 4;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(eBytes, 0, result, off, eLength);
  off += eLength;
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(vLength, result, off);
  off += 4;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(vBytes, 0, result, off, vLength);
  off += vLength;
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(getU1);
  methods[4].selector = @selector(setU1WithJavaMathBigInteger:);
  methods[5].selector = @selector(getU2);
  methods[6].selector = @selector(setU2WithJavaMathBigInteger:);
  methods[7].selector = @selector(getE);
  methods[8].selector = @selector(setEWithJavaMathBigInteger:);
  methods[9].selector = @selector(getV);
  methods[10].selector = @selector(setVWithJavaMathBigInteger:);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "u1_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "u2_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "e_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "v_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "[B", "setU1", "LJavaMathBigInteger;", "setU2", "setE", "setV", "toString" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext = { "CramerShoupCiphertext", "lib.org.bouncycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 13, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext;
}

@end

void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, init)
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, init)
}

void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self, JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v) {
  NSObject_init(self);
  self->u1_ = u1;
  self->u2_ = u2;
  self->e_ = e;
  self->v_ = v;
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, u1, u2, e, v)
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, u1, u2, e, v)
}

void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self, IOSByteArray *c) {
  NSObject_init(self);
  jint off = 0;
  jint s;
  IOSByteArray *tmp;
  s = LibOrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(c, off);
  off += 4;
  tmp = LibOrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(c, off, off + s);
  off += s;
  self->u1_ = new_JavaMathBigInteger_initWithByteArray_(tmp);
  s = LibOrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(c, off);
  off += 4;
  tmp = LibOrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(c, off, off + s);
  off += s;
  self->u2_ = new_JavaMathBigInteger_initWithByteArray_(tmp);
  s = LibOrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(c, off);
  off += 4;
  tmp = LibOrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(c, off, off + s);
  off += s;
  self->e_ = new_JavaMathBigInteger_initWithByteArray_(tmp);
  s = LibOrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(c, off);
  off += 4;
  tmp = LibOrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(c, off, off + s);
  off += s;
  self->v_ = new_JavaMathBigInteger_initWithByteArray_(tmp);
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(IOSByteArray *c) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, initWithByteArray_, c)
}

LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(IOSByteArray *c) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, initWithByteArray_, c)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext)
