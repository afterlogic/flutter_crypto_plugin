//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsKeyExchange.java
//

#ifndef TlsKeyExchange_H
#define TlsKeyExchange_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class LibOrgBouncycastleCryptoTlsCertificate;
@class LibOrgBouncycastleCryptoTlsCertificateRequest;
@protocol LibOrgBouncycastleCryptoTlsTlsContext;
@protocol LibOrgBouncycastleCryptoTlsTlsCredentials;

@protocol LibOrgBouncycastleCryptoTlsTlsKeyExchange < JavaObject >

- (void)init__WithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context OBJC_METHOD_FAMILY_NONE;

- (void)skipServerCredentials;

- (void)processServerCredentialsWithLibOrgBouncycastleCryptoTlsTlsCredentials:(id<LibOrgBouncycastleCryptoTlsTlsCredentials>)serverCredentials;

- (void)processServerCertificateWithLibOrgBouncycastleCryptoTlsCertificate:(LibOrgBouncycastleCryptoTlsCertificate *)serverCertificate;

- (jboolean)requiresServerKeyExchange;

- (IOSByteArray *)generateServerKeyExchange;

- (void)skipServerKeyExchange;

- (void)processServerKeyExchangeWithJavaIoInputStream:(JavaIoInputStream *)input;

- (void)validateCertificateRequestWithLibOrgBouncycastleCryptoTlsCertificateRequest:(LibOrgBouncycastleCryptoTlsCertificateRequest *)certificateRequest;

- (void)skipClientCredentials;

- (void)processClientCredentialsWithLibOrgBouncycastleCryptoTlsTlsCredentials:(id<LibOrgBouncycastleCryptoTlsTlsCredentials>)clientCredentials;

- (void)processClientCertificateWithLibOrgBouncycastleCryptoTlsCertificate:(LibOrgBouncycastleCryptoTlsCertificate *)clientCertificate;

- (void)generateClientKeyExchangeWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (void)processClientKeyExchangeWithJavaIoInputStream:(JavaIoInputStream *)input;

- (IOSByteArray *)generatePremasterSecret;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsKeyExchange)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsKeyExchange)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsKeyExchange_H
