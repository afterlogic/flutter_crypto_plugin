//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/MD2Digest.java
//

#ifndef MD2Digest_H
#define MD2Digest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ExtendedDigest.h"
#include "J2ObjC_header.h"
#include "Memoable.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoDigestsMD2Digest : NSObject < LibOrgBouncycastleCryptoExtendedDigest, LibOrgBouncycastleUtilMemoable >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsMD2Digest:(LibOrgBouncycastleCryptoDigestsMD2Digest *)t;

- (id<LibOrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getByteLength;

- (jint)getDigestSize;

- (void)reset;

- (void)resetWithLibOrgBouncycastleUtilMemoable:(id<LibOrgBouncycastleUtilMemoable>)other;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Protected

- (void)processBlockWithByteArray:(IOSByteArray *)m;

- (void)processCheckSumWithByteArray:(IOSByteArray *)m;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoDigestsMD2Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsMD2Digest_init(LibOrgBouncycastleCryptoDigestsMD2Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsMD2Digest *new_LibOrgBouncycastleCryptoDigestsMD2Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsMD2Digest *create_LibOrgBouncycastleCryptoDigestsMD2Digest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsMD2Digest_initWithLibOrgBouncycastleCryptoDigestsMD2Digest_(LibOrgBouncycastleCryptoDigestsMD2Digest *self, LibOrgBouncycastleCryptoDigestsMD2Digest *t);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsMD2Digest *new_LibOrgBouncycastleCryptoDigestsMD2Digest_initWithLibOrgBouncycastleCryptoDigestsMD2Digest_(LibOrgBouncycastleCryptoDigestsMD2Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsMD2Digest *create_LibOrgBouncycastleCryptoDigestsMD2Digest_initWithLibOrgBouncycastleCryptoDigestsMD2Digest_(LibOrgBouncycastleCryptoDigestsMD2Digest *t);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsMD2Digest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MD2Digest_H
