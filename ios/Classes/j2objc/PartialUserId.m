//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/keyring/impl/PartialUserId.java
//

#include "J2ObjC_source.h"
#include "PGPPublicKey.h"
#include "PGPSecretKey.h"
#include "PartialUserId.h"
#include "PublicKeySelectionStrategy.h"
#include "SecretKeySelectionStrategy.h"
#include "java/util/Iterator.h"

@implementation LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy;LLibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId = { "PartialUserId", "lib.com.afterlogic.pgp.key.selection.keyring.impl", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId;
}

@end

void LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_init(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId *self) {
  NSObject_init(self);
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId *new_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId, init)
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId *create_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId)

@implementation LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)acceptWithId:(NSString *)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPPublicKey *)key {
  for (id<JavaUtilIterator> userIds = [((LibOrgBouncycastleOpenpgpPGPPublicKey *) nil_chk(key)) getUserIDs]; [((id<JavaUtilIterator>) nil_chk(userIds)) hasNext]; ) {
    NSString *userId = [userIds next];
    if ([((NSString *) nil_chk(userId)) java_contains:identifier]) {
      return true;
    }
  }
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(acceptWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "accept", "LNSString;LLibOrgBouncycastleOpenpgpPGPPublicKey;", "LLibComAfterlogicPgpKeySelectionKeyringImplPartialUserId;", "Llib/com/afterlogic/pgp/key/selection/key/PublicKeySelectionStrategy<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy = { "PubRingSelectionStrategy", "lib.com.afterlogic.pgp.key.selection.keyring.impl", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, 3, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy *self) {
  LibComAfterlogicPgpKeySelectionKeyPublicKeySelectionStrategy_init(self);
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy, init)
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_PubRingSelectionStrategy)

@implementation LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)acceptWithId:(NSString *)identifier
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKey *)key {
  for (id<JavaUtilIterator> userIds = [((LibOrgBouncycastleOpenpgpPGPSecretKey *) nil_chk(key)) getUserIDs]; [((id<JavaUtilIterator>) nil_chk(userIds)) hasNext]; ) {
    NSString *userId = [userIds next];
    if ([((NSString *) nil_chk(userId)) java_contains:identifier]) {
      return true;
    }
  }
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(acceptWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "accept", "LNSString;LLibOrgBouncycastleOpenpgpPGPSecretKey;", "LLibComAfterlogicPgpKeySelectionKeyringImplPartialUserId;", "Llib/com/afterlogic/pgp/key/selection/key/SecretKeySelectionStrategy<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy = { "SecRingSelectionStrategy", "lib.com.afterlogic.pgp.key.selection.keyring.impl", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, 3, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy *self) {
  LibComAfterlogicPgpKeySelectionKeySecretKeySelectionStrategy_init(self);
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy, init)
}

LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyringImplPartialUserId_SecRingSelectionStrategy)
