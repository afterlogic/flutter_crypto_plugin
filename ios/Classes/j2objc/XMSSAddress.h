//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSAddress.java
//

#ifndef XMSSAddress_H
#define XMSSAddress_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSAddress : NSObject

#pragma mark Public

- (jint)getKeyAndMask;

- (jint)getType;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)builder;

- (jint)getLayerAddress;

- (jlong)getTreeAddress;

- (IOSByteArray *)toByteArray;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSAddress)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSAddress_initWithLibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssXMSSAddress *self, LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *builder);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSAddress)

@interface LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder : NSObject

#pragma mark Protected

- (instancetype __nonnull)initWithInt:(jint)type;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress *)build;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)getThis;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)withKeyAndMaskWithInt:(jint)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)withLayerAddressWithInt:(jint)val;

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)withTreeAddressWithLong:(jlong)val;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_initWithInt_(LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *self, jint type);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSAddress_H
