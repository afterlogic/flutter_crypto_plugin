//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Attributes.java
//

#ifndef Attributes_H
#define Attributes_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1EncodableVector;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1CmsAttributes : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v;

- (IOSObjectArray *)getAttributes;

+ (LibOrgBouncycastleAsn1CmsAttributes *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsAttributes *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAttributes)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAttributes_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(LibOrgBouncycastleAsn1CmsAttributes *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAttributes *new_LibOrgBouncycastleAsn1CmsAttributes_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(LibOrgBouncycastleAsn1ASN1EncodableVector *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAttributes *create_LibOrgBouncycastleAsn1CmsAttributes_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(LibOrgBouncycastleAsn1ASN1EncodableVector *v);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAttributes *LibOrgBouncycastleAsn1CmsAttributes_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAttributes *LibOrgBouncycastleAsn1CmsAttributes_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAttributes)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Attributes_H
