//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/exception/SecretKeyNotFoundException.java
//

#include "J2ObjC_source.h"
#include "SecretKeyNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"

@interface LibComAfterlogicPgpExceptionSecretKeyNotFoundException () {
 @public
  jlong keyId_;
}

@end

inline jlong LibComAfterlogicPgpExceptionSecretKeyNotFoundException_get_serialVersionUID(void);
#define LibComAfterlogicPgpExceptionSecretKeyNotFoundException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibComAfterlogicPgpExceptionSecretKeyNotFoundException, serialVersionUID, jlong)

@implementation LibComAfterlogicPgpExceptionSecretKeyNotFoundException

- (instancetype)initWithLong:(jlong)keyId {
  LibComAfterlogicPgpExceptionSecretKeyNotFoundException_initWithLong_(self, keyId);
  return self;
}

- (jlong)getKeyId {
  return keyId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(getKeyId);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibComAfterlogicPgpExceptionSecretKeyNotFoundException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "keyId_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpExceptionSecretKeyNotFoundException = { "SecretKeyNotFoundException", "lib.com.afterlogic.pgp.exception", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpExceptionSecretKeyNotFoundException;
}

@end

void LibComAfterlogicPgpExceptionSecretKeyNotFoundException_initWithLong_(LibComAfterlogicPgpExceptionSecretKeyNotFoundException *self, jlong keyId) {
  JavaLangException_initWithNSString_(self, JreStrcat("$$$J$", @"No PGPSecretKey with id ", JavaLangLong_toHexStringWithLong_(keyId), @" (", keyId, @") found."));
  self->keyId_ = keyId;
}

LibComAfterlogicPgpExceptionSecretKeyNotFoundException *new_LibComAfterlogicPgpExceptionSecretKeyNotFoundException_initWithLong_(jlong keyId) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpExceptionSecretKeyNotFoundException, initWithLong_, keyId)
}

LibComAfterlogicPgpExceptionSecretKeyNotFoundException *create_LibComAfterlogicPgpExceptionSecretKeyNotFoundException_initWithLong_(jlong keyId) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpExceptionSecretKeyNotFoundException, initWithLong_, keyId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpExceptionSecretKeyNotFoundException)
