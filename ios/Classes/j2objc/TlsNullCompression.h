//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsNullCompression.java
//

#ifndef TlsNullCompression_H
#define TlsNullCompression_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TlsCompression.h"

@class JavaIoOutputStream;

@interface LibOrgBouncycastleCryptoTlsTlsNullCompression : NSObject < LibOrgBouncycastleCryptoTlsTlsCompression >

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaIoOutputStream *)compressWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (JavaIoOutputStream *)decompressWithJavaIoOutputStream:(JavaIoOutputStream *)output;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsNullCompression)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsNullCompression_init(LibOrgBouncycastleCryptoTlsTlsNullCompression *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCompression *new_LibOrgBouncycastleCryptoTlsTlsNullCompression_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsNullCompression *create_LibOrgBouncycastleCryptoTlsTlsNullCompression_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsNullCompression)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsNullCompression_H
