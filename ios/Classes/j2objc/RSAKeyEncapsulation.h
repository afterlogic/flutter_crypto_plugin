//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/kems/RSAKeyEncapsulation.java
//

#ifndef RSAKeyEncapsulation_H
#define RSAKeyEncapsulation_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyEncapsulation.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoParamsKeyParameter;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleCryptoDerivationFunction;

@interface LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation : NSObject < LibOrgBouncycastleCryptoKeyEncapsulation >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf
                                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rnd;

- (id<LibOrgBouncycastleCryptoCipherParameters>)decryptWithByteArray:(IOSByteArray *)inArg
                                                             withInt:(jint)keyLen;

- (id<LibOrgBouncycastleCryptoCipherParameters>)decryptWithByteArray:(IOSByteArray *)inArg
                                                             withInt:(jint)inOff
                                                             withInt:(jint)inLen
                                                             withInt:(jint)keyLen;

- (id<LibOrgBouncycastleCryptoCipherParameters>)encryptWithByteArray:(IOSByteArray *)outArg
                                                             withInt:(jint)keyLen;

- (id<LibOrgBouncycastleCryptoCipherParameters>)encryptWithByteArray:(IOSByteArray *)outArg
                                                             withInt:(jint)outOff
                                                             withInt:(jint)keyLen;

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)key OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (LibOrgBouncycastleCryptoParamsKeyParameter *)generateKeyWithJavaMathBigInteger:(JavaMathBigInteger *)n
                                                           withJavaMathBigInteger:(JavaMathBigInteger *)r
                                                                          withInt:(jint)keyLen;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation_initWithLibOrgBouncycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation *self, id<LibOrgBouncycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation *new_LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation_initWithLibOrgBouncycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(id<LibOrgBouncycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation *create_LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation_initWithLibOrgBouncycastleCryptoDerivationFunction_withJavaSecuritySecureRandom_(id<LibOrgBouncycastleCryptoDerivationFunction> kdf, JavaSecuritySecureRandom *rnd);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoKemsRSAKeyEncapsulation)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RSAKeyEncapsulation_H
