//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DSAParameterGenerationParameters.java
//

#ifndef DSAParameterGenerationParameters_H
#define DSAParameterGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaSecuritySecureRandom;

@interface LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters : NSObject
@property (readonly, class) jint DIGITAL_SIGNATURE_USAGE NS_SWIFT_NAME(DIGITAL_SIGNATURE_USAGE);
@property (readonly, class) jint KEY_ESTABLISHMENT_USAGE NS_SWIFT_NAME(KEY_ESTABLISHMENT_USAGE);

+ (jint)DIGITAL_SIGNATURE_USAGE;

+ (jint)KEY_ESTABLISHMENT_USAGE;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)L
                              withInt:(jint)N
                              withInt:(jint)certainty
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (instancetype __nonnull)initWithInt:(jint)L
                              withInt:(jint)N
                              withInt:(jint)certainty
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                              withInt:(jint)usageIndex;

- (jint)getCertainty;

- (jint)getL;

- (jint)getN;

- (JavaSecuritySecureRandom *)getRandom;

- (jint)getUsageIndex;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters)

inline jint LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_get_DIGITAL_SIGNATURE_USAGE(void);
#define LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_DIGITAL_SIGNATURE_USAGE 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters, DIGITAL_SIGNATURE_USAGE, jint)

inline jint LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_get_KEY_ESTABLISHMENT_USAGE(void);
#define LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_KEY_ESTABLISHMENT_USAGE 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters, KEY_ESTABLISHMENT_USAGE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *self, jint L, jint N, jint certainty, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *new_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *create_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *self, jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *new_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters *create_LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters_initWithInt_withInt_withInt_withJavaSecuritySecureRandom_withInt_(jint L, jint N, jint certainty, JavaSecuritySecureRandom *random, jint usageIndex);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsDSAParameterGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSAParameterGenerationParameters_H
