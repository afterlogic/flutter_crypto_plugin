//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/McEliece.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricAlgorithmProvider.h"
#include "ConfigurableProvider.h"
#include "J2ObjC_source.h"
#include "McEliece.h"
#include "PQCObjectIdentifiers.h"

inline NSString *LibOrgBouncycastlePqcJcajceProviderMcEliece_get_PREFIX(void);
static NSString *LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX = @"lib.org.bouncycastle.pqc.jcajce.provider.mceliece.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcJcajceProviderMcEliece, PREFIX, NSString *)

@implementation LibOrgBouncycastlePqcJcajceProviderMcEliece

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcEliece_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, "LLibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcEliece = { "McEliece", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, 1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcEliece;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcEliece_init(LibOrgBouncycastlePqcJcajceProviderMcEliece *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderMcEliece *new_LibOrgBouncycastlePqcJcajceProviderMcEliece_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcEliece, init)
}

LibOrgBouncycastlePqcJcajceProviderMcEliece *create_LibOrgBouncycastlePqcJcajceProviderMcEliece_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcEliece, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcEliece)

@implementation LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"KeyPairGenerator.McElieceKobaraImai" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyPairGeneratorSpi")];
  [provider addAlgorithmWithNSString:@"KeyPairGenerator.McEliecePointcheval" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyPairGeneratorSpi")];
  [provider addAlgorithmWithNSString:@"KeyPairGenerator.McElieceFujisaki" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyPairGeneratorSpi")];
  [provider addAlgorithmWithNSString:@"KeyPairGenerator.McEliece" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceKeyPairGeneratorSpi")];
  [provider addAlgorithmWithNSString:@"KeyPairGenerator.McEliece-CCA2" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyPairGeneratorSpi")];
  [provider addAlgorithmWithNSString:@"KeyFactory.McElieceKobaraImai" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"KeyFactory.McEliecePointcheval" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"KeyFactory.McElieceFujisaki" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"KeyFactory.McEliece" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceKeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"KeyFactory.McEliece-CCA2" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyFactorySpi")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"KeyFactory.", JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2)) withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceCCA2KeyFactorySpi")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"KeyFactory.", JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcEliece)) withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceKeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"Cipher.McEliece" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McEliecePKCSCipherSpi$McEliecePKCS")];
  [provider addAlgorithmWithNSString:@"Cipher.McEliecePointcheval" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McEliecePointchevalCipherSpi$McEliecePointcheval")];
  [provider addAlgorithmWithNSString:@"Cipher.McElieceKobaraImai" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceKobaraImaiCipherSpi$McElieceKobaraImai")];
  [provider addAlgorithmWithNSString:@"Cipher.McElieceFujisaki" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderMcEliece_PREFIX, @"McElieceFujisakiCipherSpi$McElieceFujisaki")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "LLibOrgBouncycastlePqcJcajceProviderMcEliece;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings = { "Mappings", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings_init(LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings *new_LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings, init)
}

LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings *create_LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcEliece_Mappings)
