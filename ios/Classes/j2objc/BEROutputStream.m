//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/BEROutputStream.java
//

#include "ASN1Encodable.h"
#include "ASN1Primitive.h"
#include "BEROutputStream.h"
#include "DEROutputStream.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"

@implementation LibOrgBouncycastleAsn1BEROutputStream

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os {
  LibOrgBouncycastleAsn1BEROutputStream_initWithJavaIoOutputStream_(self, os);
  return self;
}

- (void)writeObjectWithId:(id)obj {
  if (obj == nil) {
    [self writeNull];
  }
  else if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1Primitive class]]) {
    [((LibOrgBouncycastleAsn1ASN1Primitive *) obj) encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:self];
  }
  else if ([LibOrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    [((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, LibOrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive])) encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:self];
  }
  else {
    @throw new_JavaIoIOException_initWithNSString_(@"object not BEREncodable");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(writeObjectWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "writeObject", "LNSObject;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1BEROutputStream = { "BEROutputStream", "lib.org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1BEROutputStream;
}

@end

void LibOrgBouncycastleAsn1BEROutputStream_initWithJavaIoOutputStream_(LibOrgBouncycastleAsn1BEROutputStream *self, JavaIoOutputStream *os) {
  LibOrgBouncycastleAsn1DEROutputStream_initWithJavaIoOutputStream_(self, os);
}

LibOrgBouncycastleAsn1BEROutputStream *new_LibOrgBouncycastleAsn1BEROutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1BEROutputStream, initWithJavaIoOutputStream_, os)
}

LibOrgBouncycastleAsn1BEROutputStream *create_LibOrgBouncycastleAsn1BEROutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1BEROutputStream, initWithJavaIoOutputStream_, os)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1BEROutputStream)
