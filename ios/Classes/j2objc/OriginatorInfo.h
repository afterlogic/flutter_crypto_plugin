//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/OriginatorInfo.java
//

#ifndef OriginatorInfo_H
#define OriginatorInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1CmsOriginatorInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)certs
                              withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)crls;

- (LibOrgBouncycastleAsn1ASN1Set *)getCertificates;

- (LibOrgBouncycastleAsn1ASN1Set *)getCRLs;

+ (LibOrgBouncycastleAsn1CmsOriginatorInfo *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                       withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsOriginatorInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsOriginatorInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsOriginatorInfo_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsOriginatorInfo *self, LibOrgBouncycastleAsn1ASN1Set *certs, LibOrgBouncycastleAsn1ASN1Set *crls);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOriginatorInfo *new_LibOrgBouncycastleAsn1CmsOriginatorInfo_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1Set *certs, LibOrgBouncycastleAsn1ASN1Set *crls) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOriginatorInfo *create_LibOrgBouncycastleAsn1CmsOriginatorInfo_initWithLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1Set *certs, LibOrgBouncycastleAsn1ASN1Set *crls);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOriginatorInfo *LibOrgBouncycastleAsn1CmsOriginatorInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOriginatorInfo *LibOrgBouncycastleAsn1CmsOriginatorInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsOriginatorInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OriginatorInfo_H
