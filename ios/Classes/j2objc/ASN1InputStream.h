//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1InputStream.java
//

#ifndef ASN1InputStream_H
#define ASN1InputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BERTags.h"
#include "J2ObjC_header.h"
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class LibOrgBouncycastleAsn1ASN1EncodableVector;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1DefiniteLengthInputStream;

@interface LibOrgBouncycastleAsn1ASN1InputStream : JavaIoFilterInputStream < LibOrgBouncycastleAsn1BERTags >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)input;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)input
                                withBoolean:(jboolean)lazyEvaluate;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)input
                                        withBoolean:(jboolean)lazyEvaluate;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)input
                                            withInt:(jint)limit;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)input
                                            withInt:(jint)limit
                                        withBoolean:(jboolean)lazyEvaluate;

- (LibOrgBouncycastleAsn1ASN1Primitive *)readObject;

#pragma mark Protected

- (LibOrgBouncycastleAsn1ASN1Primitive *)buildObjectWithInt:(jint)tag
                                                    withInt:(jint)tagNo
                                                    withInt:(jint)length;

- (void)readFullyWithByteArray:(IOSByteArray *)bytes;

- (jint)readLength;

#pragma mark Package-Private

- (LibOrgBouncycastleAsn1ASN1EncodableVector *)buildDEREncodableVectorWithLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)dIn;

- (LibOrgBouncycastleAsn1ASN1EncodableVector *)buildEncodableVector;

+ (LibOrgBouncycastleAsn1ASN1Primitive *)createPrimitiveDERObjectWithInt:(jint)tagNo
                     withLibOrgBouncycastleAsn1DefiniteLengthInputStream:(LibOrgBouncycastleAsn1DefiniteLengthInputStream *)defIn
                                                          withByteArray2:(IOSObjectArray *)tmpBuffers;

- (jint)getLimit;

+ (jint)readLengthWithJavaIoInputStream:(JavaIoInputStream *)s
                                withInt:(jint)limit;

+ (jint)readTagNumberWithJavaIoInputStream:(JavaIoInputStream *)s
                                   withInt:(jint)tag;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1ASN1InputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *is);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(JavaIoInputStream *is);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(LibOrgBouncycastleAsn1ASN1InputStream *self, IOSByteArray *input);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(IOSByteArray *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(IOSByteArray *input);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, IOSByteArray *input, jboolean lazyEvaluate);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(IOSByteArray *input, jboolean lazyEvaluate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(IOSByteArray *input, jboolean lazyEvaluate);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jint limit);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(JavaIoInputStream *input, jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_(JavaIoInputStream *input, jint limit);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jboolean lazyEvaluate);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *input, jboolean lazyEvaluate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *input, jboolean lazyEvaluate);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(LibOrgBouncycastleAsn1ASN1InputStream *self, JavaIoInputStream *input, jint limit, jboolean lazyEvaluate);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *new_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(JavaIoInputStream *input, jint limit, jboolean lazyEvaluate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1InputStream *create_LibOrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withInt_withBoolean_(JavaIoInputStream *input, jint limit, jboolean lazyEvaluate);

FOUNDATION_EXPORT jint LibOrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(JavaIoInputStream *s, jint tag);

FOUNDATION_EXPORT jint LibOrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_(JavaIoInputStream *s, jint limit);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Primitive *LibOrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withLibOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(jint tagNo, LibOrgBouncycastleAsn1DefiniteLengthInputStream *defIn, IOSObjectArray *tmpBuffers);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1InputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1InputStream_H
