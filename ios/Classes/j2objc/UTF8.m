//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/encoders/UTF8.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "UTF8.h"

@interface LibOrgBouncycastleUtilEncodersUTF8 ()

+ (void)fillWithByteArray:(IOSByteArray *)table
                  withInt:(jint)first
                  withInt:(jint)last
                 withByte:(jbyte)b;

@end

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_ILL(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_ILL 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_ILL, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_CR1(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_CR1 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_CR1, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_CR2(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_CR2 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_CR2, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_CR3(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_CR3 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_CR3, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L2A(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L2A 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L2A, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L3A(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L3A 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L3A, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L3B(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L3B 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L3B, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L3C(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L3C 7
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L3C, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L4A(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L4A 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L4A, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L4B(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L4B 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L4B, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_C_L4C(void);
#define LibOrgBouncycastleUtilEncodersUTF8_C_L4C 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, C_L4C, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_ERR(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_ERR -2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_ERR, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_END(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_END -1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_END, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_CS1(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_CS1 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_CS1, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_CS2(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_CS2 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_CS2, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_CS3(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_CS3 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_CS3, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_P3A(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_P3A 48
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_P3A, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_P3B(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_P3B 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_P3B, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_P4A(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_P4A 80
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_P4A, jbyte)

inline jbyte LibOrgBouncycastleUtilEncodersUTF8_get_S_P4B(void);
#define LibOrgBouncycastleUtilEncodersUTF8_S_P4B 96
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleUtilEncodersUTF8, S_P4B, jbyte)

inline IOSShortArray *LibOrgBouncycastleUtilEncodersUTF8_get_firstUnitTable(void);
static IOSShortArray *LibOrgBouncycastleUtilEncodersUTF8_firstUnitTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleUtilEncodersUTF8, firstUnitTable, IOSShortArray *)

inline IOSByteArray *LibOrgBouncycastleUtilEncodersUTF8_get_transitionTable(void);
static IOSByteArray *LibOrgBouncycastleUtilEncodersUTF8_transitionTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleUtilEncodersUTF8, transitionTable, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(IOSByteArray *table, jint first, jint last, jbyte b);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleUtilEncodersUTF8)

@implementation LibOrgBouncycastleUtilEncodersUTF8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleUtilEncodersUTF8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)fillWithByteArray:(IOSByteArray *)table
                  withInt:(jint)first
                  withInt:(jint)last
                 withByte:(jbyte)b {
  LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(table, first, last, b);
}

+ (jint)transcodeToUTF16WithByteArray:(IOSByteArray *)utf8
                        withCharArray:(IOSCharArray *)utf16 {
  return LibOrgBouncycastleUtilEncodersUTF8_transcodeToUTF16WithByteArray_withCharArray_(utf8, utf16);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fillWithByteArray:withInt:withInt:withByte:);
  methods[2].selector = @selector(transcodeToUTF16WithByteArray:withCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C_ILL", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_ILL, 0x1a, -1, -1, -1, -1 },
    { "C_CR1", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_CR1, 0x1a, -1, -1, -1, -1 },
    { "C_CR2", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_CR2, 0x1a, -1, -1, -1, -1 },
    { "C_CR3", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_CR3, 0x1a, -1, -1, -1, -1 },
    { "C_L2A", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L2A, 0x1a, -1, -1, -1, -1 },
    { "C_L3A", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L3A, 0x1a, -1, -1, -1, -1 },
    { "C_L3B", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L3B, 0x1a, -1, -1, -1, -1 },
    { "C_L3C", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L3C, 0x1a, -1, -1, -1, -1 },
    { "C_L4A", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L4A, 0x1a, -1, -1, -1, -1 },
    { "C_L4B", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L4B, 0x1a, -1, -1, -1, -1 },
    { "C_L4C", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_C_L4C, 0x1a, -1, -1, -1, -1 },
    { "S_ERR", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_ERR, 0x1a, -1, -1, -1, -1 },
    { "S_END", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_END, 0x1a, -1, -1, -1, -1 },
    { "S_CS1", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_CS1, 0x1a, -1, -1, -1, -1 },
    { "S_CS2", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_CS2, 0x1a, -1, -1, -1, -1 },
    { "S_CS3", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_CS3, 0x1a, -1, -1, -1, -1 },
    { "S_P3A", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_P3A, 0x1a, -1, -1, -1, -1 },
    { "S_P3B", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_P3B, 0x1a, -1, -1, -1, -1 },
    { "S_P4A", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_P4A, 0x1a, -1, -1, -1, -1 },
    { "S_P4B", "B", .constantValue.asChar = LibOrgBouncycastleUtilEncodersUTF8_S_P4B, 0x1a, -1, -1, -1, -1 },
    { "firstUnitTable", "[S", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "transitionTable", "[B", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "fill", "[BIIB", "transcodeToUTF16", "[B[C", &LibOrgBouncycastleUtilEncodersUTF8_firstUnitTable, &LibOrgBouncycastleUtilEncodersUTF8_transitionTable };
  static const J2ObjcClassInfo _LibOrgBouncycastleUtilEncodersUTF8 = { "UTF8", "lib.org.bouncycastle.util.encoders", ptrTable, methods, fields, 7, 0x1, 3, 22, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleUtilEncodersUTF8;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleUtilEncodersUTF8 class]) {
    LibOrgBouncycastleUtilEncodersUTF8_firstUnitTable = [IOSShortArray newArrayWithLength:128];
    LibOrgBouncycastleUtilEncodersUTF8_transitionTable = [IOSByteArray newArrayWithLength:LibOrgBouncycastleUtilEncodersUTF8_S_P4B + 16];
    {
      IOSByteArray *categories = [IOSByteArray newArrayWithLength:128];
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x00, (jint) 0x0F, LibOrgBouncycastleUtilEncodersUTF8_C_CR1);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x10, (jint) 0x1F, LibOrgBouncycastleUtilEncodersUTF8_C_CR2);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x20, (jint) 0x3F, LibOrgBouncycastleUtilEncodersUTF8_C_CR3);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x40, (jint) 0x41, LibOrgBouncycastleUtilEncodersUTF8_C_ILL);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x42, (jint) 0x5F, LibOrgBouncycastleUtilEncodersUTF8_C_L2A);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x60, (jint) 0x60, LibOrgBouncycastleUtilEncodersUTF8_C_L3A);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x61, (jint) 0x6C, LibOrgBouncycastleUtilEncodersUTF8_C_L3B);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x6D, (jint) 0x6D, LibOrgBouncycastleUtilEncodersUTF8_C_L3C);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x6E, (jint) 0x6F, LibOrgBouncycastleUtilEncodersUTF8_C_L3B);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x70, (jint) 0x70, LibOrgBouncycastleUtilEncodersUTF8_C_L4A);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x71, (jint) 0x73, LibOrgBouncycastleUtilEncodersUTF8_C_L4B);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x74, (jint) 0x74, LibOrgBouncycastleUtilEncodersUTF8_C_L4C);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(categories, (jint) 0x75, (jint) 0x7F, LibOrgBouncycastleUtilEncodersUTF8_C_ILL);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, 0, LibOrgBouncycastleUtilEncodersUTF8_transitionTable->size_ - 1, LibOrgBouncycastleUtilEncodersUTF8_S_ERR);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_CS1 + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_CS1 + (jint) 0xB, LibOrgBouncycastleUtilEncodersUTF8_S_END);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_CS2 + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_CS2 + (jint) 0xB, LibOrgBouncycastleUtilEncodersUTF8_S_CS1);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_CS3 + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_CS3 + (jint) 0xB, LibOrgBouncycastleUtilEncodersUTF8_S_CS2);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_P3A + (jint) 0xA, LibOrgBouncycastleUtilEncodersUTF8_S_P3A + (jint) 0xB, LibOrgBouncycastleUtilEncodersUTF8_S_CS1);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_P3B + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_P3B + (jint) 0x9, LibOrgBouncycastleUtilEncodersUTF8_S_CS1);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_P4A + (jint) 0x9, LibOrgBouncycastleUtilEncodersUTF8_S_P4A + (jint) 0xB, LibOrgBouncycastleUtilEncodersUTF8_S_CS2);
      LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(LibOrgBouncycastleUtilEncodersUTF8_transitionTable, LibOrgBouncycastleUtilEncodersUTF8_S_P4B + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_P4B + (jint) 0x8, LibOrgBouncycastleUtilEncodersUTF8_S_CS2);
      IOSByteArray *firstUnitMasks = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x1F, (jint) 0x0F, (jint) 0x0F, (jint) 0x0F, (jint) 0x07, (jint) 0x07, (jint) 0x07 } count:11];
      IOSByteArray *firstUnitTransitions = [IOSByteArray newArrayWithBytes:(jbyte[]){ LibOrgBouncycastleUtilEncodersUTF8_S_ERR, LibOrgBouncycastleUtilEncodersUTF8_S_ERR, LibOrgBouncycastleUtilEncodersUTF8_S_ERR, LibOrgBouncycastleUtilEncodersUTF8_S_ERR, LibOrgBouncycastleUtilEncodersUTF8_S_CS1, LibOrgBouncycastleUtilEncodersUTF8_S_P3A, LibOrgBouncycastleUtilEncodersUTF8_S_CS2, LibOrgBouncycastleUtilEncodersUTF8_S_P3B, LibOrgBouncycastleUtilEncodersUTF8_S_P4A, LibOrgBouncycastleUtilEncodersUTF8_S_CS3, LibOrgBouncycastleUtilEncodersUTF8_S_P4B } count:11];
      for (jint i = (jint) 0x00; i < (jint) 0x80; ++i) {
        jbyte category = IOSByteArray_Get(categories, i);
        jint codePoint = i & IOSByteArray_Get(firstUnitMasks, category);
        jbyte state = IOSByteArray_Get(firstUnitTransitions, category);
        *IOSShortArray_GetRef(LibOrgBouncycastleUtilEncodersUTF8_firstUnitTable, i) = (jshort) ((JreLShift32(codePoint, 8)) | state);
      }
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleUtilEncodersUTF8)
  }
}

@end

void LibOrgBouncycastleUtilEncodersUTF8_init(LibOrgBouncycastleUtilEncodersUTF8 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleUtilEncodersUTF8 *new_LibOrgBouncycastleUtilEncodersUTF8_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleUtilEncodersUTF8, init)
}

LibOrgBouncycastleUtilEncodersUTF8 *create_LibOrgBouncycastleUtilEncodersUTF8_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleUtilEncodersUTF8, init)
}

void LibOrgBouncycastleUtilEncodersUTF8_fillWithByteArray_withInt_withInt_withByte_(IOSByteArray *table, jint first, jint last, jbyte b) {
  LibOrgBouncycastleUtilEncodersUTF8_initialize();
  for (jint i = first; i <= last; ++i) {
    *IOSByteArray_GetRef(nil_chk(table), i) = b;
  }
}

jint LibOrgBouncycastleUtilEncodersUTF8_transcodeToUTF16WithByteArray_withCharArray_(IOSByteArray *utf8, IOSCharArray *utf16) {
  LibOrgBouncycastleUtilEncodersUTF8_initialize();
  jint i = 0;
  jint j = 0;
  while (i < ((IOSByteArray *) nil_chk(utf8))->size_) {
    jbyte codeUnit = IOSByteArray_Get(utf8, i++);
    if (codeUnit >= 0) {
      if (j >= ((IOSCharArray *) nil_chk(utf16))->size_) {
        return -1;
      }
      *IOSCharArray_GetRef(utf16, j++) = (jchar) codeUnit;
      continue;
    }
    jshort first = IOSShortArray_Get(nil_chk(LibOrgBouncycastleUtilEncodersUTF8_firstUnitTable), codeUnit & (jint) 0x7F);
    jint codePoint = JreURShift32(first, 8);
    jbyte state = (jbyte) first;
    while (state >= 0) {
      if (i >= utf8->size_) {
        return -1;
      }
      codeUnit = IOSByteArray_Get(utf8, i++);
      codePoint = (JreLShift32(codePoint, 6)) | (codeUnit & (jint) 0x3F);
      state = IOSByteArray_Get(nil_chk(LibOrgBouncycastleUtilEncodersUTF8_transitionTable), state + (JreURShift32((codeUnit & (jint) 0xFF), 4)));
    }
    if (state == LibOrgBouncycastleUtilEncodersUTF8_S_ERR) {
      return -1;
    }
    if (codePoint <= (jint) 0xFFFF) {
      if (j >= ((IOSCharArray *) nil_chk(utf16))->size_) {
        return -1;
      }
      *IOSCharArray_GetRef(utf16, j++) = (jchar) codePoint;
    }
    else {
      if (j >= ((IOSCharArray *) nil_chk(utf16))->size_ - 1) {
        return -1;
      }
      *IOSCharArray_GetRef(utf16, j++) = (jchar) ((jint) 0xD7C0 + (JreURShift32(codePoint, 10)));
      *IOSCharArray_GetRef(utf16, j++) = (jchar) ((jint) 0xDC00 | (codePoint & (jint) 0x3FF));
    }
  }
  return j;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleUtilEncodersUTF8)
