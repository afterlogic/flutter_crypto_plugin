//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/jcajce/JcaPGPContentSignerBuilder.java
//

#include "DefaultJcaJceHelper.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaPGPContentSignerBuilder.h"
#include "JcaPGPDigestCalculatorProviderBuilder.h"
#include "JcaPGPKeyConverter.h"
#include "JcaPGPPrivateKey.h"
#include "NamedJcaJceHelper.h"
#include "OperatorHelper.h"
#include "OutputStreamFactory.h"
#include "PGPContentSigner.h"
#include "PGPDigestCalculator.h"
#include "PGPDigestCalculatorProvider.h"
#include "PGPException.h"
#include "PGPPrivateKey.h"
#include "PGPRuntimeOperationException.h"
#include "ProviderJcaJceHelper.h"
#include "TeeOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/PrivateKey.h"
#include "java/security/Provider.h"
#include "java/security/SecureRandom.h"
#include "java/security/Signature.h"
#include "java/security/SignatureException.h"

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder () {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *helper_;
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *digestCalculatorProviderBuilder_;
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter *keyConverter_;
  jint hashAlgorithm_;
  JavaSecuritySecureRandom *random_;
  jint keyAlgorithm_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, helper_, LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, digestCalculatorProviderBuilder_, LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, keyConverter_, LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, random_, JavaSecuritySecureRandom *)

@interface LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 : NSObject < LibOrgBouncycastleOpenpgpOperatorPGPContentSigner > {
 @public
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *this$0_;
  jint val$signatureType_;
  jlong val$keyID_;
  JavaSecuritySignature *val$signature_;
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> val$digestCalculator_;
}

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)outer$
                                                                                  withInt:(jint)capture$0
                                                                                 withLong:(jlong)capture$1
                                                                withJavaSecuritySignature:(JavaSecuritySignature *)capture$2
                                 withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)capture$3;

- (jint)getType;

- (jint)getHashAlgorithm;

- (jint)getKeyAlgorithm;

- (jlong)getKeyID;

- (JavaIoOutputStream *)getOutputStream;

- (IOSByteArray *)getSignature;

- (IOSByteArray *)getDigest;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1)

__attribute__((unused)) static void LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3);

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3);

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder

- (instancetype)initWithInt:(jint)keyAlgorithm
                    withInt:(jint)hashAlgorithm {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_initWithInt_withInt_(self, keyAlgorithm, hashAlgorithm);
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)setSecureRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  self->random_ = random;
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter *) nil_chk(keyConverter_)) setProviderWithJavaSecurityProvider:provider];
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(digestCalculatorProviderBuilder_)) setProviderWithJavaSecurityProvider:provider];
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)setProviderWithNSString:(NSString *)providerName {
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter *) nil_chk(keyConverter_)) setProviderWithNSString:providerName];
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(digestCalculatorProviderBuilder_)) setProviderWithNSString:providerName];
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)setDigestProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(digestCalculatorProviderBuilder_)) setProviderWithJavaSecurityProvider:provider];
  return self;
}

- (LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)setDigestProviderWithNSString:(NSString *)providerName {
  (void) [((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(digestCalculatorProviderBuilder_)) setProviderWithNSString:providerName];
  return self;
}

- (id<LibOrgBouncycastleOpenpgpOperatorPGPContentSigner>)buildWithInt:(jint)signatureType
                           withLibOrgBouncycastleOpenpgpPGPPrivateKey:(LibOrgBouncycastleOpenpgpPGPPrivateKey *)privateKey {
  if ([privateKey isKindOfClass:[LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPPrivateKey class]]) {
    return [self buildWithInt:signatureType withLong:[((LibOrgBouncycastleOpenpgpPGPPrivateKey *) nil_chk(privateKey)) getKeyID] withJavaSecurityPrivateKey:[((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPPrivateKey *) privateKey) getPrivateKey]];
  }
  else {
    return [self buildWithInt:signatureType withLong:[((LibOrgBouncycastleOpenpgpPGPPrivateKey *) nil_chk(privateKey)) getKeyID] withJavaSecurityPrivateKey:[((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter *) nil_chk(keyConverter_)) getPrivateKeyWithLibOrgBouncycastleOpenpgpPGPPrivateKey:privateKey]];
  }
}

- (id<LibOrgBouncycastleOpenpgpOperatorPGPContentSigner>)buildWithInt:(jint)signatureType
                                                             withLong:(jlong)keyID
                                           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> digestCalculator = [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>) nil_chk([((LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder *) nil_chk(digestCalculatorProviderBuilder_)) build])) getWithInt:hashAlgorithm_];
  JavaSecuritySignature *signature = [((LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper *) nil_chk(helper_)) createSignatureWithInt:keyAlgorithm_ withInt:hashAlgorithm_];
  @try {
    if (random_ != nil) {
      [((JavaSecuritySignature *) nil_chk(signature)) initSignWithJavaSecurityPrivateKey:privateKey withJavaSecuritySecureRandom:random_];
    }
    else {
      [((JavaSecuritySignature *) nil_chk(signature)) initSignWithJavaSecurityPrivateKey:privateKey];
    }
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPException_initWithNSString_withJavaLangException_(@"invalid key.", e);
  }
  return new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(self, signatureType, keyID, signature, digestCalculator);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPGPContentSigner;", 0x1, 7, 8, 9, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPGPContentSigner;", 0x1, 7, 10, 9, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(setSecureRandomWithJavaSecuritySecureRandom:);
  methods[2].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[3].selector = @selector(setProviderWithNSString:);
  methods[4].selector = @selector(setDigestProviderWithJavaSecurityProvider:);
  methods[5].selector = @selector(setDigestProviderWithNSString:);
  methods[6].selector = @selector(buildWithInt:withLibOrgBouncycastleOpenpgpPGPPrivateKey:);
  methods[7].selector = @selector(buildWithInt:withLong:withJavaSecurityPrivateKey:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LLibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digestCalculatorProviderBuilder_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "keyConverter_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashAlgorithm_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "keyAlgorithm_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "setSecureRandom", "LJavaSecuritySecureRandom;", "setProvider", "LJavaSecurityProvider;", "LNSString;", "setDigestProvider", "build", "ILLibOrgBouncycastleOpenpgpPGPPrivateKey;", "LLibOrgBouncycastleOpenpgpPGPException;", "IJLJavaSecurityPrivateKey;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder = { "JcaPGPContentSignerBuilder", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_initWithInt_withInt_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *self, jint keyAlgorithm, jint hashAlgorithm) {
  NSObject_init(self);
  self->helper_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceOperatorHelper_initWithLibOrgBouncycastleJcajceUtilJcaJceHelper_(new_LibOrgBouncycastleJcajceUtilDefaultJcaJceHelper_init());
  self->digestCalculatorProviderBuilder_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPDigestCalculatorProviderBuilder_init();
  self->keyConverter_ = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPKeyConverter_init();
  self->keyAlgorithm_ = keyAlgorithm;
  self->hashAlgorithm_ = hashAlgorithm;
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_initWithInt_withInt_(jint keyAlgorithm, jint hashAlgorithm) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, initWithInt_withInt_, keyAlgorithm, hashAlgorithm)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_initWithInt_withInt_(jint keyAlgorithm, jint hashAlgorithm) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder, initWithInt_withInt_, keyAlgorithm, hashAlgorithm)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder)

@implementation LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1

- (instancetype)initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder:(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *)outer$
                                                                                  withInt:(jint)capture$0
                                                                                 withLong:(jlong)capture$1
                                                                withJavaSecuritySignature:(JavaSecuritySignature *)capture$2
                                 withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)capture$3 {
  LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (jint)getType {
  return val$signatureType_;
}

- (jint)getHashAlgorithm {
  return this$0_->hashAlgorithm_;
}

- (jint)getKeyAlgorithm {
  return this$0_->keyAlgorithm_;
}

- (jlong)getKeyID {
  return val$keyID_;
}

- (JavaIoOutputStream *)getOutputStream {
  return new_LibOrgBouncycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(LibOrgBouncycastleJcajceIoOutputStreamFactory_createStreamWithJavaSecuritySignature_(val$signature_), [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>) nil_chk(val$digestCalculator_)) getOutputStream]);
}

- (IOSByteArray *)getSignature {
  @try {
    return [((JavaSecuritySignature *) nil_chk(val$signature_)) sign];
  }
  @catch (JavaSecuritySignatureException *e) {
    @throw new_LibOrgBouncycastleOpenpgpPGPRuntimeOperationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Unable to create signature: ", [e getMessage]), e);
  }
}

- (IOSByteArray *)getDigest {
  return [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>) nil_chk(val$digestCalculator_)) getDigest];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder:withInt:withLong:withJavaSecuritySignature:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:);
  methods[1].selector = @selector(getType);
  methods[2].selector = @selector(getHashAlgorithm);
  methods[3].selector = @selector(getKeyAlgorithm);
  methods[4].selector = @selector(getKeyID);
  methods[5].selector = @selector(getOutputStream);
  methods[6].selector = @selector(getSignature);
  methods[7].selector = @selector(getDigest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$signatureType_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$keyID_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$signature_", "LJavaSecuritySignature;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$digestCalculator_", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder;", "buildWithInt:withLong:withJavaSecurityPrivateKey:" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 = { "", "lib.org.bouncycastle.openpgp.operator.jcajce", ptrTable, methods, fields, 7, 0x8010, 8, 5, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1;
}

@end

void LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *self, LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3) {
  self->this$0_ = outer$;
  self->val$signatureType_ = capture$0;
  self->val$keyID_ = capture$1;
  self->val$signature_ = capture$2;
  self->val$digestCalculator_ = capture$3;
  NSObject_init(self);
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_, outer$, capture$0, capture$1, capture$2, capture$3)
}

LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1 *create_LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1_initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder *outer$, jint capture$0, jlong capture$1, JavaSecuritySignature *capture$2, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> capture$3) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_1, initWithLibOrgBouncycastleOpenpgpOperatorJcajceJcaPGPContentSignerBuilder_withInt_withLong_withJavaSecuritySignature_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_, outer$, capture$0, capture$1, capture$2, capture$3)
}
