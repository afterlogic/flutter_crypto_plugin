//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPMarker.java
//

#include "BCPGInputStream.h"
#include "J2ObjC_source.h"
#include "MarkerPacket.h"
#include "PGPMarker.h"
#include "Packet.h"

@interface LibOrgBouncycastleOpenpgpPGPMarker () {
 @public
  LibOrgBouncycastleBcpgMarkerPacket *p_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPMarker, p_, LibOrgBouncycastleBcpgMarkerPacket *)

@implementation LibOrgBouncycastleOpenpgpPGPMarker

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleOpenpgpPGPMarker_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p_", "LLibOrgBouncycastleBcpgMarkerPacket;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpPGPMarker = { "PGPMarker", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpPGPMarker;
}

@end

void LibOrgBouncycastleOpenpgpPGPMarker_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleOpenpgpPGPMarker *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  NSObject_init(self);
  self->p_ = (LibOrgBouncycastleBcpgMarkerPacket *) cast_chk([((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(inArg)) readPacket], [LibOrgBouncycastleBcpgMarkerPacket class]);
}

LibOrgBouncycastleOpenpgpPGPMarker *new_LibOrgBouncycastleOpenpgpPGPMarker_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPMarker, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleOpenpgpPGPMarker *create_LibOrgBouncycastleOpenpgpPGPMarker_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPMarker, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpPGPMarker)
