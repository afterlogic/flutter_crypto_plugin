//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/Asn1CmpCertStatus.java
//

#ifndef Asn1CmpCertStatus_H
#define Asn1CmpCertStatus_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CmpPKIStatusInfo;

@interface LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)certHash
                     withJavaMathBigInteger:(JavaMathBigInteger *)certReqId;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)certHash
                     withJavaMathBigInteger:(JavaMathBigInteger *)certReqId
 withLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)statusInfo;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getCertHash;

- (LibOrgBouncycastleAsn1ASN1Integer *)getCertReqId;

+ (LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CmpPKIStatusInfo *)getStatusInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_(LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *self, IOSByteArray *certHash, JavaMathBigInteger *certReqId);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *new_LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_(IOSByteArray *certHash, JavaMathBigInteger *certReqId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *create_LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_(IOSByteArray *certHash, JavaMathBigInteger *certReqId);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_withLibOrgBouncycastleAsn1CmpPKIStatusInfo_(LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *self, IOSByteArray *certHash, JavaMathBigInteger *certReqId, LibOrgBouncycastleAsn1CmpPKIStatusInfo *statusInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *new_LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_withLibOrgBouncycastleAsn1CmpPKIStatusInfo_(IOSByteArray *certHash, JavaMathBigInteger *certReqId, LibOrgBouncycastleAsn1CmpPKIStatusInfo *statusInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *create_LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_initWithByteArray_withJavaMathBigInteger_withLibOrgBouncycastleAsn1CmpPKIStatusInfo_(IOSByteArray *certHash, JavaMathBigInteger *certReqId, LibOrgBouncycastleAsn1CmpPKIStatusInfo *statusInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus *LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmpAsn1CmpCertStatus)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1CmpCertStatus_H
