//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DERGeneralizedTime.java
//

#include "ASN1GeneralizedTime.h"
#include "ASN1OutputStream.h"
#include "BERTags.h"
#include "DERGeneralizedTime.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StreamUtil.h"
#include "Strings.h"
#include "java/lang/System.h"
#include "java/util/Date.h"

@interface LibOrgBouncycastleAsn1DERGeneralizedTime ()

- (IOSByteArray *)getDERTime;

@end

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleAsn1DERGeneralizedTime_getDERTime(LibOrgBouncycastleAsn1DERGeneralizedTime *self);

@implementation LibOrgBouncycastleAsn1DERGeneralizedTime

- (instancetype)initWithByteArray:(IOSByteArray *)time {
  LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(self, time);
  return self;
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)time {
  LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(self, time);
  return self;
}

- (instancetype)initWithNSString:(NSString *)time {
  LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(self, time);
  return self;
}

- (IOSByteArray *)getDERTime {
  return LibOrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self);
}

- (jint)encodedLength {
  jint length = ((IOSByteArray *) nil_chk(LibOrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self)))->size_;
  return 1 + LibOrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(length) + length;
}

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg {
  [((LibOrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:LibOrgBouncycastleAsn1BERTags_GENERALIZED_TIME withByteArray:LibOrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithJavaUtilDate:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(getDERTime);
  methods[4].selector = @selector(encodedLength);
  methods[5].selector = @selector(encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[B", "LJavaUtilDate;", "LNSString;", "encode", "LLibOrgBouncycastleAsn1ASN1OutputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1DERGeneralizedTime = { "DERGeneralizedTime", "lib.org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1DERGeneralizedTime;
}

@end

void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, IOSByteArray *time) {
  LibOrgBouncycastleAsn1ASN1GeneralizedTime_initWithByteArray_(self, time);
}

LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithByteArray_, time)
}

LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithByteArray_, time)
}

void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, JavaUtilDate *time) {
  LibOrgBouncycastleAsn1ASN1GeneralizedTime_initWithJavaUtilDate_(self, time);
}

LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithJavaUtilDate_, time)
}

LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithJavaUtilDate_, time)
}

void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, NSString *time) {
  LibOrgBouncycastleAsn1ASN1GeneralizedTime_initWithNSString_(self, time);
}

LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithNSString_, time)
}

LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1DERGeneralizedTime, initWithNSString_, time)
}

IOSByteArray *LibOrgBouncycastleAsn1DERGeneralizedTime_getDERTime(LibOrgBouncycastleAsn1DERGeneralizedTime *self) {
  if (IOSByteArray_Get(self->time_, ((IOSByteArray *) nil_chk(self->time_))->size_ - 1) == 'Z') {
    if (![self hasMinutes]) {
      IOSByteArray *derTime = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(self->time_))->size_ + 4];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->time_, 0, derTime, 0, self->time_->size_ - 1);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(LibOrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"0000Z"), 0, derTime, ((IOSByteArray *) nil_chk(self->time_))->size_ - 1, 5);
      return derTime;
    }
    else if (![self hasSeconds]) {
      IOSByteArray *derTime = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(self->time_))->size_ + 2];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->time_, 0, derTime, 0, self->time_->size_ - 1);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(LibOrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"00Z"), 0, derTime, ((IOSByteArray *) nil_chk(self->time_))->size_ - 1, 3);
      return derTime;
    }
    else if ([self hasFractionalSeconds]) {
      jint ind = ((IOSByteArray *) nil_chk(self->time_))->size_ - 2;
      while (ind > 0 && IOSByteArray_Get(self->time_, ind) == '0') {
        ind--;
      }
      if (IOSByteArray_Get(self->time_, ind) == '.') {
        IOSByteArray *derTime = [IOSByteArray newArrayWithLength:ind + 1];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->time_, 0, derTime, 0, ind);
        *IOSByteArray_GetRef(derTime, ind) = (jbyte) 'Z';
        return derTime;
      }
      else {
        IOSByteArray *derTime = [IOSByteArray newArrayWithLength:ind + 2];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->time_, 0, derTime, 0, ind + 1);
        *IOSByteArray_GetRef(derTime, ind + 1) = (jbyte) 'Z';
        return derTime;
      }
    }
    else {
      return self->time_;
    }
  }
  else {
    return self->time_;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1DERGeneralizedTime)
