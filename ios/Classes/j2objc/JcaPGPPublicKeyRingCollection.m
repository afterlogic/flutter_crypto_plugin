//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/jcajce/JcaPGPPublicKeyRingCollection.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaKeyFingerprintCalculator.h"
#include "JcaPGPPublicKeyRingCollection.h"
#include "PGPPublicKeyRingCollection.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/util/Collection.h"

@implementation LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection

- (instancetype)initWithByteArray:(IOSByteArray *)encoding {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithByteArray_(self, encoding);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaUtilCollection_(self, collection);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithJavaIoInputStream:);
  methods[2].selector = @selector(initWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[B", "LJavaIoIOException;LLibOrgBouncycastleOpenpgpPGPException;", "LJavaIoInputStream;", "LJavaUtilCollection;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection = { "JcaPGPPublicKeyRingCollection", "lib.org.bouncycastle.openpgp.jcajce", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection;
}

@end

void LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithByteArray_(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *self, IOSByteArray *encoding) {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaIoInputStream_(self, new_JavaIoByteArrayInputStream_initWithByteArray_(encoding));
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithByteArray_, encoding)
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithByteArray_, encoding)
}

void LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaIoInputStream_(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *self, JavaIoInputStream *inArg) {
  LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(self, inArg, new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaKeyFingerprintCalculator_init());
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithJavaIoInputStream_, inArg)
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithJavaIoInputStream_, inArg)
}

void LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaUtilCollection_(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *self, id<JavaUtilCollection> collection) {
  LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_initWithJavaUtilCollection_(self, collection);
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *new_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithJavaUtilCollection_, collection)
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection *create_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection, initWithJavaUtilCollection_, collection)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRingCollection)
