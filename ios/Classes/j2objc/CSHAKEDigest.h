//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/CSHAKEDigest.java
//

#ifndef CSHAKEDigest_H
#define CSHAKEDigest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SHAKEDigest.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoDigestsCSHAKEDigest : LibOrgBouncycastleCryptoDigestsSHAKEDigest

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)bitLength
                        withByteArray:(IOSByteArray *)N
                        withByteArray:(IOSByteArray *)S;

- (jint)doOutputWithByteArray:(IOSByteArray *)outArg
                      withInt:(jint)outOff
                      withInt:(jint)outLen;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsSHAKEDigest:(LibOrgBouncycastleCryptoDigestsSHAKEDigest *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoDigestsCSHAKEDigest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsCSHAKEDigest_initWithInt_withByteArray_withByteArray_(LibOrgBouncycastleCryptoDigestsCSHAKEDigest *self, jint bitLength, IOSByteArray *N, IOSByteArray *S);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsCSHAKEDigest *new_LibOrgBouncycastleCryptoDigestsCSHAKEDigest_initWithInt_withByteArray_withByteArray_(jint bitLength, IOSByteArray *N, IOSByteArray *S) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsCSHAKEDigest *create_LibOrgBouncycastleCryptoDigestsCSHAKEDigest_initWithInt_withByteArray_withByteArray_(jint bitLength, IOSByteArray *N, IOSByteArray *S);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsCSHAKEDigest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CSHAKEDigest_H
