//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIHeader.java
//

#ifndef PKIHeader_H
#define PKIHeader_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CmpPKIFreeText;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleAsn1X509GeneralName;

@interface LibOrgBouncycastleAsn1CmpPKIHeader : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) LibOrgBouncycastleAsn1X509GeneralName *NULL_NAME NS_SWIFT_NAME(NULL_NAME);
@property (readonly, class) jint CMP_1999 NS_SWIFT_NAME(CMP_1999);
@property (readonly, class) jint CMP_2000 NS_SWIFT_NAME(CMP_2000);

+ (LibOrgBouncycastleAsn1X509GeneralName *)NULL_NAME;

+ (jint)CMP_1999;

+ (jint)CMP_2000;

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)pvno
withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)sender
withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)recipient;

- (LibOrgBouncycastleAsn1CmpPKIFreeText *)getFreeText;

- (IOSObjectArray *)getGeneralInfo;

+ (LibOrgBouncycastleAsn1CmpPKIHeader *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getMessageTime;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getProtectionAlg;

- (LibOrgBouncycastleAsn1ASN1Integer *)getPvno;

- (LibOrgBouncycastleAsn1X509GeneralName *)getRecipient;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getRecipKID;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getRecipNonce;

- (LibOrgBouncycastleAsn1X509GeneralName *)getSender;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getSenderKID;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getSenderNonce;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getTransactionID;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CmpPKIHeader)

inline LibOrgBouncycastleAsn1X509GeneralName *LibOrgBouncycastleAsn1CmpPKIHeader_get_NULL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509GeneralName *LibOrgBouncycastleAsn1CmpPKIHeader_NULL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIHeader, NULL_NAME, LibOrgBouncycastleAsn1X509GeneralName *)

inline jint LibOrgBouncycastleAsn1CmpPKIHeader_get_CMP_1999(void);
#define LibOrgBouncycastleAsn1CmpPKIHeader_CMP_1999 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIHeader, CMP_1999, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIHeader_get_CMP_2000(void);
#define LibOrgBouncycastleAsn1CmpPKIHeader_CMP_2000 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIHeader, CMP_2000, jint)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIHeader *LibOrgBouncycastleAsn1CmpPKIHeader_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmpPKIHeader_initWithInt_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1X509GeneralName_(LibOrgBouncycastleAsn1CmpPKIHeader *self, jint pvno, LibOrgBouncycastleAsn1X509GeneralName *sender, LibOrgBouncycastleAsn1X509GeneralName *recipient);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIHeader *new_LibOrgBouncycastleAsn1CmpPKIHeader_initWithInt_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1X509GeneralName_(jint pvno, LibOrgBouncycastleAsn1X509GeneralName *sender, LibOrgBouncycastleAsn1X509GeneralName *recipient) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIHeader *create_LibOrgBouncycastleAsn1CmpPKIHeader_initWithInt_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1X509GeneralName_(jint pvno, LibOrgBouncycastleAsn1X509GeneralName *sender, LibOrgBouncycastleAsn1X509GeneralName *recipient);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmpPKIHeader)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIHeader_H
