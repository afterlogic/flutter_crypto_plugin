//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ExperimentalPacket.java
//

#ifndef ExperimentalPacket_H
#define ExperimentalPacket_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ContainedPacket.h"
#include "J2ObjC_header.h"
#include "PublicKeyAlgorithmTags.h"

@class IOSByteArray;
@class LibOrgBouncycastleBcpgBCPGInputStream;
@class LibOrgBouncycastleBcpgBCPGOutputStream;

@interface LibOrgBouncycastleBcpgExperimentalPacket : LibOrgBouncycastleBcpgContainedPacket < LibOrgBouncycastleBcpgPublicKeyAlgorithmTags >

#pragma mark Public

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg;

- (IOSByteArray *)getContents;

- (jint)getTag;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)tag
withLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgExperimentalPacket)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgExperimentalPacket_initWithInt_withLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgExperimentalPacket *self, jint tag, LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgExperimentalPacket *new_LibOrgBouncycastleBcpgExperimentalPacket_initWithInt_withLibOrgBouncycastleBcpgBCPGInputStream_(jint tag, LibOrgBouncycastleBcpgBCPGInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgExperimentalPacket *create_LibOrgBouncycastleBcpgExperimentalPacket_initWithInt_withLibOrgBouncycastleBcpgBCPGInputStream_(jint tag, LibOrgBouncycastleBcpgBCPGInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgExperimentalPacket)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExperimentalPacket_H
