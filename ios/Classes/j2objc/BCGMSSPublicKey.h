//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/gmss/BCGMSSPublicKey.java
//

#ifndef BCGMSSPublicKey_H
#define BCGMSSPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoGmssGMSSParameters;
@class LibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters;

@interface LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey : NSObject < LibOrgBouncycastleCryptoCipherParameters, JavaSecurityPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)pub
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)gmssParameterSet;

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters *)params;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)getParameterSet;

- (IOSByteArray *)getPublicKeyBytes;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithByteArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *self, IOSByteArray *pub, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterSet);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *new_LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithByteArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(IOSByteArray *pub, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterSet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *create_LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithByteArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(IOSByteArray *pub, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterSet);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithLibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters_(LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *self, LibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *new_LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithLibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters_(LibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey *create_LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey_initWithLibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters_(LibOrgBouncycastlePqcCryptoGmssGMSSPublicKeyParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderGmssBCGMSSPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCGMSSPublicKey_H
