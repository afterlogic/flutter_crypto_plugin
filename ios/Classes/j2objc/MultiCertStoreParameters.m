//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/MultiCertStoreParameters.java
//

#include "J2ObjC_source.h"
#include "MultiCertStoreParameters.h"
#include "java/util/Collection.h"

@interface LibOrgBouncycastleJceMultiCertStoreParameters () {
 @public
  id<JavaUtilCollection> certStores_;
  jboolean searchAllStores_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceMultiCertStoreParameters, certStores_, id<JavaUtilCollection>)

@implementation LibOrgBouncycastleJceMultiCertStoreParameters

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)certStores {
  LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(self, certStores);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)certStores
                               withBoolean:(jboolean)searchAllStores {
  LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(self, certStores, searchAllStores);
  return self;
}

- (id<JavaUtilCollection>)getCertStores {
  return certStores_;
}

- (jboolean)getSearchAllStores {
  return searchAllStores_;
}

- (id)java_clone {
  return self;
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(initWithJavaUtilCollection:withBoolean:);
  methods[2].selector = @selector(getCertStores);
  methods[3].selector = @selector(getSearchAllStores);
  methods[4].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certStores_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "searchAllStores_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "LJavaUtilCollection;Z", "clone" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceMultiCertStoreParameters = { "MultiCertStoreParameters", "lib.org.bouncycastle.jce", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceMultiCertStoreParameters;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(LibOrgBouncycastleJceMultiCertStoreParameters *self, id<JavaUtilCollection> certStores) {
  LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(self, certStores, true);
}

LibOrgBouncycastleJceMultiCertStoreParameters *new_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> certStores) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceMultiCertStoreParameters, initWithJavaUtilCollection_, certStores)
}

LibOrgBouncycastleJceMultiCertStoreParameters *create_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> certStores) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceMultiCertStoreParameters, initWithJavaUtilCollection_, certStores)
}

void LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(LibOrgBouncycastleJceMultiCertStoreParameters *self, id<JavaUtilCollection> certStores, jboolean searchAllStores) {
  NSObject_init(self);
  self->certStores_ = certStores;
  self->searchAllStores_ = searchAllStores;
}

LibOrgBouncycastleJceMultiCertStoreParameters *new_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> certStores, jboolean searchAllStores) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceMultiCertStoreParameters, initWithJavaUtilCollection_withBoolean_, certStores, searchAllStores)
}

LibOrgBouncycastleJceMultiCertStoreParameters *create_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> certStores, jboolean searchAllStores) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceMultiCertStoreParameters, initWithJavaUtilCollection_withBoolean_, certStores, searchAllStores)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceMultiCertStoreParameters)
