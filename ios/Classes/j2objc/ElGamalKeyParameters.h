//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ElGamalKeyParameters.java
//

#ifndef ElGamalKeyParameters_H
#define ElGamalKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoParamsElGamalParameters;

@interface LibOrgBouncycastleCryptoParamsElGamalKeyParameters : LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (LibOrgBouncycastleCryptoParamsElGamalParameters *)getParameters;

- (NSUInteger)hash;

#pragma mark Protected

- (instancetype __nonnull)initWithBoolean:(jboolean)isPrivate
withLibOrgBouncycastleCryptoParamsElGamalParameters:(LibOrgBouncycastleCryptoParamsElGamalParameters *)params;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsElGamalKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsElGamalKeyParameters_initWithBoolean_withLibOrgBouncycastleCryptoParamsElGamalParameters_(LibOrgBouncycastleCryptoParamsElGamalKeyParameters *self, jboolean isPrivate, LibOrgBouncycastleCryptoParamsElGamalParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalKeyParameters *new_LibOrgBouncycastleCryptoParamsElGamalKeyParameters_initWithBoolean_withLibOrgBouncycastleCryptoParamsElGamalParameters_(jboolean isPrivate, LibOrgBouncycastleCryptoParamsElGamalParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsElGamalKeyParameters *create_LibOrgBouncycastleCryptoParamsElGamalKeyParameters_initWithBoolean_withLibOrgBouncycastleCryptoParamsElGamalParameters_(jboolean isPrivate, LibOrgBouncycastleCryptoParamsElGamalParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsElGamalKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ElGamalKeyParameters_H
