//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPOnePassSignatureList.java
//

#include "Arrays.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PGPOnePassSignature.h"
#include "PGPOnePassSignatureList.h"
#include "java/lang/Iterable.h"
#include "java/lang/System.h"
#include "java/util/Iterator.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"

@implementation LibOrgBouncycastleOpenpgpPGPOnePassSignatureList

- (instancetype)initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray:(IOSObjectArray *)sigs {
  LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(self, sigs);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature:(LibOrgBouncycastleOpenpgpPGPOnePassSignature *)sig {
  LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(self, sig);
  return self;
}

- (LibOrgBouncycastleOpenpgpPGPOnePassSignature *)getWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(sigs_), index);
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(sigs_))->size_;
}

- (jboolean)isEmpty {
  return ((IOSObjectArray *) nil_chk(sigs_))->size_ == 0;
}

- (id<JavaUtilIterator>)iterator {
  return new_LibOrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(sigs_);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpPGPOnePassSignature;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature:);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(size);
  methods[4].selector = @selector(isEmpty);
  methods[5].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sigs_", "[LLibOrgBouncycastleOpenpgpPGPOnePassSignature;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LLibOrgBouncycastleOpenpgpPGPOnePassSignature;", "LLibOrgBouncycastleOpenpgpPGPOnePassSignature;", "get", "I", "()Ljava/util/Iterator<Llib/org/bouncycastle/openpgp/PGPOnePassSignature;>;", "Ljava/lang/Object;Llib/org/bouncycastle/util/Iterable<Llib/org/bouncycastle/openpgp/PGPOnePassSignature;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpPGPOnePassSignatureList = { "PGPOnePassSignatureList", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, 5, -1 };
  return &_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList;
}

@end

void LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *self, IOSObjectArray *sigs) {
  NSObject_init(self);
  self->sigs_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(sigs))->size_ type:LibOrgBouncycastleOpenpgpPGPOnePassSignature_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(sigs, 0, self->sigs_, 0, sigs->size_);
}

LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *new_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(IOSObjectArray *sigs) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList, initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_, sigs)
}

LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *create_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_(IOSObjectArray *sigs) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList, initWithLibOrgBouncycastleOpenpgpPGPOnePassSignatureArray_, sigs)
}

void LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *self, LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig) {
  NSObject_init(self);
  self->sigs_ = [IOSObjectArray newArrayWithLength:1 type:LibOrgBouncycastleOpenpgpPGPOnePassSignature_class_()];
  (void) IOSObjectArray_Set(self->sigs_, 0, sig);
}

LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *new_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList, initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_, sig)
}

LibOrgBouncycastleOpenpgpPGPOnePassSignatureList *create_LibOrgBouncycastleOpenpgpPGPOnePassSignatureList_initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_(LibOrgBouncycastleOpenpgpPGPOnePassSignature *sig) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList, initWithLibOrgBouncycastleOpenpgpPGPOnePassSignature_, sig)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpPGPOnePassSignatureList)
