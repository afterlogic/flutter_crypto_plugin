//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/ErrorMsgContent.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERSequence.h"
#include "ErrorMsgContent.h"
#include "J2ObjC_source.h"
#include "PKIFreeText.h"
#include "PKIStatusInfo.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1CmpErrorMsgContent () {
 @public
  LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo_;
  LibOrgBouncycastleAsn1ASN1Integer *errorCode_;
  LibOrgBouncycastleAsn1CmpPKIFreeText *errorDetails_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpErrorMsgContent, pkiStatusInfo_, LibOrgBouncycastleAsn1CmpPKIStatusInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpErrorMsgContent, errorCode_, LibOrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpErrorMsgContent, errorDetails_, LibOrgBouncycastleAsn1CmpPKIFreeText *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpErrorMsgContent *new_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpErrorMsgContent *create_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpErrorMsgContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

@implementation LibOrgBouncycastleAsn1CmpErrorMsgContent

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmpErrorMsgContent *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpErrorMsgContent_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)pkiStatusInfo {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_(self, pkiStatusInfo);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)pkiStatusInfo
                         withLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)errorCode
                      withLibOrgBouncycastleAsn1CmpPKIFreeText:(LibOrgBouncycastleAsn1CmpPKIFreeText *)errorDetails {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_(self, pkiStatusInfo, errorCode, errorDetails);
  return self;
}

- (LibOrgBouncycastleAsn1CmpPKIStatusInfo *)getPKIStatusInfo {
  return pkiStatusInfo_;
}

- (LibOrgBouncycastleAsn1ASN1Integer *)getErrorCode {
  return errorCode_;
}

- (LibOrgBouncycastleAsn1CmpPKIFreeText *)getErrorDetails {
  return errorDetails_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:pkiStatusInfo_];
  LibOrgBouncycastleAsn1CmpErrorMsgContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, errorCode_);
  LibOrgBouncycastleAsn1CmpErrorMsgContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, errorDetails_);
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, obj);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpErrorMsgContent;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpPKIFreeText;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:withLibOrgBouncycastleAsn1ASN1Integer:withLibOrgBouncycastleAsn1CmpPKIFreeText:);
  methods[4].selector = @selector(getPKIStatusInfo);
  methods[5].selector = @selector(getErrorCode);
  methods[6].selector = @selector(getErrorDetails);
  methods[7].selector = @selector(toASN1Primitive);
  methods[8].selector = @selector(addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:withLibOrgBouncycastleAsn1ASN1Encodable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pkiStatusInfo_", "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "errorCode_", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "errorDetails_", "LLibOrgBouncycastleAsn1CmpPKIFreeText;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;", "LLibOrgBouncycastleAsn1CmpPKIStatusInfo;LLibOrgBouncycastleAsn1ASN1Integer;LLibOrgBouncycastleAsn1CmpPKIFreeText;", "addOptional", "LLibOrgBouncycastleAsn1ASN1EncodableVector;LLibOrgBouncycastleAsn1ASN1Encodable;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpErrorMsgContent = { "ErrorMsgContent", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpErrorMsgContent;
}

@end

void LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->pkiStatusInfo_ = LibOrgBouncycastleAsn1CmpPKIStatusInfo_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
  while ([en hasMoreElements]) {
    id o = [en nextElement];
    if ([o isKindOfClass:[LibOrgBouncycastleAsn1ASN1Integer class]]) {
      self->errorCode_ = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(o);
    }
    else {
      self->errorDetails_ = LibOrgBouncycastleAsn1CmpPKIFreeText_getInstanceWithId_(o);
    }
  }
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *new_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *create_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *LibOrgBouncycastleAsn1CmpErrorMsgContent_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmpErrorMsgContent class]]) {
    return (LibOrgBouncycastleAsn1CmpErrorMsgContent *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo) {
  LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_(self, pkiStatusInfo, nil, nil);
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *new_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_, pkiStatusInfo)
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *create_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_, pkiStatusInfo)
}

void LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1ASN1Integer *errorCode, LibOrgBouncycastleAsn1CmpPKIFreeText *errorDetails) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (pkiStatusInfo == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'pkiStatusInfo' cannot be null");
  }
  self->pkiStatusInfo_ = pkiStatusInfo;
  self->errorCode_ = errorCode;
  self->errorDetails_ = errorDetails;
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *new_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1ASN1Integer *errorCode, LibOrgBouncycastleAsn1CmpPKIFreeText *errorDetails) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_, pkiStatusInfo, errorCode, errorDetails)
}

LibOrgBouncycastleAsn1CmpErrorMsgContent *create_LibOrgBouncycastleAsn1CmpErrorMsgContent_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1ASN1Integer *errorCode, LibOrgBouncycastleAsn1CmpPKIFreeText *errorDetails) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpErrorMsgContent, initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1CmpPKIFreeText_, pkiStatusInfo, errorCode, errorDetails)
}

void LibOrgBouncycastleAsn1CmpErrorMsgContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpErrorMsgContent *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  if (obj != nil) {
    [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) addWithLibOrgBouncycastleAsn1ASN1Encodable:obj];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpErrorMsgContent)
