//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/S2K.java
//

#include "BCPGObject.h"
#include "BCPGOutputStream.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "S2K.h"
#include "java/io/DataInputStream.h"
#include "java/io/InputStream.h"

inline jint LibOrgBouncycastleBcpgS2K_get_EXPBIAS(void);
#define LibOrgBouncycastleBcpgS2K_EXPBIAS 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgS2K, EXPBIAS, jint)

@implementation LibOrgBouncycastleBcpgS2K

+ (jint)SIMPLE {
  return LibOrgBouncycastleBcpgS2K_SIMPLE;
}

+ (jint)SALTED {
  return LibOrgBouncycastleBcpgS2K_SALTED;
}

+ (jint)SALTED_AND_ITERATED {
  return LibOrgBouncycastleBcpgS2K_SALTED_AND_ITERATED;
}

+ (jint)GNU_DUMMY_S2K {
  return LibOrgBouncycastleBcpgS2K_GNU_DUMMY_S2K;
}

+ (jint)GNU_PROTECTION_MODE_NO_PRIVATE_KEY {
  return LibOrgBouncycastleBcpgS2K_GNU_PROTECTION_MODE_NO_PRIVATE_KEY;
}

+ (jint)GNU_PROTECTION_MODE_DIVERT_TO_CARD {
  return LibOrgBouncycastleBcpgS2K_GNU_PROTECTION_MODE_DIVERT_TO_CARD;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleBcpgS2K_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithInt:(jint)algorithm {
  LibOrgBouncycastleBcpgS2K_initWithInt_(self, algorithm);
  return self;
}

- (instancetype)initWithInt:(jint)algorithm
              withByteArray:(IOSByteArray *)iv {
  LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_(self, algorithm, iv);
  return self;
}

- (instancetype)initWithInt:(jint)algorithm
              withByteArray:(IOSByteArray *)iv
                    withInt:(jint)itCount {
  LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_withInt_(self, algorithm, iv, itCount);
  return self;
}

- (jint)getType {
  return type_;
}

- (jint)getHashAlgorithm {
  return algorithm_;
}

- (IOSByteArray *)getIV {
  return iv_;
}

- (jlong)getIterationCount {
  return JreLShift32((16 + (itCount_ & 15)), ((JreRShift32(itCount_, 4)) + LibOrgBouncycastleBcpgS2K_EXPBIAS));
}

- (jint)getProtectionMode {
  return protectionMode_;
}

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg {
  [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(outArg)) writeWithInt:type_];
  [outArg writeWithInt:algorithm_];
  if (type_ != LibOrgBouncycastleBcpgS2K_GNU_DUMMY_S2K) {
    if (type_ != 0) {
      [outArg writeWithByteArray:iv_];
    }
    if (type_ == 3) {
      [outArg writeWithInt:itCount_];
    }
  }
  else {
    [outArg writeWithInt:'G'];
    [outArg writeWithInt:'N'];
    [outArg writeWithInt:'U'];
    [outArg writeWithInt:protectionMode_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithInt:withByteArray:);
  methods[3].selector = @selector(initWithInt:withByteArray:withInt:);
  methods[4].selector = @selector(getType);
  methods[5].selector = @selector(getHashAlgorithm);
  methods[6].selector = @selector(getIV);
  methods[7].selector = @selector(getIterationCount);
  methods[8].selector = @selector(getProtectionMode);
  methods[9].selector = @selector(encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EXPBIAS", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_EXPBIAS, 0x1a, -1, -1, -1, -1 },
    { "SIMPLE", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_SIMPLE, 0x19, -1, -1, -1, -1 },
    { "SALTED", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_SALTED, 0x19, -1, -1, -1, -1 },
    { "SALTED_AND_ITERATED", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_SALTED_AND_ITERATED, 0x19, -1, -1, -1, -1 },
    { "GNU_DUMMY_S2K", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_GNU_DUMMY_S2K, 0x19, -1, -1, -1, -1 },
    { "GNU_PROTECTION_MODE_NO_PRIVATE_KEY", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_GNU_PROTECTION_MODE_NO_PRIVATE_KEY, 0x19, -1, -1, -1, -1 },
    { "GNU_PROTECTION_MODE_DIVERT_TO_CARD", "I", .constantValue.asInt = LibOrgBouncycastleBcpgS2K_GNU_PROTECTION_MODE_DIVERT_TO_CARD, 0x19, -1, -1, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "algorithm_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "iv_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "protectionMode_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "LJavaIoIOException;", "I", "I[B", "I[BI", "encode", "LLibOrgBouncycastleBcpgBCPGOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgS2K = { "S2K", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 10, 12, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgS2K;
}

@end

void LibOrgBouncycastleBcpgS2K_initWithJavaIoInputStream_(LibOrgBouncycastleBcpgS2K *self, JavaIoInputStream *inArg) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->itCount_ = -1;
  self->protectionMode_ = -1;
  JavaIoDataInputStream *dIn = new_JavaIoDataInputStream_initWithJavaIoInputStream_(inArg);
  self->type_ = [dIn read];
  self->algorithm_ = [dIn read];
  if (self->type_ != LibOrgBouncycastleBcpgS2K_GNU_DUMMY_S2K) {
    if (self->type_ != 0) {
      self->iv_ = [IOSByteArray newArrayWithLength:8];
      [dIn readFullyWithByteArray:self->iv_ withInt:0 withInt:self->iv_->size_];
      if (self->type_ == 3) {
        self->itCount_ = [dIn read];
      }
    }
  }
  else {
    [dIn read];
    [dIn read];
    [dIn read];
    self->protectionMode_ = [dIn read];
  }
}

LibOrgBouncycastleBcpgS2K *new_LibOrgBouncycastleBcpgS2K_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgS2K, initWithJavaIoInputStream_, inArg)
}

LibOrgBouncycastleBcpgS2K *create_LibOrgBouncycastleBcpgS2K_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgS2K, initWithJavaIoInputStream_, inArg)
}

void LibOrgBouncycastleBcpgS2K_initWithInt_(LibOrgBouncycastleBcpgS2K *self, jint algorithm) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->itCount_ = -1;
  self->protectionMode_ = -1;
  self->type_ = 0;
  self->algorithm_ = algorithm;
}

LibOrgBouncycastleBcpgS2K *new_LibOrgBouncycastleBcpgS2K_initWithInt_(jint algorithm) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_, algorithm)
}

LibOrgBouncycastleBcpgS2K *create_LibOrgBouncycastleBcpgS2K_initWithInt_(jint algorithm) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_, algorithm)
}

void LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_(LibOrgBouncycastleBcpgS2K *self, jint algorithm, IOSByteArray *iv) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->itCount_ = -1;
  self->protectionMode_ = -1;
  self->type_ = 1;
  self->algorithm_ = algorithm;
  self->iv_ = iv;
}

LibOrgBouncycastleBcpgS2K *new_LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_(jint algorithm, IOSByteArray *iv) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_withByteArray_, algorithm, iv)
}

LibOrgBouncycastleBcpgS2K *create_LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_(jint algorithm, IOSByteArray *iv) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_withByteArray_, algorithm, iv)
}

void LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_withInt_(LibOrgBouncycastleBcpgS2K *self, jint algorithm, IOSByteArray *iv, jint itCount) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->itCount_ = -1;
  self->protectionMode_ = -1;
  self->type_ = 3;
  self->algorithm_ = algorithm;
  self->iv_ = iv;
  self->itCount_ = itCount;
}

LibOrgBouncycastleBcpgS2K *new_LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_withInt_(jint algorithm, IOSByteArray *iv, jint itCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_withByteArray_withInt_, algorithm, iv, itCount)
}

LibOrgBouncycastleBcpgS2K *create_LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_withInt_(jint algorithm, IOSByteArray *iv, jint itCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgS2K, initWithInt_withByteArray_withInt_, algorithm, iv, itCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgS2K)
