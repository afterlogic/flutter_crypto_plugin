//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/LTreeAddress.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LTreeAddress.h"
#include "Pack.h"
#include "XMSSAddress.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface LibOrgBouncycastlePqcCryptoXmssLTreeAddress () {
 @public
  jint lTreeAddress_;
  jint treeHeight_;
  jint treeIndex_;
}

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)builder;

@end

inline jint LibOrgBouncycastlePqcCryptoXmssLTreeAddress_get_TYPE(void);
#define LibOrgBouncycastlePqcCryptoXmssLTreeAddress_TYPE 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcCryptoXmssLTreeAddress, TYPE, jint)

__attribute__((unused)) static void LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress *self, LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssLTreeAddress *new_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcCryptoXmssLTreeAddress *create_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder);

@interface LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder () {
 @public
  jint lTreeAddress_;
  jint treeHeight_;
  jint treeIndex_;
}

@end

@implementation LibOrgBouncycastlePqcCryptoXmssLTreeAddress

- (instancetype)initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder:(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)builder {
  LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(self, builder);
  return self;
}

- (IOSByteArray *)toByteArray {
  IOSByteArray *byteRepresentation = [super toByteArray];
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(lTreeAddress_, byteRepresentation, 16);
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(treeHeight_, byteRepresentation, 20);
  LibOrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(treeIndex_, byteRepresentation, 24);
  return byteRepresentation;
}

- (jint)getLTreeAddress {
  return lTreeAddress_;
}

- (jint)getTreeHeight {
  return treeHeight_;
}

- (jint)getTreeIndex {
  return treeIndex_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getLTreeAddress);
  methods[3].selector = @selector(getTreeHeight);
  methods[4].selector = @selector(getTreeIndex);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoXmssLTreeAddress_TYPE, 0x1a, -1, -1, -1, -1 },
    { "lTreeAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeHeight_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssLTreeAddress = { "LTreeAddress", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x10, 5, 4, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssLTreeAddress;
}

@end

void LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress *self, LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder) {
  LibOrgBouncycastlePqcCryptoXmssXMSSAddress_initWithLibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_(self, builder);
  self->lTreeAddress_ = ((LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk(builder))->lTreeAddress_;
  self->treeHeight_ = builder->treeHeight_;
  self->treeIndex_ = builder->treeIndex_;
}

LibOrgBouncycastlePqcCryptoXmssLTreeAddress *new_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssLTreeAddress, initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_, builder)
}

LibOrgBouncycastlePqcCryptoXmssLTreeAddress *create_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssLTreeAddress, initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssLTreeAddress)

@implementation LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withLTreeAddressWithInt:(jint)val {
  lTreeAddress_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withTreeHeightWithInt:(jint)val {
  treeHeight_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withTreeIndexWithInt:(jint)val {
  treeIndex_ = val;
  return self;
}

- (LibOrgBouncycastlePqcCryptoXmssXMSSAddress *)build {
  return new_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_initWithLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(self);
}

- (LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)getThis {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;", 0x4, 3, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssXMSSAddress;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(withLTreeAddressWithInt:);
  methods[2].selector = @selector(withTreeHeightWithInt:);
  methods[3].selector = @selector(withTreeIndexWithInt:);
  methods[4].selector = @selector(build);
  methods[5].selector = @selector(getThis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lTreeAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "treeHeight_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "treeIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "withLTreeAddress", "I", "withTreeHeight", "withTreeIndex", "LLibOrgBouncycastlePqcCryptoXmssLTreeAddress;", "Llib/org/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder<Llib/org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder = { "Builder", "lib.org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0xc, 6, 3, 4, -1, -1, 5, -1 };
  return &_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;
}

@end

void LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *self) {
  LibOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_initWithInt_(self, LibOrgBouncycastlePqcCryptoXmssLTreeAddress_TYPE);
  self->lTreeAddress_ = 0;
  self->treeHeight_ = 0;
  self->treeIndex_ = 0;
}

LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *new_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder, init)
}

LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *create_LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder)
