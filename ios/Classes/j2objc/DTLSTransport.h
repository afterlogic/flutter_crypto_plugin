//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/DTLSTransport.java
//

#ifndef DTLSTransport_H
#define DTLSTransport_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DatagramTransport.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoTlsDTLSRecordLayer;

@interface LibOrgBouncycastleCryptoTlsDTLSTransport : NSObject < LibOrgBouncycastleCryptoTlsDatagramTransport >

#pragma mark Public

- (void)close;

- (jint)getReceiveLimit;

- (jint)getSendLimit;

- (jint)receiveWithByteArray:(IOSByteArray *)buf
                     withInt:(jint)off
                     withInt:(jint)len
                     withInt:(jint)waitMillis;

- (void)sendWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoTlsDTLSRecordLayer:(LibOrgBouncycastleCryptoTlsDTLSRecordLayer *)recordLayer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsDTLSTransport)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsDTLSTransport_initWithLibOrgBouncycastleCryptoTlsDTLSRecordLayer_(LibOrgBouncycastleCryptoTlsDTLSTransport *self, LibOrgBouncycastleCryptoTlsDTLSRecordLayer *recordLayer);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsDTLSTransport *new_LibOrgBouncycastleCryptoTlsDTLSTransport_initWithLibOrgBouncycastleCryptoTlsDTLSRecordLayer_(LibOrgBouncycastleCryptoTlsDTLSRecordLayer *recordLayer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsDTLSTransport *create_LibOrgBouncycastleCryptoTlsDTLSTransport_initWithLibOrgBouncycastleCryptoTlsDTLSRecordLayer_(LibOrgBouncycastleCryptoTlsDTLSRecordLayer *recordLayer);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsDTLSTransport)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DTLSTransport_H
