//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DSTU4145Parameters.java
//

#include "Arrays.h"
#include "DSTU4145Parameters.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECPoint.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleCryptoParamsDSTU4145Parameters () {
 @public
  IOSByteArray *dke_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsDSTU4145Parameters, dke_, IOSByteArray *)

@implementation LibOrgBouncycastleCryptoParamsDSTU4145Parameters

- (instancetype)initWithLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)ecParameters
                                                           withByteArray:(IOSByteArray *)dke {
  LibOrgBouncycastleCryptoParamsDSTU4145Parameters_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_(self, ecParameters, dke);
  return self;
}

- (IOSByteArray *)getDKE {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(dke_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoParamsECDomainParameters:withByteArray:);
  methods[1].selector = @selector(getDKE);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dke_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoParamsECDomainParameters;[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsDSTU4145Parameters = { "DSTU4145Parameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsDSTU4145Parameters;
}

@end

void LibOrgBouncycastleCryptoParamsDSTU4145Parameters_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_(LibOrgBouncycastleCryptoParamsDSTU4145Parameters *self, LibOrgBouncycastleCryptoParamsECDomainParameters *ecParameters, IOSByteArray *dke) {
  LibOrgBouncycastleCryptoParamsECDomainParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, [((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(ecParameters)) getCurve], [ecParameters getG], [ecParameters getN], [ecParameters getH], [ecParameters getSeed]);
  self->dke_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(dke);
}

LibOrgBouncycastleCryptoParamsDSTU4145Parameters *new_LibOrgBouncycastleCryptoParamsDSTU4145Parameters_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_(LibOrgBouncycastleCryptoParamsECDomainParameters *ecParameters, IOSByteArray *dke) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsDSTU4145Parameters, initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_, ecParameters, dke)
}

LibOrgBouncycastleCryptoParamsDSTU4145Parameters *create_LibOrgBouncycastleCryptoParamsDSTU4145Parameters_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_(LibOrgBouncycastleCryptoParamsECDomainParameters *ecParameters, IOSByteArray *dke) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsDSTU4145Parameters, initWithLibOrgBouncycastleCryptoParamsECDomainParameters_withByteArray_, ecParameters, dke)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsDSTU4145Parameters)
