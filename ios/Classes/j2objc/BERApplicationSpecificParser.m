//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/BERApplicationSpecificParser.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1ParsingException.h"
#include "ASN1Primitive.h"
#include "ASN1StreamParser.h"
#include "BERApplicationSpecific.h"
#include "BERApplicationSpecificParser.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"

@interface LibOrgBouncycastleAsn1BERApplicationSpecificParser () {
 @public
  jint tag_;
  LibOrgBouncycastleAsn1ASN1StreamParser *parser_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1BERApplicationSpecificParser, parser_, LibOrgBouncycastleAsn1ASN1StreamParser *)

@implementation LibOrgBouncycastleAsn1BERApplicationSpecificParser

- (instancetype)initWithInt:(jint)tag
withLibOrgBouncycastleAsn1ASN1StreamParser:(LibOrgBouncycastleAsn1ASN1StreamParser *)parser {
  LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(self, tag, parser);
  return self;
}

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)readObject {
  return [((LibOrgBouncycastleAsn1ASN1StreamParser *) nil_chk(parser_)) readObject];
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  return new_LibOrgBouncycastleAsn1BERApplicationSpecific_initWithInt_withLibOrgBouncycastleAsn1ASN1EncodableVector_(tag_, [((LibOrgBouncycastleAsn1ASN1StreamParser *) nil_chk(parser_)) readVector]);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  @try {
    return [self getLoadedObject];
  }
  @catch (JavaIoIOException *e) {
    @throw new_LibOrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withLibOrgBouncycastleAsn1ASN1StreamParser:);
  methods[1].selector = @selector(readObject);
  methods[2].selector = @selector(getLoadedObject);
  methods[3].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tag_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parser_", "LLibOrgBouncycastleAsn1ASN1StreamParser;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILLibOrgBouncycastleAsn1ASN1StreamParser;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1BERApplicationSpecificParser = { "BERApplicationSpecificParser", "lib.org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1BERApplicationSpecificParser;
}

@end

void LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(LibOrgBouncycastleAsn1BERApplicationSpecificParser *self, jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser) {
  NSObject_init(self);
  self->tag_ = tag;
  self->parser_ = parser;
}

LibOrgBouncycastleAsn1BERApplicationSpecificParser *new_LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1BERApplicationSpecificParser, initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_, tag, parser)
}

LibOrgBouncycastleAsn1BERApplicationSpecificParser *create_LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1BERApplicationSpecificParser, initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_, tag, parser)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1BERApplicationSpecificParser)
