//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cryptopro/GostR3410TransportParameters.java
//

#ifndef GostR3410TransportParameters_H
#define GostR3410TransportParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;

@interface LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)encryptionParamSet
                          withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)ephemeralPublicKey
                                                               withByteArray:(IOSByteArray *)ukm;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getEncryptionParamSet;

- (LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getEphemeralPublicKey;

+ (LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                           withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getUkm;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withByteArray_(LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *ephemeralPublicKey, IOSByteArray *ukm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *new_LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *ephemeralPublicKey, IOSByteArray *ukm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *create_LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *encryptionParamSet, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *ephemeralPublicKey, IOSByteArray *ukm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters *LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CryptoproGostR3410TransportParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GostR3410TransportParameters_H
