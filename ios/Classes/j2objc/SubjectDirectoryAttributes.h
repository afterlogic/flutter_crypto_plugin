//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/SubjectDirectoryAttributes.java
//

#ifndef SubjectDirectoryAttributes_H
#define SubjectDirectoryAttributes_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaUtilVector;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilVector:(JavaUtilVector *)attributes;

- (JavaUtilVector *)getAttributes;

+ (LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes *LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes_initWithJavaUtilVector_(LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes *self, JavaUtilVector *attributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes *new_LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes_initWithJavaUtilVector_(JavaUtilVector *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes *create_LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes_initWithJavaUtilVector_(JavaUtilVector *attributes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509SubjectDirectoryAttributes)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SubjectDirectoryAttributes_H
