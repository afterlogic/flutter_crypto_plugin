//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/KeyAgreeRecipientInfo.java
//

#ifndef KeyAgreeRecipientInfo_H
#define KeyAgreeRecipientInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey:(LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey *)originator
                                           withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)ukm
                                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                              withLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)recipientEncryptedKeys;

+ (LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                              withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getKeyEncryptionAlgorithm;

- (LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey *)getOriginator;

- (LibOrgBouncycastleAsn1ASN1Sequence *)getRecipientEncryptedKeys;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getUserKeyingMaterial;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *self, LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey *originator, LibOrgBouncycastleAsn1ASN1OctetString *ukm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1Sequence *recipientEncryptedKeys);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *new_LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey *originator, LibOrgBouncycastleAsn1ASN1OctetString *ukm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1Sequence *recipientEncryptedKeys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *create_LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsOriginatorIdentifierOrKey *originator, LibOrgBouncycastleAsn1ASN1OctetString *ukm, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, LibOrgBouncycastleAsn1ASN1Sequence *recipientEncryptedKeys);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *new_LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *create_LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo *LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsKeyAgreeRecipientInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyAgreeRecipientInfo_H
