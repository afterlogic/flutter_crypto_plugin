//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dstu/BCDSTU4145PublicKey.java
//

#ifndef BCDSTU4145PublicKey_H
#define BCDSTU4145PublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECPointEncoder.h"
#include "ECPublicKey.h"
#include "J2ObjC_header.h"
#include "java/security/interfaces/ECPublicKey.h"

@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecECPublicKeySpec;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleCryptoParamsECPublicKeyParameters;
@class LibOrgBouncycastleJceSpecECParameterSpec;
@class LibOrgBouncycastleJceSpecECPublicKeySpec;
@class LibOrgBouncycastleMathEcECPoint;
@protocol LibOrgBouncycastleJcajceProviderConfigProviderConfiguration;

@interface LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey : NSObject < JavaSecurityInterfacesECPublicKey, LibOrgBouncycastleJceInterfacesECPublicKey, LibOrgBouncycastleJceInterfacesECPointEncoder >
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *)key;

- (instancetype __nonnull)initWithJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceSpecECPublicKeySpec:(LibOrgBouncycastleJceSpecECPublicKeySpec *)spec
           withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
       withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (LibOrgBouncycastleMathEcECPoint *)getQ;

- (IOSByteArray *)getSbox;

- (JavaSecuritySpecECPoint *)getW;

- (NSUInteger)hash;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)engineGetKeyParameters;

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey)

inline jlong LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_serialVersionUID 7026240464295649314LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaSecuritySpecECPublicKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCDSTU4145PublicKey_H
