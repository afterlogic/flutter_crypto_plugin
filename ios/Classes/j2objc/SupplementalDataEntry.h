//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/SupplementalDataEntry.java
//

#ifndef SupplementalDataEntry_H
#define SupplementalDataEntry_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoTlsSupplementalDataEntry : NSObject {
 @public
  jint dataType_;
  IOSByteArray *data_;
}

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)dataType
                        withByteArray:(IOSByteArray *)data;

- (IOSByteArray *)getData;

- (jint)getDataType;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsSupplementalDataEntry)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsSupplementalDataEntry, data_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsSupplementalDataEntry_initWithInt_withByteArray_(LibOrgBouncycastleCryptoTlsSupplementalDataEntry *self, jint dataType, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsSupplementalDataEntry *new_LibOrgBouncycastleCryptoTlsSupplementalDataEntry_initWithInt_withByteArray_(jint dataType, IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsSupplementalDataEntry *create_LibOrgBouncycastleCryptoTlsSupplementalDataEntry_initWithInt_withByteArray_(jint dataType, IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsSupplementalDataEntry)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SupplementalDataEntry_H
