//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/RevocationKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RevocationKey.h"
#include "SignatureSubpacket.h"
#include "SignatureSubpacketTags.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastleBcpgSigRevocationKey ()

+ (IOSByteArray *)createDataWithByte:(jbyte)signatureClass
                            withByte:(jbyte)keyAlgorithm
                       withByteArray:(IOSByteArray *)fingerprint;

@end

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleBcpgSigRevocationKey_createDataWithByte_withByte_withByteArray_(jbyte signatureClass, jbyte keyAlgorithm, IOSByteArray *fingerprint);

@implementation LibOrgBouncycastleBcpgSigRevocationKey

- (instancetype)initWithBoolean:(jboolean)isCritical
                    withBoolean:(jboolean)isLongLength
                  withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withBoolean_withByteArray_(self, isCritical, isLongLength, data);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)isCritical
                       withByte:(jbyte)signatureClass
                        withInt:(jint)keyAlgorithm
                  withByteArray:(IOSByteArray *)fingerprint {
  LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withByte_withInt_withByteArray_(self, isCritical, signatureClass, keyAlgorithm, fingerprint);
  return self;
}

+ (IOSByteArray *)createDataWithByte:(jbyte)signatureClass
                            withByte:(jbyte)keyAlgorithm
                       withByteArray:(IOSByteArray *)fingerprint {
  return LibOrgBouncycastleBcpgSigRevocationKey_createDataWithByte_withByte_withByteArray_(signatureClass, keyAlgorithm, fingerprint);
}

- (jbyte)getSignatureClass {
  return IOSByteArray_Get(nil_chk([self getData]), 0);
}

- (jint)getAlgorithm {
  return IOSByteArray_Get(nil_chk([self getData]), 1);
}

- (IOSByteArray *)getFingerprint {
  IOSByteArray *data = [self getData];
  IOSByteArray *fingerprint = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_ - 2];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 2, fingerprint, 0, fingerprint->size_);
  return fingerprint;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withBoolean:withByteArray:);
  methods[1].selector = @selector(initWithBoolean:withByte:withInt:withByteArray:);
  methods[2].selector = @selector(createDataWithByte:withByte:withByteArray:);
  methods[3].selector = @selector(getSignatureClass);
  methods[4].selector = @selector(getAlgorithm);
  methods[5].selector = @selector(getFingerprint);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "ZZ[B", "ZBI[B", "createData", "BB[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSigRevocationKey = { "RevocationKey", "lib.org.bouncycastle.bcpg.sig", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSigRevocationKey;
}

@end

void LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigRevocationKey *self, jboolean isCritical, jboolean isLongLength, IOSByteArray *data) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_REVOCATION_KEY, isCritical, isLongLength, data);
}

LibOrgBouncycastleBcpgSigRevocationKey *new_LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withBoolean_withByteArray_(jboolean isCritical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigRevocationKey, initWithBoolean_withBoolean_withByteArray_, isCritical, isLongLength, data)
}

LibOrgBouncycastleBcpgSigRevocationKey *create_LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withBoolean_withByteArray_(jboolean isCritical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigRevocationKey, initWithBoolean_withBoolean_withByteArray_, isCritical, isLongLength, data)
}

void LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withByte_withInt_withByteArray_(LibOrgBouncycastleBcpgSigRevocationKey *self, jboolean isCritical, jbyte signatureClass, jint keyAlgorithm, IOSByteArray *fingerprint) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_REVOCATION_KEY, isCritical, false, LibOrgBouncycastleBcpgSigRevocationKey_createDataWithByte_withByte_withByteArray_(signatureClass, (jbyte) (keyAlgorithm & (jint) 0xff), fingerprint));
}

LibOrgBouncycastleBcpgSigRevocationKey *new_LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withByte_withInt_withByteArray_(jboolean isCritical, jbyte signatureClass, jint keyAlgorithm, IOSByteArray *fingerprint) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigRevocationKey, initWithBoolean_withByte_withInt_withByteArray_, isCritical, signatureClass, keyAlgorithm, fingerprint)
}

LibOrgBouncycastleBcpgSigRevocationKey *create_LibOrgBouncycastleBcpgSigRevocationKey_initWithBoolean_withByte_withInt_withByteArray_(jboolean isCritical, jbyte signatureClass, jint keyAlgorithm, IOSByteArray *fingerprint) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigRevocationKey, initWithBoolean_withByte_withInt_withByteArray_, isCritical, signatureClass, keyAlgorithm, fingerprint)
}

IOSByteArray *LibOrgBouncycastleBcpgSigRevocationKey_createDataWithByte_withByte_withByteArray_(jbyte signatureClass, jbyte keyAlgorithm, IOSByteArray *fingerprint) {
  LibOrgBouncycastleBcpgSigRevocationKey_initialize();
  IOSByteArray *data = [IOSByteArray newArrayWithLength:2 + ((IOSByteArray *) nil_chk(fingerprint))->size_];
  *IOSByteArray_GetRef(data, 0) = signatureClass;
  *IOSByteArray_GetRef(data, 1) = keyAlgorithm;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(fingerprint, 0, data, 2, fingerprint->size_);
  return data;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSigRevocationKey)
