//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.java
//

#include "Digest.h"
#include "J2ObjC_source.h"
#include "McElieceParameters.h"
#include "PolynomialRingGF2.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters () {
 @public
  jint m_;
  jint t_;
  jint n_;
  jint fieldPoly_;
  id<LibOrgBouncycastleCryptoDigest> digest_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, digest_, id<LibOrgBouncycastleCryptoDigest>)

@implementation LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters

+ (jint)DEFAULT_M {
  return LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_M;
}

+ (jint)DEFAULT_T {
  return LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_T;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(self, digest);
  return self;
}

- (instancetype)initWithInt:(jint)keysize {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(self, keysize);
  return self;
}

- (instancetype)initWithInt:(jint)keysize
withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(self, keysize, digest);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(self, m, t);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t
withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(self, m, t, digest);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t
                    withInt:(jint)poly {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(self, m, t, poly);
  return self;
}

- (instancetype)initWithInt:(jint)m
                    withInt:(jint)t
                    withInt:(jint)poly
withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(self, m, t, poly, digest);
  return self;
}

- (jint)getM {
  return m_;
}

- (jint)getN {
  return n_;
}

- (jint)getT {
  return t_;
}

- (jint)getFieldPoly {
  return fieldPoly_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(initWithInt:withLibOrgBouncycastleCryptoDigest:);
  methods[4].selector = @selector(initWithInt:withInt:);
  methods[5].selector = @selector(initWithInt:withInt:withLibOrgBouncycastleCryptoDigest:);
  methods[6].selector = @selector(initWithInt:withInt:withInt:);
  methods[7].selector = @selector(initWithInt:withInt:withInt:withLibOrgBouncycastleCryptoDigest:);
  methods[8].selector = @selector(getM);
  methods[9].selector = @selector(getN);
  methods[10].selector = @selector(getT);
  methods[11].selector = @selector(getFieldPoly);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_M", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_M, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_T", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_T, 0x19, -1, -1, -1, -1 },
    { "m_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "t_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldPoly_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;", "I", "ILLibOrgBouncycastleCryptoDigest;", "II", "IILLibOrgBouncycastleCryptoDigest;", "III", "IIILLibOrgBouncycastleCryptoDigest;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters = { "McElieceParameters", "lib.org.bouncycastle.pqc.crypto.mceliece", ptrTable, methods, fields, 7, 0x1, 12, 7, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;
}

@end

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self) {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(self, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_M, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_T);
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, init)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, init)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, id<LibOrgBouncycastleCryptoDigest> digest) {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(self, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_M, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_DEFAULT_T, digest);
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithLibOrgBouncycastleCryptoDigest_, digest)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithLibOrgBouncycastleCryptoDigest_, digest)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint keysize) {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(self, keysize, nil);
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(jint keysize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_, keysize)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_(jint keysize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_, keysize)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint keysize, id<LibOrgBouncycastleCryptoDigest> digest) {
  NSObject_init(self);
  if (keysize < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"key size must be positive");
  }
  self->m_ = 0;
  self->n_ = 1;
  while (self->n_ < keysize) {
    JreLShiftAssignInt(&self->n_, 1);
    self->m_++;
  }
  self->t_ = JreURShift32(self->n_, 1);
  self->t_ /= self->m_;
  self->fieldPoly_ = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(self->m_);
  self->digest_ = digest;
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint keysize, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withLibOrgBouncycastleCryptoDigest_, keysize, digest)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withLibOrgBouncycastleCryptoDigest_(jint keysize, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withLibOrgBouncycastleCryptoDigest_, keysize, digest)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t) {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(self, m, t, nil);
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(jint m, jint t) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_, m, t)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_(jint m, jint t) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_, m, t)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest) {
  NSObject_init(self);
  if (m < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m must be positive");
  }
  if (m > 32) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m is too large");
  }
  self->m_ = m;
  self->n_ = JreLShift32(1, m);
  if (t < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be positive");
  }
  if (t > self->n_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be less than n = 2^m");
  }
  self->t_ = t;
  self->fieldPoly_ = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(m);
  self->digest_ = digest;
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_, m, t, digest)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_, m, t, digest)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, jint poly) {
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(self, m, t, poly, nil);
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(jint m, jint t, jint poly) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withInt_, m, t, poly)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_(jint m, jint t, jint poly) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withInt_, m, t, poly)
}

void LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *self, jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest) {
  NSObject_init(self);
  self->m_ = m;
  if (m < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"m must be positive");
  }
  if (m > 32) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@" m is too large");
  }
  self->n_ = JreLShift32(1, m);
  self->t_ = t;
  if (t < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be positive");
  }
  if (t > self->n_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"t must be less than n = 2^m");
  }
  if ((LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(poly) == m) && (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(poly))) {
    self->fieldPoly_ = poly;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"polynomial is not a field polynomial for GF(2^m)");
  }
  self->digest_ = digest;
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_, m, t, poly, digest)
}

LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_(jint m, jint t, jint poly, id<LibOrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters, initWithInt_withInt_withInt_withLibOrgBouncycastleCryptoDigest_, m, t, poly, digest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters)
