//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/TLSKeyMaterialSpec.java
//

#include "Arrays.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "TLSKeyMaterialSpec.h"

@interface LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec () {
 @public
  IOSByteArray *secret_;
  NSString *label_;
  jint length_;
  IOSByteArray *seed_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec, secret_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec, label_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec, seed_, IOSByteArray *)

NSString *LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_MASTER_SECRET = @"master secret";
NSString *LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_KEY_EXPANSION = @"key expansion";

@implementation LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec

+ (NSString *)MASTER_SECRET {
  return LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_MASTER_SECRET;
}

+ (NSString *)KEY_EXPANSION {
  return LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_KEY_EXPANSION;
}

- (instancetype)initWithByteArray:(IOSByteArray *)secret
                     withNSString:(NSString *)label
                          withInt:(jint)length
                   withByteArray2:(IOSObjectArray *)seedMaterial {
  LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_initWithByteArray_withNSString_withInt_withByteArray2_(self, secret, label, length, seedMaterial);
  return self;
}

- (NSString *)getLabel {
  return label_;
}

- (jint)getLength {
  return length_;
}

- (IOSByteArray *)getSecret {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(secret_);
}

- (IOSByteArray *)getSeed {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(seed_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withNSString:withInt:withByteArray2:);
  methods[1].selector = @selector(getLabel);
  methods[2].selector = @selector(getLength);
  methods[3].selector = @selector(getSecret);
  methods[4].selector = @selector(getSeed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MASTER_SECRET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "KEY_EXPANSION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "secret_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "label_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "seed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[BLNSString;I[[B", &LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_MASTER_SECRET, &LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_KEY_EXPANSION };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec = { "TLSKeyMaterialSpec", "lib.org.bouncycastle.jcajce.spec", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec;
}

@end

void LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_initWithByteArray_withNSString_withInt_withByteArray2_(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec *self, IOSByteArray *secret, NSString *label, jint length, IOSObjectArray *seedMaterial) {
  NSObject_init(self);
  self->secret_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(secret);
  self->label_ = label;
  self->length_ = length;
  self->seed_ = LibOrgBouncycastleUtilArrays_concatenateWithByteArray2_(seedMaterial);
}

LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec *new_LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_initWithByteArray_withNSString_withInt_withByteArray2_(IOSByteArray *secret, NSString *label, jint length, IOSObjectArray *seedMaterial) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec, initWithByteArray_withNSString_withInt_withByteArray2_, secret, label, length, seedMaterial)
}

LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec *create_LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec_initWithByteArray_withNSString_withInt_withByteArray2_(IOSByteArray *secret, NSString *label, jint length, IOSObjectArray *seedMaterial) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec, initWithByteArray_withNSString_withInt_withByteArray2_, secret, label, length, seedMaterial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceSpecTLSKeyMaterialSpec)
