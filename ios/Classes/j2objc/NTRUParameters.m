//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ntru/NTRUParameters.java
//

#include "J2ObjC_source.h"
#include "NTRUParameters.h"

@implementation LibOrgBouncycastlePqcCryptoNtruNTRUParameters

+ (jint)TERNARY_POLYNOMIAL_TYPE_SIMPLE {
  return LibOrgBouncycastlePqcCryptoNtruNTRUParameters_TERNARY_POLYNOMIAL_TYPE_SIMPLE;
}

+ (jint)TERNARY_POLYNOMIAL_TYPE_PRODUCT {
  return LibOrgBouncycastlePqcCryptoNtruNTRUParameters_TERNARY_POLYNOMIAL_TYPE_PRODUCT;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcCryptoNtruNTRUParameters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TERNARY_POLYNOMIAL_TYPE_SIMPLE", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoNtruNTRUParameters_TERNARY_POLYNOMIAL_TYPE_SIMPLE, 0x19, -1, -1, -1, -1 },
    { "TERNARY_POLYNOMIAL_TYPE_PRODUCT", "I", .constantValue.asInt = LibOrgBouncycastlePqcCryptoNtruNTRUParameters_TERNARY_POLYNOMIAL_TYPE_PRODUCT, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoNtruNTRUParameters = { "NTRUParameters", "lib.org.bouncycastle.pqc.crypto.ntru", NULL, methods, fields, 7, 0x1, 1, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoNtruNTRUParameters;
}

@end

void LibOrgBouncycastlePqcCryptoNtruNTRUParameters_init(LibOrgBouncycastlePqcCryptoNtruNTRUParameters *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcCryptoNtruNTRUParameters *new_LibOrgBouncycastlePqcCryptoNtruNTRUParameters_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUParameters, init)
}

LibOrgBouncycastlePqcCryptoNtruNTRUParameters *create_LibOrgBouncycastlePqcCryptoNtruNTRUParameters_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoNtruNTRUParameters, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoNtruNTRUParameters)
