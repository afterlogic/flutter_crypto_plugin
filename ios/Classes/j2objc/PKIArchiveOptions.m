//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/PKIArchiveOptions.java
//

#include "ASN1Boolean.h"
#include "ASN1Encodable.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "DERTaggedObject.h"
#include "EncryptedKey.h"
#include "J2ObjC_source.h"
#include "PKIArchiveOptions.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CrmfPKIArchiveOptions () {
 @public
  id<LibOrgBouncycastleAsn1ASN1Encodable> value_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, value_, id<LibOrgBouncycastleAsn1ASN1Encodable>)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

__attribute__((unused)) static LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *create_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged);

@implementation LibOrgBouncycastleAsn1CrmfPKIArchiveOptions

+ (jint)encryptedPrivKey {
  return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_encryptedPrivKey;
}

+ (jint)keyGenParameters {
  return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_keyGenParameters;
}

+ (jint)archiveRemGenPrivKey {
  return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_archiveRemGenPrivKey;
}

+ (LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)tagged {
  LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(self, tagged);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1CrmfEncryptedKey:(LibOrgBouncycastleAsn1CrmfEncryptedKey *)encKey {
  LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_(self, encKey);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)keyGenParameters {
  LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1OctetString_(self, keyGenParameters);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)archiveRemGenPrivKey {
  LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithBoolean_(self, archiveRemGenPrivKey);
  return self;
}

- (jint)getType {
  if ([value_ isKindOfClass:[LibOrgBouncycastleAsn1CrmfEncryptedKey class]]) {
    return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_encryptedPrivKey;
  }
  if ([value_ isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
    return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_keyGenParameters;
  }
  return LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_archiveRemGenPrivKey;
}

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getValue {
  return value_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  if ([value_ isKindOfClass:[LibOrgBouncycastleAsn1CrmfEncryptedKey class]]) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_encryptedPrivKey, value_);
  }
  if ([value_ isKindOfClass:[LibOrgBouncycastleAsn1ASN1OctetString class]]) {
    return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_keyGenParameters, value_);
  }
  return new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(false, LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_archiveRemGenPrivKey, value_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1CrmfPKIArchiveOptions;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1CrmfEncryptedKey:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1OctetString:);
  methods[4].selector = @selector(initWithBoolean:);
  methods[5].selector = @selector(getType);
  methods[6].selector = @selector(getValue);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encryptedPrivKey", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_encryptedPrivKey, 0x19, -1, -1, -1, -1 },
    { "keyGenParameters", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_keyGenParameters, 0x19, -1, -1, -1, -1 },
    { "archiveRemGenPrivKey", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_archiveRemGenPrivKey, 0x19, -1, -1, -1, -1 },
    { "value_", "LLibOrgBouncycastleAsn1ASN1Encodable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1TaggedObject;", "LLibOrgBouncycastleAsn1CrmfEncryptedKey;", "LLibOrgBouncycastleAsn1ASN1OctetString;", "Z" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CrmfPKIArchiveOptions = { "PKIArchiveOptions", "lib.org.bouncycastle.asn1.crmf", ptrTable, methods, fields, 7, 0x1, 8, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions;
}

@end

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initialize();
  if (o == nil || [o isKindOfClass:[LibOrgBouncycastleAsn1CrmfPKIArchiveOptions class]]) {
    return (LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *) cast_chk(o, [LibOrgBouncycastleAsn1CrmfPKIArchiveOptions class]);
  }
  else if ([o isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    return new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_((LibOrgBouncycastleAsn1ASN1TaggedObject *) o);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"unknown object: ", o));
}

void LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *self, LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  switch ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo]) {
    case LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_encryptedPrivKey:
    self->value_ = LibOrgBouncycastleAsn1CrmfEncryptedKey_getInstanceWithId_([tagged getObject]);
    break;
    case LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_keyGenParameters:
    self->value_ = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
    break;
    case LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_archiveRemGenPrivKey:
    self->value_ = LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag number: ", [tagged getTagNo]));
  }
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *create_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1TaggedObject_(LibOrgBouncycastleAsn1ASN1TaggedObject *tagged) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1ASN1TaggedObject_, tagged)
}

void LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *self, LibOrgBouncycastleAsn1CrmfEncryptedKey *encKey) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->value_ = encKey;
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_(LibOrgBouncycastleAsn1CrmfEncryptedKey *encKey) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_, encKey)
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *create_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_(LibOrgBouncycastleAsn1CrmfEncryptedKey *encKey) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1CrmfEncryptedKey_, encKey)
}

void LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *self, LibOrgBouncycastleAsn1ASN1OctetString *keyGenParameters) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->value_ = keyGenParameters;
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *keyGenParameters) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1ASN1OctetString_, keyGenParameters)
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *create_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *keyGenParameters) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithLibOrgBouncycastleAsn1ASN1OctetString_, keyGenParameters)
}

void LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithBoolean_(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *self, jboolean archiveRemGenPrivKey) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->value_ = LibOrgBouncycastleAsn1ASN1Boolean_getInstanceWithBoolean_(archiveRemGenPrivKey);
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *new_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithBoolean_(jboolean archiveRemGenPrivKey) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithBoolean_, archiveRemGenPrivKey)
}

LibOrgBouncycastleAsn1CrmfPKIArchiveOptions *create_LibOrgBouncycastleAsn1CrmfPKIArchiveOptions_initWithBoolean_(jboolean archiveRemGenPrivKey) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions, initWithBoolean_, archiveRemGenPrivKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CrmfPKIArchiveOptions)
