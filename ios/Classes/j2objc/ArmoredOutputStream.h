//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ArmoredOutputStream.java
//

#ifndef ArmoredOutputStream_H
#define ArmoredOutputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/OutputStream.h"

@class IOSIntArray;
@class JavaUtilHashtable;
@class LibOrgBouncycastleBcpgCRC24;

@interface LibOrgBouncycastleBcpgArmoredOutputStream : JavaIoOutputStream {
 @public
  JavaIoOutputStream *out_;
  IOSIntArray *buf_;
  jint bufPtr_;
  LibOrgBouncycastleBcpgCRC24 *crc_;
  jint chunkCount_;
  jint lastb_;
  jboolean start_;
  jboolean clearText_;
  jboolean newLine_;
  NSString *nl_;
  NSString *type_;
  NSString *headerStart_;
  NSString *headerTail_;
  NSString *footerStart_;
  NSString *footerTail_;
  NSString *version__;
  JavaUtilHashtable *headers_;
}
@property (readonly, copy, class) NSString *VERSION_HDR NS_SWIFT_NAME(VERSION_HDR);

+ (NSString *)VERSION_HDR;

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                               withJavaUtilHashtable:(JavaUtilHashtable *)headers;

- (void)beginClearTextWithInt:(jint)hashAlgorithm;

- (void)close;

- (void)endClearText;

- (void)flush;

- (void)resetHeaders;

- (void)setHeaderWithNSString:(NSString *)name
                 withNSString:(NSString *)value;

- (void)writeWithInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleBcpgArmoredOutputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, out_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, buf_, IOSIntArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, crc_, LibOrgBouncycastleBcpgCRC24 *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, nl_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, type_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, headerStart_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, headerTail_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, footerStart_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, footerTail_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, version__, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgArmoredOutputStream, headers_, JavaUtilHashtable *)

inline NSString *LibOrgBouncycastleBcpgArmoredOutputStream_get_VERSION_HDR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastleBcpgArmoredOutputStream_VERSION_HDR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleBcpgArmoredOutputStream, VERSION_HDR, NSString *)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_(LibOrgBouncycastleBcpgArmoredOutputStream *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredOutputStream *new_LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredOutputStream *create_LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_withJavaUtilHashtable_(LibOrgBouncycastleBcpgArmoredOutputStream *self, JavaIoOutputStream *outArg, JavaUtilHashtable *headers);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredOutputStream *new_LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_withJavaUtilHashtable_(JavaIoOutputStream *outArg, JavaUtilHashtable *headers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgArmoredOutputStream *create_LibOrgBouncycastleBcpgArmoredOutputStream_initWithJavaIoOutputStream_withJavaUtilHashtable_(JavaIoOutputStream *outArg, JavaUtilHashtable *headers);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgArmoredOutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ArmoredOutputStream_H
