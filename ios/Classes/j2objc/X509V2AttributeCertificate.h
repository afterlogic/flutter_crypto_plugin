//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509V2AttributeCertificate.java
//

#ifndef X509V2AttributeCertificate_H
#define X509V2AttributeCertificate_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "X509AttributeCertificate.h"

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaMathBigInteger;
@class JavaUtilDate;
@class LibOrgBouncycastleAsn1X509AttributeCertificate;
@class LibOrgBouncycastleX509AttributeCertificateHolder;
@class LibOrgBouncycastleX509AttributeCertificateIssuer;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilSet;

@interface LibOrgBouncycastleX509X509V2AttributeCertificate : NSObject < LibOrgBouncycastleX509X509AttributeCertificate >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)encoded;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)encIn;

- (void)checkValidity;

- (void)checkValidityWithJavaUtilDate:(JavaUtilDate *)date;

- (jboolean)isEqual:(id)o;

- (IOSObjectArray *)getAttributes;

- (IOSObjectArray *)getAttributesWithNSString:(NSString *)oid;

- (id<JavaUtilSet>)getCriticalExtensionOIDs;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid;

- (LibOrgBouncycastleX509AttributeCertificateHolder *)getHolder;

- (LibOrgBouncycastleX509AttributeCertificateIssuer *)getIssuer;

- (IOSBooleanArray *)getIssuerUniqueID;

- (id<JavaUtilSet>)getNonCriticalExtensionOIDs;

- (JavaUtilDate *)getNotAfter;

- (JavaUtilDate *)getNotBefore;

- (JavaMathBigInteger *)getSerialNumber;

- (IOSByteArray *)getSignature;

- (jint)getVersion;

- (NSUInteger)hash;

- (jboolean)hasUnsupportedCriticalExtension;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                           withNSString:(NSString *)provider;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AttributeCertificate:(LibOrgBouncycastleAsn1X509AttributeCertificate *)cert;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509X509V2AttributeCertificate)

FOUNDATION_EXPORT void LibOrgBouncycastleX509X509V2AttributeCertificate_initWithJavaIoInputStream_(LibOrgBouncycastleX509X509V2AttributeCertificate *self, JavaIoInputStream *encIn);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithJavaIoInputStream_(JavaIoInputStream *encIn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *create_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithJavaIoInputStream_(JavaIoInputStream *encIn);

FOUNDATION_EXPORT void LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_(LibOrgBouncycastleX509X509V2AttributeCertificate *self, IOSByteArray *encoded);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_(IOSByteArray *encoded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *create_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithByteArray_(IOSByteArray *encoded);

FOUNDATION_EXPORT void LibOrgBouncycastleX509X509V2AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleX509X509V2AttributeCertificate *self, LibOrgBouncycastleAsn1X509AttributeCertificate *cert);

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *new_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleAsn1X509AttributeCertificate *cert) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509X509V2AttributeCertificate *create_LibOrgBouncycastleX509X509V2AttributeCertificate_initWithLibOrgBouncycastleAsn1X509AttributeCertificate_(LibOrgBouncycastleAsn1X509AttributeCertificate *cert);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509X509V2AttributeCertificate)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X509V2AttributeCertificate_H
