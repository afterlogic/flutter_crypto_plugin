//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/i18n/LocalizedException.java
//

#ifndef LocalizedException_H
#define LocalizedException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/Exception.h"

@class JavaLangThrowable;
@class LibOrgBouncycastleI18nErrorBundle;

@interface LibOrgBouncycastleI18nLocalizedException : JavaLangException {
 @public
  LibOrgBouncycastleI18nErrorBundle *message_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleI18nErrorBundle:(LibOrgBouncycastleI18nErrorBundle *)message;

- (instancetype __nonnull)initWithLibOrgBouncycastleI18nErrorBundle:(LibOrgBouncycastleI18nErrorBundle *)message
                                              withJavaLangThrowable:(JavaLangThrowable *)throwable;

- (JavaLangThrowable *)getCause;

- (LibOrgBouncycastleI18nErrorBundle *)getErrorMessage;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleI18nLocalizedException)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleI18nLocalizedException, message_, LibOrgBouncycastleI18nErrorBundle *)

FOUNDATION_EXPORT void LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_(LibOrgBouncycastleI18nLocalizedException *self, LibOrgBouncycastleI18nErrorBundle *message);

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocalizedException *new_LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_(LibOrgBouncycastleI18nErrorBundle *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocalizedException *create_LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_(LibOrgBouncycastleI18nErrorBundle *message);

FOUNDATION_EXPORT void LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_withJavaLangThrowable_(LibOrgBouncycastleI18nLocalizedException *self, LibOrgBouncycastleI18nErrorBundle *message, JavaLangThrowable *throwable);

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocalizedException *new_LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_withJavaLangThrowable_(LibOrgBouncycastleI18nErrorBundle *message, JavaLangThrowable *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocalizedException *create_LibOrgBouncycastleI18nLocalizedException_initWithLibOrgBouncycastleI18nErrorBundle_withJavaLangThrowable_(LibOrgBouncycastleI18nErrorBundle *message, JavaLangThrowable *throwable);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleI18nLocalizedException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // LocalizedException_H
