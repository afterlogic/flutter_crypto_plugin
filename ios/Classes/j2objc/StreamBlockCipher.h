//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/StreamBlockCipher.java
//

#ifndef StreamBlockCipher_H
#define StreamBlockCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BlockCipher.h"
#include "J2ObjC_header.h"
#include "StreamCipher.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoStreamBlockCipher : NSObject < LibOrgBouncycastleCryptoBlockCipher, LibOrgBouncycastleCryptoStreamCipher >

#pragma mark Public

- (id<LibOrgBouncycastleCryptoBlockCipher>)getUnderlyingCipher;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jbyte)returnByteWithByte:(jbyte)inArg;

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher;

- (jbyte)calculateByteWithByte:(jbyte)b;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoStreamBlockCipher)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoStreamBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(LibOrgBouncycastleCryptoStreamBlockCipher *self, id<LibOrgBouncycastleCryptoBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoStreamBlockCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // StreamBlockCipher_H
