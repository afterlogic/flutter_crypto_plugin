//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/OptionalValidity.java
//

#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "Asn1X509Time.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "J2ObjC_source.h"
#include "OptionalValidity.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1CrmfOptionalValidity () {
 @public
  LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore_;
  LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CrmfOptionalValidity, notBefore_, LibOrgBouncycastleAsn1X509Asn1X509Time *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CrmfOptionalValidity, notAfter_, LibOrgBouncycastleAsn1X509Asn1X509Time *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CrmfOptionalValidity *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CrmfOptionalValidity *new_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CrmfOptionalValidity *create_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CrmfOptionalValidity

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CrmfOptionalValidity *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CrmfOptionalValidity_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509Asn1X509Time:(LibOrgBouncycastleAsn1X509Asn1X509Time *)notBefore
                    withLibOrgBouncycastleAsn1X509Asn1X509Time:(LibOrgBouncycastleAsn1X509Asn1X509Time *)notAfter {
  LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(self, notBefore, notAfter);
  return self;
}

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getNotBefore {
  return notBefore_;
}

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getNotAfter {
  return notAfter_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (notBefore_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 0, notBefore_)];
  }
  if (notAfter_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 1, notAfter_)];
  }
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CrmfOptionalValidity;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509Asn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509Asn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509Asn1X509Time:withLibOrgBouncycastleAsn1X509Asn1X509Time:);
  methods[3].selector = @selector(getNotBefore);
  methods[4].selector = @selector(getNotAfter);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "notBefore_", "LLibOrgBouncycastleAsn1X509Asn1X509Time;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "notAfter_", "LLibOrgBouncycastleAsn1X509Asn1X509Time;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1X509Asn1X509Time;LLibOrgBouncycastleAsn1X509Asn1X509Time;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CrmfOptionalValidity = { "OptionalValidity", "lib.org.bouncycastle.asn1.crmf", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CrmfOptionalValidity;
}

@end

void LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CrmfOptionalValidity *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  while ([((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *tObj = (LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([en nextElement], [LibOrgBouncycastleAsn1ASN1TaggedObject class]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tObj)) getTagNo] == 0) {
      self->notBefore_ = LibOrgBouncycastleAsn1X509Asn1X509Time_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
    else {
      self->notAfter_ = LibOrgBouncycastleAsn1X509Asn1X509Time_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
  }
}

LibOrgBouncycastleAsn1CrmfOptionalValidity *new_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfOptionalValidity, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CrmfOptionalValidity *create_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfOptionalValidity, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CrmfOptionalValidity *LibOrgBouncycastleAsn1CrmfOptionalValidity_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CrmfOptionalValidity_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CrmfOptionalValidity class]]) {
    return (LibOrgBouncycastleAsn1CrmfOptionalValidity *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1CrmfOptionalValidity *self, LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (notBefore == nil && notAfter == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"at least one of notBefore/notAfter must not be null.");
  }
  self->notBefore_ = notBefore;
  self->notAfter_ = notAfter;
}

LibOrgBouncycastleAsn1CrmfOptionalValidity *new_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CrmfOptionalValidity, initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_, notBefore, notAfter)
}

LibOrgBouncycastleAsn1CrmfOptionalValidity *create_LibOrgBouncycastleAsn1CrmfOptionalValidity_initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_(LibOrgBouncycastleAsn1X509Asn1X509Time *notBefore, LibOrgBouncycastleAsn1X509Asn1X509Time *notAfter) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CrmfOptionalValidity, initWithLibOrgBouncycastleAsn1X509Asn1X509Time_withLibOrgBouncycastleAsn1X509Asn1X509Time_, notBefore, notAfter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CrmfOptionalValidity)
