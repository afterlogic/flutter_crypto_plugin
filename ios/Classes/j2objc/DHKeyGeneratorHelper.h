//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/generators/DHKeyGeneratorHelper.java
//

#ifndef DHKeyGeneratorHelper_H
#define DHKeyGeneratorHelper_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoParamsDHParameters;

@interface LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper : NSObject
@property (readonly, class) LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper *INSTANCE NS_SWIFT_NAME(INSTANCE);

+ (LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper *)INSTANCE;

#pragma mark Package-Private

- (JavaMathBigInteger *)calculatePrivateWithLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)dhParams
                                                          withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (JavaMathBigInteger *)calculatePublicWithLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)dhParams
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)x;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper)

inline LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper *LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper *LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper, INSTANCE, LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper *)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoGeneratorsDHKeyGeneratorHelper)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DHKeyGeneratorHelper_H
