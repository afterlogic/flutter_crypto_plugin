//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSLeaf.java
//

#ifndef GMSSLeaf_H
#define GMSSLeaf_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSLeaf : NSObject {
 @public
  IOSByteArray *privateKeyOTS_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                  withByteArray2:(IOSObjectArray *)otsIndex
                                                    withIntArray:(IOSIntArray *)numLeafs;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                         withInt:(jint)w
                                                         withInt:(jint)numLeafs
                                                   withByteArray:(IOSByteArray *)seed0;

- (IOSByteArray *)getLeaf;

- (IOSObjectArray *)getStatByte;

- (IOSIntArray *)getStatInt;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                         withInt:(jint)w
                                                         withInt:(jint)numLeafs;

- (void)initLeafCalcWithByteArray:(IOSByteArray *)seed0 OBJC_METHOD_FAMILY_NONE;

- (LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *)nextLeaf;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf, privateKeyOTS_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *self, id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *otsIndex, IOSIntArray *numLeafs);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *new_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *otsIndex, IOSIntArray *numLeafs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *create_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withByteArray2_withIntArray_(id<LibOrgBouncycastleCryptoDigest> digest, IOSObjectArray *otsIndex, IOSIntArray *numLeafs);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *self, id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *new_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *create_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_withByteArray_(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *self, id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs, IOSByteArray *seed0);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *new_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_withByteArray_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs, IOSByteArray *seed0) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSLeaf *create_LibOrgBouncycastlePqcCryptoGmssGMSSLeaf_initWithLibOrgBouncycastleCryptoDigest_withInt_withInt_withByteArray_(id<LibOrgBouncycastleCryptoDigest> digest, jint w, jint numLeafs, IOSByteArray *seed0);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSLeaf)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSLeaf_H
