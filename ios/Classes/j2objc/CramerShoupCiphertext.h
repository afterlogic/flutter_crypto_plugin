//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/CramerShoupCiphertext.java
//

#ifndef CramerShoupCiphertext_H
#define CramerShoupCiphertext_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;

@interface LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext : NSObject {
 @public
  JavaMathBigInteger *u1_;
  JavaMathBigInteger *u2_;
  JavaMathBigInteger *e_;
  JavaMathBigInteger *v_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)u1
                              withJavaMathBigInteger:(JavaMathBigInteger *)u2
                              withJavaMathBigInteger:(JavaMathBigInteger *)e
                              withJavaMathBigInteger:(JavaMathBigInteger *)v;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)c;

- (JavaMathBigInteger *)getE;

- (JavaMathBigInteger *)getU1;

- (JavaMathBigInteger *)getU2;

- (JavaMathBigInteger *)getV;

- (void)setEWithJavaMathBigInteger:(JavaMathBigInteger *)e;

- (void)setU1WithJavaMathBigInteger:(JavaMathBigInteger *)u1;

- (void)setU2WithJavaMathBigInteger:(JavaMathBigInteger *)u2;

- (void)setVWithJavaMathBigInteger:(JavaMathBigInteger *)v;

- (IOSByteArray *)toByteArray;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, u1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, u2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, e_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext, v_, JavaMathBigInteger *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self, JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *u1, JavaMathBigInteger *u2, JavaMathBigInteger *e, JavaMathBigInteger *v);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *self, IOSByteArray *c);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *new_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(IOSByteArray *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext *create_LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext_initWithByteArray_(IOSByteArray *c);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEnginesCramerShoupCiphertext)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CramerShoupCiphertext_H
