//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/KDFCounterParameters.java
//

#ifndef KDFCounterParameters_H
#define KDFCounterParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DerivationParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsKDFCounterParameters : NSObject < LibOrgBouncycastleCryptoDerivationParameters >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)ki
                              withByteArray:(IOSByteArray *)fixedInputDataCounterPrefix
                              withByteArray:(IOSByteArray *)fixedInputDataCounterSuffix
                                    withInt:(jint)r;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)ki
                              withByteArray:(IOSByteArray *)fixedInputDataCounterSuffix
                                    withInt:(jint)r;

- (IOSByteArray *)getFixedInputData;

- (IOSByteArray *)getFixedInputDataCounterPrefix;

- (IOSByteArray *)getFixedInputDataCounterSuffix;

- (IOSByteArray *)getKI;

- (jint)getR;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsKDFCounterParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoParamsKDFCounterParameters *self, IOSByteArray *ki, IOSByteArray *fixedInputDataCounterSuffix, jint r);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKDFCounterParameters *new_LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withInt_(IOSByteArray *ki, IOSByteArray *fixedInputDataCounterSuffix, jint r) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKDFCounterParameters *create_LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withInt_(IOSByteArray *ki, IOSByteArray *fixedInputDataCounterSuffix, jint r);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withByteArray_withInt_(LibOrgBouncycastleCryptoParamsKDFCounterParameters *self, IOSByteArray *ki, IOSByteArray *fixedInputDataCounterPrefix, IOSByteArray *fixedInputDataCounterSuffix, jint r);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKDFCounterParameters *new_LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withByteArray_withInt_(IOSByteArray *ki, IOSByteArray *fixedInputDataCounterPrefix, IOSByteArray *fixedInputDataCounterSuffix, jint r) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsKDFCounterParameters *create_LibOrgBouncycastleCryptoParamsKDFCounterParameters_initWithByteArray_withByteArray_withByteArray_withInt_(IOSByteArray *ki, IOSByteArray *fixedInputDataCounterPrefix, IOSByteArray *fixedInputDataCounterSuffix, jint r);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsKDFCounterParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KDFCounterParameters_H
