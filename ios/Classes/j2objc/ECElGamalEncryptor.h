//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/ec/ECElGamalEncryptor.java
//

#ifndef ECElGamalEncryptor_H
#define ECElGamalEncryptor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECEncryptor.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoEcECPair;
@class LibOrgBouncycastleMathEcECPoint;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleMathEcECMultiplier;

@interface LibOrgBouncycastleCryptoEcECElGamalEncryptor : NSObject < LibOrgBouncycastleCryptoEcECEncryptor >

#pragma mark Public

- (instancetype __nonnull)init;

- (LibOrgBouncycastleCryptoEcECPair *)encryptWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)point;

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (id<LibOrgBouncycastleMathEcECMultiplier>)createBasePointMultiplier;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEcECElGamalEncryptor)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEcECElGamalEncryptor_init(LibOrgBouncycastleCryptoEcECElGamalEncryptor *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEcECElGamalEncryptor *new_LibOrgBouncycastleCryptoEcECElGamalEncryptor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEcECElGamalEncryptor *create_LibOrgBouncycastleCryptoEcECElGamalEncryptor_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEcECElGamalEncryptor)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECElGamalEncryptor_H
