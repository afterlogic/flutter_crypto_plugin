//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSKeyParameters.java
//

#include "AsymmetricKeyParameter.h"
#include "GMSSKeyParameters.h"
#include "GMSSParameters.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters () {
 @public
  LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters, params_, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)

@implementation LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters

- (instancetype)initWithBoolean:(jboolean)isPrivate
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)params {
  LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(self, isPrivate, params);
  return self;
}

- (LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)getParameters {
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcCryptoGmssGMSSParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:);
  methods[1].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LLibOrgBouncycastlePqcCryptoGmssGMSSParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLLibOrgBouncycastlePqcCryptoGmssGMSSParameters;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters = { "GMSSKeyParameters", "lib.org.bouncycastle.pqc.crypto.gmss", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters;
}

@end

void LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters *self, jboolean isPrivate, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params) {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self, isPrivate);
  self->params_ = params;
}

LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(jboolean isPrivate, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters, initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_, isPrivate, params)
}

LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_(jboolean isPrivate, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters, initWithBoolean_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_, isPrivate, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters)
