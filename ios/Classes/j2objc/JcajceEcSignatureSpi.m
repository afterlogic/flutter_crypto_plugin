//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/JcajceEcSignatureSpi.java
//

#include "AsymmetricKeyParameter.h"
#include "CipherParameters.h"
#include "DSABase.h"
#include "DSAEncoding.h"
#include "DSAExt.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "ECDSASigner.h"
#include "ECNRSigner.h"
#include "ECUtils.h"
#include "HMacDSAKCalculator.h"
#include "J2ObjC_source.h"
#include "JcajceEcSignatureSpi.h"
#include "JcajceUtilECUtil.h"
#include "NullDigest.h"
#include "ParametersWithRandom.h"
#include "PlainDSAEncoding.h"
#include "RIPEMD160Digest.h"
#include "StandardDSAEncoding.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                    withLibOrgBouncycastleCryptoDSAExt:(id<LibOrgBouncycastleCryptoDSAExt>)signer
        withLibOrgBouncycastleCryptoSignersDSAEncoding:(id<LibOrgBouncycastleCryptoSignersDSAEncoding>)encoding {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, digest, signer, encoding);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param = LibOrgBouncycastleJcajceProviderAsymmetricEcECUtils_generatePublicKeyParameterWithJavaSecurityPublicKey_(publicKey);
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(privateKey);
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  if (appRandom_ != nil) {
    [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, appRandom_)];
  }
  else {
    [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:param];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:withLibOrgBouncycastleCryptoDSAExt:withLibOrgBouncycastleCryptoSignersDSAEncoding:);
  methods[1].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[2].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;LLibOrgBouncycastleCryptoDSAExt;LLibOrgBouncycastleCryptoSignersDSAEncoding;", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;", "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512;LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi = { "JcajceEcSignatureSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, 6, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi *self, id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer, id<LibOrgBouncycastleCryptoSignersDSAEncoding> encoding) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilDSABase_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, digest, signer, encoding);
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer, id<LibOrgBouncycastleCryptoSignersDSAEncoding> encoding) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_, digest, signer, encoding)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer, id<LibOrgBouncycastleCryptoSignersDSAEncoding> encoding) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_, digest, signer, encoding)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA = { "ecDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA = { "ecDetDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone = { "ecDSAnone", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSAnone)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224 = { "ecDSA224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224 = { "ecDetDSA224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256 = { "ecDSA256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256 = { "ecDetDSA256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384 = { "ecDSA384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384 = { "ecDetDSA384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512 = { "ecDSA512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSA512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512 = { "ecDetDSA512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSA512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224 = { "ecDSASha3_224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224 = { "ecDetDSASha3_224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256 = { "ecDSASha3_256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256 = { "ecDetDSASha3_256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384 = { "ecDSASha3_384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384 = { "ecDetDSASha3_384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512 = { "ecDSASha3_512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSASha3_512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512 = { "ecDetDSASha3_512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512(), new_LibOrgBouncycastleCryptoSignersECDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512())), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDetDSASha3_512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160 = { "ecDSARipeMD160", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_init(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecDSARipeMD160)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR = { "ecNR", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersECNRSigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224 = { "ecNR224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersECNRSigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256 = { "ecNR256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersECNRSigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384 = { "ecNR384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersECNRSigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512 = { "ecNR512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersECNRSigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecNR512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA = { "ecCVCDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224 = { "ecCVCDSA224", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256 = { "ecCVCDSA256", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384 = { "ecCVCDSA384", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512 = { "ecCVCDSA512", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecCVCDSA512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160 = { "ecPlainDSARP160", "lib.org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160_init(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_withLibOrgBouncycastleCryptoSignersDSAEncoding_(self, new_LibOrgBouncycastleCryptoDigestsRIPEMD160Digest_init(), new_LibOrgBouncycastleCryptoSignersECDSASigner_init(), JreLoadStatic(LibOrgBouncycastleCryptoSignersPlainDSAEncoding, INSTANCE));
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160 *new_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160 *create_LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEcJcajceEcSignatureSpi_ecPlainDSARP160)
