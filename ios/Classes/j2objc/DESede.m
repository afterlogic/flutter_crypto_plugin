//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/DESede.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmProvider.h"
#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseSecretKeyFactory.h"
#include "BaseWrapCipher.h"
#include "CBCBlockCipher.h"
#include "CBCBlockCipherMac.h"
#include "CFBBlockCipherMac.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "DES.h"
#include "DESede.h"
#include "DESedeEngine.h"
#include "DESedeKeyGenerator.h"
#include "DESedeWrapEngine.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "ISO7816d4Padding.h"
#include "J2ObjC_source.h"
#include "KeyGenerationParameters.h"
#include "OIWObjectIdentifiers.h"
#include "PBE.h"
#include "PKCSObjectIdentifiers.h"
#include "RFC3211WrapEngine.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/InvalidKeySpecException.h"
#include "java/security/spec/KeySpec.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/spec/DESedeKeySpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"
#include "javax/crypto/spec/SecretKeySpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricDESede ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricDESede_init(LibOrgBouncycastleJcajceProviderSymmetricDESede *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricDESede *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricDESede *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator () {
 @public
  jboolean keySizeSet_;
}

@end

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings, PREFIX, NSString *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_get_PACKAGE(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PACKAGE = @"lib.org.bouncycastle.jcajce.provider.symmetric";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings, PACKAGE, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede_ECB;LLibOrgBouncycastleJcajceProviderSymmetricDESede_CBC;LLibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8;LLibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64;LLibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4;LLibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC;LLibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC;LLibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap;LLibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211;LLibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator;LLibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3;LLibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key;LLibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key;LLibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede = { "DESede", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_init(LibOrgBouncycastleJcajceProviderSymmetricDESede *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(self, new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()), 64);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8 = { "DESedeCFB8", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCFBBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8 *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8 *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESedeCFB8)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64 = { "DESede64", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCBCBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init(), 64));
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64 *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64 *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4 = { "DESede64with7816d4", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCBCBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withLibOrgBouncycastleCryptoPaddingsBlockCipherPadding_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init(), 64, new_LibOrgBouncycastleCryptoPaddingsISO7816d4Padding_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4 *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4 *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_DESede64with7816d4)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC = { "CBCMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCBCBlockCipherMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_CBCMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC = { "CMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_CMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap = { "Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesDESedeWrapEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211 = { "RFC3211", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_withInt_(self, new_LibOrgBouncycastleCryptoEnginesRFC3211WrapEngine_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()), 8);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211 *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211 *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_RFC3211)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithInt:(jint)keySize
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  [super engineInitWithInt:keySize withJavaSecuritySecureRandom:random];
  keySizeSet_ = true;
}

- (id<JavaxCryptoSecretKey>)engineGenerateKey {
  if (uninitialised_) {
    [((LibOrgBouncycastleCryptoCipherKeyGenerator *) nil_chk(engine_)) init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:new_LibOrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom(), defaultKeySize_)];
    uninitialised_ = false;
  }
  if (!keySizeSet_) {
    IOSByteArray *k = [((LibOrgBouncycastleCryptoCipherKeyGenerator *) nil_chk(engine_)) generateKey];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(k, 0, k, 16, 8);
    return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(k, algName_);
  }
  else {
    return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_([((LibOrgBouncycastleCryptoCipherKeyGenerator *) nil_chk(engine_)) generateKey], algName_);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoSecretKey;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keySizeSet_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineInit", "ILJavaSecuritySecureRandom;", "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator = { "KeyGenerator", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 3, 1, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"DESede", 192, new_LibOrgBouncycastleCryptoGeneratorsDESedeKeyGenerator_init());
  self->keySizeSet_ = false;
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3 = { "KeyGenerator3", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"DESede3", 192, new_LibOrgBouncycastleCryptoGeneratorsDESedeKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3 *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3 *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyGenerator3)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key = { "PBEWithSHAAndDES3Key", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 192, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3Key)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key = { "PBEWithSHAAndDES2Key", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesDESedeEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 8);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2Key)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory = { "PBEWithSHAAndDES3KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricDES_DESPBEKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithSHAandDES3Key-CBC", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd3_KeyTripleDES_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 192, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES3KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory = { "PBEWithSHAAndDES2KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricDES_DESPBEKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEwithSHAandDES2Key-CBC", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd2_KeyTripleDES_CBC), true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 64);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_PBEWithSHAAndDES2KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for DES parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:8];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"DES"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaSecuritySpecKeySpec>)engineGetKeySpecWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                                           withIOSClass:(IOSClass *)keySpec {
  if (keySpec == nil) {
    @throw new_JavaSecuritySpecInvalidKeySpecException_initWithNSString_(@"keySpec parameter is null");
  }
  if (key == nil) {
    @throw new_JavaSecuritySpecInvalidKeySpecException_initWithNSString_(@"key parameter is null");
  }
  if ([JavaxCryptoSpecSecretKeySpec_class_() isAssignableFrom:keySpec]) {
    return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_([key getEncoded], algName_);
  }
  else if ([JavaxCryptoSpecDESedeKeySpec_class_() isAssignableFrom:keySpec]) {
    IOSByteArray *bytes = [key getEncoded];
    @try {
      if (((IOSByteArray *) nil_chk(bytes))->size_ == 16) {
        IOSByteArray *longKey = [IOSByteArray newArrayWithLength:24];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bytes, 0, longKey, 0, 16);
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(bytes, 0, longKey, 16, 8);
        return new_JavaxCryptoSpecDESedeKeySpec_initWithByteArray_(longKey);
      }
      else {
        return new_JavaxCryptoSpecDESedeKeySpec_initWithByteArray_(bytes);
      }
    }
    @catch (JavaLangException *e) {
      @throw new_JavaSecuritySpecInvalidKeySpecException_initWithNSString_([e description]);
    }
  }
  @throw new_JavaSecuritySpecInvalidKeySpecException_initWithNSString_(@"Invalid KeySpec");
}

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec {
  if ([keySpec isKindOfClass:[JavaxCryptoSpecDESedeKeySpec class]]) {
    JavaxCryptoSpecDESedeKeySpec *desKeySpec = (JavaxCryptoSpecDESedeKeySpec *) keySpec;
    return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_([((JavaxCryptoSpecDESedeKeySpec *) nil_chk(desKeySpec)) getKey], @"DESede");
  }
  return [super engineGenerateSecretWithJavaSecuritySpecKeySpec:keySpec];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecKeySpec;", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaxCryptoSecretKey;", 0x4, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineGetKeySpecWithJavaxCryptoSecretKey:withIOSClass:);
  methods[2].selector = @selector(engineGenerateSecretWithJavaSecuritySpecKeySpec:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineGetKeySpec", "LJavaxCryptoSecretKey;LIOSClass;", "LJavaSecuritySpecInvalidKeySpecException;", "engineGenerateSecret", "LJavaSecuritySpecKeySpec;", "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory = { "KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 5, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, @"DESede", nil);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_KeyFactory)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Cipher.DESEDE" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher.DESEDEWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Cipher.DESEDERFC3211WRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$RFC3211")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.DESEDERFC3217WRAP" withNSString:@"DESEDEWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.TDEA" withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.TDEAWRAP" withNSString:@"DESEDEWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.KeyGenerator.TDEA" withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.TDEA" withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameterGenerator.TDEA" withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.TDEA" withNSString:@"DESEDE"];
  if ([provider hasAlgorithmWithNSString:@"MessageDigest" withNSString:@"SHA-1"]) {
    [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND3-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$PBEWithSHAAndDES3Key")];
    [provider addAlgorithmWithNSString:@"Cipher.BROKENPBEWITHSHAAND3-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$BrokePBEWithSHAAndDES3Key")];
    [provider addAlgorithmWithNSString:@"Cipher.OLDPBEWITHSHAAND3-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$OldPBEWithSHAAndDES3Key")];
    [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND2-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$PBEWithSHAAndDES2Key")];
    [provider addAlgorithmWithNSString:@"Cipher.BROKENPBEWITHSHAAND2-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$BrokePBEWithSHAAndDES2Key")];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd3_KeyTripleDES_CBC) withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pbeWithSHAAnd2_KeyTripleDES_CBC) withNSString:@"PBEWITHSHAAND2-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1ANDDESEDE" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND3-KEYTRIPLEDES-CBC" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND2-KEYTRIPLEDES-CBC" withNSString:@"PBEWITHSHAAND2-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAAND3-KEYDESEDE-CBC" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAAND2-KEYDESEDE-CBC" withNSString:@"PBEWITHSHAAND2-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND3-KEYDESEDE-CBC" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND2-KEYDESEDE-CBC" withNSString:@"PBEWITHSHAAND2-KEYTRIPLEDES-CBC"];
    [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1ANDDESEDE-CBC" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
  }
  [provider addAlgorithmWithNSString:@"KeyGenerator.DESEDE" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$KeyGenerator")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"KeyGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$KeyGenerator3")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.DESEDEWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$KeyGenerator")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.DESEDE" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desEDE) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"Mac.DESEDECMAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$CMAC")];
  [provider addAlgorithmWithNSString:@"Mac.DESEDEMAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$CBCMAC")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDE" withNSString:@"DESEDEMAC"];
  [provider addAlgorithmWithNSString:@"Mac.DESEDEMAC/CFB8" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$DESedeCFB8")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDE/CFB8" withNSString:@"DESEDEMAC/CFB8"];
  [provider addAlgorithmWithNSString:@"Mac.DESEDEMAC64" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$DESede64")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDE64" withNSString:@"DESEDEMAC64"];
  [provider addAlgorithmWithNSString:@"Mac.DESEDEMAC64WITHISO7816-4PADDING" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$DESede64with7816d4")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDE64WITHISO7816-4PADDING" withNSString:@"DESEDEMAC64WITHISO7816-4PADDING"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDEISO9797ALG1MACWITHISO7816-4PADDING" withNSString:@"DESEDEMAC64WITHISO7816-4PADDING"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.DESEDEISO9797ALG1WITHISO7816-4PADDING" withNSString:@"DESEDEMAC64WITHISO7816-4PADDING"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.DESEDE" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PACKAGE, @".util.IvAlgorithmParameters")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)) withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.DESEDE" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)) withNSString:@"DESEDE"];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND3-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$PBEWithSHAAndDES3KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND2-KEYTRIPLEDES-CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, @"$PBEWithSHAAndDES2KeyFactory")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA1ANDDESEDE" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND3-KEYTRIPLEDES" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND2-KEYTRIPLEDES" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND3-KEYTRIPLEDES-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND2-KEYTRIPLEDES-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAANDDES3KEY-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAANDDES2KEY-CBC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBE" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.3" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.4" withNSString:@"PBEWITHSHAAND2-KEYTRIPLEDES-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWithSHAAnd3KeyTripleDES" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.3" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.4" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWithSHAAnd3KeyTripleDES" withNSString:@"PBEWITHSHAAND3-KEYTRIPLEDES-CBC"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX, &LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PACKAGE, "LLibOrgBouncycastleJcajceProviderSymmetricDESede;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 2, 4, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricDESede_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricDESede_Mappings)
