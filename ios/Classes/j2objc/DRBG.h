//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/drbg/DRBG.java
//

#ifndef DRBG_H
#define DRBG_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricAlgorithmProvider.h"
#include "J2ObjC_header.h"
#include "java/security/SecureRandomSpi.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDrbgDRBG_init(LibOrgBouncycastleJcajceProviderDrbgDRBG *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_Default : JavaSecuritySecureRandomSpi

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (IOSByteArray *)engineGenerateSeedWithInt:(jint)numBytes;

- (void)engineNextBytesWithByteArray:(IOSByteArray *)bytes;

- (void)engineSetSeedWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV : JavaSecuritySecureRandomSpi

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (IOSByteArray *)engineGenerateSeedWithInt:(jint)numBytes;

- (void)engineNextBytesWithByteArray:(IOSByteArray *)bytes;

- (void)engineSetSeedWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings : LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DRBG_H
