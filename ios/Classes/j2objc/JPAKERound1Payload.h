//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/jpake/JPAKERound1Payload.java
//

#ifndef JPAKERound1Payload_H
#define JPAKERound1Payload_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaMathBigInteger;

@interface LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)participantId
                    withJavaMathBigInteger:(JavaMathBigInteger *)gx1
                    withJavaMathBigInteger:(JavaMathBigInteger *)gx2
               withJavaMathBigIntegerArray:(IOSObjectArray *)knowledgeProofForX1
               withJavaMathBigIntegerArray:(IOSObjectArray *)knowledgeProofForX2;

- (JavaMathBigInteger *)getGx1;

- (JavaMathBigInteger *)getGx2;

- (IOSObjectArray *)getKnowledgeProofForX1;

- (IOSObjectArray *)getKnowledgeProofForX2;

- (NSString *)getParticipantId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload *self, NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload *new_LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload *create_LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload_initWithNSString_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigIntegerArray_withJavaMathBigIntegerArray_(NSString *participantId, JavaMathBigInteger *gx1, JavaMathBigInteger *gx2, IOSObjectArray *knowledgeProofForX1, IOSObjectArray *knowledgeProofForX2);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoAgreementJpakeJPAKERound1Payload)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JPAKERound1Payload_H
