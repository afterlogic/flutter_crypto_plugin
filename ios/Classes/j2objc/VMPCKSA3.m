//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/VMPCKSA3.java
//

#include "AlgorithmProvider.h"
#include "BaseKeyGenerator.h"
#include "BaseStreamCipher.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "VMPCKSA3.h"
#include "VMPCKSA3Engine.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base;LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 = { "VMPCKSA3", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3, init)
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3 *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3)

@implementation LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base = { "Base", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseStreamCipher_initWithLibOrgBouncycastleCryptoStreamCipher_withInt_(self, new_LibOrgBouncycastleCryptoEnginesVMPCKSA3Engine_init(), 16);
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base, init)
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Base)

@implementation LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"VMPC-KSA3", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_KeyGen)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Cipher.VMPC-KSA3" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_PREFIX, @"$Base")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.VMPC-KSA3" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_PREFIX, @"$KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricVMPCKSA3_Mappings)
