//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/prng/drbg/DualECPoints.java
//

#ifndef DualECPoints_H
#define DualECPoints_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleCryptoPrngDrbgDualECPoints : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)securityStrength
  withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)p
  withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)q
                              withInt:(jint)cofactor;

- (jint)getCofactor;

- (jint)getMaxOutlen;

- (LibOrgBouncycastleMathEcECPoint *)getP;

- (LibOrgBouncycastleMathEcECPoint *)getQ;

- (jint)getSecurityStrength;

- (jint)getSeedLen;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPrngDrbgDualECPoints)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPrngDrbgDualECPoints_initWithInt_withLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleMathEcECPoint_withInt_(LibOrgBouncycastleCryptoPrngDrbgDualECPoints *self, jint securityStrength, LibOrgBouncycastleMathEcECPoint *p, LibOrgBouncycastleMathEcECPoint *q, jint cofactor);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngDrbgDualECPoints *new_LibOrgBouncycastleCryptoPrngDrbgDualECPoints_initWithInt_withLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleMathEcECPoint_withInt_(jint securityStrength, LibOrgBouncycastleMathEcECPoint *p, LibOrgBouncycastleMathEcECPoint *q, jint cofactor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPrngDrbgDualECPoints *create_LibOrgBouncycastleCryptoPrngDrbgDualECPoints_initWithInt_withLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleMathEcECPoint_withInt_(jint securityStrength, LibOrgBouncycastleMathEcECPoint *p, LibOrgBouncycastleMathEcECPoint *q, jint cofactor);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPrngDrbgDualECPoints)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DualECPoints_H
