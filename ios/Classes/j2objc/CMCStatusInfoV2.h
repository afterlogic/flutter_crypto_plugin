//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/CMCStatusInfoV2.java
//

#ifndef CMCStatusInfoV2_H
#define CMCStatusInfoV2_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1CmcCMCStatus;
@class LibOrgBouncycastleAsn1CmcOtherStatusInfo;
@class LibOrgBouncycastleAsn1DERUTF8String;

@interface LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (IOSObjectArray *)getBodyList;

- (LibOrgBouncycastleAsn1CmcCMCStatus *)getcMCStatus;

+ (LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CmcOtherStatusInfo *)getOtherStatusInfo;

- (LibOrgBouncycastleAsn1DERUTF8String *)getStatusString;

- (jboolean)hasOtherInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmcCMCStatus:(LibOrgBouncycastleAsn1CmcCMCStatus *)cMCStatus
                              withLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)bodyList
                             withLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)statusString
                        withLibOrgBouncycastleAsn1CmcOtherStatusInfo:(LibOrgBouncycastleAsn1CmcOtherStatusInfo *)otherStatusInfo;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcCMCStatusInfoV2)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcCMCStatusInfoV2_initWithLibOrgBouncycastleAsn1CmcCMCStatus_withLibOrgBouncycastleAsn1ASN1Sequence_withLibOrgBouncycastleAsn1DERUTF8String_withLibOrgBouncycastleAsn1CmcOtherStatusInfo_(LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 *self, LibOrgBouncycastleAsn1CmcCMCStatus *cMCStatus, LibOrgBouncycastleAsn1ASN1Sequence *bodyList, LibOrgBouncycastleAsn1DERUTF8String *statusString, LibOrgBouncycastleAsn1CmcOtherStatusInfo *otherStatusInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 *new_LibOrgBouncycastleAsn1CmcCMCStatusInfoV2_initWithLibOrgBouncycastleAsn1CmcCMCStatus_withLibOrgBouncycastleAsn1ASN1Sequence_withLibOrgBouncycastleAsn1DERUTF8String_withLibOrgBouncycastleAsn1CmcOtherStatusInfo_(LibOrgBouncycastleAsn1CmcCMCStatus *cMCStatus, LibOrgBouncycastleAsn1ASN1Sequence *bodyList, LibOrgBouncycastleAsn1DERUTF8String *statusString, LibOrgBouncycastleAsn1CmcOtherStatusInfo *otherStatusInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 *create_LibOrgBouncycastleAsn1CmcCMCStatusInfoV2_initWithLibOrgBouncycastleAsn1CmcCMCStatus_withLibOrgBouncycastleAsn1ASN1Sequence_withLibOrgBouncycastleAsn1DERUTF8String_withLibOrgBouncycastleAsn1CmcOtherStatusInfo_(LibOrgBouncycastleAsn1CmcCMCStatus *cMCStatus, LibOrgBouncycastleAsn1ASN1Sequence *bodyList, LibOrgBouncycastleAsn1DERUTF8String *statusString, LibOrgBouncycastleAsn1CmcOtherStatusInfo *otherStatusInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCStatusInfoV2 *LibOrgBouncycastleAsn1CmcCMCStatusInfoV2_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcCMCStatusInfoV2)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CMCStatusInfoV2_H
