//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/KeyedHashFunctions.java
//

#ifndef KeyedHashFunctions_H
#define KeyedHashFunctions_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions : NSObject

#pragma mark Protected

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                                         withInt:(jint)digestSize;

- (IOSByteArray *)FWithByteArray:(IOSByteArray *)key
                   withByteArray:(IOSByteArray *)inArg;

- (IOSByteArray *)HWithByteArray:(IOSByteArray *)key
                   withByteArray:(IOSByteArray *)inArg;

- (IOSByteArray *)HMsgWithByteArray:(IOSByteArray *)key
                      withByteArray:(IOSByteArray *)inArg;

- (IOSByteArray *)PRFWithByteArray:(IOSByteArray *)key
                     withByteArray:(IOSByteArray *)address;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions_initWithLibOrgBouncycastleCryptoDigest_withInt_(LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions *self, id<LibOrgBouncycastleCryptoDigest> digest, jint digestSize);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions *new_LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions_initWithLibOrgBouncycastleCryptoDigest_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint digestSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions *create_LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions_initWithLibOrgBouncycastleCryptoDigest_withInt_(id<LibOrgBouncycastleCryptoDigest> digest, jint digestSize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssKeyedHashFunctions)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyedHashFunctions_H
