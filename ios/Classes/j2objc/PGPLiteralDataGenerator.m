//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPLiteralDataGenerator.java
//

#include "BCPGOutputStream.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PGPLiteralData.h"
#include "PGPLiteralDataGenerator.h"
#include "PacketTags.h"
#include "Strings.h"
#include "WrappedGeneratorStream.h"
#include "java/io/File.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Date.h"

@interface LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator () {
 @public
  LibOrgBouncycastleBcpgBCPGOutputStream *pkOut_;
  jboolean oldFormat_;
}

- (void)writeHeaderWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                 withChar:(jchar)format
                            withByteArray:(IOSByteArray *)encName
                                 withLong:(jlong)modificationTime;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator, pkOut_, LibOrgBouncycastleBcpgBCPGOutputStream *)

__attribute__((unused)) static void LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_writeHeaderWithJavaIoOutputStream_withChar_withByteArray_withLong_(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *self, JavaIoOutputStream *outArg, jchar format, IOSByteArray *encName, jlong modificationTime);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator)

NSString *LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_CONSOLE = @"_CONSOLE";
JavaUtilDate *LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_NOW;

@implementation LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator

+ (jchar)BINARY {
  return LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_BINARY;
}

+ (jchar)TEXT {
  return LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_TEXT;
}

+ (jchar)UTF8 {
  return LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_UTF8;
}

+ (NSString *)CONSOLE {
  return LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_CONSOLE;
}

+ (JavaUtilDate *)NOW {
  return LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_NOW;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)oldFormat {
  LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_initWithBoolean_(self, oldFormat);
  return self;
}

- (void)writeHeaderWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                 withChar:(jchar)format
                            withByteArray:(IOSByteArray *)encName
                                 withLong:(jlong)modificationTime {
  LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_writeHeaderWithJavaIoOutputStream_withChar_withByteArray_withLong_(self, outArg, format, encName, modificationTime);
}

- (JavaIoOutputStream *)openWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                          withChar:(jchar)format
                                      withNSString:(NSString *)name
                                          withLong:(jlong)length
                                  withJavaUtilDate:(JavaUtilDate *)modificationTime {
  if (pkOut_ != nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"generator already in open state");
  }
  IOSByteArray *encName = LibOrgBouncycastleUtilStrings_toUTF8ByteArrayWithNSString_(name);
  pkOut_ = new_LibOrgBouncycastleBcpgBCPGOutputStream_initWithJavaIoOutputStream_withInt_withLong_withBoolean_(outArg, LibOrgBouncycastleBcpgPacketTags_LITERAL_DATA, length + 2 + ((IOSByteArray *) nil_chk(encName))->size_ + 4, oldFormat_);
  LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_writeHeaderWithJavaIoOutputStream_withChar_withByteArray_withLong_(self, pkOut_, format, encName, [((JavaUtilDate *) nil_chk(modificationTime)) getTime]);
  return new_LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(pkOut_, self);
}

- (JavaIoOutputStream *)openWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                          withChar:(jchar)format
                                      withNSString:(NSString *)name
                                  withJavaUtilDate:(JavaUtilDate *)modificationTime
                                     withByteArray:(IOSByteArray *)buffer {
  if (pkOut_ != nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"generator already in open state");
  }
  pkOut_ = new_LibOrgBouncycastleBcpgBCPGOutputStream_initWithJavaIoOutputStream_withInt_withByteArray_(outArg, LibOrgBouncycastleBcpgPacketTags_LITERAL_DATA, buffer);
  IOSByteArray *encName = LibOrgBouncycastleUtilStrings_toUTF8ByteArrayWithNSString_(name);
  LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_writeHeaderWithJavaIoOutputStream_withChar_withByteArray_withLong_(self, pkOut_, format, encName, [((JavaUtilDate *) nil_chk(modificationTime)) getTime]);
  return new_LibOrgBouncycastleOpenpgpWrappedGeneratorStream_initWithJavaIoOutputStream_withLibOrgBouncycastleOpenpgpStreamGenerator_(pkOut_, self);
}

- (JavaIoOutputStream *)openWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                          withChar:(jchar)format
                                    withJavaIoFile:(JavaIoFile *)file {
  return [self openWithJavaIoOutputStream:outArg withChar:format withNSString:[((JavaIoFile *) nil_chk(file)) getName] withLong:[file length] withJavaUtilDate:new_JavaUtilDate_initWithLong_([file lastModified])];
}

- (void)close {
  if (pkOut_ != nil) {
    [pkOut_ finish];
    [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(pkOut_)) flush];
    pkOut_ = nil;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, 3, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, 4, 6, 3, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, 4, 7, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(writeHeaderWithJavaIoOutputStream:withChar:withByteArray:withLong:);
  methods[3].selector = @selector(openWithJavaIoOutputStream:withChar:withNSString:withLong:withJavaUtilDate:);
  methods[4].selector = @selector(openWithJavaIoOutputStream:withChar:withNSString:withJavaUtilDate:withByteArray:);
  methods[5].selector = @selector(openWithJavaIoOutputStream:withChar:withJavaIoFile:);
  methods[6].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BINARY", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_BINARY, 0x19, -1, -1, -1, -1 },
    { "TEXT", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_TEXT, 0x19, -1, -1, -1, -1 },
    { "UTF8", "C", .constantValue.asUnichar = LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_UTF8, 0x19, -1, -1, -1, -1 },
    { "CONSOLE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "NOW", "LJavaUtilDate;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "pkOut_", "LLibOrgBouncycastleBcpgBCPGOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "oldFormat_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "writeHeader", "LJavaIoOutputStream;C[BJ", "LJavaIoIOException;", "open", "LJavaIoOutputStream;CLNSString;JLJavaUtilDate;", "LJavaIoOutputStream;CLNSString;LJavaUtilDate;[B", "LJavaIoOutputStream;CLJavaIoFile;", &LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_CONSOLE, &LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_NOW };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator = { "PGPLiteralDataGenerator", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x1, 7, 7, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator class]) {
    LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_NOW = JreLoadStatic(LibOrgBouncycastleOpenpgpPGPLiteralData, NOW);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator)
  }
}

@end

void LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_init(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *self) {
  NSObject_init(self);
  self->oldFormat_ = false;
}

LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *new_LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator, init)
}

LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *create_LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator, init)
}

void LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_initWithBoolean_(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *self, jboolean oldFormat) {
  NSObject_init(self);
  self->oldFormat_ = false;
  self->oldFormat_ = oldFormat;
}

LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *new_LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_initWithBoolean_(jboolean oldFormat) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator, initWithBoolean_, oldFormat)
}

LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *create_LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_initWithBoolean_(jboolean oldFormat) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator, initWithBoolean_, oldFormat)
}

void LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator_writeHeaderWithJavaIoOutputStream_withChar_withByteArray_withLong_(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator *self, JavaIoOutputStream *outArg, jchar format, IOSByteArray *encName, jlong modificationTime) {
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:format];
  [outArg writeWithInt:(jbyte) ((IOSByteArray *) nil_chk(encName))->size_];
  for (jint i = 0; i != encName->size_; i++) {
    [outArg writeWithInt:IOSByteArray_Get(encName, i)];
  }
  jlong modDate = modificationTime / 1000;
  [outArg writeWithInt:(jbyte) (JreRShift64(modDate, 24))];
  [outArg writeWithInt:(jbyte) (JreRShift64(modDate, 16))];
  [outArg writeWithInt:(jbyte) (JreRShift64(modDate, 8))];
  [outArg writeWithInt:(jbyte) (modDate)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpPGPLiteralDataGenerator)
