//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/Skein.java
//

#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "HMac.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Skein.h"
#include "SkeinDigest.h"
#include "SkeinMac.h"

@interface LibOrgBouncycastleJcajceProviderDigestSkein ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestSkein_init(LibOrgBouncycastleJcajceProviderDigestSkein *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSkein *new_LibOrgBouncycastleJcajceProviderDigestSkein_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSkein *create_LibOrgBouncycastleJcajceProviderDigestSkein_init(void);

@interface LibOrgBouncycastleJcajceProviderDigestSkein_Mappings ()

- (void)addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                                   withInt:(jint)blockSize
                                                                                   withInt:(jint)outputSize;

@end

inline NSString *LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings, PREFIX, NSString *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings *self, id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider> provider, jint blockSize, jint outputSize);

@implementation LibOrgBouncycastleJcajceProviderDigestSkein

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256;LLibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512;LLibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512;LLibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512;LLibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512;LLibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512;LLibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024;LLibOrgBouncycastleJcajceProviderDigestSkein_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein = { "Skein", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_init(LibOrgBouncycastleJcajceProviderDigestSkein *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSkein *new_LibOrgBouncycastleJcajceProviderDigestSkein_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein *create_LibOrgBouncycastleJcajceProviderDigestSkein_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256

- (instancetype)initWithInt:(jint)outputSize {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *d = (LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBCMessageDigest class]);
  ((LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithLibOrgBouncycastleCryptoDigestsSkeinDigest_((LibOrgBouncycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256 = { "DigestSkein256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256 *self, jint outputSize) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_256, outputSize));
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256, initWithInt_, outputSize)
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128 = { "Digest_256_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(self, 128);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160 = { "Digest_256_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(self, 160);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224 = { "Digest_256_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(self, 224);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256 = { "Digest_256_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein256_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_256_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512

- (instancetype)initWithInt:(jint)outputSize {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *d = (LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBCMessageDigest class]);
  ((LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithLibOrgBouncycastleCryptoDigestsSkeinDigest_((LibOrgBouncycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512 = { "DigestSkein512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512 *self, jint outputSize) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, outputSize));
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512, initWithInt_, outputSize)
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128 = { "Digest_512_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 128);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160 = { "Digest_512_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 160);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224 = { "Digest_512_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 224);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256 = { "Digest_512_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384 = { "Digest_512_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 384);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512 = { "Digest_512_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein512_initWithInt_(self, 512);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_512_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024

- (instancetype)initWithInt:(jint)outputSize {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(self, outputSize);
  return self;
}

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *d = (LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBCMessageDigest class]);
  ((LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithLibOrgBouncycastleCryptoDigestsSkeinDigest_((LibOrgBouncycastleCryptoDigestsSkeinDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsSkeinDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024 = { "DigestSkein1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024 *self, jint outputSize) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_1024, outputSize));
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(jint outputSize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024, initWithInt_, outputSize)
}

LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(jint outputSize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024, initWithInt_, outputSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384 = { "Digest_1024_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(self, 384);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512 = { "Digest_1024_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(self, 512);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024 = { "Digest_1024_1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024_init(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024 *self) {
  LibOrgBouncycastleJcajceProviderDigestSkein_DigestSkein1024_initWithInt_(self, 1024);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Digest_1024_1024)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128 = { "HashMac_256_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_256, 128)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160 = { "HashMac_256_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_256, 160)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224 = { "HashMac_256_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_256, 224)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256 = { "HashMac_256_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_256, 256)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_256_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128 = { "HashMac_512_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 128)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160 = { "HashMac_512_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 160)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224 = { "HashMac_512_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 224)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256 = { "HashMac_512_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 256)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384 = { "HashMac_512_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 384)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512 = { "HashMac_512_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_512, 512)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_512_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384 = { "HashMac_1024_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_1024, 384)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512 = { "HashMac_1024_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_1024, 512)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024 = { "HashMac_1024_1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024_init(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSkeinDigest_initWithInt_withInt_(LibOrgBouncycastleCryptoDigestsSkeinDigest_SKEIN_1024, 1024)));
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HashMac_1024_1024)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128 = { "HMacKeyGenerator_256_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-128", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160 = { "HMacKeyGenerator_256_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-160", 160, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224 = { "HMacKeyGenerator_256_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-224", 224, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256 = { "HMacKeyGenerator_256_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-256-256", 256, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_256_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128 = { "HMacKeyGenerator_512_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-128", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160 = { "HMacKeyGenerator_512_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-160", 160, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224 = { "HMacKeyGenerator_512_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-224", 224, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256 = { "HMacKeyGenerator_512_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-256", 256, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384 = { "HMacKeyGenerator_512_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-384", 384, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512 = { "HMacKeyGenerator_512_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-512-512", 512, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_512_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384 = { "HMacKeyGenerator_1024_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-384", 384, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512 = { "HMacKeyGenerator_1024_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-512", 512, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024 = { "HMacKeyGenerator_1024_1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024_init(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"HMACSkein-1024-1024", 1024, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_HMacKeyGenerator_1024_1024)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128 = { "SkeinMac_256_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_256, 128));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160 = { "SkeinMac_256_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_256, 160));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224 = { "SkeinMac_256_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_256, 224));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256 = { "SkeinMac_256_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_256, 256));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_256_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128 = { "SkeinMac_512_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 128));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160 = { "SkeinMac_512_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 160));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224 = { "SkeinMac_512_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 224));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256 = { "SkeinMac_512_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 256));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384 = { "SkeinMac_512_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 384));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512 = { "SkeinMac_512_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_512, 512));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_512_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384 = { "SkeinMac_1024_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_1024, 384));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512 = { "SkeinMac_1024_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_1024, 512));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024 = { "SkeinMac_1024_1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsSkeinMac_initWithInt_withInt_(LibOrgBouncycastleCryptoMacsSkeinMac_SKEIN_1024, 1024));
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMac_1024_1024)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128 = { "SkeinMacKeyGenerator_256_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-128", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160 = { "SkeinMacKeyGenerator_256_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-160", 160, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224 = { "SkeinMacKeyGenerator_256_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-224", 224, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256 = { "SkeinMacKeyGenerator_256_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-256-256", 256, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_256_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128 = { "SkeinMacKeyGenerator_512_128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-128", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_128)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160 = { "SkeinMacKeyGenerator_512_160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-160", 160, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_160)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224 = { "SkeinMacKeyGenerator_512_224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-224", 224, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_224)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256 = { "SkeinMacKeyGenerator_512_256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-256", 256, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_256)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384 = { "SkeinMacKeyGenerator_512_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-384", 384, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512 = { "SkeinMacKeyGenerator_512_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-512-512", 512, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_512_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384 = { "SkeinMacKeyGenerator_1024_384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-384", 384, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_384)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512 = { "SkeinMacKeyGenerator_1024_512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-512", 512, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_512)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024 = { "SkeinMacKeyGenerator_1024_1024", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024_init(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Skein-MAC-1024-1024", 1024, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024 *new_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024 *create_LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_SkeinMacKeyGenerator_1024_1024)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestSkein_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.Skein-256-128" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_256_128")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_256_160")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_256_224")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-256-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_256_256")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-128" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_128")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_160")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_224")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_256")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_384")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-512-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_512_512")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_1024_384")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_1024_512")];
  [provider addAlgorithmWithNSString:@"MessageDigest.Skein-1024-1024" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$Digest_1024_1024")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-256-128" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_256_128") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_128")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-256-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_256_160") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_160")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-256-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_256_224") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_224")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-256-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_256_256") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_256_256")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-128" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_128") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_128")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_160") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_160")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_224") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_224")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_256") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_256")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_384") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_384")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-512-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_512_512") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_512_512")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-1024-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_1024_384") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_384")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-1024-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_1024_512") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_512")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"Skein-1024-1024" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HashMac_1024_1024") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$HMacKeyGenerator_1024_1024")];
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 128);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 160);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 224);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 256, 256);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 128);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 160);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 224);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 256);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 384);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 512, 512);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 384);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 512);
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, 1024, 1024);
}

- (void)addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                                   withInt:(jint)blockSize
                                                                                   withInt:(jint)outputSize {
  LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(self, provider, blockSize, outputSize);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  methods[2].selector = @selector(addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "addSkeinMacAlgorithm", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;II", &LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestSkein;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSkein_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 3, 1, 5, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSkein_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestSkein_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestSkein_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_init(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSkein_Mappings *new_LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestSkein_Mappings *create_LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings, init)
}

void LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_addSkeinMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider_withInt_withInt_(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings *self, id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider> provider, jint blockSize, jint outputSize) {
  NSString *mainName = JreStrcat("$ICI", @"Skein-MAC-", blockSize, '-', outputSize);
  NSString *algorithmClassName = JreStrcat("$$ICI", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$SkeinMac_", blockSize, '_', outputSize);
  NSString *keyGeneratorClassName = JreStrcat("$$ICI", LibOrgBouncycastleJcajceProviderDigestSkein_Mappings_PREFIX, @"$SkeinMacKeyGenerator_", blockSize, '_', outputSize);
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:JreStrcat("$$", @"Mac.", mainName) withNSString:algorithmClassName];
  [provider addAlgorithmWithNSString:JreStrcat("$ICI", @"Alg.Alias.Mac.Skein-MAC", blockSize, '/', outputSize) withNSString:mainName];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"KeyGenerator.", mainName) withNSString:keyGeneratorClassName];
  [provider addAlgorithmWithNSString:JreStrcat("$ICI", @"Alg.Alias.KeyGenerator.Skein-MAC", blockSize, '/', outputSize) withNSString:mainName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSkein_Mappings)
