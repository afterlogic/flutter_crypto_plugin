//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/OtherKeyAttribute.java
//

#ifndef OtherKeyAttribute_H
#define OtherKeyAttribute_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1CmsOtherKeyAttribute : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)keyAttrId
                                     withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)keyAttr;

+ (LibOrgBouncycastleAsn1CmsOtherKeyAttribute *)getInstanceWithId:(id)o;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getKeyAttr;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getKeyAttrId;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsOtherKeyAttribute)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOtherKeyAttribute *LibOrgBouncycastleAsn1CmsOtherKeyAttribute_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsOtherKeyAttribute_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmsOtherKeyAttribute *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAttrId, id<LibOrgBouncycastleAsn1ASN1Encodable> keyAttr);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOtherKeyAttribute *new_LibOrgBouncycastleAsn1CmsOtherKeyAttribute_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAttrId, id<LibOrgBouncycastleAsn1ASN1Encodable> keyAttr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsOtherKeyAttribute *create_LibOrgBouncycastleAsn1CmsOtherKeyAttribute_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *keyAttrId, id<LibOrgBouncycastleAsn1ASN1Encodable> keyAttr);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsOtherKeyAttribute)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OtherKeyAttribute_H
