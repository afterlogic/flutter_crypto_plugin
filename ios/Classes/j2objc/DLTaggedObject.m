//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DLTaggedObject.java
//

#include "ASN1Encodable.h"
#include "ASN1OutputStream.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "BERTags.h"
#include "DLTaggedObject.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StreamUtil.h"

inline IOSByteArray *LibOrgBouncycastleAsn1DLTaggedObject_get_ZERO_BYTES(void);
static IOSByteArray *LibOrgBouncycastleAsn1DLTaggedObject_ZERO_BYTES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1DLTaggedObject, ZERO_BYTES, IOSByteArray *)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleAsn1DLTaggedObject)

@implementation LibOrgBouncycastleAsn1DLTaggedObject

- (instancetype)initWithBoolean:(jboolean)explicit_
                        withInt:(jint)tagNo
withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj {
  LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, explicit_, tagNo, obj);
  return self;
}

- (jboolean)isConstructed {
  if (!empty_) {
    if (explicit__) {
      return true;
    }
    else {
      LibOrgBouncycastleAsn1ASN1Primitive *primitive = [((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive])) toDLObject];
      return [((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) isConstructed];
    }
  }
  else {
    return true;
  }
}

- (jint)encodedLength {
  if (!empty_) {
    jint length = [((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive])) toDLObject])) encodedLength];
    if (explicit__) {
      return LibOrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(tagNo_) + LibOrgBouncycastleAsn1StreamUtil_calculateBodyLengthWithInt_(length) + length;
    }
    else {
      length = length - 1;
      return LibOrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(tagNo_) + length;
    }
  }
  else {
    return LibOrgBouncycastleAsn1StreamUtil_calculateTagLengthWithInt_(tagNo_) + 1;
  }
}

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg {
  if (!empty_) {
    LibOrgBouncycastleAsn1ASN1Primitive *primitive = [((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive])) toDLObject];
    if (explicit__) {
      [((LibOrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeTagWithInt:LibOrgBouncycastleAsn1BERTags_CONSTRUCTED | LibOrgBouncycastleAsn1BERTags_TAGGED withInt:tagNo_];
      [outArg writeLengthWithInt:[((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) encodedLength]];
      [outArg writeObjectWithLibOrgBouncycastleAsn1ASN1Encodable:primitive];
    }
    else {
      jint flags;
      if ([((LibOrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) isConstructed]) {
        flags = LibOrgBouncycastleAsn1BERTags_CONSTRUCTED | LibOrgBouncycastleAsn1BERTags_TAGGED;
      }
      else {
        flags = LibOrgBouncycastleAsn1BERTags_TAGGED;
      }
      [((LibOrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeTagWithInt:flags withInt:tagNo_];
      [outArg writeImplicitObjectWithLibOrgBouncycastleAsn1ASN1Primitive:primitive];
    }
  }
  else {
    [((LibOrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:LibOrgBouncycastleAsn1BERTags_CONSTRUCTED | LibOrgBouncycastleAsn1BERTags_TAGGED withInt:tagNo_ withByteArray:LibOrgBouncycastleAsn1DLTaggedObject_ZERO_BYTES];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withInt:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[1].selector = @selector(isConstructed);
  methods[2].selector = @selector(encodedLength);
  methods[3].selector = @selector(encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO_BYTES", "[B", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "ZILLibOrgBouncycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "encode", "LLibOrgBouncycastleAsn1ASN1OutputStream;", &LibOrgBouncycastleAsn1DLTaggedObject_ZERO_BYTES };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1DLTaggedObject = { "DLTaggedObject", "lib.org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1DLTaggedObject;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleAsn1DLTaggedObject class]) {
    LibOrgBouncycastleAsn1DLTaggedObject_ZERO_BYTES = [IOSByteArray newArrayWithLength:0];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleAsn1DLTaggedObject)
  }
}

@end

void LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1DLTaggedObject *self, jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  LibOrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, explicit_, tagNo, obj);
}

LibOrgBouncycastleAsn1DLTaggedObject *new_LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1DLTaggedObject, initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_, explicit_, tagNo, obj)
}

LibOrgBouncycastleAsn1DLTaggedObject *create_LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1DLTaggedObject, initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_, explicit_, tagNo, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1DLTaggedObject)
