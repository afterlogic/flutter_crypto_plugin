//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/math/linearalgebra/RandUtils.java
//

#ifndef RandUtils_H
#define RandUtils_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaSecuritySecureRandom;

@interface LibOrgBouncycastlePqcMathLinearalgebraRandUtils : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Package-Private

+ (jint)nextIntWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)rand
                                    withInt:(jint)n;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcMathLinearalgebraRandUtils)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcMathLinearalgebraRandUtils_init(LibOrgBouncycastlePqcMathLinearalgebraRandUtils *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcMathLinearalgebraRandUtils *new_LibOrgBouncycastlePqcMathLinearalgebraRandUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcMathLinearalgebraRandUtils *create_LibOrgBouncycastlePqcMathLinearalgebraRandUtils_init(void);

FOUNDATION_EXPORT jint LibOrgBouncycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(JavaSecuritySecureRandom *rand, jint n);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcMathLinearalgebraRandUtils)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RandUtils_H
