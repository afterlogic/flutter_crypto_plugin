//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dstu/BCDSTU4145PublicKey.java
//

#include "ASN1Encodable.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "BCDSTU4145PublicKey.h"
#include "BouncyCastleProvider.h"
#include "DERBitString.h"
#include "DEROctetString.h"
#include "DSTU4145BinaryField.h"
#include "DSTU4145ECBinary.h"
#include "DSTU4145NamedCurves.h"
#include "DSTU4145Params.h"
#include "DSTU4145PointEncoder.h"
#include "EC5Util.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECFieldElement.h"
#include "ECNamedCurveParameterSpec.h"
#include "ECNamedCurveSpec.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "ECPublicKeyParameters.h"
#include "ECPublicKeySpec.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceUtilECUtil.h"
#include "JcajceUtilKeyUtil.h"
#include "ProviderConfiguration.h"
#include "SubjectPublicKeyInfo.h"
#include "UAObjectIdentifiers.h"
#include "X962Parameters.h"
#include "X9ECParameters.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPublicKeySpec.h"
#include "java/security/spec/EllipticCurve.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey () {
 @public
  NSString *algorithm_;
  jboolean withCompression_;
  LibOrgBouncycastleCryptoParamsECPublicKeyParameters *ecPublicKey_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  LibOrgBouncycastleAsn1UaDSTU4145Params *dstuParams_;
}

- (JavaSecuritySpecECParameterSpec *)createSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                            withLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)dp;

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes;

- (void)populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, ecPublicKey_, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, dstuParams_, LibOrgBouncycastleAsn1UaDSTU4145Params *)

__attribute__((unused)) static JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaSecuritySpecEllipticCurve *ellipticCurve, LibOrgBouncycastleCryptoParamsECDomainParameters *dp);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, IOSByteArray *bytes);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey

+ (jlong)serialVersionUID {
  return LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_serialVersionUID;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *)key {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(self, key);
  return self;
}

- (instancetype)initWithJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(self, spec);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleJceSpecECPublicKeySpec:(LibOrgBouncycastleJceSpecECPublicKeySpec *)spec
 withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, spec, configuration);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(self, algorithm, params, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(self, algorithm, params, spec);
  return self;
}

- (instancetype)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(self, algorithm, params);
  return self;
}

- (JavaSecuritySpecECParameterSpec *)createSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                            withLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)dp {
  return LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, info);
  return self;
}

- (void)reverseBytesWithByteArray:(IOSByteArray *)bytes {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, bytes);
}

- (void)populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, info);
}

- (IOSByteArray *)getSbox {
  if (nil != dstuParams_) {
    return [dstuParams_ getDKE];
  }
  else {
    return LibOrgBouncycastleAsn1UaDSTU4145Params_getDefaultDKE();
  }
}

- (NSString *)getAlgorithm {
  return algorithm_;
}

- (NSString *)getFormat {
  return @"X.509";
}

- (IOSByteArray *)getEncoded {
  id<LibOrgBouncycastleAsn1ASN1Encodable> params;
  LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info;
  if (dstuParams_ != nil) {
    params = dstuParams_;
  }
  else {
    if ([ecSpec_ isKindOfClass:[LibOrgBouncycastleJceSpecECNamedCurveSpec class]]) {
      params = new_LibOrgBouncycastleAsn1UaDSTU4145Params_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((LibOrgBouncycastleJceSpecECNamedCurveSpec *) nil_chk(((LibOrgBouncycastleJceSpecECNamedCurveSpec *) ecSpec_))) getName]));
    }
    else {
      LibOrgBouncycastleMathEcECCurve *curve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve]);
      LibOrgBouncycastleAsn1X9X9ECParameters *ecP = new_LibOrgBouncycastleAsn1X9X9ECParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getGenerator], withCompression_), [((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getOrder], JavaMathBigInteger_valueOfWithLong_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec_)) getCurve])) getSeed]);
      params = new_LibOrgBouncycastleAsn1X9X962Parameters_initWithLibOrgBouncycastleAsn1X9X9ECParameters_(ecP);
    }
  }
  IOSByteArray *encKey = LibOrgBouncycastleAsn1UaDSTU4145PointEncoder_encodePointWithLibOrgBouncycastleMathEcECPoint_([((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ]);
  @try {
    info = new_LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(LibOrgBouncycastleAsn1UaUAObjectIdentifiers, dstu4145be), params), new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(encKey));
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(info);
}

- (JavaSecuritySpecECParameterSpec *)getParams {
  return ecSpec_;
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters {
  if (ecSpec_ == nil) {
    return nil;
  }
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
}

- (JavaSecuritySpecECPoint *)getW {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ]);
}

- (LibOrgBouncycastleMathEcECPoint *)getQ {
  LibOrgBouncycastleMathEcECPoint *q = [((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ];
  if (ecSpec_ == nil) {
    return [((LibOrgBouncycastleMathEcECPoint *) nil_chk(q)) getDetachedPoint];
  }
  return q;
}

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)engineGetKeyParameters {
  return ecPublicKey_;
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec {
  if (ecSpec_ != nil) {
    return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
  }
  return [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(LibOrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getEcImplicitlyCa];
}

- (NSString *)description {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_publicKeyToStringWithNSString_withLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleJceSpecECParameterSpec_(algorithm_, [((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ], [self engineGetSpec]);
}

- (void)setPointFormatWithNSString:(NSString *)style {
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey class]])) {
    return false;
  }
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *other = (LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *) cast_chk(o, [LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey class]);
  return [((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ])) equalsWithLibOrgBouncycastleMathEcECPoint:[((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(((LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *) nil_chk(other))->ecPublicKey_)) getQ]] && ([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) isEqual:[other engineGetSpec]]);
}

- (NSUInteger)hash {
  return ((jint) [((LibOrgBouncycastleMathEcECPoint *) nil_chk([((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(ecPublicKey_)) getQ])) hash]) ^ ((jint) [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 19, 20, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, 23, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey:);
  methods[1].selector = @selector(initWithJavaSecuritySpecECPublicKeySpec:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleJceSpecECPublicKeySpec:withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[3].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:withJavaSecuritySpecECParameterSpec:);
  methods[4].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:withLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[5].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:);
  methods[6].selector = @selector(createSpecWithJavaSecuritySpecEllipticCurve:withLibOrgBouncycastleCryptoParamsECDomainParameters:);
  methods[7].selector = @selector(initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[8].selector = @selector(reverseBytesWithByteArray:);
  methods[9].selector = @selector(populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[10].selector = @selector(getSbox);
  methods[11].selector = @selector(getAlgorithm);
  methods[12].selector = @selector(getFormat);
  methods[13].selector = @selector(getEncoded);
  methods[14].selector = @selector(getParams);
  methods[15].selector = @selector(getParameters);
  methods[16].selector = @selector(getW);
  methods[17].selector = @selector(getQ);
  methods[18].selector = @selector(engineGetKeyParameters);
  methods[19].selector = @selector(engineGetSpec);
  methods[20].selector = @selector(description);
  methods[21].selector = @selector(setPointFormatWithNSString:);
  methods[22].selector = @selector(isEqual:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[25].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ecPublicKey_", "LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "dstuParams_", "LLibOrgBouncycastleAsn1UaDSTU4145Params;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey;", "LJavaSecuritySpecECPublicKeySpec;", "LLibOrgBouncycastleJceSpecECPublicKeySpec;LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;LJavaSecuritySpecECParameterSpec;", "LNSString;LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;LLibOrgBouncycastleJceSpecECParameterSpec;", "LNSString;LLibOrgBouncycastleCryptoParamsECPublicKeyParameters;", "createSpec", "LJavaSecuritySpecEllipticCurve;LLibOrgBouncycastleCryptoParamsECDomainParameters;", "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "reverseBytes", "[B", "populateFromPubKeyInfo", "toString", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey = { "BCDSTU4145PublicKey", "lib.org.bouncycastle.jcajce.provider.asymmetric.dstu", ptrTable, methods, fields, 7, 0x1, 26, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->ecPublicKey_ = ((LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *) nil_chk(key))->ecPublicKey_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->dstuParams_ = key->dstuParams_;
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_, key)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_, key)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaSecuritySpecECPublicKeySpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->ecSpec_ = [((JavaSecuritySpecECPublicKeySpec *) nil_chk(spec)) getParams];
  self->ecPublicKey_ = new_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(self->ecSpec_, [spec getW], false), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(nil, self->ecSpec_));
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithJavaSecuritySpecECPublicKeySpec_, spec)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithJavaSecuritySpecECPublicKeySpec_(JavaSecuritySpecECPublicKeySpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithJavaSecuritySpecECPublicKeySpec_, spec)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  if ([((LibOrgBouncycastleJceSpecECPublicKeySpec *) nil_chk(spec)) getParams] != nil) {
    LibOrgBouncycastleMathEcECCurve *curve = [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    self->ecPublicKey_ = new_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_([spec getQ], LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withLibOrgBouncycastleJceSpecECParameterSpec_(configuration, [spec getParams]));
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    LibOrgBouncycastleJceSpecECParameterSpec *s = [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    self->ecPublicKey_ = new_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_([((LibOrgBouncycastleMathEcECCurve *) nil_chk([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk(s)) getCurve])) createPointWithJavaMathBigInteger:[((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk([spec getQ])) getAffineXCoord])) toBigInteger] withJavaMathBigInteger:[((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk([spec getQ])) getAffineYCoord])) toBigInteger]], LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(configuration, nil));
    self->ecSpec_ = nil;
  }
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, spec, configuration)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_, spec, configuration)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  self->ecPublicKey_ = params;
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
  }
  else {
    self->ecSpec_ = spec;
  }
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_, algorithm, params, spec)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_, algorithm, params, spec)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  LibOrgBouncycastleCryptoParamsECDomainParameters *dp = [((LibOrgBouncycastleCryptoParamsECPublicKeyParameters *) nil_chk(params)) getParameters];
  self->algorithm_ = algorithm;
  if (spec == nil) {
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleCryptoParamsECDomainParameters_(self, ellipticCurve, dp);
  }
  else {
    JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, spec);
  }
  self->ecPublicKey_ = params;
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_, algorithm, params, spec)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_, algorithm, params, spec)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  self->algorithm_ = algorithm;
  self->ecPublicKey_ = params;
  self->ecSpec_ = nil;
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_, algorithm, params)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_, algorithm, params)
}

JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_createSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaSecuritySpecEllipticCurve *ellipticCurve, LibOrgBouncycastleCryptoParamsECDomainParameters *dp) {
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getG]), [dp getN], [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  NSObject_init(self);
  self->algorithm_ = @"DSTU4145";
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, info);
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, info)
}

LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey, initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, info)
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, IOSByteArray *bytes) {
  jbyte tmp;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_ / 2; i++) {
    tmp = IOSByteArray_Get(bytes, i);
    *IOSByteArray_GetRef(bytes, i) = IOSByteArray_Get(bytes, bytes->size_ - 1 - i);
    *IOSByteArray_GetRef(bytes, bytes->size_ - 1 - i) = tmp;
  }
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  LibOrgBouncycastleAsn1DERBitString *bits = [((LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  LibOrgBouncycastleAsn1ASN1OctetString *key;
  self->algorithm_ = @"DSTU4145";
  @try {
    key = (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((LibOrgBouncycastleAsn1DERBitString *) nil_chk(bits)) getBytes]), [LibOrgBouncycastleAsn1ASN1OctetString class]);
  }
  @catch (JavaIoIOException *ex) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"error recovering public key");
  }
  IOSByteArray *keyEnc = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(key)) getOctets];
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
    LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, keyEnc);
  }
  LibOrgBouncycastleAsn1ASN1Sequence *seq = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getParameters]);
  LibOrgBouncycastleJceSpecECParameterSpec *spec = nil;
  LibOrgBouncycastleAsn1X9X9ECParameters *x9Params = nil;
  if ([[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0] isKindOfClass:[LibOrgBouncycastleAsn1ASN1Integer class]]) {
    x9Params = LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(seq);
    spec = new_LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(x9Params)) getCurve], [x9Params getG], [x9Params getN], [x9Params getH], [x9Params getSeed]);
  }
  else {
    self->dstuParams_ = LibOrgBouncycastleAsn1UaDSTU4145Params_getInstanceWithId_(seq);
    if ([((LibOrgBouncycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) isNamedCurve]) {
      LibOrgBouncycastleAsn1ASN1ObjectIdentifier *curveOid = [((LibOrgBouncycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getNamedCurve];
      LibOrgBouncycastleCryptoParamsECDomainParameters *ecP = LibOrgBouncycastleAsn1UaDSTU4145NamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(curveOid);
      spec = new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(curveOid)) getId], [((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(ecP)) getCurve], [ecP getG], [ecP getN], [ecP getH], [ecP getSeed]);
    }
    else {
      LibOrgBouncycastleAsn1UaDSTU4145ECBinary *binary = [((LibOrgBouncycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getECBinary];
      IOSByteArray *b_bytes = [((LibOrgBouncycastleAsn1UaDSTU4145ECBinary *) nil_chk(binary)) getB];
      if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
        LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, b_bytes);
      }
      LibOrgBouncycastleAsn1UaDSTU4145BinaryField *field = [binary getField];
      LibOrgBouncycastleMathEcECCurve *curve = new_LibOrgBouncycastleMathEcECCurve_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleAsn1UaDSTU4145BinaryField *) nil_chk(field)) getM], [field getK1], [field getK2], [field getK3], [binary getA], new_JavaMathBigInteger_initWithInt_withByteArray_(1, b_bytes));
      IOSByteArray *g_bytes = [binary getG];
      if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([info getAlgorithm])) getAlgorithm])) isEqual:JreLoadStatic(LibOrgBouncycastleAsn1UaUAObjectIdentifiers, dstu4145le)]) {
        LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_reverseBytesWithByteArray_(self, g_bytes);
      }
      spec = new_LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(curve, LibOrgBouncycastleAsn1UaDSTU4145PointEncoder_decodePointWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, g_bytes), [binary getN]);
    }
  }
  LibOrgBouncycastleMathEcECCurve *curve = [spec getCurve];
  JavaSecuritySpecEllipticCurve *ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [spec getSeed]);
  if (self->dstuParams_ != nil) {
    if ([self->dstuParams_ isNamedCurve]) {
      self->ecSpec_ = new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((LibOrgBouncycastleAsn1UaDSTU4145Params *) nil_chk(self->dstuParams_)) getNamedCurve])) getId], ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([spec getG]), [spec getN], [spec getH]);
    }
    else {
      self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([spec getG]), [spec getN], [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
    }
  }
  else {
    self->ecSpec_ = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X9ECParameters_(x9Params);
  }
  self->ecPublicKey_ = new_LibOrgBouncycastleCryptoParamsECPublicKeyParameters_initWithLibOrgBouncycastleMathEcECPoint_withLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1UaDSTU4145PointEncoder_decodePointWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, keyEnc), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(nil, self->ecSpec_));
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_populateFromPubKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
}

void LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDstuBCDSTU4145PublicKey)
