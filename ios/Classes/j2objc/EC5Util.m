//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.java
//

#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "Arrays.h"
#include "BouncyCastleProvider.h"
#include "CustomNamedCurves.h"
#include "EC5Util.h"
#include "ECAlgorithms.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECFieldElement.h"
#include "ECNamedCurveParameterSpec.h"
#include "ECNamedCurveSpec.h"
#include "ECNamedCurveTable.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "FiniteField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceUtilECUtil.h"
#include "Polynomial.h"
#include "PolynomialExtensionField.h"
#include "ProviderConfiguration.h"
#include "X962Parameters.h"
#include "X9ECParameters.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_get_customCurves(void);
inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_set_customCurves(id<JavaUtilMap> value);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util, customCurves, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleMathEcECCurve *)getCurveWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                  withLibOrgBouncycastleAsn1X9X962Parameters:(LibOrgBouncycastleAsn1X9X962Parameters *)params {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withLibOrgBouncycastleAsn1X9X962Parameters_(configuration, params);
}

+ (LibOrgBouncycastleCryptoParamsECDomainParameters *)getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                                     withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)params {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(configuration, params);
}

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithLibOrgBouncycastleAsn1X9X962Parameters:(LibOrgBouncycastleAsn1X9X962Parameters *)params
                                                         withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X962Parameters_withLibOrgBouncycastleMathEcECCurve_(params, curve);
}

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithLibOrgBouncycastleAsn1X9X9ECParameters:(LibOrgBouncycastleAsn1X9X9ECParameters *)domainParameters {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X9ECParameters_(domainParameters);
}

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)domainParameters {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleCryptoParamsECDomainParameters_(domainParameters);
}

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                                                     withByteArray:(IOSByteArray *)seed {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, seed);
}

+ (LibOrgBouncycastleMathEcECCurve *)convertCurveWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ec {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(ec);
}

+ (id<JavaSecuritySpecECField>)convertFieldWithLibOrgBouncycastleMathFieldFiniteField:(id<LibOrgBouncycastleMathFieldFiniteField>)field {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_(field);
}

+ (JavaSecuritySpecECParameterSpec *)convertSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                                     withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, spec);
}

+ (LibOrgBouncycastleJceSpecECParameterSpec *)convertSpecWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                                                 withBoolean:(jboolean)withCompression {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec, withCompression);
}

+ (LibOrgBouncycastleMathEcECPoint *)convertPointWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                         withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                         withBoolean:(jboolean)withCompression {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(ecSpec, point, withCompression);
}

+ (LibOrgBouncycastleMathEcECPoint *)convertPointWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
                                                         withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                         withBoolean:(jboolean)withCompression {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, point, withCompression);
}

+ (JavaSecuritySpecECPoint *)convertPointWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)point {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_(point);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECCurve;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsECDomainParameters;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 7, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECCurve;", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x9, 13, 15, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECPoint;", 0x9, 16, 18, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECPoint;", 0x9, 16, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCurveWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:withLibOrgBouncycastleAsn1X9X962Parameters:);
  methods[2].selector = @selector(getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:withJavaSecuritySpecECParameterSpec:);
  methods[3].selector = @selector(convertToSpecWithLibOrgBouncycastleAsn1X9X962Parameters:withLibOrgBouncycastleMathEcECCurve:);
  methods[4].selector = @selector(convertToSpecWithLibOrgBouncycastleAsn1X9X9ECParameters:);
  methods[5].selector = @selector(convertToSpecWithLibOrgBouncycastleCryptoParamsECDomainParameters:);
  methods[6].selector = @selector(convertCurveWithLibOrgBouncycastleMathEcECCurve:withByteArray:);
  methods[7].selector = @selector(convertCurveWithJavaSecuritySpecEllipticCurve:);
  methods[8].selector = @selector(convertFieldWithLibOrgBouncycastleMathFieldFiniteField:);
  methods[9].selector = @selector(convertSpecWithJavaSecuritySpecEllipticCurve:withLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[10].selector = @selector(convertSpecWithJavaSecuritySpecECParameterSpec:withBoolean:);
  methods[11].selector = @selector(convertPointWithJavaSecuritySpecECParameterSpec:withJavaSecuritySpecECPoint:withBoolean:);
  methods[12].selector = @selector(convertPointWithLibOrgBouncycastleMathEcECCurve:withJavaSecuritySpecECPoint:withBoolean:);
  methods[13].selector = @selector(convertPointWithLibOrgBouncycastleMathEcECPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "customCurves", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "getCurve", "LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;LLibOrgBouncycastleAsn1X9X962Parameters;", "getDomainParameters", "LLibOrgBouncycastleJcajceProviderConfigProviderConfiguration;LJavaSecuritySpecECParameterSpec;", "convertToSpec", "LLibOrgBouncycastleAsn1X9X962Parameters;LLibOrgBouncycastleMathEcECCurve;", "LLibOrgBouncycastleAsn1X9X9ECParameters;", "LLibOrgBouncycastleCryptoParamsECDomainParameters;", "convertCurve", "LLibOrgBouncycastleMathEcECCurve;[B", "LJavaSecuritySpecEllipticCurve;", "convertField", "LLibOrgBouncycastleMathFieldFiniteField;", "convertSpec", "LJavaSecuritySpecEllipticCurve;LLibOrgBouncycastleJceSpecECParameterSpec;", "LJavaSecuritySpecECParameterSpec;Z", "convertPoint", "LJavaSecuritySpecECParameterSpec;LJavaSecuritySpecECPoint;Z", "LLibOrgBouncycastleMathEcECCurve;LJavaSecuritySpecECPoint;Z", "LLibOrgBouncycastleMathEcECPoint;", &LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util = { "EC5Util", "lib.org.bouncycastle.jcajce.provider.asymmetric.util", ptrTable, methods, fields, 7, 0x1, 14, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util class]) {
    LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves = new_JavaUtilHashMap_init();
    {
      id<JavaUtilEnumeration> e = LibOrgBouncycastleCryptoEcCustomNamedCurves_getNames();
      while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
        NSString *name = (NSString *) cast_chk([e nextElement], [NSString class]);
        LibOrgBouncycastleAsn1X9X9ECParameters *curveParams = LibOrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
        if (curveParams != nil) {
          (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) putWithId:[curveParams getCurve] withId:[((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(LibOrgBouncycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(name))) getCurve]];
        }
      }
      LibOrgBouncycastleAsn1X9X9ECParameters *x9_25519 = LibOrgBouncycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(@"Curve25519");
      LibOrgBouncycastleMathEcECCurve *c_25519 = [((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(x9_25519)) getCurve];
      (void) [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) putWithId:new_LibOrgBouncycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((id<LibOrgBouncycastleMathFieldFiniteField>) nil_chk([((LibOrgBouncycastleMathEcECCurve *) nil_chk(c_25519)) getField])) getCharacteristic], [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([c_25519 getA])) toBigInteger], [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([c_25519 getB])) toBigInteger], [c_25519 getOrder], [c_25519 getCofactor]) withId:c_25519];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)
  }
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *new_LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *create_LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util, init)
}

LibOrgBouncycastleMathEcECCurve *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withLibOrgBouncycastleAsn1X9X962Parameters_(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, LibOrgBouncycastleAsn1X9X962Parameters *params) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  LibOrgBouncycastleMathEcECCurve *curve;
  id<JavaUtilSet> acceptableCurves = [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getAcceptableNamedCurves];
  if ([((LibOrgBouncycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([params getParameters]);
    if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty] || [acceptableCurves containsWithId:oid]) {
      LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getNamedCurveByOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
      if (ecP == nil) {
        ecP = (LibOrgBouncycastleAsn1X9X9ECParameters *) cast_chk([((id<JavaUtilMap>) nil_chk([configuration getAdditionalECParameters])) getWithId:oid], [LibOrgBouncycastleAsn1X9X9ECParameters class]);
      }
      curve = [((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
    }
    else {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"named curve not acceptable");
    }
  }
  else if ([params isImplicitlyCA]) {
    curve = [((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk([configuration getEcImplicitlyCa])) getCurve];
  }
  else if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty]) {
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    curve = [((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
  }
  else {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"encoded parameters not acceptable");
  }
  return curve;
}

LibOrgBouncycastleCryptoParamsECDomainParameters *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, JavaSecuritySpecECParameterSpec *params) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  LibOrgBouncycastleCryptoParamsECDomainParameters *domainParameters;
  if (params == nil) {
    LibOrgBouncycastleJceSpecECParameterSpec *iSpec = [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    domainParameters = new_LibOrgBouncycastleCryptoParamsECDomainParameters_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk(iSpec)) getCurve], [iSpec getG], [iSpec getN], [iSpec getH], [iSpec getSeed]);
  }
  else {
    domainParameters = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getDomainParametersWithLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_withLibOrgBouncycastleJceSpecECParameterSpec_(configuration, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(params, false));
  }
  return domainParameters;
}

JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X962Parameters_withLibOrgBouncycastleMathEcECCurve_(LibOrgBouncycastleAsn1X9X962Parameters *params, LibOrgBouncycastleMathEcECCurve *curve) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  JavaSecuritySpecECParameterSpec *ecSpec;
  JavaSecuritySpecEllipticCurve *ellipticCurve;
  if ([((LibOrgBouncycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([params getParameters], [LibOrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getNamedCurveByOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
    if (ecP == nil) {
      id<JavaUtilMap> additionalECParameters = [((id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(LibOrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getAdditionalECParameters];
      if (![((id<JavaUtilMap>) nil_chk(additionalECParameters)) isEmpty]) {
        ecP = (LibOrgBouncycastleAsn1X9X9ECParameters *) cast_chk([additionalECParameters getWithId:oid], [LibOrgBouncycastleAsn1X9X9ECParameters class]);
      }
    }
    ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
    ecSpec = new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_getCurveNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid), ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([ecP getG]), [ecP getN], [ecP getH]);
  }
  else if ([params isImplicitlyCA]) {
    ecSpec = nil;
  }
  else {
    LibOrgBouncycastleAsn1X9X9ECParameters *ecP = LibOrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    ellipticCurve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
    if ([ecP getH] != nil) {
      ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([ecP getG]), [ecP getN], [((JavaMathBigInteger *) nil_chk([ecP getH])) intValue]);
    }
    else {
      ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([ecP getG]), [ecP getN], 1);
    }
  }
  return ecSpec;
}

JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleAsn1X9X9ECParameters_(LibOrgBouncycastleAsn1X9X9ECParameters *domainParameters) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleAsn1X9X9ECParameters *) nil_chk(domainParameters)) getCurve], nil), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([domainParameters getG]), [domainParameters getN], [((JavaMathBigInteger *) nil_chk([domainParameters getH])) intValue]);
}

JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECDomainParameters *domainParameters) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(domainParameters)) getCurve], nil), LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([domainParameters getG]), [domainParameters getN], [((JavaMathBigInteger *) nil_chk([domainParameters getH])) intValue]);
}

JavaSecuritySpecEllipticCurve *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithLibOrgBouncycastleMathEcECCurve_withByteArray_(LibOrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  id<JavaSecuritySpecECField> field = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_([((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  JavaMathBigInteger *b = [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, nil);
}

LibOrgBouncycastleMathEcECCurve *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(JavaSecuritySpecEllipticCurve *ec) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  id<JavaSecuritySpecECField> field = [((JavaSecuritySpecEllipticCurve *) nil_chk(ec)) getField];
  JavaMathBigInteger *a = [ec getA];
  JavaMathBigInteger *b = [ec getB];
  if ([field isKindOfClass:[JavaSecuritySpecECFieldFp class]]) {
    LibOrgBouncycastleMathEcECCurve_Fp *curve = new_LibOrgBouncycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((JavaSecuritySpecECFieldFp *) nil_chk(((JavaSecuritySpecECFieldFp *) field))) getP], a, b);
    if ([((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) containsKeyWithId:curve]) {
      return (LibOrgBouncycastleMathEcECCurve *) cast_chk([((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) getWithId:curve], [LibOrgBouncycastleMathEcECCurve class]);
    }
    return curve;
  }
  else {
    JavaSecuritySpecECFieldF2m *fieldF2m = (JavaSecuritySpecECFieldF2m *) cast_chk(field, [JavaSecuritySpecECFieldF2m class]);
    jint m = [((JavaSecuritySpecECFieldF2m *) nil_chk(fieldF2m)) getM];
    IOSIntArray *ks = LibOrgBouncycastleJcajceProviderAsymmetricUtilJcajceUtilECUtil_convertMidTermsWithIntArray_([fieldF2m getMidTermsOfReductionPolynomial]);
    return new_LibOrgBouncycastleMathEcECCurve_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_withJavaMathBigInteger_(m, IOSIntArray_Get(nil_chk(ks), 0), IOSIntArray_Get(ks, 1), IOSIntArray_Get(ks, 2), a, b);
  }
}

id<JavaSecuritySpecECField> LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithLibOrgBouncycastleMathFieldFiniteField_(id<LibOrgBouncycastleMathFieldFiniteField> field) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  if (LibOrgBouncycastleMathEcECAlgorithms_isFpFieldWithLibOrgBouncycastleMathFieldFiniteField_(field)) {
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<LibOrgBouncycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    id<LibOrgBouncycastleMathFieldPolynomial> poly = [((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) cast_check(field, LibOrgBouncycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<LibOrgBouncycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = LibOrgBouncycastleUtilArrays_reverseWithIntArray_(LibOrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}

JavaSecuritySpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withLibOrgBouncycastleJceSpecECParameterSpec_(JavaSecuritySpecEllipticCurve *ellipticCurve, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  if ([spec isKindOfClass:[LibOrgBouncycastleJceSpecECNamedCurveParameterSpec class]]) {
    return new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *) nil_chk(((LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *) spec))) getName], ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk(spec)) getG]), [spec getN], [spec getH]);
  }
  else {
    return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_([((LibOrgBouncycastleJceSpecECParameterSpec *) nil_chk(spec)) getG]), [spec getN], [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
  }
}

LibOrgBouncycastleJceSpecECParameterSpec *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, jboolean withCompression) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  LibOrgBouncycastleMathEcECCurve *curve = LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]);
  if ([ecSpec isKindOfClass:[LibOrgBouncycastleJceSpecECNamedCurveSpec class]]) {
    return new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((LibOrgBouncycastleJceSpecECNamedCurveSpec *) ecSpec) getName], curve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [ecSpec getGenerator], withCompression), [ecSpec getOrder], JavaMathBigInteger_valueOfWithLong_([ecSpec getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([ecSpec getCurve])) getSeed]);
  }
  else {
    return new_LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, [ecSpec getGenerator], withCompression), [ecSpec getOrder], JavaMathBigInteger_valueOfWithLong_([ecSpec getCofactor]), [((JavaSecuritySpecEllipticCurve *) nil_chk([ecSpec getCurve])) getSeed]);
  }
}

LibOrgBouncycastleMathEcECPoint *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, JavaSecuritySpecECPoint *point, jboolean withCompression) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]), point, withCompression);
}

LibOrgBouncycastleMathEcECPoint *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(LibOrgBouncycastleMathEcECCurve *curve, JavaSecuritySpecECPoint *point, jboolean withCompression) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return [((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) createPointWithJavaMathBigInteger:[((JavaSecuritySpecECPoint *) nil_chk(point)) getAffineX] withJavaMathBigInteger:[point getAffineY]];
}

JavaSecuritySpecECPoint *LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithLibOrgBouncycastleMathEcECPoint_(LibOrgBouncycastleMathEcECPoint *point) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  point = [((LibOrgBouncycastleMathEcECPoint *) nil_chk(point)) normalize];
  return new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([((LibOrgBouncycastleMathEcECPoint *) nil_chk(point)) getAffineXCoord])) toBigInteger], [((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([point getAffineYCoord])) toBigInteger]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)
