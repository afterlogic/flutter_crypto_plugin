//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/MultiCertStoreSpi.java
//

#ifndef MultiCertStoreSpi_H
#define MultiCertStoreSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/CertStoreSpi.h"

@protocol JavaSecurityCertCRLSelector;
@protocol JavaSecurityCertCertSelector;
@protocol JavaSecurityCertCertStoreParameters;
@protocol JavaUtilCollection;

@interface LibOrgBouncycastleJceProviderMultiCertStoreSpi : JavaSecurityCertCertStoreSpi

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecurityCertCertStoreParameters:(id<JavaSecurityCertCertStoreParameters>)params;

- (id<JavaUtilCollection>)engineGetCertificatesWithJavaSecurityCertCertSelector:(id<JavaSecurityCertCertSelector>)certSelector;

- (id<JavaUtilCollection>)engineGetCRLsWithJavaSecurityCertCRLSelector:(id<JavaSecurityCertCRLSelector>)crlSelector;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderMultiCertStoreSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderMultiCertStoreSpi_initWithJavaSecurityCertCertStoreParameters_(LibOrgBouncycastleJceProviderMultiCertStoreSpi *self, id<JavaSecurityCertCertStoreParameters> params);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderMultiCertStoreSpi *new_LibOrgBouncycastleJceProviderMultiCertStoreSpi_initWithJavaSecurityCertCertStoreParameters_(id<JavaSecurityCertCertStoreParameters> params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderMultiCertStoreSpi *create_LibOrgBouncycastleJceProviderMultiCertStoreSpi_initWithJavaSecurityCertCertStoreParameters_(id<JavaSecurityCertCertStoreParameters> params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderMultiCertStoreSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MultiCertStoreSpi_H
