//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/Asn1CmsIssuerAndSerialNumber.java
//

#ifndef Asn1CmsIssuerAndSerialNumber_H
#define Asn1CmsIssuerAndSerialNumber_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509X509Certificate;
@class LibOrgBouncycastleAsn1X509X509CertificateStructure;
@class LibOrgBouncycastleAsn1X509X509Name;

@interface LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)name
                                              withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509Certificate:(LibOrgBouncycastleAsn1X509X509Certificate *)certificate;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509CertificateStructure:(LibOrgBouncycastleAsn1X509X509CertificateStructure *)certificate;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)name
                               withLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)serialNumber;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)name
                                              withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

+ (LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X500X500Name *)getName;

- (LibOrgBouncycastleAsn1ASN1Integer *)getSerialNumber;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509Certificate *certificate);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1X509X509Certificate *certificate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Certificate_(LibOrgBouncycastleAsn1X509X509Certificate *certificate);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509CertificateStructure_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509CertificateStructure *certificate);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509CertificateStructure_(LibOrgBouncycastleAsn1X509X509CertificateStructure *certificate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509CertificateStructure_(LibOrgBouncycastleAsn1X509X509CertificateStructure *certificate);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAsn1CmsIssuerAndSerialNumber)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1CmsIssuerAndSerialNumber_H
