//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECKeySpec.java
//

#include "ECKeySpec.h"
#include "ECParameterSpec.h"
#include "J2ObjC_source.h"

@interface LibOrgBouncycastleJceSpecECKeySpec () {
 @public
  LibOrgBouncycastleJceSpecECParameterSpec *spec_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecECKeySpec, spec_, LibOrgBouncycastleJceSpecECParameterSpec *)

@implementation LibOrgBouncycastleJceSpecECKeySpec

- (instancetype)initWithLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec {
  LibOrgBouncycastleJceSpecECKeySpec_initWithLibOrgBouncycastleJceSpecECParameterSpec_(self, spec);
  return self;
}

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParams {
  return spec_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceSpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJceSpecECParameterSpec:);
  methods[1].selector = @selector(getParams);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "spec_", "LLibOrgBouncycastleJceSpecECParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJceSpecECParameterSpec;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceSpecECKeySpec = { "ECKeySpec", "lib.org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceSpecECKeySpec;
}

@end

void LibOrgBouncycastleJceSpecECKeySpec_initWithLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceSpecECKeySpec *self, LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  NSObject_init(self);
  self->spec_ = spec;
}

LibOrgBouncycastleJceSpecECKeySpec *new_LibOrgBouncycastleJceSpecECKeySpec_initWithLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECKeySpec, initWithLibOrgBouncycastleJceSpecECParameterSpec_, spec)
}

LibOrgBouncycastleJceSpecECKeySpec *create_LibOrgBouncycastleJceSpecECKeySpec_initWithLibOrgBouncycastleJceSpecECParameterSpec_(LibOrgBouncycastleJceSpecECParameterSpec *spec) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECKeySpec, initWithLibOrgBouncycastleJceSpecECParameterSpec_, spec)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceSpecECKeySpec)
