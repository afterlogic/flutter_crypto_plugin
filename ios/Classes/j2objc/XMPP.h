//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/keyring/impl/XMPP.java
//

#ifndef XMPP_H
#define XMPP_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ExactUserId.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleOpenpgpPGPPublicKeyRing;
@class LibOrgBouncycastleOpenpgpPGPSecretKeyRing;

@interface LibComAfterlogicPgpKeySelectionKeyringImplXMPP : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplXMPP)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplXMPP_init(LibComAfterlogicPgpKeySelectionKeyringImplXMPP *self);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP *new_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP *create_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplXMPP)

@interface LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy : LibComAfterlogicPgpKeySelectionKeyringImplExactUserId_PubRingSelectionStrategy

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)acceptWithId:(NSString *)jid
                  withId:(LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)keyRing;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy *self);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_PubRingSelectionStrategy)

@interface LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy : LibComAfterlogicPgpKeySelectionKeyringImplExactUserId_SecRingSelectionStrategy

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)acceptWithId:(NSString *)jid
                  withId:(LibOrgBouncycastleOpenpgpPGPSecretKeyRing *)keyRing;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy *self);

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy *new_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy *create_LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeySelectionKeyringImplXMPP_SecRingSelectionStrategy)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMPP_H
