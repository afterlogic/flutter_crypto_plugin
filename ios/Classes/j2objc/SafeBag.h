//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/SafeBag.java
//

#ifndef SafeBag_H
#define SafeBag_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1PkcsSafeBag : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                     withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                     withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj
                                           withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)bagAttributes;

- (LibOrgBouncycastleAsn1ASN1Set *)getBagAttributes;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getBagId;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBagValue;

+ (LibOrgBouncycastleAsn1PkcsSafeBag *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1PkcsSafeBag)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1PkcsSafeBag *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsSafeBag *new_LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsSafeBag *create_LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1PkcsSafeBag *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj, LibOrgBouncycastleAsn1ASN1Set *bagAttributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsSafeBag *new_LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj, LibOrgBouncycastleAsn1ASN1Set *bagAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsSafeBag *create_LibOrgBouncycastleAsn1PkcsSafeBag_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, id<LibOrgBouncycastleAsn1ASN1Encodable> obj, LibOrgBouncycastleAsn1ASN1Set *bagAttributes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsSafeBag *LibOrgBouncycastleAsn1PkcsSafeBag_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsSafeBag)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SafeBag_H
