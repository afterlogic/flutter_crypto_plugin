//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/BasicOCSPResponse.java
//

#ifndef BasicOCSPResponse_H
#define BasicOCSPResponse_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1OcspResponseData;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1OcspBasicOCSPResponse : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1OcspResponseData:(LibOrgBouncycastleAsn1OcspResponseData *)tbsResponseData
                       withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)signatureAlgorithm
                                  withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signature
                                  withLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)certs;

- (LibOrgBouncycastleAsn1ASN1Sequence *)getCerts;

+ (LibOrgBouncycastleAsn1OcspBasicOCSPResponse *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                           withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspBasicOCSPResponse *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1DERBitString *)getSignature;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (LibOrgBouncycastleAsn1OcspResponseData *)getTbsResponseData;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspBasicOCSPResponse)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspBasicOCSPResponse_initWithLibOrgBouncycastleAsn1OcspResponseData_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1OcspBasicOCSPResponse *self, LibOrgBouncycastleAsn1OcspResponseData *tbsResponseData, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature, LibOrgBouncycastleAsn1ASN1Sequence *certs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspBasicOCSPResponse *new_LibOrgBouncycastleAsn1OcspBasicOCSPResponse_initWithLibOrgBouncycastleAsn1OcspResponseData_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1OcspResponseData *tbsResponseData, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature, LibOrgBouncycastleAsn1ASN1Sequence *certs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspBasicOCSPResponse *create_LibOrgBouncycastleAsn1OcspBasicOCSPResponse_initWithLibOrgBouncycastleAsn1OcspResponseData_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1OcspResponseData *tbsResponseData, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature, LibOrgBouncycastleAsn1ASN1Sequence *certs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspBasicOCSPResponse *LibOrgBouncycastleAsn1OcspBasicOCSPResponse_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspBasicOCSPResponse *LibOrgBouncycastleAsn1OcspBasicOCSPResponse_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspBasicOCSPResponse)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BasicOCSPResponse_H
