//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dsa/JcajceDSASigner.java
//

#include "AsymmetricKeyParameter.h"
#include "CipherParameters.h"
#include "DSAEncoding.h"
#include "DSAExt.h"
#include "DSASigner.h"
#include "DSAUtil.h"
#include "Digest.h"
#include "DigestFactory.h"
#include "HMacDSAKCalculator.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceDSASigner.h"
#include "NullDigest.h"
#include "ParametersWithRandom.h"
#include "StandardDSAEncoding.h"
#include "java/lang/Exception.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/math/BigInteger.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/SignatureException.h"
#include "java/security/SignatureSpi.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner () {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
  id<LibOrgBouncycastleCryptoDSAExt> signer_;
  id<LibOrgBouncycastleCryptoSignersDSAEncoding> encoding_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, signer_, id<LibOrgBouncycastleCryptoDSAExt>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, encoding_, id<LibOrgBouncycastleCryptoSignersDSAEncoding>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, random_, JavaSecuritySecureRandom *)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner

- (instancetype)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                    withLibOrgBouncycastleCryptoDSAExt:(id<LibOrgBouncycastleCryptoDSAExt>)signer {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, digest, signer);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param = LibOrgBouncycastleJcajceProviderAsymmetricDsaDSAUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(publicKey);
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  self->random_ = random;
  [self engineInitSignWithJavaSecurityPrivateKey:privateKey];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  id<LibOrgBouncycastleCryptoCipherParameters> param = LibOrgBouncycastleJcajceProviderAsymmetricDsaDSAUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(privateKey);
  if (random_ != nil) {
    param = new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, random_);
  }
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
  [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:param];
}

- (void)engineUpdateWithByte:(jbyte)b {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByte:b];
}

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:b withInt:off withInt:len];
}

- (IOSByteArray *)engineSign {
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hash_ withInt:0];
  @try {
    IOSObjectArray *sig = [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) generateSignatureWithByteArray:hash_];
    return [((id<LibOrgBouncycastleCryptoSignersDSAEncoding>) nil_chk(encoding_)) encodeWithJavaMathBigInteger:[((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) getOrder] withJavaMathBigInteger:IOSObjectArray_Get(nil_chk(sig), 0) withJavaMathBigInteger:IOSObjectArray_Get(sig, 1)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) doFinalWithByteArray:hash_ withInt:0];
  IOSObjectArray *sig;
  @try {
    sig = [((id<LibOrgBouncycastleCryptoSignersDSAEncoding>) nil_chk(encoding_)) decodeWithJavaMathBigInteger:[((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) getOrder] withByteArray:sigBytes];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_(@"error decoding signature bytes.");
  }
  return [((id<LibOrgBouncycastleCryptoDSAExt>) nil_chk(signer_)) verifySignatureWithByteArray:hash_ withJavaMathBigInteger:IOSObjectArray_Get(nil_chk(sig), 0) withJavaMathBigInteger:IOSObjectArray_Get(sig, 1)];
}

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (id)engineGetParameterWithNSString:(NSString *)param {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineGetParameter unsupported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 6, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 10, 9, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 9, -1, -1, -1 },
    { NULL, "Z", 0x4, 11, 12, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 15, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoDigest:withLibOrgBouncycastleCryptoDSAExt:);
  methods[1].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[2].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  methods[4].selector = @selector(engineUpdateWithByte:);
  methods[5].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(engineSign);
  methods[7].selector = @selector(engineVerifyWithByteArray:);
  methods[8].selector = @selector(engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[9].selector = @selector(engineSetParameterWithNSString:withId:);
  methods[10].selector = @selector(engineGetParameterWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signer_", "LLibOrgBouncycastleCryptoDSAExt;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "encoding_", "LLibOrgBouncycastleCryptoSignersDSAEncoding;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoDigest;LLibOrgBouncycastleCryptoDSAExt;", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;", "engineUpdate", "B", "LJavaSecuritySignatureException;", "[BII", "engineVerify", "[B", "engineSetParameter", "LJavaSecuritySpecAlgorithmParameterSpec;", "LNSString;LNSObject;", "engineGetParameter", "LNSString;", "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512;LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner = { "JcajceDSASigner", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, fields, 7, 0x1, 11, 4, -1, 18, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner *self, id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer) {
  JavaSecuritySignatureSpi_init(self);
  self->encoding_ = JreLoadStatic(LibOrgBouncycastleCryptoSignersStandardDSAEncoding, INSTANCE);
  self->digest_ = digest;
  self->signer_ = signer;
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_, digest, signer)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(id<LibOrgBouncycastleCryptoDigest> digest, id<LibOrgBouncycastleCryptoDSAExt> signer) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner, initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_, digest, signer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA = { "stdDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_stdDSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA = { "detDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA1())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224 = { "dsa224", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224 = { "detDSA224", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA224())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256 = { "dsa256", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256 = { "detDSA256", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA256())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384 = { "dsa384", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384 = { "detDSA384", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA384())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512 = { "dsa512", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsa512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512 = { "detDSA512", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA512())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSA512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224 = { "dsaSha3_224", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224 = { "detDSASha3_224", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_224())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_224)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256 = { "dsaSha3_256", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256 = { "detDSASha3_256", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_256())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_256)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384 = { "dsaSha3_384", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384 = { "detDSASha3_384", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_384())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_384)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512 = { "dsaSha3_512", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_dsaSha3_512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512 = { "detDSASha3_512", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512 *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512(), new_LibOrgBouncycastleCryptoSignersDSASigner_initWithLibOrgBouncycastleCryptoSignersDSAKCalculator_(new_LibOrgBouncycastleCryptoSignersHMacDSAKCalculator_initWithLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoUtilDigestFactory_createSHA3_512())));
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512 *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512 *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_detDSASha3_512)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA = { "noneDSA", "lib.org.bouncycastle.jcajce.provider.asymmetric.dsa", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA *self) {
  LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_initWithLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDSAExt_(self, new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastleCryptoSignersDSASigner_init());
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDSASigner_noneDSA)
