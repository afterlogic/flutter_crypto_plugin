//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/SHA3.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "HMac.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "SHA3.h"
#include "SHA3Digest.h"

@interface LibOrgBouncycastleJcajceProviderDigestSHA3 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestSHA3_init(LibOrgBouncycastleJcajceProviderDigestSHA3 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSHA3 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestSHA3 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3;LLibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3;LLibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3;LLibOrgBouncycastleJcajceProviderDigestSHA3_Digest224;LLibOrgBouncycastleJcajceProviderDigestSHA3_Digest256;LLibOrgBouncycastleJcajceProviderDigestSHA3_Digest384;LLibOrgBouncycastleJcajceProviderDigestSHA3_Digest512;LLibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224;LLibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256;LLibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384;LLibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512;LLibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224;LLibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256;LLibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384;LLibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512;LLibOrgBouncycastleJcajceProviderDigestSHA3_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3 = { "SHA3", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_init(LibOrgBouncycastleJcajceProviderDigestSHA3 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSHA3 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3

- (instancetype)initWithInt:(jint)size {
  LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(self, size);
  return self;
}

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *d = (LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBCMessageDigest class]);
  ((LibOrgBouncycastleJcajceProviderDigestBCMessageDigest *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithLibOrgBouncycastleCryptoDigestsSHA3Digest_((LibOrgBouncycastleCryptoDigestsSHA3Digest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsSHA3Digest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3 = { "DigestSHA3", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3 *self, jint size) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithInt_(size));
}

LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3, initWithInt_, size)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3

- (instancetype)initWithInt:(jint)size {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(self, size);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3 = { "HashMacSHA3", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3 *self, jint size) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithInt_(size)));
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3, initWithInt_, size)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3

- (instancetype)initWithInt:(jint)size {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(self, size);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3 = { "KeyGeneratorSHA3", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3 *self, jint size) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, JreStrcat("$I", @"HMACSHA3-", size), size, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3, initWithInt_, size)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224 = { "Digest224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224_init(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(self, 224);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest224)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256 = { "Digest256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256_init(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest256)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384 = { "Digest384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384_init(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(self, 384);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest384)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512 = { "Digest512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512_init(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_DigestSHA3_initWithInt_(self, 512);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_Digest512)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224 = { "HashMac224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224_init(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(self, 224);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac224)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256 = { "HashMac256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256_init(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac256)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384 = { "HashMac384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384_init(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(self, 384);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac384)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512 = { "HashMac512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512_init(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_HashMacSHA3_initWithInt_(self, 512);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_HashMac512)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224 = { "KeyGenerator224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224_init(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(self, 224);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator224)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256 = { "KeyGenerator256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256_init(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator256)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384 = { "KeyGenerator384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384_init(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(self, 384);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator384)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512 = { "KeyGenerator512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512;
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512_init(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512 *self) {
  LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGeneratorSHA3_initWithInt_(self, 512);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512 *new_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512 *create_LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_KeyGenerator512)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.SHA3-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest224")];
  [provider addAlgorithmWithNSString:@"MessageDigest.SHA3-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest256")];
  [provider addAlgorithmWithNSString:@"MessageDigest.SHA3-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest384")];
  [provider addAlgorithmWithNSString:@"MessageDigest.SHA3-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest512")];
  [provider addAlgorithmWithNSString:@"MessageDigest" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha3_224) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest224")];
  [provider addAlgorithmWithNSString:@"MessageDigest" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha3_256) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest256")];
  [provider addAlgorithmWithNSString:@"MessageDigest" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha3_384) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest384")];
  [provider addAlgorithmWithNSString:@"MessageDigest" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha3_512) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$Digest512")];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$HashMac224") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$KeyGenerator224")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-224" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_224)];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$HashMac256") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$KeyGenerator256")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-256" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_256)];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$HashMac384") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$KeyGenerator384")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-384" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_384)];
  [self addHMACAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$HashMac512") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, @"$KeyGenerator512")];
  [self addHMACAliasWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA3-512" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_hmacWithSHA3_512)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestSHA3;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestSHA3_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_init(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings *new_LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings *create_LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestSHA3_Mappings)
