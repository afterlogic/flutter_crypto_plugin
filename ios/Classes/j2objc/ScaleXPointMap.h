//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/ScaleXPointMap.java
//

#ifndef ScaleXPointMap_H
#define ScaleXPointMap_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECPointMap.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleMathEcECFieldElement;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleMathEcScaleXPointMap : NSObject < LibOrgBouncycastleMathEcECPointMap > {
 @public
  LibOrgBouncycastleMathEcECFieldElement *scale__;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)scale_;

- (LibOrgBouncycastleMathEcECPoint *)mapWithLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)p;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleMathEcScaleXPointMap)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleMathEcScaleXPointMap, scale__, LibOrgBouncycastleMathEcECFieldElement *)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcScaleXPointMap_initWithLibOrgBouncycastleMathEcECFieldElement_(LibOrgBouncycastleMathEcScaleXPointMap *self, LibOrgBouncycastleMathEcECFieldElement *scale_);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcScaleXPointMap *new_LibOrgBouncycastleMathEcScaleXPointMap_initWithLibOrgBouncycastleMathEcECFieldElement_(LibOrgBouncycastleMathEcECFieldElement *scale_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcScaleXPointMap *create_LibOrgBouncycastleMathEcScaleXPointMap_initWithLibOrgBouncycastleMathEcECFieldElement_(LibOrgBouncycastleMathEcECFieldElement *scale_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcScaleXPointMap)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ScaleXPointMap_H
