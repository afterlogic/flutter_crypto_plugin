//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/SCVPReqRes.java
//

#ifndef SCVPReqRes_H
#define SCVPReqRes_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;

@interface LibOrgBouncycastleAsn1CmsSCVPReqRes : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)response;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)request
                              withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)response;

+ (LibOrgBouncycastleAsn1CmsSCVPReqRes *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getRequest;

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getResponse;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsSCVPReqRes)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsSCVPReqRes *LibOrgBouncycastleAsn1CmsSCVPReqRes_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsSCVPReqRes *self, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsSCVPReqRes *new_LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsSCVPReqRes *create_LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsSCVPReqRes *self, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *request, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsSCVPReqRes *new_LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *request, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsSCVPReqRes *create_LibOrgBouncycastleAsn1CmsSCVPReqRes_initWithLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *request, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *response);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsSCVPReqRes)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SCVPReqRes_H
