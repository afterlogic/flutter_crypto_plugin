//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/est/Asn1EstUtils.java
//

#ifndef Asn1EstUtils_H
#define Asn1EstUtils_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;

@interface LibOrgBouncycastleAsn1EstAsn1EstUtils : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (IOSObjectArray *)cloneWithLibOrgBouncycastleAsn1EstAttrOrOIDArray:(IOSObjectArray *)ids;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EstAsn1EstUtils)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EstAsn1EstUtils_init(LibOrgBouncycastleAsn1EstAsn1EstUtils *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAsn1EstUtils *new_LibOrgBouncycastleAsn1EstAsn1EstUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EstAsn1EstUtils *create_LibOrgBouncycastleAsn1EstAsn1EstUtils_init(void);

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastleAsn1EstAsn1EstUtils_cloneWithLibOrgBouncycastleAsn1EstAttrOrOIDArray_(IOSObjectArray *ids);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EstAsn1EstUtils)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Asn1EstUtils_H
