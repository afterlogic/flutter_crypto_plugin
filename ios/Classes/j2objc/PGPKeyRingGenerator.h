//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPKeyRingGenerator.java
//

#ifndef PGPKeyRingGenerator_H
#define PGPKeyRingGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor;
@class LibOrgBouncycastleOpenpgpPGPKeyPair;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRing;
@class LibOrgBouncycastleOpenpgpPGPSecretKeyRing;
@class LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector;
@protocol JavaUtilList;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;

@interface LibOrgBouncycastleOpenpgpPGPKeyRingGenerator : NSObject {
 @public
  id<JavaUtilList> keys_;
}

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)certificationLevel
withLibOrgBouncycastleOpenpgpPGPKeyPair:(LibOrgBouncycastleOpenpgpPGPKeyPair *)masterKey
                         withNSString:(NSString *)id_
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)checksumCalculator
withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector:(LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *)hashedPcks
withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector:(LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *)unhashedPcks
withLibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder:(id<LibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder>)keySignerBuilder
withLibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor:(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor *)keyEncryptor;

- (void)addSubKeyWithLibOrgBouncycastleOpenpgpPGPKeyPair:(LibOrgBouncycastleOpenpgpPGPKeyPair *)keyPair;

- (void)addSubKeyWithLibOrgBouncycastleOpenpgpPGPKeyPair:(LibOrgBouncycastleOpenpgpPGPKeyPair *)keyPair
withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector:(LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *)hashedPcks
withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector:(LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *)unhashedPcks;

- (LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)generatePublicKeyRing;

- (LibOrgBouncycastleOpenpgpPGPSecretKeyRing *)generateSecretKeyRing;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPKeyRingGenerator)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPKeyRingGenerator, keys_, id<JavaUtilList>)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPKeyRingGenerator_initWithInt_withLibOrgBouncycastleOpenpgpPGPKeyPair_withNSString_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder_withLibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor_(LibOrgBouncycastleOpenpgpPGPKeyRingGenerator *self, jint certificationLevel, LibOrgBouncycastleOpenpgpPGPKeyPair *masterKey, NSString *id_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> checksumCalculator, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *hashedPcks, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *unhashedPcks, id<LibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder> keySignerBuilder, LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor *keyEncryptor);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPKeyRingGenerator *new_LibOrgBouncycastleOpenpgpPGPKeyRingGenerator_initWithInt_withLibOrgBouncycastleOpenpgpPGPKeyPair_withNSString_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder_withLibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor_(jint certificationLevel, LibOrgBouncycastleOpenpgpPGPKeyPair *masterKey, NSString *id_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> checksumCalculator, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *hashedPcks, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *unhashedPcks, id<LibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder> keySignerBuilder, LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor *keyEncryptor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPKeyRingGenerator *create_LibOrgBouncycastleOpenpgpPGPKeyRingGenerator_initWithInt_withLibOrgBouncycastleOpenpgpPGPKeyPair_withNSString_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector_withLibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder_withLibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor_(jint certificationLevel, LibOrgBouncycastleOpenpgpPGPKeyPair *masterKey, NSString *id_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator> checksumCalculator, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *hashedPcks, LibOrgBouncycastleOpenpgpPGPSignatureSubpacketVector *unhashedPcks, id<LibOrgBouncycastleOpenpgpOperatorPGPContentSignerBuilder> keySignerBuilder, LibOrgBouncycastleOpenpgpOperatorPBESecretKeyEncryptor *keyEncryptor);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPKeyRingGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPKeyRingGenerator_H
