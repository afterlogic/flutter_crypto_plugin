//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/PKIXCertPathValidatorSpi.java
//

#ifndef PKIXCertPathValidatorSpi_H
#define PKIXCertPathValidatorSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/CertPathValidatorSpi.h"

@class JavaSecurityCertCertPath;
@class JavaSecurityCertX509Certificate;
@protocol JavaSecurityCertCertPathParameters;
@protocol JavaSecurityCertCertPathValidatorResult;

@interface LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi : JavaSecurityCertCertPathValidatorSpi

#pragma mark Public

- (instancetype __nonnull)init;

- (id<JavaSecurityCertCertPathValidatorResult>)engineValidateWithJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)certPath
                                                   withJavaSecurityCertCertPathParameters:(id<JavaSecurityCertCertPathParameters>)params;

#pragma mark Package-Private

+ (void)checkCertificateWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi_init(LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi *new_LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi *create_LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi_checkCertificateWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderPKIXCertPathValidatorSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIXCertPathValidatorSpi_H
