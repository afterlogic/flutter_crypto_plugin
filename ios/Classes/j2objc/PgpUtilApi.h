//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/PgpUtilApi.java
//

#ifndef PgpUtilApi_H
#define PgpUtilApi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibComAfterlogicPgpKeyDescription;
@class LibOrgBouncycastleOpenpgpPGPPrivateKey;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;

@interface LibComAfterlogicPgpPgpUtilApi : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)checkKeyPasswordWithNSString:(NSString *)privateKey
                            withNSString:(NSString *)password;

- (IOSObjectArray *)createKeysWithInt:(jint)length
                         withNSString:(NSString *)email
                         withNSString:(NSString *)password;

- (LibComAfterlogicPgpKeyDescription *)getKeyDescriptionWithNSString:(NSString *)text;

#pragma mark Package-Private

+ (LibOrgBouncycastleOpenpgpPGPPrivateKey *)getPrivateKeyWithNSString:(NSString *)privateKey
                                                         withNSString:(NSString *)password;

+ (LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)getPublicKeyRingWithNSStringArray:(IOSObjectArray *)publicKeys;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpPgpUtilApi)

FOUNDATION_EXPORT void LibComAfterlogicPgpPgpUtilApi_init(LibComAfterlogicPgpPgpUtilApi *self);

FOUNDATION_EXPORT LibComAfterlogicPgpPgpUtilApi *new_LibComAfterlogicPgpPgpUtilApi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpPgpUtilApi *create_LibComAfterlogicPgpPgpUtilApi_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPrivateKey *LibComAfterlogicPgpPgpUtilApi_getPrivateKeyWithNSString_withNSString_(NSString *privateKey, NSString *password);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *LibComAfterlogicPgpPgpUtilApi_getPublicKeyRingWithNSStringArray_(IOSObjectArray *publicKeys);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpPgpUtilApi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PgpUtilApi_H
