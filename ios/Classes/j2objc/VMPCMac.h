//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/macs/VMPCMac.java
//

#ifndef VMPCMac_H
#define VMPCMac_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Mac.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoMacsVMPCMac : NSObject < LibOrgBouncycastleCryptoMac >

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoMacsVMPCMac)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoMacsVMPCMac_init(LibOrgBouncycastleCryptoMacsVMPCMac *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsVMPCMac *new_LibOrgBouncycastleCryptoMacsVMPCMac_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoMacsVMPCMac *create_LibOrgBouncycastleCryptoMacsVMPCMac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoMacsVMPCMac)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // VMPCMac_H
