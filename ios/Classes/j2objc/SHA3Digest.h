//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/SHA3Digest.java
//

#ifndef SHA3Digest_H
#define SHA3Digest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeccakDigest.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoDigestsSHA3Digest : LibOrgBouncycastleCryptoDigestsKeccakDigest

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)bitLength;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsSHA3Digest:(LibOrgBouncycastleCryptoDigestsSHA3Digest *)source;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

#pragma mark Protected

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff
                    withByte:(jbyte)partialByte
                     withInt:(jint)partialBits;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsKeccakDigest:(LibOrgBouncycastleCryptoDigestsKeccakDigest *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoDigestsSHA3Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA3Digest_init(LibOrgBouncycastleCryptoDigestsSHA3Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *new_LibOrgBouncycastleCryptoDigestsSHA3Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *create_LibOrgBouncycastleCryptoDigestsSHA3Digest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithInt_(LibOrgBouncycastleCryptoDigestsSHA3Digest *self, jint bitLength);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *new_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithInt_(jint bitLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *create_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithInt_(jint bitLength);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithLibOrgBouncycastleCryptoDigestsSHA3Digest_(LibOrgBouncycastleCryptoDigestsSHA3Digest *self, LibOrgBouncycastleCryptoDigestsSHA3Digest *source);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *new_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithLibOrgBouncycastleCryptoDigestsSHA3Digest_(LibOrgBouncycastleCryptoDigestsSHA3Digest *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA3Digest *create_LibOrgBouncycastleCryptoDigestsSHA3Digest_initWithLibOrgBouncycastleCryptoDigestsSHA3Digest_(LibOrgBouncycastleCryptoDigestsSHA3Digest *source);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsSHA3Digest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SHA3Digest_H
