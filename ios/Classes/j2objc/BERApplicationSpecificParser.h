//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/BERApplicationSpecificParser.java
//

#ifndef BERApplicationSpecificParser_H
#define BERApplicationSpecificParser_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1ApplicationSpecificParser.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1StreamParser;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1BERApplicationSpecificParser : NSObject < LibOrgBouncycastleAsn1ASN1ApplicationSpecificParser >

#pragma mark Public

- (LibOrgBouncycastleAsn1ASN1Primitive *)getLoadedObject;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)readObject;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)tag
withLibOrgBouncycastleAsn1ASN1StreamParser:(LibOrgBouncycastleAsn1ASN1StreamParser *)parser;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1BERApplicationSpecificParser)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(LibOrgBouncycastleAsn1BERApplicationSpecificParser *self, jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecificParser *new_LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BERApplicationSpecificParser *create_LibOrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withLibOrgBouncycastleAsn1ASN1StreamParser_(jint tag, LibOrgBouncycastleAsn1ASN1StreamParser *parser);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1BERApplicationSpecificParser)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BERApplicationSpecificParser_H
