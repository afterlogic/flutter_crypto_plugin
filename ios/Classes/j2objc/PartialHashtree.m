//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/tsp/PartialHashtree.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PartialHashtree.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1TspPartialHashtree () {
 @public
  LibOrgBouncycastleAsn1ASN1Sequence *values_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)values;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1TspPartialHashtree, values_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1TspPartialHashtree *self, LibOrgBouncycastleAsn1ASN1Sequence *values);

__attribute__((unused)) static LibOrgBouncycastleAsn1TspPartialHashtree *new_LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1TspPartialHashtree *create_LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *values);

@implementation LibOrgBouncycastleAsn1TspPartialHashtree

+ (LibOrgBouncycastleAsn1TspPartialHashtree *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1TspPartialHashtree_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)values {
  LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, values);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)values {
  LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray_(self, values);
  return self;
}

- (instancetype)initWithByteArray2:(IOSObjectArray *)values {
  LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray2_(self, values);
  return self;
}

- (IOSObjectArray *)getValues {
  IOSObjectArray *rv = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(values_)) size] type:IOSClass_byteArray(1)];
  for (jint i = 0; i != rv->size_; i++) {
    (void) IOSObjectArray_Set(rv, i, LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(values_)) getObjectAtWithInt:i]))) getOctets]));
  }
  return rv;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return values_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1TspPartialHashtree;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "[[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithByteArray2:);
  methods[4].selector = @selector(getValues);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "values_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "[B", "[[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1TspPartialHashtree = { "PartialHashtree", "lib.org.bouncycastle.asn1.tsp", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1TspPartialHashtree;
}

@end

LibOrgBouncycastleAsn1TspPartialHashtree *LibOrgBouncycastleAsn1TspPartialHashtree_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1TspPartialHashtree_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1TspPartialHashtree class]]) {
    return (LibOrgBouncycastleAsn1TspPartialHashtree *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1TspPartialHashtree *self, LibOrgBouncycastleAsn1ASN1Sequence *values) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  for (jint i = 0; i != [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(values)) size]; i++) {
    if (!([[values getObjectAtWithInt:i] isKindOfClass:[LibOrgBouncycastleAsn1DEROctetString class]])) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in constructor: ", [[((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk([values getObjectAtWithInt:i])) java_getClass] getName]));
    }
  }
  self->values_ = values;
}

LibOrgBouncycastleAsn1TspPartialHashtree *new_LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *values) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithLibOrgBouncycastleAsn1ASN1Sequence_, values)
}

LibOrgBouncycastleAsn1TspPartialHashtree *create_LibOrgBouncycastleAsn1TspPartialHashtree_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *values) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithLibOrgBouncycastleAsn1ASN1Sequence_, values)
}

void LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray_(LibOrgBouncycastleAsn1TspPartialHashtree *self, IOSByteArray *values) {
  LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray2_(self, [IOSObjectArray newArrayWithObjects:(id[]){ values } count:1 type:IOSClass_byteArray(1)]);
}

LibOrgBouncycastleAsn1TspPartialHashtree *new_LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray_(IOSByteArray *values) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithByteArray_, values)
}

LibOrgBouncycastleAsn1TspPartialHashtree *create_LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray_(IOSByteArray *values) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithByteArray_, values)
}

void LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray2_(LibOrgBouncycastleAsn1TspPartialHashtree *self, IOSObjectArray *values) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(values))->size_; i++) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(LibOrgBouncycastleUtilArrays_cloneWithByteArray_(IOSObjectArray_Get(values, i)))];
  }
  self->values_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

LibOrgBouncycastleAsn1TspPartialHashtree *new_LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray2_(IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithByteArray2_, values)
}

LibOrgBouncycastleAsn1TspPartialHashtree *create_LibOrgBouncycastleAsn1TspPartialHashtree_initWithByteArray2_(IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1TspPartialHashtree, initWithByteArray2_, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1TspPartialHashtree)
