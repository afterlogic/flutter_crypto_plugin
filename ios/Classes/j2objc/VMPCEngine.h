//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/VMPCEngine.java
//

#ifndef VMPCEngine_H
#define VMPCEngine_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "StreamCipher.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoEnginesVMPCEngine : NSObject < LibOrgBouncycastleCryptoStreamCipher > {
 @public
  jbyte n_;
  IOSByteArray *P_;
  jbyte s_;
  IOSByteArray *workingIV_;
  IOSByteArray *workingKey_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (NSString *)getAlgorithmName;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

- (jbyte)returnByteWithByte:(jbyte)inArg;

#pragma mark Protected

- (void)initKeyWithByteArray:(IOSByteArray *)keyBytes
               withByteArray:(IOSByteArray *)ivBytes OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEnginesVMPCEngine)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesVMPCEngine, P_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesVMPCEngine, workingIV_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesVMPCEngine, workingKey_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesVMPCEngine_init(LibOrgBouncycastleCryptoEnginesVMPCEngine *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesVMPCEngine *new_LibOrgBouncycastleCryptoEnginesVMPCEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesVMPCEngine *create_LibOrgBouncycastleCryptoEnginesVMPCEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEnginesVMPCEngine)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // VMPCEngine_H
