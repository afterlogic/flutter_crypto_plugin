//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/CmcCertificationRequest.java
//

#ifndef CmcCertificationRequest_H
#define CmcCertificationRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmcCmcCertificationRequest : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)subject
                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)subjectPublicAlgorithm
                              withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)subjectPublicKey
                                   withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes
                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)signatureAlgorithm
                              withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)signature;

- (LibOrgBouncycastleAsn1ASN1Set *)getAttributes;

+ (LibOrgBouncycastleAsn1CmcCmcCertificationRequest *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1DERBitString *)getSignature;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (LibOrgBouncycastleAsn1X500X500Name *)getSubject;

- (LibOrgBouncycastleAsn1DERBitString *)getSubjectPublicKey;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSubjectPublicKeyAlgorithm;

- (JavaMathBigInteger *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)parsePublicKey;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CmcCmcCertificationRequest)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcCmcCertificationRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CmcCmcCertificationRequest *self, LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *subjectPublicAlgorithm, LibOrgBouncycastleAsn1DERBitString *subjectPublicKey, LibOrgBouncycastleAsn1ASN1Set *attributes, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCmcCertificationRequest *new_LibOrgBouncycastleAsn1CmcCmcCertificationRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *subjectPublicAlgorithm, LibOrgBouncycastleAsn1DERBitString *subjectPublicKey, LibOrgBouncycastleAsn1ASN1Set *attributes, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCmcCertificationRequest *create_LibOrgBouncycastleAsn1CmcCmcCertificationRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X500X500Name *subject, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *subjectPublicAlgorithm, LibOrgBouncycastleAsn1DERBitString *subjectPublicKey, LibOrgBouncycastleAsn1ASN1Set *attributes, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, LibOrgBouncycastleAsn1DERBitString *signature);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCmcCertificationRequest *LibOrgBouncycastleAsn1CmcCmcCertificationRequest_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcCmcCertificationRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CmcCertificationRequest_H
