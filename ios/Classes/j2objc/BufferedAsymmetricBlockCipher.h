//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/BufferedAsymmetricBlockCipher.java
//

#ifndef BufferedAsymmetricBlockCipher_H
#define BufferedAsymmetricBlockCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoAsymmetricBlockCipher;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher : NSObject {
 @public
  IOSByteArray *buf_;
  jint bufOff_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)cipher;

- (IOSByteArray *)doFinal;

- (jint)getBufferPosition;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (void)processByteWithByte:(jbyte)inArg;

- (void)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher, buf_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher *new_LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher *create_LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoBufferedAsymmetricBlockCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BufferedAsymmetricBlockCipher_H
