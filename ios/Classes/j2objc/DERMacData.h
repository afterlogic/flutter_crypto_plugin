//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/util/DERMacData.java
//

#ifndef DERMacData_H
#define DERMacData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class IOSByteArray;
@class IOSObjectArray;

@interface LibOrgBouncycastleCryptoUtilDERMacData : NSObject

#pragma mark Public

- (IOSByteArray *)getMacData;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoUtilDERMacData)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoUtilDERMacData)

typedef NS_ENUM(NSUInteger, LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum) {
  LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum_UNILATERALU = 0,
  LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum_UNILATERALV = 1,
  LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum_BILATERALU = 2,
  LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum_BILATERALV = 3,
};

@interface LibOrgBouncycastleCryptoUtilDERMacData_Type : JavaLangEnum

@property (readonly, class, nonnull) LibOrgBouncycastleCryptoUtilDERMacData_Type *UNILATERALU NS_SWIFT_NAME(UNILATERALU);
@property (readonly, class, nonnull) LibOrgBouncycastleCryptoUtilDERMacData_Type *UNILATERALV NS_SWIFT_NAME(UNILATERALV);
@property (readonly, class, nonnull) LibOrgBouncycastleCryptoUtilDERMacData_Type *BILATERALU NS_SWIFT_NAME(BILATERALU);
@property (readonly, class, nonnull) LibOrgBouncycastleCryptoUtilDERMacData_Type *BILATERALV NS_SWIFT_NAME(BILATERALV);
+ (LibOrgBouncycastleCryptoUtilDERMacData_Type * __nonnull)UNILATERALU;

+ (LibOrgBouncycastleCryptoUtilDERMacData_Type * __nonnull)UNILATERALV;

+ (LibOrgBouncycastleCryptoUtilDERMacData_Type * __nonnull)BILATERALU;

+ (LibOrgBouncycastleCryptoUtilDERMacData_Type * __nonnull)BILATERALV;

#pragma mark Public

- (IOSByteArray *)getHeader;

+ (LibOrgBouncycastleCryptoUtilDERMacData_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (LibOrgBouncycastleCryptoUtilDERMacData_Type_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoUtilDERMacData_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_values_[];

inline LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_get_UNILATERALU(void);
J2OBJC_ENUM_CONSTANT(LibOrgBouncycastleCryptoUtilDERMacData_Type, UNILATERALU)

inline LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_get_UNILATERALV(void);
J2OBJC_ENUM_CONSTANT(LibOrgBouncycastleCryptoUtilDERMacData_Type, UNILATERALV)

inline LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_get_BILATERALU(void);
J2OBJC_ENUM_CONSTANT(LibOrgBouncycastleCryptoUtilDERMacData_Type, BILATERALU)

inline LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_get_BILATERALV(void);
J2OBJC_ENUM_CONSTANT(LibOrgBouncycastleCryptoUtilDERMacData_Type, BILATERALV)

FOUNDATION_EXPORT IOSObjectArray *LibOrgBouncycastleCryptoUtilDERMacData_Type_values(void);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDERMacData_Type *LibOrgBouncycastleCryptoUtilDERMacData_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoUtilDERMacData_Type)

@interface LibOrgBouncycastleCryptoUtilDERMacData_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoUtilDERMacData_Type:(LibOrgBouncycastleCryptoUtilDERMacData_Type *)type
                                                                withByteArray:(IOSByteArray *)idU
                                                                withByteArray:(IOSByteArray *)idV
                                                                withByteArray:(IOSByteArray *)ephemDataU
                                                                withByteArray:(IOSByteArray *)ephemDataV;

- (LibOrgBouncycastleCryptoUtilDERMacData *)build;

- (LibOrgBouncycastleCryptoUtilDERMacData_Builder *)withTextWithByteArray:(IOSByteArray *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoUtilDERMacData_Builder)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoUtilDERMacData_Builder_initWithLibOrgBouncycastleCryptoUtilDERMacData_Type_withByteArray_withByteArray_withByteArray_withByteArray_(LibOrgBouncycastleCryptoUtilDERMacData_Builder *self, LibOrgBouncycastleCryptoUtilDERMacData_Type *type, IOSByteArray *idU, IOSByteArray *idV, IOSByteArray *ephemDataU, IOSByteArray *ephemDataV);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDERMacData_Builder *new_LibOrgBouncycastleCryptoUtilDERMacData_Builder_initWithLibOrgBouncycastleCryptoUtilDERMacData_Type_withByteArray_withByteArray_withByteArray_withByteArray_(LibOrgBouncycastleCryptoUtilDERMacData_Type *type, IOSByteArray *idU, IOSByteArray *idV, IOSByteArray *ephemDataU, IOSByteArray *ephemDataV) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoUtilDERMacData_Builder *create_LibOrgBouncycastleCryptoUtilDERMacData_Builder_initWithLibOrgBouncycastleCryptoUtilDERMacData_Type_withByteArray_withByteArray_withByteArray_withByteArray_(LibOrgBouncycastleCryptoUtilDERMacData_Type *type, IOSByteArray *idU, IOSByteArray *idV, IOSByteArray *ephemDataU, IOSByteArray *ephemDataV);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoUtilDERMacData_Builder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DERMacData_H
