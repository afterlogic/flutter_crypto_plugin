//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/SHA512Digest.java
//

#ifndef SHA512Digest_H
#define SHA512Digest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "LongDigest.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleUtilMemoable;

@interface LibOrgBouncycastleCryptoDigestsSHA512Digest : LibOrgBouncycastleCryptoDigestsLongDigest

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)encodedState;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsSHA512Digest:(LibOrgBouncycastleCryptoDigestsSHA512Digest *)t;

- (id<LibOrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (IOSByteArray *)getEncodedState;

- (void)reset;

- (void)resetWithLibOrgBouncycastleUtilMemoable:(id<LibOrgBouncycastleUtilMemoable>)other;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsLongDigest:(LibOrgBouncycastleCryptoDigestsLongDigest *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoDigestsSHA512Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA512Digest_init(LibOrgBouncycastleCryptoDigestsSHA512Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *create_LibOrgBouncycastleCryptoDigestsSHA512Digest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithLibOrgBouncycastleCryptoDigestsSHA512Digest_(LibOrgBouncycastleCryptoDigestsSHA512Digest *self, LibOrgBouncycastleCryptoDigestsSHA512Digest *t);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *new_LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithLibOrgBouncycastleCryptoDigestsSHA512Digest_(LibOrgBouncycastleCryptoDigestsSHA512Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *create_LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithLibOrgBouncycastleCryptoDigestsSHA512Digest_(LibOrgBouncycastleCryptoDigestsSHA512Digest *t);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithByteArray_(LibOrgBouncycastleCryptoDigestsSHA512Digest *self, IOSByteArray *encodedState);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *new_LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithByteArray_(IOSByteArray *encodedState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA512Digest *create_LibOrgBouncycastleCryptoDigestsSHA512Digest_initWithByteArray_(IOSByteArray *encodedState);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsSHA512Digest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SHA512Digest_H
