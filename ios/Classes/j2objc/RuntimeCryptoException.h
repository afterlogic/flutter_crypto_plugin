//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/RuntimeCryptoException.java
//

#ifndef RuntimeCryptoException_H
#define RuntimeCryptoException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleCryptoRuntimeCryptoException : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoRuntimeCryptoException)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoRuntimeCryptoException_init(LibOrgBouncycastleCryptoRuntimeCryptoException *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoRuntimeCryptoException *new_LibOrgBouncycastleCryptoRuntimeCryptoException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoRuntimeCryptoException *create_LibOrgBouncycastleCryptoRuntimeCryptoException_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(LibOrgBouncycastleCryptoRuntimeCryptoException *self, NSString *message);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoRuntimeCryptoException *new_LibOrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoRuntimeCryptoException *create_LibOrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoRuntimeCryptoException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RuntimeCryptoException_H
