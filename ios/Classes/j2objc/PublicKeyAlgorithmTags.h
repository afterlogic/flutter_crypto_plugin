//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/PublicKeyAlgorithmTags.java
//

#ifndef PublicKeyAlgorithmTags_H
#define PublicKeyAlgorithmTags_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleBcpgPublicKeyAlgorithmTags < JavaObject >

@end

@interface LibOrgBouncycastleBcpgPublicKeyAlgorithmTags : NSObject
@property (readonly, class) jint RSA_GENERAL NS_SWIFT_NAME(RSA_GENERAL);
@property (readonly, class) jint RSA_ENCRYPT NS_SWIFT_NAME(RSA_ENCRYPT);
@property (readonly, class) jint RSA_SIGN NS_SWIFT_NAME(RSA_SIGN);
@property (readonly, class) jint ELGAMAL_ENCRYPT NS_SWIFT_NAME(ELGAMAL_ENCRYPT);
@property (readonly, class) jint DSA NS_SWIFT_NAME(DSA);
@property (readonly, class) jint EC NS_SWIFT_NAME(EC);
@property (readonly, class) jint ECDH NS_SWIFT_NAME(ECDH);
@property (readonly, class) jint ECDSA NS_SWIFT_NAME(ECDSA);
@property (readonly, class) jint ELGAMAL_GENERAL NS_SWIFT_NAME(ELGAMAL_GENERAL);
@property (readonly, class) jint DIFFIE_HELLMAN NS_SWIFT_NAME(DIFFIE_HELLMAN);
@property (readonly, class) jint EDDSA NS_SWIFT_NAME(EDDSA);
@property (readonly, class) jint EXPERIMENTAL_1 NS_SWIFT_NAME(EXPERIMENTAL_1);
@property (readonly, class) jint EXPERIMENTAL_2 NS_SWIFT_NAME(EXPERIMENTAL_2);
@property (readonly, class) jint EXPERIMENTAL_3 NS_SWIFT_NAME(EXPERIMENTAL_3);
@property (readonly, class) jint EXPERIMENTAL_4 NS_SWIFT_NAME(EXPERIMENTAL_4);
@property (readonly, class) jint EXPERIMENTAL_5 NS_SWIFT_NAME(EXPERIMENTAL_5);
@property (readonly, class) jint EXPERIMENTAL_6 NS_SWIFT_NAME(EXPERIMENTAL_6);
@property (readonly, class) jint EXPERIMENTAL_7 NS_SWIFT_NAME(EXPERIMENTAL_7);
@property (readonly, class) jint EXPERIMENTAL_8 NS_SWIFT_NAME(EXPERIMENTAL_8);
@property (readonly, class) jint EXPERIMENTAL_9 NS_SWIFT_NAME(EXPERIMENTAL_9);
@property (readonly, class) jint EXPERIMENTAL_10 NS_SWIFT_NAME(EXPERIMENTAL_10);
@property (readonly, class) jint EXPERIMENTAL_11 NS_SWIFT_NAME(EXPERIMENTAL_11);

+ (jint)RSA_GENERAL;

+ (jint)RSA_ENCRYPT;

+ (jint)RSA_SIGN;

+ (jint)ELGAMAL_ENCRYPT;

+ (jint)DSA;

+ (jint)EC;

+ (jint)ECDH;

+ (jint)ECDSA;

+ (jint)ELGAMAL_GENERAL;

+ (jint)DIFFIE_HELLMAN;

+ (jint)EDDSA;

+ (jint)EXPERIMENTAL_1;

+ (jint)EXPERIMENTAL_2;

+ (jint)EXPERIMENTAL_3;

+ (jint)EXPERIMENTAL_4;

+ (jint)EXPERIMENTAL_5;

+ (jint)EXPERIMENTAL_6;

+ (jint)EXPERIMENTAL_7;

+ (jint)EXPERIMENTAL_8;

+ (jint)EXPERIMENTAL_9;

+ (jint)EXPERIMENTAL_10;

+ (jint)EXPERIMENTAL_11;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_RSA_GENERAL(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_RSA_GENERAL 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, RSA_GENERAL, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_RSA_ENCRYPT(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_RSA_ENCRYPT 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, RSA_ENCRYPT, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_RSA_SIGN(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_RSA_SIGN 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, RSA_SIGN, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_ELGAMAL_ENCRYPT(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_ELGAMAL_ENCRYPT 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, ELGAMAL_ENCRYPT, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_DSA(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_DSA 17
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, DSA, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EC(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EC 18
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EC, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_ECDH(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_ECDH 18
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, ECDH, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_ECDSA(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_ECDSA 19
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, ECDSA, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_ELGAMAL_GENERAL(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_ELGAMAL_GENERAL 20
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, ELGAMAL_GENERAL, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_DIFFIE_HELLMAN(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_DIFFIE_HELLMAN 21
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, DIFFIE_HELLMAN, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EDDSA(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EDDSA 22
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EDDSA, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_1(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_1 100
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_1, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_2(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_2 101
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_2, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_3(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_3 102
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_3, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_4(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_4 103
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_4, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_5(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_5 104
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_5, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_6(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_6 105
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_6, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_7(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_7 106
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_7, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_8(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_8 107
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_8, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_9(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_9 108
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_9, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_10(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_10 109
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_10, jint)

inline jint LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_get_EXPERIMENTAL_11(void);
#define LibOrgBouncycastleBcpgPublicKeyAlgorithmTags_EXPERIMENTAL_11 110
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags, EXPERIMENTAL_11, jint)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgPublicKeyAlgorithmTags)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PublicKeyAlgorithmTags_H
