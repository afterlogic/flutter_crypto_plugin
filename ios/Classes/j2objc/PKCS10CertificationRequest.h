//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/PKCS10CertificationRequest.java
//

#ifndef PKCS10CertificationRequest_H
#define PKCS10CertificationRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CertificationRequest.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaxSecurityAuthX500X500Principal;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1DERBitString;
@class LibOrgBouncycastleAsn1PkcsCertificationRequestInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleAsn1X509X509Name;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;

@interface LibOrgBouncycastleJcePKCS10CertificationRequest : LibOrgBouncycastleAsn1PkcsCertificationRequest

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)sequence;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)bytes;

- (instancetype __nonnull)initWithNSString:(NSString *)signatureAlgorithm
    withJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)subject
                 withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
         withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)signingKey;

- (instancetype __nonnull)initWithNSString:(NSString *)signatureAlgorithm
    withJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)subject
                 withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
         withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)signingKey
                              withNSString:(NSString *)provider;

- (instancetype __nonnull)initWithNSString:(NSString *)signatureAlgorithm
    withLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)subject
                 withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
         withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)signingKey;

- (instancetype __nonnull)initWithNSString:(NSString *)signatureAlgorithm
    withLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)subject
                 withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
         withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)attributes
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)signingKey
                              withNSString:(NSString *)provider;

- (IOSByteArray *)getEncoded;

- (id<JavaSecurityPublicKey>)getPublicKey;

- (id<JavaSecurityPublicKey>)getPublicKeyWithNSString:(NSString *)provider;

- (jboolean)verify;

- (jboolean)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)pubKey
                               withNSString:(NSString *)provider;

- (jboolean)verifyWithNSString:(NSString *)provider;

#pragma mark Package-Private

+ (NSString *)getSignatureNameWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1PkcsCertificationRequestInfo:(LibOrgBouncycastleAsn1PkcsCertificationRequestInfo *)arg0
                                   withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)arg1
                                              withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcePKCS10CertificationRequest)

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithByteArray_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, IOSByteArray *bytes);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, LibOrgBouncycastleAsn1ASN1Sequence *sequence);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *sequence) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *sequence);

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey);

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_(NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey);

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withJavaxSecurityAuthX500X500Principal_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(NSString *signatureAlgorithm, JavaxSecurityAuthX500X500Principal *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider);

FOUNDATION_EXPORT void LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(LibOrgBouncycastleJcePKCS10CertificationRequest *self, NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider);

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *new_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcePKCS10CertificationRequest *create_LibOrgBouncycastleJcePKCS10CertificationRequest_initWithNSString_withLibOrgBouncycastleAsn1X509X509Name_withJavaSecurityPublicKey_withLibOrgBouncycastleAsn1ASN1Set_withJavaSecurityPrivateKey_withNSString_(NSString *signatureAlgorithm, LibOrgBouncycastleAsn1X509X509Name *subject, id<JavaSecurityPublicKey> key, LibOrgBouncycastleAsn1ASN1Set *attributes, id<JavaSecurityPrivateKey> signingKey, NSString *provider);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleJcePKCS10CertificationRequest_getSignatureNameWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcePKCS10CertificationRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKCS10CertificationRequest_H
