//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/X448KeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "KeyGenerationParameters.h"
#include "X448KeyGenerationParameters.h"
#include "java/security/SecureRandom.h"

@implementation LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters_initWithJavaSecuritySecureRandom_(self, random);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters = { "X448KeyGenerationParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters;
}

@end

void LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters_initWithJavaSecuritySecureRandom_(LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters *self, JavaSecuritySecureRandom *random) {
  LibOrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self, random, 448);
}

LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters *new_LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters, initWithJavaSecuritySecureRandom_, random)
}

LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters *create_LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters, initWithJavaSecuritySecureRandom_, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsX448KeyGenerationParameters)
