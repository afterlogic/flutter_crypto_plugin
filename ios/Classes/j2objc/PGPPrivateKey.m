//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPPrivateKey.java
//

#include "BCPGKey.h"
#include "J2ObjC_source.h"
#include "PGPPrivateKey.h"
#include "PublicKeyPacket.h"

@interface LibOrgBouncycastleOpenpgpPGPPrivateKey () {
 @public
  jlong keyID_;
  LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket_;
  id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPPrivateKey, publicKeyPacket_, LibOrgBouncycastleBcpgPublicKeyPacket *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPPrivateKey, privateKeyDataPacket_, id<LibOrgBouncycastleBcpgBCPGKey>)

@implementation LibOrgBouncycastleOpenpgpPGPPrivateKey

- (instancetype)initWithLong:(jlong)keyID
withLibOrgBouncycastleBcpgPublicKeyPacket:(LibOrgBouncycastleBcpgPublicKeyPacket *)publicKeyPacket
withLibOrgBouncycastleBcpgBCPGKey:(id<LibOrgBouncycastleBcpgBCPGKey>)privateKeyDataPacket {
  LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(self, keyID, publicKeyPacket, privateKeyDataPacket);
  return self;
}

- (jlong)getKeyID {
  return keyID_;
}

- (LibOrgBouncycastleBcpgPublicKeyPacket *)getPublicKeyPacket {
  return publicKeyPacket_;
}

- (id<LibOrgBouncycastleBcpgBCPGKey>)getPrivateKeyDataPacket {
  return privateKeyDataPacket_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgPublicKeyPacket;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgBCPGKey;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withLibOrgBouncycastleBcpgPublicKeyPacket:withLibOrgBouncycastleBcpgBCPGKey:);
  methods[1].selector = @selector(getKeyID);
  methods[2].selector = @selector(getPublicKeyPacket);
  methods[3].selector = @selector(getPrivateKeyDataPacket);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "keyID_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKeyPacket_", "LLibOrgBouncycastleBcpgPublicKeyPacket;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateKeyDataPacket_", "LLibOrgBouncycastleBcpgBCPGKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLLibOrgBouncycastleBcpgPublicKeyPacket;LLibOrgBouncycastleBcpgBCPGKey;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpPGPPrivateKey = { "PGPPrivateKey", "lib.org.bouncycastle.openpgp", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpPGPPrivateKey;
}

@end

void LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(LibOrgBouncycastleOpenpgpPGPPrivateKey *self, jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket) {
  NSObject_init(self);
  self->keyID_ = keyID;
  self->publicKeyPacket_ = publicKeyPacket;
  self->privateKeyDataPacket_ = privateKeyDataPacket;
}

LibOrgBouncycastleOpenpgpPGPPrivateKey *new_LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpPGPPrivateKey, initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_, keyID, publicKeyPacket, privateKeyDataPacket)
}

LibOrgBouncycastleOpenpgpPGPPrivateKey *create_LibOrgBouncycastleOpenpgpPGPPrivateKey_initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_(jlong keyID, LibOrgBouncycastleBcpgPublicKeyPacket *publicKeyPacket, id<LibOrgBouncycastleBcpgBCPGKey> privateKeyDataPacket) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpPGPPrivateKey, initWithLong_withLibOrgBouncycastleBcpgPublicKeyPacket_withLibOrgBouncycastleBcpgBCPGKey_, keyID, publicKeyPacket, privateKeyDataPacket)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpPGPPrivateKey)
