//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIFailureInfo.java
//

#include "ASN1BitString.h"
#include "DERBitString.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKIFailureInfo.h"
#include "java/lang/Integer.h"

@implementation LibOrgBouncycastleAsn1CmpPKIFailureInfo

+ (jint)badAlg {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badAlg;
}

+ (jint)badMessageCheck {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badMessageCheck;
}

+ (jint)badRequest {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badRequest;
}

+ (jint)badTime {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badTime;
}

+ (jint)badCertId {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badCertId;
}

+ (jint)badDataFormat {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badDataFormat;
}

+ (jint)wrongAuthority {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_wrongAuthority;
}

+ (jint)incorrectData {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_incorrectData;
}

+ (jint)missingTimeStamp {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_missingTimeStamp;
}

+ (jint)badPOP {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badPOP;
}

+ (jint)certRevoked {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_certRevoked;
}

+ (jint)certConfirmed {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_certConfirmed;
}

+ (jint)wrongIntegrity {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_wrongIntegrity;
}

+ (jint)badRecipientNonce {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badRecipientNonce;
}

+ (jint)timeNotAvailable {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_timeNotAvailable;
}

+ (jint)unacceptedPolicy {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_unacceptedPolicy;
}

+ (jint)unacceptedExtension {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_unacceptedExtension;
}

+ (jint)addInfoNotAvailable {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_addInfoNotAvailable;
}

+ (jint)badSenderNonce {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badSenderNonce;
}

+ (jint)badCertTemplate {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_badCertTemplate;
}

+ (jint)signerNotTrusted {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_signerNotTrusted;
}

+ (jint)transactionIdInUse {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_transactionIdInUse;
}

+ (jint)unsupportedVersion {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_unsupportedVersion;
}

+ (jint)notAuthorized {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_notAuthorized;
}

+ (jint)systemUnavail {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_systemUnavail;
}

+ (jint)systemFailure {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_systemFailure;
}

+ (jint)duplicateCertReq {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_duplicateCertReq;
}

+ (jint)BAD_ALG {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_ALG;
}

+ (jint)BAD_MESSAGE_CHECK {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_MESSAGE_CHECK;
}

+ (jint)BAD_REQUEST {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_REQUEST;
}

+ (jint)BAD_TIME {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_TIME;
}

+ (jint)BAD_CERT_ID {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_CERT_ID;
}

+ (jint)BAD_DATA_FORMAT {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_DATA_FORMAT;
}

+ (jint)WRONG_AUTHORITY {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_WRONG_AUTHORITY;
}

+ (jint)INCORRECT_DATA {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_INCORRECT_DATA;
}

+ (jint)MISSING_TIME_STAMP {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_MISSING_TIME_STAMP;
}

+ (jint)BAD_POP {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_POP;
}

+ (jint)TIME_NOT_AVAILABLE {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_TIME_NOT_AVAILABLE;
}

+ (jint)UNACCEPTED_POLICY {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_UNACCEPTED_POLICY;
}

+ (jint)UNACCEPTED_EXTENSION {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_UNACCEPTED_EXTENSION;
}

+ (jint)ADD_INFO_NOT_AVAILABLE {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_ADD_INFO_NOT_AVAILABLE;
}

+ (jint)SYSTEM_FAILURE {
  return LibOrgBouncycastleAsn1CmpPKIFailureInfo_SYSTEM_FAILURE;
}

- (instancetype)initWithInt:(jint)info {
  LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithInt_(self, info);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)info {
  LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithLibOrgBouncycastleAsn1DERBitString_(self, info);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$", @"PKIFailureInfo: 0x", JavaLangInteger_toHexStringWithInt_([self intValue]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1DERBitString:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "badAlg", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badAlg, 0x19, -1, -1, -1, -1 },
    { "badMessageCheck", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badMessageCheck, 0x19, -1, -1, -1, -1 },
    { "badRequest", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badRequest, 0x19, -1, -1, -1, -1 },
    { "badTime", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badTime, 0x19, -1, -1, -1, -1 },
    { "badCertId", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badCertId, 0x19, -1, -1, -1, -1 },
    { "badDataFormat", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badDataFormat, 0x19, -1, -1, -1, -1 },
    { "wrongAuthority", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_wrongAuthority, 0x19, -1, -1, -1, -1 },
    { "incorrectData", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_incorrectData, 0x19, -1, -1, -1, -1 },
    { "missingTimeStamp", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_missingTimeStamp, 0x19, -1, -1, -1, -1 },
    { "badPOP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badPOP, 0x19, -1, -1, -1, -1 },
    { "certRevoked", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_certRevoked, 0x19, -1, -1, -1, -1 },
    { "certConfirmed", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_certConfirmed, 0x19, -1, -1, -1, -1 },
    { "wrongIntegrity", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_wrongIntegrity, 0x19, -1, -1, -1, -1 },
    { "badRecipientNonce", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badRecipientNonce, 0x19, -1, -1, -1, -1 },
    { "timeNotAvailable", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_timeNotAvailable, 0x19, -1, -1, -1, -1 },
    { "unacceptedPolicy", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_unacceptedPolicy, 0x19, -1, -1, -1, -1 },
    { "unacceptedExtension", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_unacceptedExtension, 0x19, -1, -1, -1, -1 },
    { "addInfoNotAvailable", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_addInfoNotAvailable, 0x19, -1, -1, -1, -1 },
    { "badSenderNonce", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badSenderNonce, 0x19, -1, -1, -1, -1 },
    { "badCertTemplate", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_badCertTemplate, 0x19, -1, -1, -1, -1 },
    { "signerNotTrusted", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_signerNotTrusted, 0x19, -1, -1, -1, -1 },
    { "transactionIdInUse", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_transactionIdInUse, 0x19, -1, -1, -1, -1 },
    { "unsupportedVersion", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_unsupportedVersion, 0x19, -1, -1, -1, -1 },
    { "notAuthorized", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_notAuthorized, 0x19, -1, -1, -1, -1 },
    { "systemUnavail", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_systemUnavail, 0x19, -1, -1, -1, -1 },
    { "systemFailure", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_systemFailure, 0x19, -1, -1, -1, -1 },
    { "duplicateCertReq", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_duplicateCertReq, 0x19, -1, -1, -1, -1 },
    { "BAD_ALG", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_ALG, 0x19, -1, -1, -1, -1 },
    { "BAD_MESSAGE_CHECK", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_MESSAGE_CHECK, 0x19, -1, -1, -1, -1 },
    { "BAD_REQUEST", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_REQUEST, 0x19, -1, -1, -1, -1 },
    { "BAD_TIME", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_TIME, 0x19, -1, -1, -1, -1 },
    { "BAD_CERT_ID", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_CERT_ID, 0x19, -1, -1, -1, -1 },
    { "BAD_DATA_FORMAT", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_DATA_FORMAT, 0x19, -1, -1, -1, -1 },
    { "WRONG_AUTHORITY", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_WRONG_AUTHORITY, 0x19, -1, -1, -1, -1 },
    { "INCORRECT_DATA", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_INCORRECT_DATA, 0x19, -1, -1, -1, -1 },
    { "MISSING_TIME_STAMP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_MISSING_TIME_STAMP, 0x19, -1, -1, -1, -1 },
    { "BAD_POP", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_BAD_POP, 0x19, -1, -1, -1, -1 },
    { "TIME_NOT_AVAILABLE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_TIME_NOT_AVAILABLE, 0x19, -1, -1, -1, -1 },
    { "UNACCEPTED_POLICY", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_UNACCEPTED_POLICY, 0x19, -1, -1, -1, -1 },
    { "UNACCEPTED_EXTENSION", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_UNACCEPTED_EXTENSION, 0x19, -1, -1, -1, -1 },
    { "ADD_INFO_NOT_AVAILABLE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_ADD_INFO_NOT_AVAILABLE, 0x19, -1, -1, -1, -1 },
    { "SYSTEM_FAILURE", "I", .constantValue.asInt = LibOrgBouncycastleAsn1CmpPKIFailureInfo_SYSTEM_FAILURE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleAsn1DERBitString;", "toString" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpPKIFailureInfo = { "PKIFailureInfo", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 3, 42, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpPKIFailureInfo;
}

@end

void LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithInt_(LibOrgBouncycastleAsn1CmpPKIFailureInfo *self, jint info) {
  LibOrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(self, LibOrgBouncycastleAsn1ASN1BitString_getBytesWithInt_(info), LibOrgBouncycastleAsn1ASN1BitString_getPadBitsWithInt_(info));
}

LibOrgBouncycastleAsn1CmpPKIFailureInfo *new_LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithInt_(jint info) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFailureInfo, initWithInt_, info)
}

LibOrgBouncycastleAsn1CmpPKIFailureInfo *create_LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithInt_(jint info) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFailureInfo, initWithInt_, info)
}

void LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1CmpPKIFailureInfo *self, LibOrgBouncycastleAsn1DERBitString *info) {
  LibOrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(self, [((LibOrgBouncycastleAsn1DERBitString *) nil_chk(info)) getBytes], [info getPadBits]);
}

LibOrgBouncycastleAsn1CmpPKIFailureInfo *new_LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *info) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpPKIFailureInfo, initWithLibOrgBouncycastleAsn1DERBitString_, info)
}

LibOrgBouncycastleAsn1CmpPKIFailureInfo *create_LibOrgBouncycastleAsn1CmpPKIFailureInfo_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *info) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpPKIFailureInfo, initWithLibOrgBouncycastleAsn1DERBitString_, info)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpPKIFailureInfo)
