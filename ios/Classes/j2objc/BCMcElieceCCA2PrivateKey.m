//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcElieceCCA2PrivateKey.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "AsymmetricKeyParameter.h"
#include "BCMcElieceCCA2PrivateKey.h"
#include "GF2Matrix.h"
#include "GF2mField.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "McElieceCCA2PrivateKey.h"
#include "McElieceCCA2PrivateKeyParameters.h"
#include "PQCObjectIdentifiers.h"
#include "Permutation.h"
#include "PolynomialGF2mSmallM.h"
#include "PqcJcajceMcelieceUtils.h"
#include "PrivateKeyInfo.h"
#include "java/io/IOException.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey () {
 @public
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey, params_, LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *)

inline jlong LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_get_serialVersionUID(void);
#define LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey, serialVersionUID, jlong)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey

- (instancetype)initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *)params {
  LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(self, params);
  return self;
}

- (NSString *)getAlgorithm {
  return @"McEliece-CCA2";
}

- (jint)getN {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getN];
}

- (jint)getK {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getK];
}

- (jint)getT {
  return [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getGoppaPoly])) getDegree];
}

- (LibOrgBouncycastlePqcMathLinearalgebraGF2mField *)getField {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getField];
}

- (LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)getGoppaPoly {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getGoppaPoly];
}

- (LibOrgBouncycastlePqcMathLinearalgebraPermutation *)getP {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getP];
}

- (LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getH {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getH];
}

- (IOSObjectArray *)getQInv {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getQInv];
}

- (jboolean)isEqual:(id)other {
  if (other == nil || !([other isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey class]])) {
    return false;
  }
  LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *otherKey = (LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *) cast_chk(other, [LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey class]);
  return ([self getN] == [otherKey getN]) && ([self getK] == [otherKey getK]) && [((LibOrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk([self getField])) isEqual:[otherKey getField]] && [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk([self getGoppaPoly])) isEqual:[otherKey getGoppaPoly]] && [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([self getP])) isEqual:[otherKey getP]] && [((LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([self getH])) isEqual:[otherKey getH]];
}

- (NSUInteger)hash {
  jint code = [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getK];
  code = code * 37 + [((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getN];
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getField])) hash]);
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getGoppaPoly])) hash]);
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getP])) hash]);
  return code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getH])) hash]);
}

- (IOSByteArray *)getEncoded {
  LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *pki;
  @try {
    LibOrgBouncycastlePqcAsn1McElieceCCA2PrivateKey *privateKey = new_LibOrgBouncycastlePqcAsn1McElieceCCA2PrivateKey_initWithInt_withInt_withLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withLibOrgBouncycastlePqcMathLinearalgebraPermutation_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_([self getN], [self getK], [self getField], [self getGoppaPoly], [self getP], LibOrgBouncycastlePqcJcajceProviderMceliecePqcJcajceMcelieceUtils_getDigAlgIdWithNSString_([((LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(params_)) getDigest]));
    LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2));
    pki = new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, privateKey);
    return [pki getEncoded];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getKeyParams {
  return params_;
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraGF2mField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraPermutation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraGF2Matrix;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters:);
  methods[1].selector = @selector(getAlgorithm);
  methods[2].selector = @selector(getN);
  methods[3].selector = @selector(getK);
  methods[4].selector = @selector(getT);
  methods[5].selector = @selector(getField);
  methods[6].selector = @selector(getGoppaPoly);
  methods[7].selector = @selector(getP);
  methods[8].selector = @selector(getH);
  methods[9].selector = @selector(getQInv);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getFormat);
  methods[14].selector = @selector(getKeyParams);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "params_", "LLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey = { "BCMcElieceCCA2PrivateKey", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, fields, 7, 0x1, 15, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *self, LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params) {
  NSObject_init(self);
  self->params_ = params;
}

LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *new_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey, initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_, params)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *create_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey, initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey)
