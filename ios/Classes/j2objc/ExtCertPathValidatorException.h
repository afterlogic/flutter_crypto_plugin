//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/exception/ExtCertPathValidatorException.java
//

#ifndef ExtCertPathValidatorException_H
#define ExtCertPathValidatorException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ExtException.h"
#include "J2ObjC_header.h"
#include "java/security/cert/CertPathValidatorException.h"

@class JavaLangThrowable;
@class JavaSecurityCertCertPath;

@interface LibOrgBouncycastleJceExceptionExtCertPathValidatorException : JavaSecurityCertCertPathValidatorException < LibOrgBouncycastleJceExceptionExtException >

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)cause
              withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)certPath
                                   withInt:(jint)index;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
              withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)arg2
                                   withInt:(jint)arg3
withJavaSecurityCertCertPathValidatorException_Reason:(id<JavaSecurityCertCertPathValidatorException_Reason>)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceExceptionExtCertPathValidatorException)

FOUNDATION_EXPORT void LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleJceExceptionExtCertPathValidatorException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT LibOrgBouncycastleJceExceptionExtCertPathValidatorException *new_LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceExceptionExtCertPathValidatorException *create_LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT void LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(LibOrgBouncycastleJceExceptionExtCertPathValidatorException *self, NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index);

FOUNDATION_EXPORT LibOrgBouncycastleJceExceptionExtCertPathValidatorException *new_LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceExceptionExtCertPathValidatorException *create_LibOrgBouncycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceExceptionExtCertPathValidatorException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExtCertPathValidatorException_H
