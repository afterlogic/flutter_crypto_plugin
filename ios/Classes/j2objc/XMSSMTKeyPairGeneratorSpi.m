//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/xmss/XMSSMTKeyPairGeneratorSpi.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricCipherKeyPair.h"
#include "AsymmetricKeyParameter.h"
#include "BCXMSSMTPrivateKey.h"
#include "BCXMSSMTPublicKey.h"
#include "CryptoServicesRegistrar.h"
#include "J2ObjC_source.h"
#include "NISTObjectIdentifiers.h"
#include "SHA256Digest.h"
#include "SHA512Digest.h"
#include "SHAKEDigest.h"
#include "XMSSMTKeyGenerationParameters.h"
#include "XMSSMTKeyPairGenerator.h"
#include "XMSSMTKeyPairGeneratorSpi.h"
#include "XMSSMTParameterSpec.h"
#include "XMSSMTParameters.h"
#include "XMSSMTPrivateKeyParameters.h"
#include "XMSSMTPublicKeyParameters.h"
#include "XMSSParameterSpec.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/KeyPair.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi () {
 @public
  LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters *param_;
  LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *engine_;
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest_;
  JavaSecuritySecureRandom *random_;
  jboolean initialised_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, param_, LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, engine_, LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, treeDigest_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, random_, JavaSecuritySecureRandom *)

@implementation LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"use AlgorithmParameterSpec");
}

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (!([params isKindOfClass:[LibOrgBouncycastlePqcJcajceSpecXMSSMTParameterSpec class]])) {
    @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"parameter object not a XMSSMTParameterSpec");
  }
  LibOrgBouncycastlePqcJcajceSpecXMSSMTParameterSpec *xmssParams = (LibOrgBouncycastlePqcJcajceSpecXMSSMTParameterSpec *) cast_chk(params, [LibOrgBouncycastlePqcJcajceSpecXMSSMTParameterSpec class]);
  if ([((NSString *) nil_chk([((LibOrgBouncycastlePqcJcajceSpecXMSSMTParameterSpec *) nil_chk(xmssParams)) getTreeDigest])) isEqual:LibOrgBouncycastlePqcJcajceSpecXMSSParameterSpec_SHA256]) {
    treeDigest_ = JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256);
    param_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_([xmssParams getHeight], [xmssParams getLayers], new_LibOrgBouncycastleCryptoDigestsSHA256Digest_init()), random);
  }
  else if ([((NSString *) nil_chk([xmssParams getTreeDigest])) isEqual:LibOrgBouncycastlePqcJcajceSpecXMSSParameterSpec_SHA512]) {
    treeDigest_ = JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512);
    param_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_([xmssParams getHeight], [xmssParams getLayers], new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init()), random);
  }
  else if ([((NSString *) nil_chk([xmssParams getTreeDigest])) isEqual:LibOrgBouncycastlePqcJcajceSpecXMSSParameterSpec_SHAKE128]) {
    treeDigest_ = JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128);
    param_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_([xmssParams getHeight], [xmssParams getLayers], new_LibOrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(128)), random);
  }
  else if ([((NSString *) nil_chk([xmssParams getTreeDigest])) isEqual:LibOrgBouncycastlePqcJcajceSpecXMSSParameterSpec_SHAKE256]) {
    treeDigest_ = JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256);
    param_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_([xmssParams getHeight], [xmssParams getLayers], new_LibOrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(256)), random);
  }
  [((LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *) nil_chk(engine_)) init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:param_];
  initialised_ = true;
}

- (JavaSecurityKeyPair *)generateKeyPair {
  if (!initialised_) {
    param_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(new_LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withLibOrgBouncycastleCryptoDigest_(10, 20, new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init()), random_);
    [((LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *) nil_chk(engine_)) init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:param_];
    initialised_ = true;
  }
  LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *pair = [((LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *) nil_chk(engine_)) generateKeyPair];
  LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *pub = (LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *) cast_chk([((LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(pair)) getPublic], [LibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters class]);
  LibOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *priv = (LibOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) cast_chk([pair getPrivate], [LibOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters class]);
  return new_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(new_LibOrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPublicKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_(treeDigest_, pub), new_LibOrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(treeDigest_, priv));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__WithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(initialize__WithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LLibOrgBouncycastlePqcCryptoXmssXMSSMTKeyGenerationParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "engine_", "LLibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "treeDigest_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "initialised_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "ILJavaSecuritySecureRandom;", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi = { "XMSSMTKeyPairGeneratorSpi", "lib.org.bouncycastle.pqc.jcajce.provider.xmss", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi;
}

@end

void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi *self) {
  JavaSecurityKeyPairGenerator_initWithNSString_(self, @"XMSSMT");
  self->engine_ = new_LibOrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_init();
  self->random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  self->initialised_ = false;
}

LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, init)
}

LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyPairGeneratorSpi)
