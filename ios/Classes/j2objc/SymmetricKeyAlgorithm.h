//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/algorithm/SymmetricKeyAlgorithm.java
//

#ifndef SymmetricKeyAlgorithm_H
#define SymmetricKeyAlgorithm_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum) {
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_NULL = 0,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_IDEA = 1,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_TRIPLE_DES = 2,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_CAST5 = 3,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_BLOWFISH = 4,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_SAFER = 5,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_DES = 6,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_AES_128 = 7,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_AES_192 = 8,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_AES_256 = 9,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_TWOFISH = 10,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_CAMELLIA_128 = 11,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_CAMELLIA_192 = 12,
  LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum_CAMELLIA_256 = 13,
};

@interface LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm : JavaLangEnum

@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *NULL_ NS_SWIFT_NAME(NULL_);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *IDEA NS_SWIFT_NAME(IDEA);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *TRIPLE_DES NS_SWIFT_NAME(TRIPLE_DES);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *CAST5 NS_SWIFT_NAME(CAST5);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *BLOWFISH NS_SWIFT_NAME(BLOWFISH);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *SAFER NS_SWIFT_NAME(SAFER);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *DES NS_SWIFT_NAME(DES);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *AES_128 NS_SWIFT_NAME(AES_128);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *AES_192 NS_SWIFT_NAME(AES_192);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *AES_256 NS_SWIFT_NAME(AES_256);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *TWOFISH NS_SWIFT_NAME(TWOFISH);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *CAMELLIA_128 NS_SWIFT_NAME(CAMELLIA_128);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *CAMELLIA_192 NS_SWIFT_NAME(CAMELLIA_192);
@property (readonly, class, nonnull) LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *CAMELLIA_256 NS_SWIFT_NAME(CAMELLIA_256);
+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)NULL_;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)IDEA;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)TRIPLE_DES;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)CAST5;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)BLOWFISH;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)SAFER;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)DES;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)AES_128;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)AES_192;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)AES_256;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)TWOFISH;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)CAMELLIA_128;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)CAMELLIA_192;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm * __nonnull)CAMELLIA_256;

#pragma mark Public

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)fromIdWithInt:(jint)id_;

- (jint)getAlgorithmId;

+ (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_values_[];

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_NULL(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, NULL)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_IDEA(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, IDEA)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_TRIPLE_DES(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, TRIPLE_DES)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_CAST5(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, CAST5)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_BLOWFISH(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, BLOWFISH)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_SAFER(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, SAFER)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_DES(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, DES)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_AES_128(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, AES_128)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_AES_192(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, AES_192)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_AES_256(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, AES_256)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_TWOFISH(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, TWOFISH)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_CAMELLIA_128(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, CAMELLIA_128)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_CAMELLIA_192(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, CAMELLIA_192)

inline LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_get_CAMELLIA_256(void);
J2OBJC_ENUM_CONSTANT(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm, CAMELLIA_256)

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_fromIdWithInt_(jint id_);

FOUNDATION_EXPORT IOSObjectArray *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_values(void);

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm *LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SymmetricKeyAlgorithm_H
