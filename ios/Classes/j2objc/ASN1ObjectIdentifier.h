//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1ObjectIdentifier.java
//

#ifndef ASN1ObjectIdentifier_H
#define ASN1ObjectIdentifier_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Primitive.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1ASN1ObjectIdentifier : LibOrgBouncycastleAsn1ASN1Primitive

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)identifier;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)branchWithNSString:(NSString *)branchID;

- (NSString *)getId;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                          withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithId:(id)obj;

- (NSUInteger)hash;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)intern;

- (jboolean)onWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)stem;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                withNSString:(NSString *)branchID;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)bytes;

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)fromOctetStringWithByteArray:(IOSByteArray *)enc;

- (jboolean)isConstructed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1ASN1ObjectIdentifier)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *self, IOSByteArray *bytes);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *create_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *self, NSString *identifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *create_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *create_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_(IOSByteArray *enc);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1ObjectIdentifier)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1ObjectIdentifier_H
