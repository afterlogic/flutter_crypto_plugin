//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/ConnectionEnd.java
//

#ifndef ConnectionEnd_H
#define ConnectionEnd_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleCryptoTlsConnectionEnd : NSObject
@property (readonly, class) jint server NS_SWIFT_NAME(server);
@property (readonly, class) jint client NS_SWIFT_NAME(client);

+ (jint)server;

+ (jint)client;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsConnectionEnd)

inline jint LibOrgBouncycastleCryptoTlsConnectionEnd_get_server(void);
#define LibOrgBouncycastleCryptoTlsConnectionEnd_server 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsConnectionEnd, server, jint)

inline jint LibOrgBouncycastleCryptoTlsConnectionEnd_get_client(void);
#define LibOrgBouncycastleCryptoTlsConnectionEnd_client 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsConnectionEnd, client, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsConnectionEnd_init(LibOrgBouncycastleCryptoTlsConnectionEnd *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsConnectionEnd *new_LibOrgBouncycastleCryptoTlsConnectionEnd_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsConnectionEnd *create_LibOrgBouncycastleCryptoTlsConnectionEnd_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsConnectionEnd)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ConnectionEnd_H
