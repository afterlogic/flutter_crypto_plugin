//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/RC5Parameters.java
//

#ifndef RC5Parameters_H
#define RC5Parameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsRC5Parameters : NSObject < LibOrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key
                                    withInt:(jint)rounds;

- (IOSByteArray *)getKey;

- (jint)getRounds;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsRC5Parameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsRC5Parameters_initWithByteArray_withInt_(LibOrgBouncycastleCryptoParamsRC5Parameters *self, IOSByteArray *key, jint rounds);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC5Parameters *new_LibOrgBouncycastleCryptoParamsRC5Parameters_initWithByteArray_withInt_(IOSByteArray *key, jint rounds) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC5Parameters *create_LibOrgBouncycastleCryptoParamsRC5Parameters_initWithByteArray_withInt_(IOSByteArray *key, jint rounds);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsRC5Parameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RC5Parameters_H
