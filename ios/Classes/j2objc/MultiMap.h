//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/util/MultiMap.java
//

#ifndef MultiMap_H
#define MultiMap_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface LibComAfterlogicPgpUtilMultiMap : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)content;

- (instancetype __nonnull)initWithLibComAfterlogicPgpUtilMultiMap:(LibComAfterlogicPgpUtilMultiMap *)other;

- (void)clear;

- (jboolean)containsKeyWithId:(id)o;

- (jboolean)containsValueWithId:(id)o;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (id<JavaUtilSet>)getWithId:(id)o;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilSet>)keySet;

- (void)putWithId:(id)k
  withJavaUtilSet:(id<JavaUtilSet>)vs;

- (void)putWithId:(id)k
           withId:(id)v;

- (void)putAllWithLibComAfterlogicPgpUtilMultiMap:(LibComAfterlogicPgpUtilMultiMap *)other;

- (void)removeWithId:(id)o
              withId:(id)v;

- (void)removeAllWithId:(id)o;

- (jint)size;

- (id<JavaUtilCollection>)values;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpUtilMultiMap)

FOUNDATION_EXPORT void LibComAfterlogicPgpUtilMultiMap_init(LibComAfterlogicPgpUtilMultiMap *self);

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *new_LibComAfterlogicPgpUtilMultiMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *create_LibComAfterlogicPgpUtilMultiMap_init(void);

FOUNDATION_EXPORT void LibComAfterlogicPgpUtilMultiMap_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *self, LibComAfterlogicPgpUtilMultiMap *other);

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *new_LibComAfterlogicPgpUtilMultiMap_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *create_LibComAfterlogicPgpUtilMultiMap_initWithLibComAfterlogicPgpUtilMultiMap_(LibComAfterlogicPgpUtilMultiMap *other);

FOUNDATION_EXPORT void LibComAfterlogicPgpUtilMultiMap_initWithJavaUtilMap_(LibComAfterlogicPgpUtilMultiMap *self, id<JavaUtilMap> content);

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *new_LibComAfterlogicPgpUtilMultiMap_initWithJavaUtilMap_(id<JavaUtilMap> content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpUtilMultiMap *create_LibComAfterlogicPgpUtilMultiMap_initWithJavaUtilMap_(id<JavaUtilMap> content);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpUtilMultiMap)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MultiMap_H
