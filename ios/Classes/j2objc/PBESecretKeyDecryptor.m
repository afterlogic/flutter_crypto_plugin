//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/PBESecretKeyDecryptor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OpenPgpOperatorPGPUtil.h"
#include "PBESecretKeyDecryptor.h"
#include "PGPDigestCalculator.h"
#include "PGPDigestCalculatorProvider.h"
#include "S2K.h"

@interface LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor () {
 @public
  IOSCharArray *passPhrase_;
  id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor, passPhrase_, IOSCharArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor, calculatorProvider_, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)

@implementation LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor

- (instancetype)initWithCharArray:(IOSCharArray *)passPhrase
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)calculatorProvider {
  LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(self, passPhrase, calculatorProvider);
  return self;
}

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator>)getChecksumCalculatorWithInt:(jint)hashAlgorithm {
  return [((id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>) nil_chk(calculatorProvider_)) getWithInt:hashAlgorithm];
}

- (IOSByteArray *)makeKeyFromPassPhraseWithInt:(jint)keyAlgorithm
                 withLibOrgBouncycastleBcpgS2K:(LibOrgBouncycastleBcpgS2K *)s2k {
  return LibOrgBouncycastleOpenpgpOperatorOpenPgpOperatorPGPUtil_makeKeyFromPassPhraseWithLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_withInt_withLibOrgBouncycastleBcpgS2K_withCharArray_(calculatorProvider_, keyAlgorithm, s2k, passPhrase_);
}

- (IOSByteArray *)recoverKeyDataWithInt:(jint)encAlgorithm
                          withByteArray:(IOSByteArray *)key
                          withByteArray:(IOSByteArray *)iv
                          withByteArray:(IOSByteArray *)keyData
                                withInt:(jint)keyOff
                                withInt:(jint)keyLen {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculator;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "[B", 0x401, 6, 7, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:);
  methods[1].selector = @selector(getChecksumCalculatorWithInt:);
  methods[2].selector = @selector(makeKeyFromPassPhraseWithInt:withLibOrgBouncycastleBcpgS2K:);
  methods[3].selector = @selector(recoverKeyDataWithInt:withByteArray:withByteArray:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "passPhrase_", "[C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "calculatorProvider_", "LLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CLLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;", "getChecksumCalculator", "I", "LLibOrgBouncycastleOpenpgpPGPException;", "makeKeyFromPassPhrase", "ILLibOrgBouncycastleBcpgS2K;", "recoverKeyData", "I[B[B[BII" };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor = { "PBESecretKeyDecryptor", "lib.org.bouncycastle.openpgp.operator", ptrTable, methods, fields, 7, 0x401, 4, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor;
}

@end

void LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor *self, IOSCharArray *passPhrase, id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider> calculatorProvider) {
  NSObject_init(self);
  self->passPhrase_ = passPhrase;
  self->calculatorProvider_ = calculatorProvider;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpOperatorPBESecretKeyDecryptor)
