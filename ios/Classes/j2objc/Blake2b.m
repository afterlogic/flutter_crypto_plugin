//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/Blake2b.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "Blake2b.h"
#include "Blake2bDigest.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MiscObjectIdentifiers.h"

@interface LibOrgBouncycastleJcajceProviderDigestBlake2b ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestBlake2b_init(LibOrgBouncycastleJcajceProviderDigestBlake2b *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestBlake2b *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestBlake2b *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512;LLibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384;LLibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256;LLibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160;LLibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b = { "Blake2b", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b;
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_init(LibOrgBouncycastleJcajceProviderDigestBlake2b *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestBlake2b *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2bDigest_((LibOrgBouncycastleCryptoDigestsBlake2bDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2bDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2b;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 = { "Blake2b512", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512_init(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithInt_(512));
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512 *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b512)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2bDigest_((LibOrgBouncycastleCryptoDigestsBlake2bDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2bDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2b;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 = { "Blake2b384", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384_init(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithInt_(384));
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384 *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b384)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2bDigest_((LibOrgBouncycastleCryptoDigestsBlake2bDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2bDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2b;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 = { "Blake2b256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256_init(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithInt_(256));
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256 *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b256)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2bDigest_((LibOrgBouncycastleCryptoDigestsBlake2bDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2bDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2b;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 = { "Blake2b160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160_init(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2bDigest_initWithInt_(160));
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160 *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b_Blake2b160)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.BLAKE2B-512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX, @"$Blake2b512")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2b512)) withNSString:@"BLAKE2B-512"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2B-384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX, @"$Blake2b384")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2b384)) withNSString:@"BLAKE2B-384"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2B-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX, @"$Blake2b256")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2b256)) withNSString:@"BLAKE2B-256"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2B-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX, @"$Blake2b160")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2b160)) withNSString:@"BLAKE2B-160"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestBlake2b;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestBlake2b_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_init(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings *new_LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings *create_LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2b_Mappings)
