//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECNamedCurveParameterSpec.java
//

#include "ECCurve.h"
#include "ECNamedCurveParameterSpec.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleJceSpecECNamedCurveParameterSpec () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, name_, NSString *)

@implementation LibOrgBouncycastleJceSpecECNamedCurveParameterSpec

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(self, name, curve, G, n);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, G, n, h);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h
                   withByteArray:(IOSByteArray *)seed {
  LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, name, curve, G, n, h, seed);
  return self;
}

- (NSString *)getName {
  return name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[1].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithNSString:withLibOrgBouncycastleMathEcECCurve:withLibOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[3].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;", "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LLibOrgBouncycastleMathEcECCurve;LLibOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceSpecECNamedCurveParameterSpec = { "ECNamedCurveParameterSpec", "lib.org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec;
}

@end

void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(self, curve, G, n);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, G, n)
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, G, n)
}

void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, curve, G, n, h);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, G, n, h)
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, G, n, h)
}

void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  LibOrgBouncycastleJceSpecECParameterSpec_initWithLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, G, n, h, seed);
  self->name_ = name;
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, G, n, h, seed)
}

LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec, initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, G, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec)
