//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/collection/KeyRingCollection.java
//

#ifndef KeyRingCollection_H
#define KeyRingCollection_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaIoFile;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;
@class LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection;

@interface LibComAfterlogicPgpKeyCollectionKeyRingCollection : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)pubRingFile
                              withJavaIoFile:(JavaIoFile *)secRingFile;

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)publicKeyRings;

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)publicKeyRings
                              withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)secretKeyRings;

- (instancetype __nonnull)initWithLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)secretKeyRings;

- (void)importPublicKeysWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)publicKeyRings;

- (void)importSecretKeysWithLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)secretKeyRings;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibComAfterlogicPgpKeyCollectionKeyRingCollection)

FOUNDATION_EXPORT void LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibComAfterlogicPgpKeyCollectionKeyRingCollection *self, LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings);

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *new_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *create_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings);

FOUNDATION_EXPORT void LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithJavaIoFile_withJavaIoFile_(LibComAfterlogicPgpKeyCollectionKeyRingCollection *self, JavaIoFile *pubRingFile, JavaIoFile *secRingFile);

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *new_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithJavaIoFile_withJavaIoFile_(JavaIoFile *pubRingFile, JavaIoFile *secRingFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *create_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithJavaIoFile_withJavaIoFile_(JavaIoFile *pubRingFile, JavaIoFile *secRingFile);

FOUNDATION_EXPORT void LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_(LibComAfterlogicPgpKeyCollectionKeyRingCollection *self, LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings);

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *new_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *create_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *publicKeyRings);

FOUNDATION_EXPORT void LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibComAfterlogicPgpKeyCollectionKeyRingCollection *self, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings);

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *new_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpKeyCollectionKeyRingCollection *create_LibComAfterlogicPgpKeyCollectionKeyRingCollection_initWithLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *secretKeyRings);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpKeyCollectionKeyRingCollection)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyRingCollection_H
