//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/DSAPublicBCPGKey.java
//

#ifndef DSAPublicBCPGKey_H
#define DSAPublicBCPGKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCPGKey.h"
#include "BCPGObject.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleBcpgBCPGInputStream;
@class LibOrgBouncycastleBcpgBCPGOutputStream;
@class LibOrgBouncycastleBcpgMPInteger;

@interface LibOrgBouncycastleBcpgDSAPublicBCPGKey : LibOrgBouncycastleBcpgBCPGObject < LibOrgBouncycastleBcpgBCPGKey > {
 @public
  LibOrgBouncycastleBcpgMPInteger *p_;
  LibOrgBouncycastleBcpgMPInteger *q_;
  LibOrgBouncycastleBcpgMPInteger *g_;
  LibOrgBouncycastleBcpgMPInteger *y_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)y;

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (JavaMathBigInteger *)getG;

- (JavaMathBigInteger *)getP;

- (JavaMathBigInteger *)getQ;

- (JavaMathBigInteger *)getY;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleBcpgDSAPublicBCPGKey)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgDSAPublicBCPGKey, p_, LibOrgBouncycastleBcpgMPInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgDSAPublicBCPGKey, q_, LibOrgBouncycastleBcpgMPInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgDSAPublicBCPGKey, g_, LibOrgBouncycastleBcpgMPInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgDSAPublicBCPGKey, y_, LibOrgBouncycastleBcpgMPInteger *)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgDSAPublicBCPGKey *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgDSAPublicBCPGKey *new_LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgDSAPublicBCPGKey *create_LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleBcpgDSAPublicBCPGKey *self, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *y);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgDSAPublicBCPGKey *new_LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *y) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgDSAPublicBCPGKey *create_LibOrgBouncycastleBcpgDSAPublicBCPGKey_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *g, JavaMathBigInteger *y);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgDSAPublicBCPGKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSAPublicBCPGKey_H
