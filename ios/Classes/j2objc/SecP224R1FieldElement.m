//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement.java
//

#include "Arrays.h"
#include "ECFieldElement.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Mod.h"
#include "Nat.h"
#include "Nat224.h"
#include "SecP224R1Curve.h"
#include "SecP224R1Field.h"
#include "SecP224R1FieldElement.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement ()

+ (jboolean)isSquareWithIntArray:(IOSIntArray *)x;

+ (void)RMWithIntArray:(IOSIntArray *)nc
          withIntArray:(IOSIntArray *)d0
          withIntArray:(IOSIntArray *)e0
          withIntArray:(IOSIntArray *)d1
          withIntArray:(IOSIntArray *)e1
          withIntArray:(IOSIntArray *)f1
          withIntArray:(IOSIntArray *)t;

+ (void)RPWithIntArray:(IOSIntArray *)nc
          withIntArray:(IOSIntArray *)d1
          withIntArray:(IOSIntArray *)e1
          withIntArray:(IOSIntArray *)f1
          withIntArray:(IOSIntArray *)t;

+ (void)RSWithIntArray:(IOSIntArray *)d
          withIntArray:(IOSIntArray *)e
          withIntArray:(IOSIntArray *)f
          withIntArray:(IOSIntArray *)t;

+ (jboolean)trySqrtWithIntArray:(IOSIntArray *)nc
                   withIntArray:(IOSIntArray *)r
                   withIntArray:(IOSIntArray *)t;

@end

__attribute__((unused)) static jboolean LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_isSquareWithIntArray_(IOSIntArray *x);

__attribute__((unused)) static void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RMWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *d0, IOSIntArray *e0, IOSIntArray *d1, IOSIntArray *e1, IOSIntArray *f1, IOSIntArray *t);

__attribute__((unused)) static void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RPWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *d1, IOSIntArray *e1, IOSIntArray *f1, IOSIntArray *t);

__attribute__((unused)) static void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RSWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *d, IOSIntArray *e, IOSIntArray *f, IOSIntArray *t);

__attribute__((unused)) static jboolean LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_trySqrtWithIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *r, IOSIntArray *t);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement)

JavaMathBigInteger *LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q;

@implementation LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement

+ (JavaMathBigInteger *)Q {
  return LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithJavaMathBigInteger_(self, x);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithIntArray:(IOSIntArray *)x {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(self, x);
  return self;
}

- (jboolean)isZero {
  return LibOrgBouncycastleMathRawNat224_isZeroWithIntArray_(x_);
}

- (jboolean)isOne {
  return LibOrgBouncycastleMathRawNat224_isOneWithIntArray_(x_);
}

- (jboolean)testBitZero {
  return LibOrgBouncycastleMathRawNat224_getBitWithIntArray_withInt_(x_, 0) == 1;
}

- (JavaMathBigInteger *)toBigInteger {
  return LibOrgBouncycastleMathRawNat224_toBigIntegerWithIntArray_(x_);
}

- (NSString *)getFieldName {
  return @"SecP224R1Field";
}

- (jint)getFieldSize {
  return [((JavaMathBigInteger *) nil_chk(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q)) bitLength];
}

- (LibOrgBouncycastleMathEcECFieldElement *)addWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addWithIntArray_withIntArray_withIntArray_(x_, ((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) nil_chk(((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) cast_chk(b, [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]))))->x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)addOne {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addOneWithIntArray_withIntArray_(x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)subtractWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_subtractWithIntArray_withIntArray_withIntArray_(x_, ((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) nil_chk(((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) cast_chk(b, [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]))))->x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)multiplyWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x_, ((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) nil_chk(((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) cast_chk(b, [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]))))->x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)divideWithLibOrgBouncycastleMathEcECFieldElement:(LibOrgBouncycastleMathEcECFieldElement *)b {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(JreLoadStatic(LibOrgBouncycastleMathEcCustomSecSecP224R1Field, P), ((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) nil_chk(((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) cast_chk(b, [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]))))->x_, z);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(z, x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)negate {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_negateWithIntArray_withIntArray_(x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)square {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareWithIntArray_withIntArray_(x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)invert {
  IOSIntArray *z = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(JreLoadStatic(LibOrgBouncycastleMathEcCustomSecSecP224R1Field, P), x_, z);
  return new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(z);
}

- (LibOrgBouncycastleMathEcECFieldElement *)sqrt {
  IOSIntArray *c = self->x_;
  if (LibOrgBouncycastleMathRawNat224_isZeroWithIntArray_(c) || LibOrgBouncycastleMathRawNat224_isOneWithIntArray_(c)) {
    return self;
  }
  IOSIntArray *nc = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_negateWithIntArray_withIntArray_(c, nc);
  IOSIntArray *r = LibOrgBouncycastleMathRawMod_randomWithIntArray_(JreLoadStatic(LibOrgBouncycastleMathEcCustomSecSecP224R1Field, P));
  IOSIntArray *t = LibOrgBouncycastleMathRawNat224_create();
  if (!LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_isSquareWithIntArray_(c)) {
    return nil;
  }
  while (!LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_trySqrtWithIntArray_withIntArray_withIntArray_(nc, r, t)) {
    LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addOneWithIntArray_withIntArray_(r, r);
  }
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareWithIntArray_withIntArray_(t, r);
  return LibOrgBouncycastleMathRawNat224_eqWithIntArray_withIntArray_(c, r) ? new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(t) : nil;
}

- (jboolean)isEqual:(id)other {
  if (other == self) {
    return true;
  }
  if (!([other isKindOfClass:[LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]])) {
    return false;
  }
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *o = (LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) cast_chk(other, [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]);
  return LibOrgBouncycastleMathRawNat224_eqWithIntArray_withIntArray_(x_, ((LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *) nil_chk(o))->x_);
}

- (NSUInteger)hash {
  return ((jint) [((JavaMathBigInteger *) nil_chk(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q)) hash]) ^ LibOrgBouncycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(x_, 0, 7);
}

+ (jboolean)isSquareWithIntArray:(IOSIntArray *)x {
  return LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_isSquareWithIntArray_(x);
}

+ (void)RMWithIntArray:(IOSIntArray *)nc
          withIntArray:(IOSIntArray *)d0
          withIntArray:(IOSIntArray *)e0
          withIntArray:(IOSIntArray *)d1
          withIntArray:(IOSIntArray *)e1
          withIntArray:(IOSIntArray *)f1
          withIntArray:(IOSIntArray *)t {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RMWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(nc, d0, e0, d1, e1, f1, t);
}

+ (void)RPWithIntArray:(IOSIntArray *)nc
          withIntArray:(IOSIntArray *)d1
          withIntArray:(IOSIntArray *)e1
          withIntArray:(IOSIntArray *)f1
          withIntArray:(IOSIntArray *)t {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RPWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(nc, d1, e1, f1, t);
}

+ (void)RSWithIntArray:(IOSIntArray *)d
          withIntArray:(IOSIntArray *)e
          withIntArray:(IOSIntArray *)f
          withIntArray:(IOSIntArray *)t {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RSWithIntArray_withIntArray_withIntArray_withIntArray_(d, e, f, t);
}

+ (jboolean)trySqrtWithIntArray:(IOSIntArray *)nc
                   withIntArray:(IOSIntArray *)r
                   withIntArray:(IOSIntArray *)t {
  return LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_trySqrtWithIntArray_withIntArray_withIntArray_(nc, r, t);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 10, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 17, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithIntArray:);
  methods[3].selector = @selector(isZero);
  methods[4].selector = @selector(isOne);
  methods[5].selector = @selector(testBitZero);
  methods[6].selector = @selector(toBigInteger);
  methods[7].selector = @selector(getFieldName);
  methods[8].selector = @selector(getFieldSize);
  methods[9].selector = @selector(addWithLibOrgBouncycastleMathEcECFieldElement:);
  methods[10].selector = @selector(addOne);
  methods[11].selector = @selector(subtractWithLibOrgBouncycastleMathEcECFieldElement:);
  methods[12].selector = @selector(multiplyWithLibOrgBouncycastleMathEcECFieldElement:);
  methods[13].selector = @selector(divideWithLibOrgBouncycastleMathEcECFieldElement:);
  methods[14].selector = @selector(negate);
  methods[15].selector = @selector(square);
  methods[16].selector = @selector(invert);
  methods[17].selector = @selector(sqrt);
  methods[18].selector = @selector(isEqual:);
  methods[19].selector = @selector(hash);
  methods[20].selector = @selector(isSquareWithIntArray:);
  methods[21].selector = @selector(RMWithIntArray:withIntArray:withIntArray:withIntArray:withIntArray:withIntArray:withIntArray:);
  methods[22].selector = @selector(RPWithIntArray:withIntArray:withIntArray:withIntArray:withIntArray:);
  methods[23].selector = @selector(RSWithIntArray:withIntArray:withIntArray:withIntArray:);
  methods[24].selector = @selector(trySqrtWithIntArray:withIntArray:withIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "Q", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "x_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;", "[I", "add", "LLibOrgBouncycastleMathEcECFieldElement;", "subtract", "multiply", "divide", "equals", "LNSObject;", "hashCode", "isSquare", "RM", "[I[I[I[I[I[I[I", "RP", "[I[I[I[I[I", "RS", "[I[I[I[I", "trySqrt", "[I[I[I", &LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q };
  static const J2ObjcClassInfo _LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement = { "SecP224R1FieldElement", "lib.org.bouncycastle.math.ec.custom.sec", ptrTable, methods, fields, 7, 0x1, 25, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement class]) {
    LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q = JreLoadStatic(LibOrgBouncycastleMathEcCustomSecSecP224R1Curve, q);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement)
  }
}

@end

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithJavaMathBigInteger_(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *self, JavaMathBigInteger *x) {
  LibOrgBouncycastleMathEcECFieldElement_AbstractFp_init(self);
  if (x == nil || [x signum] < 0 || [x compareToWithId:LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_Q] >= 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"x value invalid for SecP224R1FieldElement");
  }
  self->x_ = LibOrgBouncycastleMathEcCustomSecSecP224R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, initWithJavaMathBigInteger_, x)
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *create_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, initWithJavaMathBigInteger_, x)
}

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_init(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *self) {
  LibOrgBouncycastleMathEcECFieldElement_AbstractFp_init(self);
  self->x_ = LibOrgBouncycastleMathRawNat224_create();
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, init)
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *create_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, init)
}

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *self, IOSIntArray *x) {
  LibOrgBouncycastleMathEcECFieldElement_AbstractFp_init(self);
  self->x_ = x;
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *new_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(IOSIntArray *x) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, initWithIntArray_, x)
}

LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement *create_LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initWithIntArray_(IOSIntArray *x) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement, initWithIntArray_, x)
}

jboolean LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_isSquareWithIntArray_(IOSIntArray *x) {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initialize();
  IOSIntArray *t1 = LibOrgBouncycastleMathRawNat224_create();
  IOSIntArray *t2 = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(x, t1);
  for (jint i = 0; i < 7; ++i) {
    LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(t1, t2);
    LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareNWithIntArray_withInt_withIntArray_(t1, JreLShift32(1, i), t1);
    LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t1, t2, t1);
  }
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 95, t1);
  return LibOrgBouncycastleMathRawNat224_isOneWithIntArray_(t1);
}

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RMWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *d0, IOSIntArray *e0, IOSIntArray *d1, IOSIntArray *e1, IOSIntArray *f1, IOSIntArray *t) {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initialize();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(e1, e0, t);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t, nc, t);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(d1, d0, f1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addWithIntArray_withIntArray_withIntArray_(f1, t, f1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(d1, e0, t);
  LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(f1, d1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(e1, d0, e1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addWithIntArray_withIntArray_withIntArray_(e1, t, e1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareWithIntArray_withIntArray_(e1, f1);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(f1, nc, f1);
}

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RPWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *d1, IOSIntArray *e1, IOSIntArray *f1, IOSIntArray *t) {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initialize();
  LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(nc, f1);
  IOSIntArray *d0 = LibOrgBouncycastleMathRawNat224_create();
  IOSIntArray *e0 = LibOrgBouncycastleMathRawNat224_create();
  for (jint i = 0; i < 7; ++i) {
    LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(d1, d0);
    LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(e1, e0);
    jint j = JreLShift32(1, i);
    while (--j >= 0) {
      LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RSWithIntArray_withIntArray_withIntArray_withIntArray_(d1, e1, f1, t);
    }
    LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RMWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(nc, d0, e0, d1, e1, f1, t);
  }
}

void LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RSWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *d, IOSIntArray *e, IOSIntArray *f, IOSIntArray *t) {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initialize();
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(e, d, e);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_twiceWithIntArray_withIntArray_(e, e);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_squareWithIntArray_withIntArray_(d, t);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_addWithIntArray_withIntArray_withIntArray_(f, t, d);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(f, t, f);
  jint c = LibOrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_(7, f, 2, 0);
  LibOrgBouncycastleMathEcCustomSecSecP224R1Field_reduce32WithInt_withIntArray_(c, f);
}

jboolean LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_trySqrtWithIntArray_withIntArray_withIntArray_(IOSIntArray *nc, IOSIntArray *r, IOSIntArray *t) {
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_initialize();
  IOSIntArray *d1 = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(r, d1);
  IOSIntArray *e1 = LibOrgBouncycastleMathRawNat224_create();
  *IOSIntArray_GetRef(nil_chk(e1), 0) = 1;
  IOSIntArray *f1 = LibOrgBouncycastleMathRawNat224_create();
  LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RPWithIntArray_withIntArray_withIntArray_withIntArray_withIntArray_(nc, d1, e1, f1, t);
  IOSIntArray *d0 = LibOrgBouncycastleMathRawNat224_create();
  IOSIntArray *e0 = LibOrgBouncycastleMathRawNat224_create();
  for (jint k = 1; k < 96; ++k) {
    LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(d1, d0);
    LibOrgBouncycastleMathRawNat224_copy__WithIntArray_withIntArray_(e1, e0);
    LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement_RSWithIntArray_withIntArray_withIntArray_withIntArray_(d1, e1, f1, t);
    if (LibOrgBouncycastleMathRawNat224_isZeroWithIntArray_(d1)) {
      LibOrgBouncycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(JreLoadStatic(LibOrgBouncycastleMathEcCustomSecSecP224R1Field, P), e0, t);
      LibOrgBouncycastleMathEcCustomSecSecP224R1Field_multiplyWithIntArray_withIntArray_withIntArray_(t, d0, t);
      return true;
    }
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleMathEcCustomSecSecP224R1FieldElement)
