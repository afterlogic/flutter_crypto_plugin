//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/modes/gcm/GCMUtil.java
//

#ifndef GCMUtil_H
#define GCMUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSLongArray;

@interface LibOrgBouncycastleCryptoModesGcmGCMUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSByteArray *)asBytesWithIntArray:(IOSIntArray *)x;

+ (void)asBytesWithIntArray:(IOSIntArray *)x
              withByteArray:(IOSByteArray *)z;

+ (IOSByteArray *)asBytesWithLongArray:(IOSLongArray *)x;

+ (void)asBytesWithLongArray:(IOSLongArray *)x
               withByteArray:(IOSByteArray *)z;

+ (IOSIntArray *)asIntsWithByteArray:(IOSByteArray *)x;

+ (void)asIntsWithByteArray:(IOSByteArray *)x
               withIntArray:(IOSIntArray *)z;

+ (IOSLongArray *)asLongsWithByteArray:(IOSByteArray *)x;

+ (void)asLongsWithByteArray:(IOSByteArray *)x
               withLongArray:(IOSLongArray *)z;

+ (void)copy__WithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z OBJC_METHOD_FAMILY_NONE;

+ (void)copy__WithLongArray:(IOSLongArray *)x
              withLongArray:(IOSLongArray *)z OBJC_METHOD_FAMILY_NONE;

+ (void)dividePWithLongArray:(IOSLongArray *)x
               withLongArray:(IOSLongArray *)z;

+ (void)multiplyWithByteArray:(IOSByteArray *)x
                withByteArray:(IOSByteArray *)y;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y;

+ (void)multiplyWithLongArray:(IOSLongArray *)x
                withLongArray:(IOSLongArray *)y;

+ (void)multiplyPWithIntArray:(IOSIntArray *)x;

+ (void)multiplyPWithIntArray:(IOSIntArray *)x
                 withIntArray:(IOSIntArray *)z;

+ (void)multiplyPWithLongArray:(IOSLongArray *)x;

+ (void)multiplyPWithLongArray:(IOSLongArray *)x
                 withLongArray:(IOSLongArray *)z;

+ (void)multiplyP3WithLongArray:(IOSLongArray *)x
                  withLongArray:(IOSLongArray *)z;

+ (void)multiplyP4WithLongArray:(IOSLongArray *)x
                  withLongArray:(IOSLongArray *)z;

+ (void)multiplyP7WithLongArray:(IOSLongArray *)x
                  withLongArray:(IOSLongArray *)z;

+ (void)multiplyP8WithIntArray:(IOSIntArray *)x;

+ (void)multiplyP8WithIntArray:(IOSIntArray *)x
                  withIntArray:(IOSIntArray *)y;

+ (void)multiplyP8WithLongArray:(IOSLongArray *)x;

+ (void)multiplyP8WithLongArray:(IOSLongArray *)x
                  withLongArray:(IOSLongArray *)y;

+ (IOSByteArray *)oneAsBytes;

+ (IOSIntArray *)oneAsInts;

+ (IOSLongArray *)oneAsLongs;

+ (IOSLongArray *)pAsLongs;

+ (void)squareWithLongArray:(IOSLongArray *)x
              withLongArray:(IOSLongArray *)z;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y
             withByteArray:(IOSByteArray *)z;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y
                   withInt:(jint)yOff;

+ (void)xor__WithByteArray:(IOSByteArray *)x
             withByteArray:(IOSByteArray *)y
                   withInt:(jint)yOff
                   withInt:(jint)yLen;

+ (void)xor__WithByteArray:(IOSByteArray *)x
                   withInt:(jint)xOff
             withByteArray:(IOSByteArray *)y
                   withInt:(jint)yOff
             withByteArray:(IOSByteArray *)z
                   withInt:(jint)zOff;

+ (void)xor__WithByteArray:(IOSByteArray *)x
                   withInt:(jint)xOff
             withByteArray:(IOSByteArray *)y
                   withInt:(jint)yOff
                   withInt:(jint)len;

+ (void)xor__WithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)y;

+ (void)xor__WithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)y
             withIntArray:(IOSIntArray *)z;

+ (void)xor__WithLongArray:(IOSLongArray *)x
             withLongArray:(IOSLongArray *)y;

+ (void)xor__WithLongArray:(IOSLongArray *)x
             withLongArray:(IOSLongArray *)y
             withLongArray:(IOSLongArray *)z;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoModesGcmGCMUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_init(LibOrgBouncycastleCryptoModesGcmGCMUtil *self);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_oneAsBytes(void);

FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_oneAsInts(void);

FOUNDATION_EXPORT IOSLongArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_oneAsLongs(void);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_asBytesWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_asBytesWithIntArray_withByteArray_(IOSIntArray *x, IOSByteArray *z);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_asBytesWithLongArray_(IOSLongArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_asBytesWithLongArray_withByteArray_(IOSLongArray *x, IOSByteArray *z);

FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_(IOSByteArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_asIntsWithByteArray_withIntArray_(IOSByteArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSLongArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_asLongsWithByteArray_(IOSByteArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_asLongsWithByteArray_withLongArray_(IOSByteArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_copy__WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_copy__WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_dividePWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyWithByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyPWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyPWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyPWithLongArray_(IOSLongArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyPWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP3WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP4WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP7WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP8WithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP8WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP8WithLongArray_(IOSLongArray *x);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_multiplyP8WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y);

FOUNDATION_EXPORT IOSLongArray *LibOrgBouncycastleCryptoModesGcmGCMUtil_pAsLongs(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_squareWithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_withInt_(IOSByteArray *x, IOSByteArray *y, jint yOff);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withInt_withByteArray_withInt_withByteArray_withInt_(IOSByteArray *x, jint xOff, IOSByteArray *y, jint yOff, IOSByteArray *z, jint zOff);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_withInt_withInt_(IOSByteArray *x, IOSByteArray *y, jint yOff, jint yLen);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withInt_withByteArray_withInt_withInt_(IOSByteArray *x, jint xOff, IOSByteArray *y, jint yOff, jint len);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithByteArray_withByteArray_withByteArray_(IOSByteArray *x, IOSByteArray *y, IOSByteArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGcmGCMUtil_xor__WithLongArray_withLongArray_withLongArray_(IOSLongArray *x, IOSLongArray *y, IOSLongArray *z);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoModesGcmGCMUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GCMUtil_H
