//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/keybox/PublicKeyRingBlob.java
//

#ifndef PublicKeyRingBlob_H
#define PublicKeyRingBlob_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyBlob.h"

@class IOSByteArray;
@class LibOrgBouncycastleGpgKeyboxBlob;
@class LibOrgBouncycastleGpgKeyboxBlobType;
@class LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer;
@class LibOrgBouncycastleOpenpgpPGPPublicKeyRing;
@protocol JavaUtilList;
@protocol LibOrgBouncycastleGpgKeyboxBlobVerifier;
@protocol LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator;

@interface LibOrgBouncycastleGpgKeyboxPublicKeyRingBlob : LibOrgBouncycastleGpgKeyboxKeyBlob

#pragma mark Public

- (LibOrgBouncycastleOpenpgpPGPPublicKeyRing *)getPGPPublicKeyRing;

#pragma mark Package-Private

+ (LibOrgBouncycastleGpgKeyboxBlob *)parseContentWithInt:(jint)base
                                                withLong:(jlong)length
                 withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)type
                                                 withInt:(jint)version_
         withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer:(LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *)buffer
withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator:(id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator>)fingerPrintCalculator
             withLibOrgBouncycastleGpgKeyboxBlobVerifier:(id<LibOrgBouncycastleGpgKeyboxBlobVerifier>)blobVerifier;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                             withLong:(jlong)arg1
withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)arg2
                              withInt:(jint)arg3
                              withInt:(jint)arg4
                              withInt:(jint)arg5
                     withJavaUtilList:(id<JavaUtilList>)arg6
                        withByteArray:(IOSByteArray *)arg7
                              withInt:(jint)arg8
                     withJavaUtilList:(id<JavaUtilList>)arg9
                              withInt:(jint)arg10
                     withJavaUtilList:(id<JavaUtilList>)arg11
                              withInt:(jint)arg12
                              withInt:(jint)arg13
                             withLong:(jlong)arg14
                             withLong:(jlong)arg15
                             withLong:(jlong)arg16
                        withByteArray:(IOSByteArray *)arg17
                        withByteArray:(IOSByteArray *)arg18
                        withByteArray:(IOSByteArray *)arg19 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleGpgKeyboxPublicKeyRingBlob)

FOUNDATION_EXPORT LibOrgBouncycastleGpgKeyboxBlob *LibOrgBouncycastleGpgKeyboxPublicKeyRingBlob_parseContentWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_withLibOrgBouncycastleGpgKeyboxBlobVerifier_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *buffer, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> fingerPrintCalculator, id<LibOrgBouncycastleGpgKeyboxBlobVerifier> blobVerifier);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleGpgKeyboxPublicKeyRingBlob)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PublicKeyRingBlob_H
