//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/CMCPublicationInfo.java
//

#ifndef CMCPublicationInfo_H
#define CMCPublicationInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CrmfPKIPublicationInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmcCMCPublicationInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)hashAlg
                                                                 withByteArray2:(IOSObjectArray *)anchorHashes
                               withLibOrgBouncycastleAsn1CrmfPKIPublicationInfo:(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *)pubInfo;

- (IOSObjectArray *)getCertHashes;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlg;

+ (LibOrgBouncycastleAsn1CmcCMCPublicationInfo *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *)getPubInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcCMCPublicationInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcCMCPublicationInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray2_withLibOrgBouncycastleAsn1CrmfPKIPublicationInfo_(LibOrgBouncycastleAsn1CmcCMCPublicationInfo *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlg, IOSObjectArray *anchorHashes, LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *pubInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCPublicationInfo *new_LibOrgBouncycastleAsn1CmcCMCPublicationInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray2_withLibOrgBouncycastleAsn1CrmfPKIPublicationInfo_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlg, IOSObjectArray *anchorHashes, LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *pubInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCPublicationInfo *create_LibOrgBouncycastleAsn1CmcCMCPublicationInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray2_withLibOrgBouncycastleAsn1CrmfPKIPublicationInfo_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlg, IOSObjectArray *anchorHashes, LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *pubInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcCMCPublicationInfo *LibOrgBouncycastleAsn1CmcCMCPublicationInfo_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcCMCPublicationInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CMCPublicationInfo_H
