//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsServerContextImpl.java
//

#ifndef TlsServerContextImpl_H
#define TlsServerContextImpl_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AbstractTlsContext.h"
#include "J2ObjC_header.h"
#include "TlsServerContext.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoTlsSecurityParameters;

@interface LibOrgBouncycastleCryptoTlsTlsServerContextImpl : LibOrgBouncycastleCryptoTlsAbstractTlsContext < LibOrgBouncycastleCryptoTlsTlsServerContext >

#pragma mark Public

- (jboolean)isServer;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom
         withLibOrgBouncycastleCryptoTlsSecurityParameters:(LibOrgBouncycastleCryptoTlsSecurityParameters *)securityParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsServerContextImpl)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsServerContextImpl_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoTlsSecurityParameters_(LibOrgBouncycastleCryptoTlsTlsServerContextImpl *self, JavaSecuritySecureRandom *secureRandom, LibOrgBouncycastleCryptoTlsSecurityParameters *securityParameters);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsServerContextImpl *new_LibOrgBouncycastleCryptoTlsTlsServerContextImpl_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoTlsSecurityParameters_(JavaSecuritySecureRandom *secureRandom, LibOrgBouncycastleCryptoTlsSecurityParameters *securityParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsServerContextImpl *create_LibOrgBouncycastleCryptoTlsTlsServerContextImpl_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoTlsSecurityParameters_(JavaSecuritySecureRandom *secureRandom, LibOrgBouncycastleCryptoTlsSecurityParameters *securityParameters);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsServerContextImpl)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsServerContextImpl_H
