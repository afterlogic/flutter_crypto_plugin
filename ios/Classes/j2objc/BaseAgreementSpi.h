//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.java
//

#ifndef BaseAgreementSpi_H
#define BaseAgreementSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "javax/crypto/KeyAgreementSpi.h"

@class IOSByteArray;
@protocol JavaxCryptoSecretKey;
@protocol LibOrgBouncycastleCryptoDerivationFunction;

@interface LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi : JavaxCryptoKeyAgreementSpi {
 @public
  NSString *kaAlgorithm_;
  id<LibOrgBouncycastleCryptoDerivationFunction> kdf_;
  IOSByteArray *ukmParameters_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)kaAlgorithm
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf;

#pragma mark Protected

- (IOSByteArray *)calcSecret;

- (IOSByteArray *)engineGenerateSecret;

- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)sharedSecret
                                  withInt:(jint)offset;

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithNSString:(NSString *)algorithm;

+ (NSString *)getAlgorithmWithNSString:(NSString *)algDetails;

+ (jint)getKeySizeWithNSString:(NSString *)algDetails;

+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)secret;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, kaAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, kdf_, id<LibOrgBouncycastleCryptoDerivationFunction>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, ukmParameters_, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(NSString *algDetails);

FOUNDATION_EXPORT jint LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(NSString *algDetails);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(IOSByteArray *secret);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BaseAgreementSpi_H
