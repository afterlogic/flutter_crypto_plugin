//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/ByteQueueInputStream.java
//

#ifndef ByteQueueInputStream_H
#define ByteQueueInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/InputStream.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoTlsByteQueueInputStream : JavaIoInputStream

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addBytesWithByteArray:(IOSByteArray *)bytes;

- (jint)available;

- (void)close;

- (jint)peekWithByteArray:(IOSByteArray *)buf;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (jlong)skipWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsByteQueueInputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsByteQueueInputStream_init(LibOrgBouncycastleCryptoTlsByteQueueInputStream *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsByteQueueInputStream *new_LibOrgBouncycastleCryptoTlsByteQueueInputStream_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsByteQueueInputStream *create_LibOrgBouncycastleCryptoTlsByteQueueInputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsByteQueueInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ByteQueueInputStream_H
