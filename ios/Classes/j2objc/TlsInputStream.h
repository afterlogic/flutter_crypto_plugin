//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsInputStream.java
//

#ifndef TlsInputStream_H
#define TlsInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/InputStream.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoTlsTlsProtocol;

@interface LibOrgBouncycastleCryptoTlsTlsInputStream : JavaIoInputStream

#pragma mark Public

- (jint)available;

- (void)close;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)offset
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoTlsTlsProtocol:(LibOrgBouncycastleCryptoTlsTlsProtocol *)handler;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsInputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsInputStream_initWithLibOrgBouncycastleCryptoTlsTlsProtocol_(LibOrgBouncycastleCryptoTlsTlsInputStream *self, LibOrgBouncycastleCryptoTlsTlsProtocol *handler);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsInputStream *new_LibOrgBouncycastleCryptoTlsTlsInputStream_initWithLibOrgBouncycastleCryptoTlsTlsProtocol_(LibOrgBouncycastleCryptoTlsTlsProtocol *handler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsInputStream *create_LibOrgBouncycastleCryptoTlsTlsInputStream_initWithLibOrgBouncycastleCryptoTlsTlsProtocol_(LibOrgBouncycastleCryptoTlsTlsProtocol *handler);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsInputStream_H
