//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/X509CertificateStructure.java
//

#include "ASN1Encodable.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "AlgorithmIdentifier.h"
#include "Asn1X509Time.h"
#include "DERBitString.h"
#include "J2ObjC_source.h"
#include "SubjectPublicKeyInfo.h"
#include "TBSCertificateStructure.h"
#include "X500Name.h"
#include "X509CertificateStructure.h"
#include "java/lang/IllegalArgumentException.h"

@implementation LibOrgBouncycastleAsn1X509X509CertificateStructure

+ (LibOrgBouncycastleAsn1X509X509CertificateStructure *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                  withBoolean:(jboolean)explicit_ {
  return LibOrgBouncycastleAsn1X509X509CertificateStructure_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}

+ (LibOrgBouncycastleAsn1X509X509CertificateStructure *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1X509X509CertificateStructure_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1X509X509CertificateStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (LibOrgBouncycastleAsn1X509TBSCertificateStructure *)getTBSCertificate {
  return tbsCert_;
}

- (jint)getVersion {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getVersion];
}

- (LibOrgBouncycastleAsn1ASN1Integer *)getSerialNumber {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSerialNumber];
}

- (LibOrgBouncycastleAsn1X500X500Name *)getIssuer {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getIssuer];
}

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getStartDate {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getStartDate];
}

- (LibOrgBouncycastleAsn1X509Asn1X509Time *)getEndDate {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getEndDate];
}

- (LibOrgBouncycastleAsn1X500X500Name *)getSubject {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSubject];
}

- (LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo {
  return [((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSubjectPublicKeyInfo];
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  return sigAlgId_;
}

- (LibOrgBouncycastleAsn1DERBitString *)getSignature {
  return sig_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return seq_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1X509X509CertificateStructure;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509X509CertificateStructure;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509TBSCertificateStructure;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509Asn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509Asn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getTBSCertificate);
  methods[4].selector = @selector(getVersion);
  methods[5].selector = @selector(getSerialNumber);
  methods[6].selector = @selector(getIssuer);
  methods[7].selector = @selector(getStartDate);
  methods[8].selector = @selector(getEndDate);
  methods[9].selector = @selector(getSubject);
  methods[10].selector = @selector(getSubjectPublicKeyInfo);
  methods[11].selector = @selector(getSignatureAlgorithm);
  methods[12].selector = @selector(getSignature);
  methods[13].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tbsCert_", "LLibOrgBouncycastleAsn1X509TBSCertificateStructure;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sigAlgId_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sig_", "LLibOrgBouncycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LLibOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1X509X509CertificateStructure = { "X509CertificateStructure", "lib.org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 14, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1X509X509CertificateStructure;
}

@end

LibOrgBouncycastleAsn1X509X509CertificateStructure *LibOrgBouncycastleAsn1X509X509CertificateStructure_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  LibOrgBouncycastleAsn1X509X509CertificateStructure_initialize();
  return LibOrgBouncycastleAsn1X509X509CertificateStructure_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

LibOrgBouncycastleAsn1X509X509CertificateStructure *LibOrgBouncycastleAsn1X509X509CertificateStructure_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1X509X509CertificateStructure_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1X509X509CertificateStructure class]]) {
    return (LibOrgBouncycastleAsn1X509X509CertificateStructure *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1X509X509CertificateStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1X509X509CertificateStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509X509CertificateStructure *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->seq_ = seq;
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
    self->tbsCert_ = LibOrgBouncycastleAsn1X509TBSCertificateStructure_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->sigAlgId_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
    self->sig_ = LibOrgBouncycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sequence wrong size for a certificate");
  }
}

LibOrgBouncycastleAsn1X509X509CertificateStructure *new_LibOrgBouncycastleAsn1X509X509CertificateStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1X509X509CertificateStructure, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1X509X509CertificateStructure *create_LibOrgBouncycastleAsn1X509X509CertificateStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1X509X509CertificateStructure, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1X509X509CertificateStructure)
