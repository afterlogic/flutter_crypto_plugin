//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/CertificateStatusType.java
//

#include "CertificateStatusType.h"
#include "J2ObjC_source.h"

@implementation LibOrgBouncycastleCryptoTlsCertificateStatusType

+ (jshort)ocsp {
  return LibOrgBouncycastleCryptoTlsCertificateStatusType_ocsp;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsCertificateStatusType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ocsp", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsCertificateStatusType_ocsp, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsCertificateStatusType = { "CertificateStatusType", "lib.org.bouncycastle.crypto.tls", NULL, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsCertificateStatusType;
}

@end

void LibOrgBouncycastleCryptoTlsCertificateStatusType_init(LibOrgBouncycastleCryptoTlsCertificateStatusType *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoTlsCertificateStatusType *new_LibOrgBouncycastleCryptoTlsCertificateStatusType_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoTlsCertificateStatusType, init)
}

LibOrgBouncycastleCryptoTlsCertificateStatusType *create_LibOrgBouncycastleCryptoTlsCertificateStatusType_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoTlsCertificateStatusType, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsCertificateStatusType)
