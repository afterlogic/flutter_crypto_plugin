//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/Rainbow.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricAlgorithmProvider.h"
#include "AsymmetricKeyInfoConverter.h"
#include "ConfigurableProvider.h"
#include "J2ObjC_source.h"
#include "PQCObjectIdentifiers.h"
#include "Rainbow.h"
#include "RainbowKeyFactorySpi.h"

inline NSString *LibOrgBouncycastlePqcJcajceProviderRainbow_get_PREFIX(void);
static NSString *LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX = @"lib.org.bouncycastle.pqc.jcajce.provider.rainbow.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcJcajceProviderRainbow, PREFIX, NSString *)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbow

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbow_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, "LLibOrgBouncycastlePqcJcajceProviderRainbow_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbow = { "Rainbow", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, 1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbow;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbow_init(LibOrgBouncycastlePqcJcajceProviderRainbow *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcJcajceProviderRainbow *new_LibOrgBouncycastlePqcJcajceProviderRainbow_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbow, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbow *create_LibOrgBouncycastlePqcJcajceProviderRainbow_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbow, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbow)

@implementation LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"KeyFactory.Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"RainbowKeyFactorySpi")];
  [provider addAlgorithmWithNSString:@"KeyPairGenerator.Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"RainbowKeyPairGeneratorSpi")];
  [self addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA224" withNSString:@"Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"PqcJcajceRainbowSignatureSpi$withSha224") withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbowWithSha224)];
  [self addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA256" withNSString:@"Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"PqcJcajceRainbowSignatureSpi$withSha256") withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbowWithSha256)];
  [self addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA384" withNSString:@"Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"PqcJcajceRainbowSignatureSpi$withSha384") withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbowWithSha384)];
  [self addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SHA512" withNSString:@"Rainbow" withNSString:JreStrcat("$$", LibOrgBouncycastlePqcJcajceProviderRainbow_PREFIX, @"PqcJcajceRainbowSignatureSpi$withSha512") withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbowWithSha512)];
  id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> keyFact = new_LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeyFactorySpi_init();
  [self registerOidWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbow) withNSString:@"Rainbow" withLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:keyFact];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "LLibOrgBouncycastlePqcJcajceProviderRainbow;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings = { "Mappings", "lib.org.bouncycastle.pqc.jcajce.provider", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings;
}

@end

void LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings_init(LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings *new_LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings, init)
}

LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings *create_LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderRainbow_Mappings)
