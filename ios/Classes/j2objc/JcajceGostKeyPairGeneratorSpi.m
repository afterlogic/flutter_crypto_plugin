//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/gost/JcajceGostKeyPairGeneratorSpi.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricCipherKeyPair.h"
#include "AsymmetricKeyParameter.h"
#include "BCGOST3410PrivateKey.h"
#include "BCGOST3410PublicKey.h"
#include "CryptoProObjectIdentifiers.h"
#include "CryptoServicesRegistrar.h"
#include "GOST3410KeyGenerationParameters.h"
#include "GOST3410KeyPairGenerator.h"
#include "GOST3410ParameterSpec.h"
#include "GOST3410Parameters.h"
#include "GOST3410PrivateKeyParameters.h"
#include "GOST3410PublicKeyParameterSetSpec.h"
#include "GOST3410PublicKeyParameters.h"
#include "J2ObjC_source.h"
#include "JcajceGostKeyPairGeneratorSpi.h"
#include "java/math/BigInteger.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/KeyPair.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi ()

- (void)init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec:(LibOrgBouncycastleJceSpecGOST3410ParameterSpec *)gParams
                                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec_withJavaSecuritySecureRandom_(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi *self, LibOrgBouncycastleJceSpecGOST3410ParameterSpec *gParams, JavaSecuritySecureRandom *random);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  self->strength_ = strength;
  self->random_ = random;
}

- (void)init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec:(LibOrgBouncycastleJceSpecGOST3410ParameterSpec *)gParams
                                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec_withJavaSecuritySecureRandom_(self, gParams, random);
}

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  if (!([params isKindOfClass:[LibOrgBouncycastleJceSpecGOST3410ParameterSpec class]])) {
    @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"parameter object not a GOST3410ParameterSpec");
  }
  LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec_withJavaSecuritySecureRandom_(self, (LibOrgBouncycastleJceSpecGOST3410ParameterSpec *) cast_chk(params, [LibOrgBouncycastleJceSpecGOST3410ParameterSpec class]), random);
}

- (JavaSecurityKeyPair *)generateKeyPair {
  if (!initialised_) {
    LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec_withJavaSecuritySecureRandom_(self, new_LibOrgBouncycastleJceSpecGOST3410ParameterSpec_initWithNSString_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_94_CryptoPro_A))) getId]), LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom());
  }
  LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *pair = [((LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator *) nil_chk(engine_)) generateKeyPair];
  LibOrgBouncycastleCryptoParamsGOST3410PublicKeyParameters *pub = (LibOrgBouncycastleCryptoParamsGOST3410PublicKeyParameters *) cast_chk([((LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(pair)) getPublic], [LibOrgBouncycastleCryptoParamsGOST3410PublicKeyParameters class]);
  LibOrgBouncycastleCryptoParamsGOST3410PrivateKeyParameters *priv = (LibOrgBouncycastleCryptoParamsGOST3410PrivateKeyParameters *) cast_chk([pair getPrivate], [LibOrgBouncycastleCryptoParamsGOST3410PrivateKeyParameters class]);
  return new_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(new_LibOrgBouncycastleJcajceProviderAsymmetricGostBCGOST3410PublicKey_initWithLibOrgBouncycastleCryptoParamsGOST3410PublicKeyParameters_withLibOrgBouncycastleJceSpecGOST3410ParameterSpec_(pub, gost3410Params_), new_LibOrgBouncycastleJcajceProviderAsymmetricGostBCGOST3410PrivateKey_initWithLibOrgBouncycastleCryptoParamsGOST3410PrivateKeyParameters_withLibOrgBouncycastleJceSpecGOST3410ParameterSpec_(priv, gost3410Params_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, 5, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__WithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(initialize__WithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[4].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LLibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "engine_", "LLibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "gost3410Params_", "LLibOrgBouncycastleJceSpecGOST3410ParameterSpec;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "strength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "initialised_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "ILJavaSecuritySecureRandom;", "init", "LLibOrgBouncycastleJceSpecGOST3410ParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi = { "JcajceGostKeyPairGeneratorSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.gost", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi *self) {
  JavaSecurityKeyPairGenerator_initWithNSString_(self, @"GOST3410");
  self->engine_ = new_LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator_init();
  self->strength_ = 1024;
  self->random_ = nil;
  self->initialised_ = false;
}

LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi, init)
}

void LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi_init__WithLibOrgBouncycastleJceSpecGOST3410ParameterSpec_withJavaSecuritySecureRandom_(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi *self, LibOrgBouncycastleJceSpecGOST3410ParameterSpec *gParams, JavaSecuritySecureRandom *random) {
  LibOrgBouncycastleJceSpecGOST3410PublicKeyParameterSetSpec *spec = [((LibOrgBouncycastleJceSpecGOST3410ParameterSpec *) nil_chk(gParams)) getPublicKeyParameters];
  self->param_ = new_LibOrgBouncycastleCryptoParamsGOST3410KeyGenerationParameters_initWithJavaSecuritySecureRandom_withLibOrgBouncycastleCryptoParamsGOST3410Parameters_(random, new_LibOrgBouncycastleCryptoParamsGOST3410Parameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((LibOrgBouncycastleJceSpecGOST3410PublicKeyParameterSetSpec *) nil_chk(spec)) getP], [spec getQ], [spec getA]));
  [((LibOrgBouncycastleCryptoGeneratorsGOST3410KeyPairGenerator *) nil_chk(self->engine_)) init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:self->param_];
  self->initialised_ = true;
  self->gost3410Params_ = gParams;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricGostJcajceGostKeyPairGeneratorSpi)
