//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.java
//

#include "ASN1ObjectIdentifier.h"
#include "Arrays.h"
#include "BaseAgreementSpi.h"
#include "CryptoProObjectIdentifiers.h"
#include "DESParameters.h"
#include "DHKDFParameters.h"
#include "DHKEKGenerator.h"
#include "DerivationFunction.h"
#include "GNUObjectIdentifiers.h"
#include "IOSPrimitiveArray.h"
#include "Integers.h"
#include "J2ObjC_source.h"
#include "KDFParameters.h"
#include "KISAObjectIdentifiers.h"
#include "MiscObjectIdentifiers.h"
#include "NISTObjectIdentifiers.h"
#include "NTTObjectIdentifiers.h"
#include "OIWObjectIdentifiers.h"
#include "PKCSObjectIdentifiers.h"
#include "Strings.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/HashMap.h"
#include "java/util/Hashtable.h"
#include "java/util/Map.h"
#include "javax/crypto/KeyAgreementSpi.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/ShortBufferException.h"
#include "javax/crypto/spec/SecretKeySpec.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi ()

- (IOSByteArray *)getSharedSecretBytesWithByteArray:(IOSByteArray *)secret
                                       withNSString:(NSString *)oidAlgorithm
                                            withInt:(jint)keySize;

@end

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_defaultOids(void);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, defaultOids, id<JavaUtilMap>)

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_keySizes(void);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, keySizes, id<JavaUtilMap>)

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_nameTable(void);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, nameTable, id<JavaUtilMap>)

inline JavaUtilHashtable *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_oids(void);
static JavaUtilHashtable *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, oids, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_des(void);
static JavaUtilHashtable *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, des, JavaUtilHashtable *)

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, IOSByteArray *secret, NSString *oidAlgorithm, jint keySize);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi

- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withLibOrgBouncycastleCryptoDerivationFunction:(id<LibOrgBouncycastleCryptoDerivationFunction>)kdf {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  return self;
}

+ (NSString *)getAlgorithmWithNSString:(NSString *)algDetails {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(algDetails);
}

+ (jint)getKeySizeWithNSString:(NSString *)algDetails {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(algDetails);
}

+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)secret {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(secret);
}

- (IOSByteArray *)engineGenerateSecret {
  if (kdf_ != nil) {
    IOSByteArray *secret = [self calcSecret];
    @try {
      return LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, secret, nil, ((IOSByteArray *) nil_chk(secret))->size_ * 8);
    }
    @catch (JavaSecurityNoSuchAlgorithmException *e) {
      @throw new_JavaLangIllegalStateException_initWithNSString_([e getMessage]);
    }
  }
  return [self calcSecret];
}

- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)sharedSecret
                                  withInt:(jint)offset {
  IOSByteArray *secret = [self engineGenerateSecret];
  if (((IOSByteArray *) nil_chk(sharedSecret))->size_ - offset < ((IOSByteArray *) nil_chk(secret))->size_) {
    @throw new_JavaxCryptoShortBufferException_initWithNSString_(JreStrcat("$$I$", kaAlgorithm_, @" key agreement: need ", secret->size_, @" bytes"));
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, 0, sharedSecret, offset, secret->size_);
  return secret->size_;
}

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithNSString:(NSString *)algorithm {
  NSString *algKey = LibOrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algorithm);
  NSString *oidAlgorithm = algorithm;
  if ([((JavaUtilHashtable *) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids)) containsKeyWithId:algKey]) {
    oidAlgorithm = [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids getWithId:algKey], [LibOrgBouncycastleAsn1ASN1ObjectIdentifier class])))) getId];
  }
  jint keySize = LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(oidAlgorithm);
  IOSByteArray *secret = LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, [self calcSecret], oidAlgorithm, keySize);
  NSString *algName = LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(algorithm);
  if ([((JavaUtilHashtable *) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des)) containsKeyWithId:algName]) {
    LibOrgBouncycastleCryptoParamsDESParameters_setOddParityWithByteArray_(secret);
  }
  return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(secret, algName);
}

- (IOSByteArray *)getSharedSecretBytesWithByteArray:(IOSByteArray *)secret
                                       withNSString:(NSString *)oidAlgorithm
                                            withInt:(jint)keySize {
  return LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, secret, oidAlgorithm, keySize);
}

- (IOSByteArray *)calcSecret {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0xc, 3, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0xc, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 6, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 8, 9, -1, -1, -1 },
    { NULL, "LJavaxCryptoSecretKey;", 0x4, 7, 2, 10, -1, -1, -1 },
    { NULL, "[B", 0x2, 11, 12, 10, -1, -1, -1 },
    { NULL, "[B", 0x404, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoDerivationFunction:);
  methods[1].selector = @selector(getAlgorithmWithNSString:);
  methods[2].selector = @selector(getKeySizeWithNSString:);
  methods[3].selector = @selector(trimZeroesWithByteArray:);
  methods[4].selector = @selector(engineGenerateSecret);
  methods[5].selector = @selector(engineGenerateSecretWithByteArray:withInt:);
  methods[6].selector = @selector(engineGenerateSecretWithNSString:);
  methods[7].selector = @selector(getSharedSecretBytesWithByteArray:withNSString:withInt:);
  methods[8].selector = @selector(calcSecret);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "defaultOids", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 13, 14, -1 },
    { "keySizes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 15, 16, -1 },
    { "nameTable", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 17, 18, -1 },
    { "oids", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "des", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "kaAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "kdf_", "LLibOrgBouncycastleCryptoDerivationFunction;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "ukmParameters_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LLibOrgBouncycastleCryptoDerivationFunction;", "getAlgorithm", "LNSString;", "getKeySize", "trimZeroes", "[B", "LJavaLangIllegalStateException;", "engineGenerateSecret", "[BI", "LJavaLangIllegalStateException;LJavaxCryptoShortBufferException;", "LJavaSecurityNoSuchAlgorithmException;", "getSharedSecretBytes", "[BLNSString;I", &LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids, "Ljava/util/Map<Ljava/lang/String;Llib/org/bouncycastle/asn1/ASN1ObjectIdentifier;>;", &LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", &LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", &LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids, &LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi = { "BaseAgreementSpi", "lib.org.bouncycastle.jcajce.provider.asymmetric.util", ptrTable, methods, fields, 7, 0x401, 9, 8, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi class]) {
    LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids = new_JavaUtilHashMap_init();
    LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes = new_JavaUtilHashMap_init();
    LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable = new_JavaUtilHashMap_init();
    LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids = new_JavaUtilHashtable_init();
    LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des = new_JavaUtilHashtable_init();
    {
      JavaLangInteger *i64 = LibOrgBouncycastleUtilIntegers_valueOfWithInt_(64);
      JavaLangInteger *i128 = LibOrgBouncycastleUtilIntegers_valueOfWithInt_(128);
      JavaLangInteger *i192 = LibOrgBouncycastleUtilIntegers_valueOfWithInt_(192);
      JavaLangInteger *i256 = LibOrgBouncycastleUtilIntegers_valueOfWithInt_(256);
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"DES" withId:i64];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"DESEDE" withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"BLOWFISH" withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"AES" withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_ECB))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_ECB))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_ECB))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CFB))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CFB))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CFB))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_OFB))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_OFB))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_OFB))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap))) getId] withId:i128];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC))) getId] withId:i192];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC))) getId] withId:i64];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR28147_gcfb))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, id_Gost28147_89_None_KeyWrap))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, id_Gost28147_89_CryptoPro_KeyWrap))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1))) getId] withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(160)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256))) getId] withId:i256];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384))) getId] withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(384)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512))) getId] withId:LibOrgBouncycastleUtilIntegers_valueOfWithInt_(512)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"DESEDE" withId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"AES" withId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"CAMELLIA" withId:JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"SEED" withId:JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"DES" withId:JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, cast5CBC))) getId] withId:@"CAST5"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, as_sys_sec_alg_ideaCBC))) getId] withId:@"IDEA"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_ECB))) getId] withId:@"Blowfish"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_CBC))) getId] withId:@"Blowfish"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_CFB))) getId] withId:@"Blowfish"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_OFB))) getId] withId:@"Blowfish"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desECB))) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCFB))) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desOFB))) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desEDE))) getId] withId:@"DESede"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) getId] withId:@"DESede"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) getId] withId:@"DESede"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMSRC2wrap))) getId] withId:@"RC2"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1) getId] withId:@"HmacSHA1"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA224))) getId] withId:@"HmacSHA224"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256) getId] withId:@"HmacSHA256"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384) getId] withId:@"HmacSHA384"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512) getId] withId:@"HmacSHA512"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc))) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc))) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc))) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) getId] withId:@"Camellia"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) getId] withId:@"JcajceSEED"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC))) getId] withId:@"JcajceSEED"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedMAC))) getId] withId:@"JcajceSEED"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR28147_gcfb) getId] withId:@"GOST28147"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) getId] withId:@"AES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) getId] withId:@"AES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) getId] withId:@"AES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"DESEDE" withId:JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"AES" withId:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"DES" withId:JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC)];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:@"DES" withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:@"DESEDE" withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) getId] withId:@"DES"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) getId] withId:@"DES"];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)
  }
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withLibOrgBouncycastleCryptoDerivationFunction_(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, NSString *kaAlgorithm, id<LibOrgBouncycastleCryptoDerivationFunction> kdf) {
  JavaxCryptoKeyAgreementSpi_init(self);
  self->kaAlgorithm_ = kaAlgorithm;
  self->kdf_ = kdf;
}

NSString *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(NSString *algDetails) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if ([((NSString *) nil_chk(algDetails)) java_indexOf:'['] > 0) {
    return [algDetails java_substring:0 endIndex:[algDetails java_indexOf:'[']];
  }
  if ([algDetails java_hasPrefix:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, aes))) getId]]) {
    return @"AES";
  }
  if ([algDetails java_hasPrefix:[((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent))) getId]]) {
    return @"Serpent";
  }
  NSString *name = [((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable)) getWithId:LibOrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algDetails)];
  if (name != nil) {
    return name;
  }
  return algDetails;
}

jint LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(NSString *algDetails) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if ([((NSString *) nil_chk(algDetails)) java_indexOf:'['] > 0) {
    return JavaLangInteger_parseIntWithNSString_([algDetails java_substring:[algDetails java_indexOf:'['] + 1 endIndex:[algDetails java_indexOf:']']]);
  }
  NSString *algKey = LibOrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algDetails);
  if (![((id<JavaUtilMap>) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes)) containsKeyWithId:algKey]) {
    return -1;
  }
  return [((JavaLangInteger *) nil_chk(([LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes getWithId:algKey]))) intValue];
}

IOSByteArray *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(IOSByteArray *secret) {
  LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if (IOSByteArray_Get(nil_chk(secret), 0) != 0) {
    return secret;
  }
  else {
    jint ind = 0;
    while (ind < secret->size_ && IOSByteArray_Get(secret, ind) == 0) {
      ind++;
    }
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:secret->size_ - ind];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, ind, rv, 0, rv->size_);
    return rv;
  }
}

IOSByteArray *LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, IOSByteArray *secret, NSString *oidAlgorithm, jint keySize) {
  if (self->kdf_ != nil) {
    if (keySize < 0) {
      @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"unknown algorithm encountered: ", oidAlgorithm));
    }
    IOSByteArray *keyBytes = [IOSByteArray newArrayWithLength:keySize / 8];
    if ([self->kdf_ isKindOfClass:[LibOrgBouncycastleCryptoAgreementKdfDHKEKGenerator class]]) {
      if (oidAlgorithm == nil) {
        @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(@"algorithm OID is null");
      }
      LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid;
      @try {
        oid = new_LibOrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oidAlgorithm);
      }
      @catch (JavaLangIllegalArgumentException *e) {
        @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"no OID for algorithm: ", oidAlgorithm));
      }
      LibOrgBouncycastleCryptoAgreementKdfDHKDFParameters *params = new_LibOrgBouncycastleCryptoAgreementKdfDHKDFParameters_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_withByteArray_withByteArray_(oid, keySize, secret, self->ukmParameters_);
      [self->kdf_ init__WithLibOrgBouncycastleCryptoDerivationParameters:params];
    }
    else {
      LibOrgBouncycastleCryptoParamsKDFParameters *params = new_LibOrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(secret, self->ukmParameters_);
      [self->kdf_ init__WithLibOrgBouncycastleCryptoDerivationParameters:params];
    }
    [self->kdf_ generateBytesWithByteArray:keyBytes withInt:0 withInt:keyBytes->size_];
    LibOrgBouncycastleUtilArrays_clearWithByteArray_(secret);
    return keyBytes;
  }
  else {
    if (keySize > 0) {
      IOSByteArray *keyBytes = [IOSByteArray newArrayWithLength:keySize / 8];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, 0, keyBytes, 0, keyBytes->size_);
      LibOrgBouncycastleUtilArrays_clearWithByteArray_(secret);
      return keyBytes;
    }
    return secret;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)
