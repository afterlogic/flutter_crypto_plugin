//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/X509CertPairParser.java
//

#ifndef X509CertPairParser_H
#define X509CertPairParser_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "X509StreamParserSpi.h"

@class JavaIoInputStream;
@protocol JavaUtilCollection;

@interface LibOrgBouncycastleJceProviderX509CertPairParser : LibOrgBouncycastleX509X509StreamParserSpi

#pragma mark Public

- (instancetype __nonnull)init;

- (void)engineInitWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (id)engineRead;

- (id<JavaUtilCollection>)engineReadAll;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderX509CertPairParser)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderX509CertPairParser_init(LibOrgBouncycastleJceProviderX509CertPairParser *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderX509CertPairParser *new_LibOrgBouncycastleJceProviderX509CertPairParser_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderX509CertPairParser *create_LibOrgBouncycastleJceProviderX509CertPairParser_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderX509CertPairParser)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X509CertPairParser_H
