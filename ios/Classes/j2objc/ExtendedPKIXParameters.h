//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/ExtendedPKIXParameters.java
//

#ifndef ExtendedPKIXParameters_H
#define ExtendedPKIXParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/PKIXParameters.h"

@class JavaSecurityKeyStore;
@protocol JavaSecurityCertCertSelector;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol LibOrgBouncycastleUtilSelector;
@protocol LibOrgBouncycastleUtilStore;

@interface LibOrgBouncycastleX509ExtendedPKIXParameters : JavaSecurityCertPKIXParameters
@property (readonly, class) jint PKIX_VALIDITY_MODEL NS_SWIFT_NAME(PKIX_VALIDITY_MODEL);
@property (readonly, class) jint CHAIN_VALIDITY_MODEL NS_SWIFT_NAME(CHAIN_VALIDITY_MODEL);

+ (jint)PKIX_VALIDITY_MODEL;

+ (jint)CHAIN_VALIDITY_MODEL;

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilSet:(id<JavaUtilSet>)trustAnchors;

- (void)addAddionalStoreWithLibOrgBouncycastleUtilStore:(id<LibOrgBouncycastleUtilStore>)store;

- (void)addAdditionalStoreWithLibOrgBouncycastleUtilStore:(id<LibOrgBouncycastleUtilStore>)store;

- (void)addStoreWithLibOrgBouncycastleUtilStore:(id<LibOrgBouncycastleUtilStore>)store;

- (id)java_clone;

- (id<JavaUtilList>)getAdditionalStores;

- (id<JavaUtilSet>)getAttrCertCheckers;

+ (LibOrgBouncycastleX509ExtendedPKIXParameters *)getInstanceWithJavaSecurityCertPKIXParameters:(JavaSecurityCertPKIXParameters *)pkixParams;

- (id<JavaUtilSet>)getNecessaryACAttributes;

- (id<JavaUtilSet>)getProhibitedACAttributes;

- (id<JavaUtilList>)getStores;

- (id<LibOrgBouncycastleUtilSelector>)getTargetConstraints;

- (id<JavaUtilSet>)getTrustedACIssuers;

- (jint)getValidityModel;

- (jboolean)isAdditionalLocationsEnabled;

- (jboolean)isUseDeltasEnabled;

- (void)setAdditionalLocationsEnabledWithBoolean:(jboolean)enabled;

- (void)setAttrCertCheckersWithJavaUtilSet:(id<JavaUtilSet>)attrCertCheckers;

- (void)setCertStoresWithJavaUtilList:(id<JavaUtilList>)stores;

- (void)setNecessaryACAttributesWithJavaUtilSet:(id<JavaUtilSet>)necessaryACAttributes;

- (void)setProhibitedACAttributesWithJavaUtilSet:(id<JavaUtilSet>)prohibitedACAttributes;

- (void)setStoresWithJavaUtilList:(id<JavaUtilList>)stores;

- (void)setTargetCertConstraintsWithJavaSecurityCertCertSelector:(id<JavaSecurityCertCertSelector>)selector;

- (void)setTargetConstraintsWithLibOrgBouncycastleUtilSelector:(id<LibOrgBouncycastleUtilSelector>)selector;

- (void)setTrustedACIssuersWithJavaUtilSet:(id<JavaUtilSet>)trustedACIssuers;

- (void)setUseDeltasEnabledWithBoolean:(jboolean)useDeltas;

- (void)setValidityModelWithInt:(jint)validityModel;

#pragma mark Protected

- (void)setParamsWithJavaSecurityCertPKIXParameters:(JavaSecurityCertPKIXParameters *)params;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509ExtendedPKIXParameters)

inline jint LibOrgBouncycastleX509ExtendedPKIXParameters_get_PKIX_VALIDITY_MODEL(void);
#define LibOrgBouncycastleX509ExtendedPKIXParameters_PKIX_VALIDITY_MODEL 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleX509ExtendedPKIXParameters, PKIX_VALIDITY_MODEL, jint)

inline jint LibOrgBouncycastleX509ExtendedPKIXParameters_get_CHAIN_VALIDITY_MODEL(void);
#define LibOrgBouncycastleX509ExtendedPKIXParameters_CHAIN_VALIDITY_MODEL 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleX509ExtendedPKIXParameters, CHAIN_VALIDITY_MODEL, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleX509ExtendedPKIXParameters_initWithJavaUtilSet_(LibOrgBouncycastleX509ExtendedPKIXParameters *self, id<JavaUtilSet> trustAnchors);

FOUNDATION_EXPORT LibOrgBouncycastleX509ExtendedPKIXParameters *new_LibOrgBouncycastleX509ExtendedPKIXParameters_initWithJavaUtilSet_(id<JavaUtilSet> trustAnchors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509ExtendedPKIXParameters *create_LibOrgBouncycastleX509ExtendedPKIXParameters_initWithJavaUtilSet_(id<JavaUtilSet> trustAnchors);

FOUNDATION_EXPORT LibOrgBouncycastleX509ExtendedPKIXParameters *LibOrgBouncycastleX509ExtendedPKIXParameters_getInstanceWithJavaSecurityCertPKIXParameters_(JavaSecurityCertPKIXParameters *pkixParams);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509ExtendedPKIXParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExtendedPKIXParameters_H
