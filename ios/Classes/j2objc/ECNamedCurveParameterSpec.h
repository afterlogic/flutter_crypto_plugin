//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECNamedCurveParameterSpec.java
//

#ifndef ECNamedCurveParameterSpec_H
#define ECNamedCurveParameterSpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECParameterSpec.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleMathEcECCurve;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleJceSpecECNamedCurveParameterSpec : LibOrgBouncycastleJceSpecECParameterSpec

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                    withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                    withJavaMathBigInteger:(JavaMathBigInteger *)n
                    withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)G
                    withJavaMathBigInteger:(JavaMathBigInteger *)n
                    withJavaMathBigInteger:(JavaMathBigInteger *)h
                             withByteArray:(IOSByteArray *)seed;

- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg3 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)arg0
                              withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)arg1
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                                           withJavaMathBigInteger:(JavaMathBigInteger *)arg3
                                                    withByteArray:(IOSByteArray *)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *new_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveParameterSpec *create_LibOrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceSpecECNamedCurveParameterSpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECNamedCurveParameterSpec_H
