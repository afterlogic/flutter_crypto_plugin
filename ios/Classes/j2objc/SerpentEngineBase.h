//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/SerpentEngineBase.java
//

#ifndef SerpentEngineBase_H
#define SerpentEngineBase_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BlockCipher.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoEnginesSerpentEngineBase : NSObject < LibOrgBouncycastleCryptoBlockCipher > {
 @public
  jboolean encrypting_;
  IOSIntArray *wKey_;
  jint X0_;
  jint X1_;
  jint X2_;
  jint X3_;
}
@property (readonly, class) jint BLOCK_SIZE NS_SWIFT_NAME(BLOCK_SIZE);
@property (readonly, class) jint ROUNDS NS_SWIFT_NAME(ROUNDS);
@property (readonly, class) jint PHI NS_SWIFT_NAME(PHI);

+ (jint)BLOCK_SIZE;

+ (jint)ROUNDS;

+ (jint)PHI;

#pragma mark Public

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

- (void)init__WithBoolean:(jboolean)encrypting
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

#pragma mark Protected

- (void)decryptBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)output
                          withInt:(jint)outOff;

- (void)encryptBlockWithByteArray:(IOSByteArray *)input
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)output
                          withInt:(jint)outOff;

- (void)ib0WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib1WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib2WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib3WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib4WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib5WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib6WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)ib7WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)inverseLT;

- (void)LT;

- (IOSIntArray *)makeWorkingKeyWithByteArray:(IOSByteArray *)key;

+ (jint)rotateLeftWithInt:(jint)x
                  withInt:(jint)bits;

+ (jint)rotateRightWithInt:(jint)x
                   withInt:(jint)bits;

- (void)sb0WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb1WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb2WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb3WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb4WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb5WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb6WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

- (void)sb7WithInt:(jint)a
           withInt:(jint)b
           withInt:(jint)c
           withInt:(jint)d;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEnginesSerpentEngineBase)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoEnginesSerpentEngineBase, wKey_, IOSIntArray *)

inline jint LibOrgBouncycastleCryptoEnginesSerpentEngineBase_get_BLOCK_SIZE(void);
#define LibOrgBouncycastleCryptoEnginesSerpentEngineBase_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoEnginesSerpentEngineBase, BLOCK_SIZE, jint)

inline jint LibOrgBouncycastleCryptoEnginesSerpentEngineBase_get_ROUNDS(void);
#define LibOrgBouncycastleCryptoEnginesSerpentEngineBase_ROUNDS 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoEnginesSerpentEngineBase, ROUNDS, jint)

inline jint LibOrgBouncycastleCryptoEnginesSerpentEngineBase_get_PHI(void);
#define LibOrgBouncycastleCryptoEnginesSerpentEngineBase_PHI -1640531527
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoEnginesSerpentEngineBase, PHI, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesSerpentEngineBase_init(LibOrgBouncycastleCryptoEnginesSerpentEngineBase *self);

FOUNDATION_EXPORT jint LibOrgBouncycastleCryptoEnginesSerpentEngineBase_rotateLeftWithInt_withInt_(jint x, jint bits);

FOUNDATION_EXPORT jint LibOrgBouncycastleCryptoEnginesSerpentEngineBase_rotateRightWithInt_withInt_(jint x, jint bits);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEnginesSerpentEngineBase)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SerpentEngineBase_H
