//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/Serpent.java
//

#include "ASN1ObjectIdentifier.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "BufferedBlockCipher.h"
#include "CBCBlockCipher.h"
#include "CFBBlockCipher.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "GNUObjectIdentifiers.h"
#include "IOSClass.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "OFBBlockCipher.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "Serpent.h"
#include "SerpentEngine.h"
#include "SymmetricAlgorithmProvider.h"
#include "TnepresEngine.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricSerpent ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricSerpent_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams;LLibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent = { "Serpent", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB = { "TECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesTnepresEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init()), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB = { "CFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_CFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB = { "OFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesOFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_OFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Serpent", 192, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen = { "TKeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Tnepres", 192, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TKeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC = { "SerpentGMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_SerpentGMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC = { "TSerpentGMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesTnepresEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TSerpentGMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSerpentEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-Serpent", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"Serpent IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_AlgParams)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"Tnepres IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams = { "TAlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_TAlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Cipher.Serpent" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.Serpent" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.Serpent" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"Cipher.Tnepres" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$TECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.Tnepres" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$TKeyGen")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.Tnepres" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$TAlgParams")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_128_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_192_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_256_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_128_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_192_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_256_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_128_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_192_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_256_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$CFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_128_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_192_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent_256_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$OFB")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SERPENT" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$SerpentGMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$KeyGen")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"TNEPRES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$TSerpentGMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$TKeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SERPENT" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricSerpent;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricSerpent_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSerpent_Mappings)
