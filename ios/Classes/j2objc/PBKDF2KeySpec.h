//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/PBKDF2KeySpec.java
//

#ifndef PBKDF2KeySpec_H
#define PBKDF2KeySpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "javax/crypto/spec/PBEKeySpec.h"

@class IOSByteArray;
@class IOSCharArray;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleJcajceSpecPBKDF2KeySpec : JavaxCryptoSpecPBEKeySpec

#pragma mark Public

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)password
                              withByteArray:(IOSByteArray *)salt
                                    withInt:(jint)iterationCount
                                    withInt:(jint)keySize
withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)prf;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getPrf;

- (jboolean)isDefaultPrf;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0
                              withByteArray:(IOSByteArray *)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0
                              withByteArray:(IOSByteArray *)arg1
                                    withInt:(jint)arg2
                                    withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceSpecPBKDF2KeySpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecPBKDF2KeySpec_initWithCharArray_withByteArray_withInt_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleJcajceSpecPBKDF2KeySpec *self, IOSCharArray *password, IOSByteArray *salt, jint iterationCount, jint keySize, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *prf);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecPBKDF2KeySpec *new_LibOrgBouncycastleJcajceSpecPBKDF2KeySpec_initWithCharArray_withByteArray_withInt_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount, jint keySize, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *prf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecPBKDF2KeySpec *create_LibOrgBouncycastleJcajceSpecPBKDF2KeySpec_initWithCharArray_withByteArray_withInt_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount, jint keySize, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *prf);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceSpecPBKDF2KeySpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PBKDF2KeySpec_H
