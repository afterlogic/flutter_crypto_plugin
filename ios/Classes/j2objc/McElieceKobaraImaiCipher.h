//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceKobaraImaiCipher.java
//

#ifndef McElieceKobaraImaiCipher_H
#define McElieceKobaraImaiCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "MessageEncryptor.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher : NSObject < LibOrgBouncycastlePqcCryptoMessageEncryptor > {
 @public
  LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *key_;
}
@property (readonly, copy, class) NSString *OID NS_SWIFT_NAME(OID);
@property (readonly, class) IOSByteArray *PUBLIC_CONSTANT NS_SWIFT_NAME(PUBLIC_CONSTANT);

+ (NSString *)OID;

+ (IOSByteArray *)PUBLIC_CONSTANT;

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)getKeySizeWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *)key;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)messageDecryptWithByteArray:(IOSByteArray *)input;

- (IOSByteArray *)messageEncryptWithByteArray:(IOSByteArray *)input;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher)

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher, key_, LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyParameters *)

inline NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher, OID, NSString *)

inline IOSByteArray *LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_get_PUBLIC_CONSTANT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_PUBLIC_CONSTANT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher, PUBLIC_CONSTANT, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKobaraImaiCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceKobaraImaiCipher_H
