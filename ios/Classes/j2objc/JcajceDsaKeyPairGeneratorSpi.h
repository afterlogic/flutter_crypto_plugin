//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dsa/JcajceDsaKeyPairGeneratorSpi.java
//

#ifndef JcajceDsaKeyPairGeneratorSpi_H
#define JcajceDsaKeyPairGeneratorSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/KeyPairGenerator.h"

@class JavaSecurityKeyPair;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoGeneratorsDSAKeyPairGenerator;
@class LibOrgBouncycastleCryptoParamsDSAKeyGenerationParameters;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi : JavaSecurityKeyPairGenerator {
 @public
  LibOrgBouncycastleCryptoParamsDSAKeyGenerationParameters *param_;
  LibOrgBouncycastleCryptoGeneratorsDSAKeyPairGenerator *engine_;
  jint strength_;
  JavaSecuritySecureRandom *random_;
  jboolean initialised_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaSecurityKeyPair *)generateKeyPair;

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi, param_, LibOrgBouncycastleCryptoParamsDSAKeyGenerationParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi, engine_, LibOrgBouncycastleCryptoGeneratorsDSAKeyPairGenerator *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi, random_, JavaSecuritySecureRandom *)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi_init(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricDsaJcajceDsaKeyPairGeneratorSpi)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajceDsaKeyPairGeneratorSpi_H
