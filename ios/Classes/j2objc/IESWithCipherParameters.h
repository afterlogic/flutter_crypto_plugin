//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/IESWithCipherParameters.java
//

#ifndef IESWithCipherParameters_H
#define IESWithCipherParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "IESParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsIESWithCipherParameters : LibOrgBouncycastleCryptoParamsIESParameters

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)derivation
                              withByteArray:(IOSByteArray *)encoding
                                    withInt:(jint)macKeySize
                                    withInt:(jint)cipherKeySize;

- (jint)getCipherKeySize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0
                              withByteArray:(IOSByteArray *)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsIESWithCipherParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(LibOrgBouncycastleCryptoParamsIESWithCipherParameters *self, IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsIESWithCipherParameters *new_LibOrgBouncycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsIESWithCipherParameters *create_LibOrgBouncycastleCryptoParamsIESWithCipherParameters_initWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *derivation, IOSByteArray *encoding, jint macKeySize, jint cipherKeySize);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsIESWithCipherParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IESWithCipherParameters_H
