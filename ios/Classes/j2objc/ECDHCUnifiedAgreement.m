//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/ECDHCUnifiedAgreement.java
//

#include "Arrays.h"
#include "BigIntegers.h"
#include "CipherParameters.h"
#include "ECCurve.h"
#include "ECDHCBasicAgreement.h"
#include "ECDHCUnifiedAgreement.h"
#include "ECDHUPrivateParameters.h"
#include "ECDHUPublicParameters.h"
#include "ECDomainParameters.h"
#include "ECPrivateKeyParameters.h"
#include "ECPublicKeyParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement () {
 @public
  LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *privParams_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement, privParams_, LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *)

@implementation LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)key {
  self->privParams_ = (LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *) cast_chk(key, [LibOrgBouncycastleCryptoParamsECDHUPrivateParameters class]);
}

- (jint)getFieldSize {
  return ([((LibOrgBouncycastleMathEcECCurve *) nil_chk([((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk([((LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk([((LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *) nil_chk(privParams_)) getStaticPrivateKey])) getParameters])) getCurve])) getFieldSize] + 7) / 8;
}

- (IOSByteArray *)calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)pubKey {
  LibOrgBouncycastleCryptoParamsECDHUPublicParameters *pubParams = (LibOrgBouncycastleCryptoParamsECDHUPublicParameters *) cast_chk(pubKey, [LibOrgBouncycastleCryptoParamsECDHUPublicParameters class]);
  LibOrgBouncycastleCryptoAgreementECDHCBasicAgreement *sAgree = new_LibOrgBouncycastleCryptoAgreementECDHCBasicAgreement_init();
  LibOrgBouncycastleCryptoAgreementECDHCBasicAgreement *eAgree = new_LibOrgBouncycastleCryptoAgreementECDHCBasicAgreement_init();
  [sAgree init__WithLibOrgBouncycastleCryptoCipherParameters:[((LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *) nil_chk(privParams_)) getStaticPrivateKey]];
  JavaMathBigInteger *sComp = [sAgree calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:[((LibOrgBouncycastleCryptoParamsECDHUPublicParameters *) nil_chk(pubParams)) getStaticPublicKey]];
  [eAgree init__WithLibOrgBouncycastleCryptoCipherParameters:[((LibOrgBouncycastleCryptoParamsECDHUPrivateParameters *) nil_chk(privParams_)) getEphemeralPrivateKey]];
  JavaMathBigInteger *eComp = [eAgree calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:[pubParams getEphemeralPublicKey]];
  return LibOrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(LibOrgBouncycastleUtilBigIntegers_asUnsignedByteArrayWithInt_withJavaMathBigInteger_([self getFieldSize], eComp), LibOrgBouncycastleUtilBigIntegers_asUnsignedByteArrayWithInt_withJavaMathBigInteger_([self getFieldSize], sComp));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithLibOrgBouncycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getFieldSize);
  methods[3].selector = @selector(calculateAgreementWithLibOrgBouncycastleCryptoCipherParameters:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "privParams_", "LLibOrgBouncycastleCryptoParamsECDHUPrivateParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LLibOrgBouncycastleCryptoCipherParameters;", "calculateAgreement" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement = { "ECDHCUnifiedAgreement", "lib.org.bouncycastle.crypto.agreement", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement;
}

@end

void LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *new_LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement, init)
}

LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement *create_LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoAgreementECDHCUnifiedAgreement)
