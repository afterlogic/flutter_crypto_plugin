//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/AEADParameterSpec.java
//

#include "AEADParameterSpec.h"
#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceSpecAEADParameterSpec () {
 @public
  IOSByteArray *associatedData_;
  jint macSizeInBits_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceSpecAEADParameterSpec, associatedData_, IOSByteArray *)

@implementation LibOrgBouncycastleJcajceSpecAEADParameterSpec

- (instancetype)initWithByteArray:(IOSByteArray *)nonce
                          withInt:(jint)macSizeInBits {
  LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(self, nonce, macSizeInBits);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)nonce
                          withInt:(jint)macSizeInBits
                    withByteArray:(IOSByteArray *)associatedData {
  LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(self, nonce, macSizeInBits, associatedData);
  return self;
}

- (jint)getMacSizeInBits {
  return macSizeInBits_;
}

- (IOSByteArray *)getAssociatedData {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(associatedData_);
}

- (IOSByteArray *)getNonce {
  return [self getIV];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withInt:);
  methods[1].selector = @selector(initWithByteArray:withInt:withByteArray:);
  methods[2].selector = @selector(getMacSizeInBits);
  methods[3].selector = @selector(getAssociatedData);
  methods[4].selector = @selector(getNonce);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "associatedData_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "macSizeInBits_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[BI", "[BI[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceSpecAEADParameterSpec = { "AEADParameterSpec", "lib.org.bouncycastle.jcajce.spec", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceSpecAEADParameterSpec;
}

@end

void LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(LibOrgBouncycastleJcajceSpecAEADParameterSpec *self, IOSByteArray *nonce, jint macSizeInBits) {
  LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(self, nonce, macSizeInBits, nil);
}

LibOrgBouncycastleJcajceSpecAEADParameterSpec *new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(IOSByteArray *nonce, jint macSizeInBits) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceSpecAEADParameterSpec, initWithByteArray_withInt_, nonce, macSizeInBits)
}

LibOrgBouncycastleJcajceSpecAEADParameterSpec *create_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(IOSByteArray *nonce, jint macSizeInBits) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceSpecAEADParameterSpec, initWithByteArray_withInt_, nonce, macSizeInBits)
}

void LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(LibOrgBouncycastleJcajceSpecAEADParameterSpec *self, IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData) {
  JavaxCryptoSpecIvParameterSpec_initWithByteArray_(self, nonce);
  self->macSizeInBits_ = macSizeInBits;
  self->associatedData_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(associatedData);
}

LibOrgBouncycastleJcajceSpecAEADParameterSpec *new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceSpecAEADParameterSpec, initWithByteArray_withInt_withByteArray_, nonce, macSizeInBits, associatedData)
}

LibOrgBouncycastleJcajceSpecAEADParameterSpec *create_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceSpecAEADParameterSpec, initWithByteArray_withInt_withByteArray_, nonce, macSizeInBits, associatedData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceSpecAEADParameterSpec)
