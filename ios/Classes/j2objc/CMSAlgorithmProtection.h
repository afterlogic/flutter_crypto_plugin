//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/CMSAlgorithmProtection.java
//

#ifndef CMSAlgorithmProtection_H
#define CMSAlgorithmProtection_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) jint SIGNATURE NS_SWIFT_NAME(SIGNATURE);
@property (readonly, class) jint MAC NS_SWIFT_NAME(MAC);

+ (jint)SIGNATURE;

+ (jint)MAC;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)digestAlgorithm
                                                                        withInt:(jint)type
                              withLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

+ (LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getMacAlgorithm;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection)

inline jint LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_get_SIGNATURE(void);
#define LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_SIGNATURE 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection, SIGNATURE, jint)

inline jint LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_get_MAC(void);
#define LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_MAC 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection, MAC, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection *new_LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection *create_LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withInt_withLibOrgBouncycastleAsn1X509AlgorithmIdentifier_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection *LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsCMSAlgorithmProtection)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CMSAlgorithmProtection_H
