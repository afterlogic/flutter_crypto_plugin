//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/attr/ImageAttribute.java
//

#ifndef ImageAttribute_H
#define ImageAttribute_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "UserAttributeSubpacket.h"

@class IOSByteArray;

@interface LibOrgBouncycastleBcpgAttrImageAttribute : LibOrgBouncycastleBcpgUserAttributeSubpacket
@property (readonly, class) jint JPEG NS_SWIFT_NAME(JPEG);

+ (jint)JPEG;

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)forceLongLength
                            withByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithInt:(jint)imageType
                        withByteArray:(IOSByteArray *)imageData;

- (jint)getEncoding;

- (IOSByteArray *)getImageData;

- (jint)version__;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                          withBoolean:(jboolean)arg1
                        withByteArray:(IOSByteArray *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleBcpgAttrImageAttribute)

inline jint LibOrgBouncycastleBcpgAttrImageAttribute_get_JPEG(void);
#define LibOrgBouncycastleBcpgAttrImageAttribute_JPEG 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleBcpgAttrImageAttribute, JPEG, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgAttrImageAttribute_initWithByteArray_(LibOrgBouncycastleBcpgAttrImageAttribute *self, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *new_LibOrgBouncycastleBcpgAttrImageAttribute_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *create_LibOrgBouncycastleBcpgAttrImageAttribute_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgAttrImageAttribute_initWithBoolean_withByteArray_(LibOrgBouncycastleBcpgAttrImageAttribute *self, jboolean forceLongLength, IOSByteArray *data);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *new_LibOrgBouncycastleBcpgAttrImageAttribute_initWithBoolean_withByteArray_(jboolean forceLongLength, IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *create_LibOrgBouncycastleBcpgAttrImageAttribute_initWithBoolean_withByteArray_(jboolean forceLongLength, IOSByteArray *data);

FOUNDATION_EXPORT void LibOrgBouncycastleBcpgAttrImageAttribute_initWithInt_withByteArray_(LibOrgBouncycastleBcpgAttrImageAttribute *self, jint imageType, IOSByteArray *imageData);

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *new_LibOrgBouncycastleBcpgAttrImageAttribute_initWithInt_withByteArray_(jint imageType, IOSByteArray *imageData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleBcpgAttrImageAttribute *create_LibOrgBouncycastleBcpgAttrImageAttribute_initWithInt_withByteArray_(jint imageType, IOSByteArray *imageData);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleBcpgAttrImageAttribute)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ImageAttribute_H
