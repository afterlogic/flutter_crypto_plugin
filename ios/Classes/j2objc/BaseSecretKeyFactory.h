//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/util/BaseSecretKeyFactory.java
//

#ifndef BaseSecretKeyFactory_H
#define BaseSecretKeyFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PBE.h"
#include "javax/crypto/SecretKeyFactorySpi.h"

@class IOSClass;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@protocol JavaSecuritySpecKeySpec;
@protocol JavaxCryptoSecretKey;

@interface LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory : JavaxCryptoSecretKeyFactorySpi < LibOrgBouncycastleJcajceProviderSymmetricUtilPBE > {
 @public
  NSString *algName_;
  LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algOid_;
}

#pragma mark Protected

- (instancetype __nonnull)initWithNSString:(NSString *)algName
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid;

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec;

- (id<JavaSecuritySpecKeySpec>)engineGetKeySpecWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                                           withIOSClass:(IOSClass *)keySpec;

- (id<JavaxCryptoSecretKey>)engineTranslateKeyWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory, algName_, NSString *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory, algOid_, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory *self, NSString *algName, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algOid);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(NSString *algName, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algOid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(NSString *algName, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algOid);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BaseSecretKeyFactory_H
