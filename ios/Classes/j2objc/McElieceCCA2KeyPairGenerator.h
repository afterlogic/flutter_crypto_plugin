//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyPairGenerator.java
//

#ifndef McElieceCCA2KeyPairGenerator_H
#define McElieceCCA2KeyPairGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricCipherKeyPairGenerator.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoAsymmetricCipherKeyPair;
@class LibOrgBouncycastleCryptoKeyGenerationParameters;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator : NSObject < LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator >
@property (readonly, copy, class) NSString *OID NS_SWIFT_NAME(OID);

+ (NSString *)OID;

#pragma mark Public

- (instancetype __nonnull)init;

- (LibOrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair;

- (void)init__WithLibOrgBouncycastleCryptoKeyGenerationParameters:(LibOrgBouncycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator)

inline NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, OID, NSString *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceCCA2KeyPairGenerator_H
