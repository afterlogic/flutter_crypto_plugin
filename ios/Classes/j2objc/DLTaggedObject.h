//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DLTaggedObject.java
//

#ifndef DLTaggedObject_H
#define DLTaggedObject_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1TaggedObject.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1OutputStream;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1DLTaggedObject : LibOrgBouncycastleAsn1ASN1TaggedObject

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)explicit_
                                  withInt:(jint)tagNo
  withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

#pragma mark Package-Private

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

- (jboolean)isConstructed;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1DLTaggedObject)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1DLTaggedObject *self, jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLTaggedObject *new_LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DLTaggedObject *create_LibOrgBouncycastleAsn1DLTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(jboolean explicit_, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1DLTaggedObject)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DLTaggedObject_H
