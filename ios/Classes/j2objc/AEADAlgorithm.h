//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/iana/AEADAlgorithm.java
//

#ifndef AEADAlgorithm_H
#define AEADAlgorithm_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleIanaAEADAlgorithm : NSObject
@property (readonly, class) jint AEAD_AES_128_GCM NS_SWIFT_NAME(AEAD_AES_128_GCM);
@property (readonly, class) jint AEAD_AES_256_GCM NS_SWIFT_NAME(AEAD_AES_256_GCM);
@property (readonly, class) jint AEAD_AES_128_CCM NS_SWIFT_NAME(AEAD_AES_128_CCM);
@property (readonly, class) jint AEAD_AES_256_CCM NS_SWIFT_NAME(AEAD_AES_256_CCM);
@property (readonly, class) jint AEAD_AES_128_GCM_8 NS_SWIFT_NAME(AEAD_AES_128_GCM_8);
@property (readonly, class) jint AEAD_AES_256_GCM_8 NS_SWIFT_NAME(AEAD_AES_256_GCM_8);
@property (readonly, class) jint AEAD_AES_128_GCM_12 NS_SWIFT_NAME(AEAD_AES_128_GCM_12);
@property (readonly, class) jint AEAD_AES_256_GCM_12 NS_SWIFT_NAME(AEAD_AES_256_GCM_12);
@property (readonly, class) jint AEAD_AES_128_CCM_SHORT NS_SWIFT_NAME(AEAD_AES_128_CCM_SHORT);
@property (readonly, class) jint AEAD_AES_256_CCM_SHORT NS_SWIFT_NAME(AEAD_AES_256_CCM_SHORT);
@property (readonly, class) jint AEAD_AES_128_CCM_SHORT_8 NS_SWIFT_NAME(AEAD_AES_128_CCM_SHORT_8);
@property (readonly, class) jint AEAD_AES_256_CCM_SHORT_8 NS_SWIFT_NAME(AEAD_AES_256_CCM_SHORT_8);
@property (readonly, class) jint AEAD_AES_128_CCM_SHORT_12 NS_SWIFT_NAME(AEAD_AES_128_CCM_SHORT_12);
@property (readonly, class) jint AEAD_AES_256_CCM_SHORT_12 NS_SWIFT_NAME(AEAD_AES_256_CCM_SHORT_12);
@property (readonly, class) jint AEAD_AES_SIV_CMAC_256 NS_SWIFT_NAME(AEAD_AES_SIV_CMAC_256);
@property (readonly, class) jint AEAD_AES_SIV_CMAC_384 NS_SWIFT_NAME(AEAD_AES_SIV_CMAC_384);
@property (readonly, class) jint AEAD_AES_SIV_CMAC_512 NS_SWIFT_NAME(AEAD_AES_SIV_CMAC_512);
@property (readonly, class) jint AEAD_AES_128_CCM_8 NS_SWIFT_NAME(AEAD_AES_128_CCM_8);
@property (readonly, class) jint AEAD_AES_256_CCM_8 NS_SWIFT_NAME(AEAD_AES_256_CCM_8);
@property (readonly, class) jint AEAD_AES_128_OCB_TAGLEN128 NS_SWIFT_NAME(AEAD_AES_128_OCB_TAGLEN128);
@property (readonly, class) jint AEAD_AES_128_OCB_TAGLEN96 NS_SWIFT_NAME(AEAD_AES_128_OCB_TAGLEN96);
@property (readonly, class) jint AEAD_AES_128_OCB_TAGLEN64 NS_SWIFT_NAME(AEAD_AES_128_OCB_TAGLEN64);
@property (readonly, class) jint AEAD_AES_192_OCB_TAGLEN128 NS_SWIFT_NAME(AEAD_AES_192_OCB_TAGLEN128);
@property (readonly, class) jint AEAD_AES_192_OCB_TAGLEN96 NS_SWIFT_NAME(AEAD_AES_192_OCB_TAGLEN96);
@property (readonly, class) jint AEAD_AES_192_OCB_TAGLEN64 NS_SWIFT_NAME(AEAD_AES_192_OCB_TAGLEN64);
@property (readonly, class) jint AEAD_AES_256_OCB_TAGLEN128 NS_SWIFT_NAME(AEAD_AES_256_OCB_TAGLEN128);
@property (readonly, class) jint AEAD_AES_256_OCB_TAGLEN96 NS_SWIFT_NAME(AEAD_AES_256_OCB_TAGLEN96);
@property (readonly, class) jint AEAD_AES_256_OCB_TAGLEN64 NS_SWIFT_NAME(AEAD_AES_256_OCB_TAGLEN64);
@property (readonly, class) jint AEAD_CHACHA20_POLY1305 NS_SWIFT_NAME(AEAD_CHACHA20_POLY1305);

+ (jint)AEAD_AES_128_GCM;

+ (jint)AEAD_AES_256_GCM;

+ (jint)AEAD_AES_128_CCM;

+ (jint)AEAD_AES_256_CCM;

+ (jint)AEAD_AES_128_GCM_8;

+ (jint)AEAD_AES_256_GCM_8;

+ (jint)AEAD_AES_128_GCM_12;

+ (jint)AEAD_AES_256_GCM_12;

+ (jint)AEAD_AES_128_CCM_SHORT;

+ (jint)AEAD_AES_256_CCM_SHORT;

+ (jint)AEAD_AES_128_CCM_SHORT_8;

+ (jint)AEAD_AES_256_CCM_SHORT_8;

+ (jint)AEAD_AES_128_CCM_SHORT_12;

+ (jint)AEAD_AES_256_CCM_SHORT_12;

+ (jint)AEAD_AES_SIV_CMAC_256;

+ (jint)AEAD_AES_SIV_CMAC_384;

+ (jint)AEAD_AES_SIV_CMAC_512;

+ (jint)AEAD_AES_128_CCM_8;

+ (jint)AEAD_AES_256_CCM_8;

+ (jint)AEAD_AES_128_OCB_TAGLEN128;

+ (jint)AEAD_AES_128_OCB_TAGLEN96;

+ (jint)AEAD_AES_128_OCB_TAGLEN64;

+ (jint)AEAD_AES_192_OCB_TAGLEN128;

+ (jint)AEAD_AES_192_OCB_TAGLEN96;

+ (jint)AEAD_AES_192_OCB_TAGLEN64;

+ (jint)AEAD_AES_256_OCB_TAGLEN128;

+ (jint)AEAD_AES_256_OCB_TAGLEN96;

+ (jint)AEAD_AES_256_OCB_TAGLEN64;

+ (jint)AEAD_CHACHA20_POLY1305;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleIanaAEADAlgorithm)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_GCM(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_GCM 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_GCM, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_GCM(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_GCM 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_GCM, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_CCM(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_CCM 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_CCM, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_CCM(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_CCM 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_CCM, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_GCM_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_GCM_8 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_GCM_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_GCM_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_GCM_8 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_GCM_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_GCM_12(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_GCM_12 7
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_GCM_12, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_GCM_12(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_GCM_12 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_GCM_12, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_CCM_SHORT(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_CCM_SHORT 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_CCM_SHORT, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_CCM_SHORT(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_CCM_SHORT 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_CCM_SHORT, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_CCM_SHORT_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_CCM_SHORT_8 11
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_CCM_SHORT_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_CCM_SHORT_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_CCM_SHORT_8 12
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_CCM_SHORT_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_CCM_SHORT_12(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_CCM_SHORT_12 13
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_CCM_SHORT_12, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_CCM_SHORT_12(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_CCM_SHORT_12 14
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_CCM_SHORT_12, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_SIV_CMAC_256(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_SIV_CMAC_256 15
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_SIV_CMAC_256, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_SIV_CMAC_384(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_SIV_CMAC_384 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_SIV_CMAC_384, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_SIV_CMAC_512(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_SIV_CMAC_512 17
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_SIV_CMAC_512, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_CCM_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_CCM_8 18
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_CCM_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_CCM_8(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_CCM_8 19
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_CCM_8, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_OCB_TAGLEN128(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_OCB_TAGLEN128 20
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_OCB_TAGLEN128, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_OCB_TAGLEN96(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_OCB_TAGLEN96 21
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_OCB_TAGLEN96, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_128_OCB_TAGLEN64(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_128_OCB_TAGLEN64 22
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_128_OCB_TAGLEN64, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_192_OCB_TAGLEN128(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_192_OCB_TAGLEN128 23
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_192_OCB_TAGLEN128, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_192_OCB_TAGLEN96(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_192_OCB_TAGLEN96 24
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_192_OCB_TAGLEN96, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_192_OCB_TAGLEN64(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_192_OCB_TAGLEN64 25
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_192_OCB_TAGLEN64, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_OCB_TAGLEN128(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_OCB_TAGLEN128 26
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_OCB_TAGLEN128, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_OCB_TAGLEN96(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_OCB_TAGLEN96 27
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_OCB_TAGLEN96, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_AES_256_OCB_TAGLEN64(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_AES_256_OCB_TAGLEN64 28
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_AES_256_OCB_TAGLEN64, jint)

inline jint LibOrgBouncycastleIanaAEADAlgorithm_get_AEAD_CHACHA20_POLY1305(void);
#define LibOrgBouncycastleIanaAEADAlgorithm_AEAD_CHACHA20_POLY1305 29
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleIanaAEADAlgorithm, AEAD_CHACHA20_POLY1305, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleIanaAEADAlgorithm_init(LibOrgBouncycastleIanaAEADAlgorithm *self);

FOUNDATION_EXPORT LibOrgBouncycastleIanaAEADAlgorithm *new_LibOrgBouncycastleIanaAEADAlgorithm_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleIanaAEADAlgorithm *create_LibOrgBouncycastleIanaAEADAlgorithm_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleIanaAEADAlgorithm)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AEADAlgorithm_H
