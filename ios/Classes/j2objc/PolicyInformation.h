//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/PolicyInformation.java
//

#ifndef PolicyInformation_H
#define PolicyInformation_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;

@interface LibOrgBouncycastleAsn1X509PolicyInformation : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)policyIdentifier;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)policyIdentifier
                                      withLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)policyQualifiers;

+ (LibOrgBouncycastleAsn1X509PolicyInformation *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getPolicyIdentifier;

- (LibOrgBouncycastleAsn1ASN1Sequence *)getPolicyQualifiers;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509PolicyInformation)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1X509PolicyInformation *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509PolicyInformation *new_LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509PolicyInformation *create_LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509PolicyInformation *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier, LibOrgBouncycastleAsn1ASN1Sequence *policyQualifiers);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509PolicyInformation *new_LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier, LibOrgBouncycastleAsn1ASN1Sequence *policyQualifiers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509PolicyInformation *create_LibOrgBouncycastleAsn1X509PolicyInformation_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *policyIdentifier, LibOrgBouncycastleAsn1ASN1Sequence *policyQualifiers);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509PolicyInformation *LibOrgBouncycastleAsn1X509PolicyInformation_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509PolicyInformation)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PolicyInformation_H
