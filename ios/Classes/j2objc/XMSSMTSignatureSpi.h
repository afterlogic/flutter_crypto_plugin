//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/xmss/XMSSMTSignatureSpi.java
//

#ifndef XMSSMTSignatureSpi_H
#define XMSSMTSignatureSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "StateAwareSignature.h"
#include "java/security/Signature.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi : JavaSecuritySignature < LibOrgBouncycastlePqcJcajceInterfacesStateAwareSignature >

#pragma mark Public

- (id<JavaSecurityPrivateKey>)getUpdatedPrivateKey;

- (jboolean)isSigningCapable;

#pragma mark Protected

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm;

- (instancetype __nonnull)initWithNSString:(NSString *)sigName
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)signer;

- (id)engineGetParameterWithNSString:(NSString *)param;

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey;

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey;

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params;

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value;

- (IOSByteArray *)engineSign;

- (void)engineUpdateWithByte:(jbyte)b;

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len;

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *self, NSString *algorithm);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_(NSString *algorithm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_(NSString *algorithm);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner_(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *self, NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *signer);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner_(NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *signer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner_(NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *signer);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256 : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256 *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256 *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256 *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128 : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128 *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128 *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128 *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512 : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512 *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512 *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512 *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256 : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256 *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256 *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256 *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha256andPrehash)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake128andPrehash)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withSha512andPrehash)

@interface LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash : LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg1
withLibOrgBouncycastlePqcCryptoXmssXMSSMTSigner:(LibOrgBouncycastlePqcCryptoXmssXMSSMTSigner *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash_init(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash *new_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash *create_LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderXmssXMSSMTSignatureSpi_withShake256andPrehash)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSMTSignatureSpi_H
