//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/edec/BCXDHPrivateKey.java
//

#include "ASN1Encodable.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Set.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "AsymmetricKeyParameter.h"
#include "BCXDHPrivateKey.h"
#include "EdECObjectIdentifiers.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcajceEdecUtils.h"
#include "PrivateKeyInfo.h"
#include "PrivateKeyInfoFactory.h"
#include "X25519PrivateKeyParameters.h"
#include "X25519PublicKeyParameters.h"
#include "X448PrivateKeyParameters.h"
#include "X448PublicKeyParameters.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey () {
 @public
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *xdhPrivateKey_;
  jboolean hasPublicKey_;
  IOSByteArray *attributes_;
}

- (void)populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, xdhPrivateKey_, LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, attributes_, IOSByteArray *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, JavaIoObjectOutputStream *outArg);

@implementation LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey

+ (jlong)serialVersionUID {
  return LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_serialVersionUID;
}

- (instancetype)initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privKey {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(self, privKey);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
  return self;
}

- (void)populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}

- (NSString *)getAlgorithm {
  return ([xdhPrivateKey_ isKindOfClass:[LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters class]]) ? @"X448" : @"X25519";
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  @try {
    LibOrgBouncycastleAsn1ASN1Set *attrSet = LibOrgBouncycastleAsn1ASN1Set_getInstanceWithId_(attributes_);
    LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *privInfo = LibOrgBouncycastleCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withLibOrgBouncycastleAsn1ASN1Set_(xdhPrivateKey_, attrSet);
    if (hasPublicKey_) {
      return [((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(privInfo)) getEncoded];
    }
    else {
      return [new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_withLibOrgBouncycastleAsn1ASN1Set_([((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(privInfo)) getPrivateKeyAlgorithm], [privInfo parsePrivateKey], attrSet) getEncoded];
    }
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)engineGetKeyParameters {
  return xdhPrivateKey_;
}

- (NSString *)description {
  LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *pubKey;
  if ([xdhPrivateKey_ isKindOfClass:[LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters class]]) {
    pubKey = [((LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters *) nil_chk(((LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters *) xdhPrivateKey_))) generatePublicKey];
  }
  else {
    pubKey = [((LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters *) nil_chk(((LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters *) cast_chk(xdhPrivateKey_, [LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters class])))) generatePublicKey];
  }
  return LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecUtils_keyToStringWithNSString_withNSString_withLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(@"Private Key", [self getAlgorithm], pubKey);
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if (!([o isKindOfClass:[LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey class]])) {
    return false;
  }
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *other = (LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) cast_chk(o, [LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey class]);
  return LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *) nil_chk(other)) getEncoded], [self getEncoded]);
}

- (NSUInteger)hash {
  return LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_([self getEncoded]);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[2].selector = @selector(populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getFormat);
  methods[5].selector = @selector(getEncoded);
  methods[6].selector = @selector(engineGetKeyParameters);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[11].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "xdhPrivateKey_", "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "hasPublicKey_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "attributes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "LLibOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "populateFromPrivateKeyInfo", "toString", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey = { "BCXDHPrivateKey", "lib.org.bouncycastle.jcajce.provider.asymmetric.edec", ptrTable, methods, fields, 7, 0x1, 12, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *privKey) {
  NSObject_init(self);
  self->hasPublicKey_ = true;
  self->attributes_ = nil;
  self->xdhPrivateKey_ = privKey;
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *privKey) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_, privKey)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *privKey) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_, privKey)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  NSObject_init(self);
  self->hasPublicKey_ = [((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) hasPublicKey];
  self->attributes_ = ([keyInfo getAttributes] != nil) ? [((LibOrgBouncycastleAsn1ASN1Set *) nil_chk([keyInfo getAttributes])) getEncoded] : nil;
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}

LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey, initWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}

void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  id<LibOrgBouncycastleAsn1ASN1Encodable> keyOcts = [((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) parsePrivateKey];
  if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_X448))) isEqual:[((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getPrivateKeyAlgorithm])) getAlgorithm]]) {
    self->xdhPrivateKey_ = new_LibOrgBouncycastleCryptoParamsX448PrivateKeyParameters_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(keyOcts))) getOctets], 0);
  }
  else {
    self->xdhPrivateKey_ = new_LibOrgBouncycastleCryptoParamsX25519PrivateKeyParameters_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(keyOcts))) getOctets], 0);
  }
}

void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_readObjectWithJavaIoObjectInputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, JavaIoObjectInputStream *inArg) {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_populateFromPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(enc));
}

void LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey_writeObjectWithJavaIoObjectOutputStream_(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricEdecBCXDHPrivateKey)
