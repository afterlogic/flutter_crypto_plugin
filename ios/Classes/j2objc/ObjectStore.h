//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/bc/ObjectStore.java
//

#ifndef ObjectStore_H
#define ObjectStore_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1BcEncryptedObjectStoreData;
@class LibOrgBouncycastleAsn1BcObjectStoreData;
@class LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1BcObjectStore : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1BcEncryptedObjectStoreData:(LibOrgBouncycastleAsn1BcEncryptedObjectStoreData *)encryptedObjectStoreData
                             withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck:(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *)integrityCheck;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1BcObjectStoreData:(LibOrgBouncycastleAsn1BcObjectStoreData *)objectStoreData
                    withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck:(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *)integrityCheck;

+ (LibOrgBouncycastleAsn1BcObjectStore *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *)getIntegrityCheck;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getStoreData;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1BcObjectStore)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcObjectStore *self, LibOrgBouncycastleAsn1BcObjectStoreData *objectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStore *new_LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcObjectStoreData *objectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStore *create_LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcObjectStoreData *objectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcEncryptedObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcObjectStore *self, LibOrgBouncycastleAsn1BcEncryptedObjectStoreData *encryptedObjectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStore *new_LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcEncryptedObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcEncryptedObjectStoreData *encryptedObjectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStore *create_LibOrgBouncycastleAsn1BcObjectStore_initWithLibOrgBouncycastleAsn1BcEncryptedObjectStoreData_withLibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_(LibOrgBouncycastleAsn1BcEncryptedObjectStoreData *encryptedObjectStoreData, LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *integrityCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStore *LibOrgBouncycastleAsn1BcObjectStore_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1BcObjectStore)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ObjectStore_H
