//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/i18n/LocaleString.java
//

#ifndef LocaleString_H
#define LocaleString_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "LocalizedMessage.h"

@class IOSObjectArray;
@class JavaUtilLocale;

@interface LibOrgBouncycastleI18nLocaleString : LibOrgBouncycastleI18nLocalizedMessage

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)resource
                              withNSString:(NSString *)id_;

- (instancetype __nonnull)initWithNSString:(NSString *)resource
                              withNSString:(NSString *)id_
                              withNSString:(NSString *)encoding;

- (instancetype __nonnull)initWithNSString:(NSString *)resource
                              withNSString:(NSString *)id_
                              withNSString:(NSString *)encoding
                         withNSObjectArray:(IOSObjectArray *)arguments;

- (NSString *)getLocaleStringWithJavaUtilLocale:(JavaUtilLocale *)locale;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1
                         withNSObjectArray:(IOSObjectArray *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleI18nLocaleString)

FOUNDATION_EXPORT void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_);

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(NSString *resource, NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_(NSString *resource, NSString *id_);

FOUNDATION_EXPORT void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_, NSString *encoding);

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding);

FOUNDATION_EXPORT void LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(LibOrgBouncycastleI18nLocaleString *self, NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments);

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *new_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleI18nLocaleString *create_LibOrgBouncycastleI18nLocaleString_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleI18nLocaleString)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // LocaleString_H
