//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/RIPEMD160.java
//

#ifndef RIPEMD160_H
#define RIPEMD160_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCMessageDigest.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "DigestAlgorithmProvider.h"
#include "J2ObjC_header.h"
#include "PBESecretKeyFactory.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleCryptoCipherKeyGenerator;
@protocol LibOrgBouncycastleCryptoDigest;
@protocol LibOrgBouncycastleCryptoMac;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest : LibOrgBouncycastleJcajceProviderDigestBCMessageDigest < NSCopying >

#pragma mark Public

- (instancetype __nonnull)init;

- (id)java_clone;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Digest)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_HashMac)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                                   withInt:(jint)arg1
withLibOrgBouncycastleCryptoCipherKeyGenerator:(LibOrgBouncycastleCryptoCipherKeyGenerator *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_KeyGenerator)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac : LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)arg0
                                                      withInt:(jint)arg1
                                                      withInt:(jint)arg2
                                                      withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmac)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory : LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)arg1
                               withBoolean:(jboolean)arg2
                                   withInt:(jint)arg3
                                   withInt:(jint)arg4
                                   withInt:(jint)arg5
                                   withInt:(jint)arg6 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_PBEWithHmacKeyFactory)

@interface LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings : LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *new_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings *create_LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestRIPEMD160_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RIPEMD160_H
