//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/IssuerAndSerialNumber.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERSequence.h"
#include "IssuerAndSerialNumber.h"
#include "J2ObjC_source.h"
#include "X500Name.h"
#include "X509Name.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber

+ (LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)name
                                    withJavaMathBigInteger:(JavaMathBigInteger *)certSerialNumber {
  LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(self, name, certSerialNumber);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509X509Name:(LibOrgBouncycastleAsn1X509X509Name *)name
                     withLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)certSerialNumber {
  LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(self, name, certSerialNumber);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)name
                                    withJavaMathBigInteger:(JavaMathBigInteger *)certSerialNumber {
  LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(self, name, certSerialNumber);
  return self;
}

- (LibOrgBouncycastleAsn1X500X500Name *)getName {
  return name_;
}

- (LibOrgBouncycastleAsn1ASN1Integer *)getCertificateSerialNumber {
  return certSerialNumber_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:name_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:certSerialNumber_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509X509Name:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithLibOrgBouncycastleAsn1X509X509Name:withLibOrgBouncycastleAsn1ASN1Integer:);
  methods[4].selector = @selector(initWithLibOrgBouncycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(getCertificateSerialNumber);
  methods[7].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LLibOrgBouncycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "certSerialNumber_", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509X509Name;LJavaMathBigInteger;", "LLibOrgBouncycastleAsn1X509X509Name;LLibOrgBouncycastleAsn1ASN1Integer;", "LLibOrgBouncycastleAsn1X500X500Name;LJavaMathBigInteger;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber = { "IssuerAndSerialNumber", "lib.org.bouncycastle.asn1.pkcs", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber;
}

@end

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber class]]) {
    return (LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->name_ = LibOrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->certSerialNumber_ = (LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:1], [LibOrgBouncycastleAsn1ASN1Integer class]);
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *certSerialNumber) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->name_ = LibOrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509X509Name *) nil_chk(name)) toASN1Primitive]);
  self->certSerialNumber_ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(certSerialNumber);
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *certSerialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_, name, certSerialNumber)
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X509X509Name *name, JavaMathBigInteger *certSerialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X509X509Name_withJavaMathBigInteger_, name, certSerialNumber)
}

void LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *certSerialNumber) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->name_ = LibOrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509X509Name *) nil_chk(name)) toASN1Primitive]);
  self->certSerialNumber_ = certSerialNumber;
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *certSerialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_, name, certSerialNumber)
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1X509X509Name *name, LibOrgBouncycastleAsn1ASN1Integer *certSerialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X509X509Name_withLibOrgBouncycastleAsn1ASN1Integer_, name, certSerialNumber)
}

void LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *self, LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *certSerialNumber) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->name_ = name;
  self->certSerialNumber_ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(certSerialNumber);
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *new_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *certSerialNumber) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, name, certSerialNumber)
}

LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber *create_LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber_initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(LibOrgBouncycastleAsn1X500X500Name *name, JavaMathBigInteger *certSerialNumber) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber, initWithLibOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, name, certSerialNumber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1PkcsIssuerAndSerialNumber)
