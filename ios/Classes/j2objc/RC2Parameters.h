//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/RC2Parameters.java
//

#ifndef RC2Parameters_H
#define RC2Parameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyParameter.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoParamsRC2Parameters : LibOrgBouncycastleCryptoParamsKeyParameter

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)key
                                    withInt:(jint)bits;

- (jint)getEffectiveKeyBits;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0
                                    withInt:(jint)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsRC2Parameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_(LibOrgBouncycastleCryptoParamsRC2Parameters *self, IOSByteArray *key);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC2Parameters *new_LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_(IOSByteArray *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC2Parameters *create_LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_(IOSByteArray *key);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_withInt_(LibOrgBouncycastleCryptoParamsRC2Parameters *self, IOSByteArray *key, jint bits);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC2Parameters *new_LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_withInt_(IOSByteArray *key, jint bits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRC2Parameters *create_LibOrgBouncycastleCryptoParamsRC2Parameters_initWithByteArray_withInt_(IOSByteArray *key, jint bits);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsRC2Parameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RC2Parameters_H
