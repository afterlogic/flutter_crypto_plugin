//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/digests/SHA224Digest.java
//

#ifndef SHA224Digest_H
#define SHA224Digest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "EncodableDigest.h"
#include "GeneralDigest.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@protocol LibOrgBouncycastleUtilMemoable;

@interface LibOrgBouncycastleCryptoDigestsSHA224Digest : LibOrgBouncycastleCryptoDigestsGeneralDigest < LibOrgBouncycastleCryptoDigestsEncodableDigest >
@property (readonly, class) IOSIntArray *K NS_SWIFT_NAME(K);

+ (IOSIntArray *)K;

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)encodedState;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsSHA224Digest:(LibOrgBouncycastleCryptoDigestsSHA224Digest *)t;

- (id<LibOrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (IOSByteArray *)getEncodedState;

- (void)reset;

- (void)resetWithLibOrgBouncycastleUtilMemoable:(id<LibOrgBouncycastleUtilMemoable>)other;

#pragma mark Protected

- (void)processBlock;

- (void)processLengthWithLong:(jlong)bitLength;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigestsGeneralDigest:(LibOrgBouncycastleCryptoDigestsGeneralDigest *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoDigestsSHA224Digest)

inline IOSIntArray *LibOrgBouncycastleCryptoDigestsSHA224Digest_get_K(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleCryptoDigestsSHA224Digest_K;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleCryptoDigestsSHA224Digest, K, IOSIntArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA224Digest_init(LibOrgBouncycastleCryptoDigestsSHA224Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *new_LibOrgBouncycastleCryptoDigestsSHA224Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *create_LibOrgBouncycastleCryptoDigestsSHA224Digest_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithLibOrgBouncycastleCryptoDigestsSHA224Digest_(LibOrgBouncycastleCryptoDigestsSHA224Digest *self, LibOrgBouncycastleCryptoDigestsSHA224Digest *t);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *new_LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithLibOrgBouncycastleCryptoDigestsSHA224Digest_(LibOrgBouncycastleCryptoDigestsSHA224Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *create_LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithLibOrgBouncycastleCryptoDigestsSHA224Digest_(LibOrgBouncycastleCryptoDigestsSHA224Digest *t);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithByteArray_(LibOrgBouncycastleCryptoDigestsSHA224Digest *self, IOSByteArray *encodedState);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *new_LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithByteArray_(IOSByteArray *encodedState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoDigestsSHA224Digest *create_LibOrgBouncycastleCryptoDigestsSHA224Digest_initWithByteArray_(IOSByteArray *encodedState);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoDigestsSHA224Digest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SHA224Digest_H
