//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/RevRepContent.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "CertId.h"
#include "CertificateList.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PKIStatusInfo.h"
#include "RevRepContent.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1CmpRevRepContent () {
 @public
  LibOrgBouncycastleAsn1ASN1Sequence *status_;
  LibOrgBouncycastleAsn1ASN1Sequence *revCerts_;
  LibOrgBouncycastleAsn1ASN1Sequence *crls_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                                                         withInt:(jint)tagNo
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContent, status_, LibOrgBouncycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContent, revCerts_, LibOrgBouncycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpRevRepContent, crls_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpRevRepContent *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpRevRepContent *new_LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpRevRepContent *create_LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpRevRepContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpRevRepContent *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj);

@implementation LibOrgBouncycastleAsn1CmpRevRepContent

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmpRevRepContent *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpRevRepContent_getInstanceWithId_(o);
}

- (IOSObjectArray *)getStatus {
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(status_)) size] type:LibOrgBouncycastleAsn1CmpPKIStatusInfo_class_()];
  for (jint i = 0; i != results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1CmpPKIStatusInfo_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(status_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (IOSObjectArray *)getRevCerts {
  if (revCerts_ == nil) {
    return nil;
  }
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[revCerts_ size] type:LibOrgBouncycastleAsn1CrmfCertId_class_()];
  for (jint i = 0; i != results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1CrmfCertId_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(revCerts_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (IOSObjectArray *)getCrls {
  if (crls_ == nil) {
    return nil;
  }
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[crls_ size] type:LibOrgBouncycastleAsn1X509CertificateList_class_()];
  for (jint i = 0; i != results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1X509CertificateList_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(crls_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:status_];
  LibOrgBouncycastleAsn1CmpRevRepContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, 0, revCerts_);
  LibOrgBouncycastleAsn1CmpRevRepContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, 1, crls_);
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

- (void)addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:(LibOrgBouncycastleAsn1ASN1EncodableVector *)v
                                                         withInt:(jint)tagNo
                         withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj {
  LibOrgBouncycastleAsn1CmpRevRepContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(self, v, tagNo, obj);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpRevRepContent;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1CmpPKIStatusInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1CrmfCertId;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1X509CertificateList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getStatus);
  methods[3].selector = @selector(getRevCerts);
  methods[4].selector = @selector(getCrls);
  methods[5].selector = @selector(toASN1Primitive);
  methods[6].selector = @selector(addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector:withInt:withLibOrgBouncycastleAsn1ASN1Encodable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "status_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "revCerts_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crls_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "addOptional", "LLibOrgBouncycastleAsn1ASN1EncodableVector;ILLibOrgBouncycastleAsn1ASN1Encodable;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpRevRepContent = { "RevRepContent", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpRevRepContent;
}

@end

void LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpRevRepContent *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  id<JavaUtilEnumeration> en = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  self->status_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(en)) nextElement]);
  while ([en hasMoreElements]) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *tObj = LibOrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_([en nextElement]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tObj)) getTagNo] == 0) {
      self->revCerts_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
    else {
      self->crls_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tObj, true);
    }
  }
}

LibOrgBouncycastleAsn1CmpRevRepContent *new_LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpRevRepContent, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpRevRepContent *create_LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpRevRepContent, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpRevRepContent *LibOrgBouncycastleAsn1CmpRevRepContent_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpRevRepContent_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmpRevRepContent class]]) {
    return (LibOrgBouncycastleAsn1CmpRevRepContent *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmpRevRepContent_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpRevRepContent_addOptionalWithLibOrgBouncycastleAsn1ASN1EncodableVector_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1CmpRevRepContent *self, LibOrgBouncycastleAsn1ASN1EncodableVector *v, jint tagNo, id<LibOrgBouncycastleAsn1ASN1Encodable> obj) {
  if (obj != nil) {
    [((LibOrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, tagNo, obj)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpRevRepContent)
