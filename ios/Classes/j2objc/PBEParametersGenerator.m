//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/PBEParametersGenerator.java
//

#include "CipherParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PBEParametersGenerator.h"
#include "Strings.h"

@implementation LibOrgBouncycastleCryptoPBEParametersGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoPBEParametersGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithByteArray:(IOSByteArray *)password
              withByteArray:(IOSByteArray *)salt
                    withInt:(jint)iterationCount {
  self->password_ = password;
  self->salt_ = salt;
  self->iterationCount_ = iterationCount;
}

- (IOSByteArray *)getPassword {
  return password_;
}

- (IOSByteArray *)getSalt {
  return salt_;
}

- (jint)getIterationCount {
  return iterationCount_;
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)generateDerivedParametersWithInt:(jint)keySize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)generateDerivedParametersWithInt:(jint)keySize
                                                                         withInt:(jint)ivSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)generateDerivedMacParametersWithInt:(jint)keySize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSByteArray *)PKCS5PasswordToBytesWithCharArray:(IOSCharArray *)password {
  return LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS5PasswordToBytesWithCharArray_(password);
}

+ (IOSByteArray *)PKCS5PasswordToUTF8BytesWithCharArray:(IOSCharArray *)password {
  return LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS5PasswordToUTF8BytesWithCharArray_(password);
}

+ (IOSByteArray *)PKCS12PasswordToBytesWithCharArray:(IOSCharArray *)password {
  return LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS12PasswordToBytesWithCharArray_(password);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x401, 2, 4, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x401, 5, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 8, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 9, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithByteArray:withByteArray:withInt:);
  methods[2].selector = @selector(getPassword);
  methods[3].selector = @selector(getSalt);
  methods[4].selector = @selector(getIterationCount);
  methods[5].selector = @selector(generateDerivedParametersWithInt:);
  methods[6].selector = @selector(generateDerivedParametersWithInt:withInt:);
  methods[7].selector = @selector(generateDerivedMacParametersWithInt:);
  methods[8].selector = @selector(PKCS5PasswordToBytesWithCharArray:);
  methods[9].selector = @selector(PKCS5PasswordToUTF8BytesWithCharArray:);
  methods[10].selector = @selector(PKCS12PasswordToBytesWithCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "password_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "salt_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "iterationCount_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "[B[BI", "generateDerivedParameters", "I", "II", "generateDerivedMacParameters", "PKCS5PasswordToBytes", "[C", "PKCS5PasswordToUTF8Bytes", "PKCS12PasswordToBytes" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoPBEParametersGenerator = { "PBEParametersGenerator", "lib.org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x401, 11, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoPBEParametersGenerator;
}

@end

void LibOrgBouncycastleCryptoPBEParametersGenerator_init(LibOrgBouncycastleCryptoPBEParametersGenerator *self) {
  NSObject_init(self);
}

IOSByteArray *LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS5PasswordToBytesWithCharArray_(IOSCharArray *password) {
  LibOrgBouncycastleCryptoPBEParametersGenerator_initialize();
  if (password != nil) {
    IOSByteArray *bytes = [IOSByteArray newArrayWithLength:password->size_];
    for (jint i = 0; i != bytes->size_; i++) {
      *IOSByteArray_GetRef(bytes, i) = (jbyte) IOSCharArray_Get(password, i);
    }
    return bytes;
  }
  else {
    return [IOSByteArray newArrayWithLength:0];
  }
}

IOSByteArray *LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS5PasswordToUTF8BytesWithCharArray_(IOSCharArray *password) {
  LibOrgBouncycastleCryptoPBEParametersGenerator_initialize();
  if (password != nil) {
    return LibOrgBouncycastleUtilStrings_toUTF8ByteArrayWithCharArray_(password);
  }
  else {
    return [IOSByteArray newArrayWithLength:0];
  }
}

IOSByteArray *LibOrgBouncycastleCryptoPBEParametersGenerator_PKCS12PasswordToBytesWithCharArray_(IOSCharArray *password) {
  LibOrgBouncycastleCryptoPBEParametersGenerator_initialize();
  if (password != nil && password->size_ > 0) {
    IOSByteArray *bytes = [IOSByteArray newArrayWithLength:(password->size_ + 1) * 2];
    for (jint i = 0; i != password->size_; i++) {
      *IOSByteArray_GetRef(bytes, i * 2) = (jbyte) (JreURShift32(IOSCharArray_Get(password, i), 8));
      *IOSByteArray_GetRef(bytes, i * 2 + 1) = (jbyte) IOSCharArray_Get(password, i);
    }
    return bytes;
  }
  else {
    return [IOSByteArray newArrayWithLength:0];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoPBEParametersGenerator)
