//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/UserAttributeSubpacket.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "UserAttributeSubpacket.h"
#include "java/io/OutputStream.h"

@interface LibOrgBouncycastleBcpgUserAttributeSubpacket () {
 @public
  jboolean forceLongLength_;
}

@end

@implementation LibOrgBouncycastleBcpgUserAttributeSubpacket

- (instancetype)initWithInt:(jint)type
              withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withByteArray_(self, type, data);
  return self;
}

- (instancetype)initWithInt:(jint)type
                withBoolean:(jboolean)forceLongLength
              withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(self, type, forceLongLength, data);
  return self;
}

- (jint)getType {
  return type_;
}

- (IOSByteArray *)getData {
  return data_;
}

- (void)encodeWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  jint bodyLen = ((IOSByteArray *) nil_chk(data_))->size_ + 1;
  if (bodyLen < 192 && !forceLongLength_) {
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:(jbyte) bodyLen];
  }
  else if (bodyLen <= 8383 && !forceLongLength_) {
    bodyLen -= 192;
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:(jbyte) (((JreRShift32(bodyLen, 8)) & (jint) 0xff) + 192)];
    [outArg writeWithInt:(jbyte) bodyLen];
  }
  else {
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithInt:(jint) 0xff];
    [outArg writeWithInt:(jbyte) (JreRShift32(bodyLen, 24))];
    [outArg writeWithInt:(jbyte) (JreRShift32(bodyLen, 16))];
    [outArg writeWithInt:(jbyte) (JreRShift32(bodyLen, 8))];
    [outArg writeWithInt:(jbyte) bodyLen];
  }
  [outArg writeWithInt:type_];
  [outArg writeWithByteArray:data_];
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if (!([o isKindOfClass:[LibOrgBouncycastleBcpgUserAttributeSubpacket class]])) {
    return false;
  }
  LibOrgBouncycastleBcpgUserAttributeSubpacket *other = (LibOrgBouncycastleBcpgUserAttributeSubpacket *) cast_chk(o, [LibOrgBouncycastleBcpgUserAttributeSubpacket class]);
  return self->type_ == ((LibOrgBouncycastleBcpgUserAttributeSubpacket *) nil_chk(other))->type_ && LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(self->data_, other->data_);
}

- (NSUInteger)hash {
  return type_ ^ LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_(data_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withByteArray:);
  methods[1].selector = @selector(initWithInt:withBoolean:withByteArray:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getData);
  methods[4].selector = @selector(encodeWithJavaIoOutputStream:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "forceLongLength_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "data_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[B", "IZ[B", "encode", "LJavaIoOutputStream;", "LJavaIoIOException;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgUserAttributeSubpacket = { "UserAttributeSubpacket", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgUserAttributeSubpacket;
}

@end

void LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withByteArray_(LibOrgBouncycastleBcpgUserAttributeSubpacket *self, jint type, IOSByteArray *data) {
  LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(self, type, false, data);
}

LibOrgBouncycastleBcpgUserAttributeSubpacket *new_LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withByteArray_(jint type, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacket, initWithInt_withByteArray_, type, data)
}

LibOrgBouncycastleBcpgUserAttributeSubpacket *create_LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withByteArray_(jint type, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacket, initWithInt_withByteArray_, type, data)
}

void LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(LibOrgBouncycastleBcpgUserAttributeSubpacket *self, jint type, jboolean forceLongLength, IOSByteArray *data) {
  NSObject_init(self);
  self->type_ = type;
  self->forceLongLength_ = forceLongLength;
  self->data_ = data;
}

LibOrgBouncycastleBcpgUserAttributeSubpacket *new_LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(jint type, jboolean forceLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacket, initWithInt_withBoolean_withByteArray_, type, forceLongLength, data)
}

LibOrgBouncycastleBcpgUserAttributeSubpacket *create_LibOrgBouncycastleBcpgUserAttributeSubpacket_initWithInt_withBoolean_withByteArray_(jint type, jboolean forceLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserAttributeSubpacket, initWithInt_withBoolean_withByteArray_, type, forceLongLength, data)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgUserAttributeSubpacket)
