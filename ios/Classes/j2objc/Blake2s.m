//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/Blake2s.java
//

#include "ASN1ObjectIdentifier.h"
#include "BCMessageDigest.h"
#include "Blake2s.h"
#include "Blake2sDigest.h"
#include "ConfigurableProvider.h"
#include "Digest.h"
#include "DigestAlgorithmProvider.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MiscObjectIdentifiers.h"

@interface LibOrgBouncycastleJcajceProviderDigestBlake2s ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDigestBlake2s_init(LibOrgBouncycastleJcajceProviderDigestBlake2s *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestBlake2s *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDigestBlake2s *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256;LLibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224;LLibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160;LLibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128;LLibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s = { "Blake2s", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s;
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_init(LibOrgBouncycastleJcajceProviderDigestBlake2s *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDigestBlake2s *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_((LibOrgBouncycastleCryptoDigestsBlake2sDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2sDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2s;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 = { "Blake2s256", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256_init(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(256));
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256 *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s256)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_((LibOrgBouncycastleCryptoDigestsBlake2sDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2sDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2s;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 = { "Blake2s224", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224_init(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(224));
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224 *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s224)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_((LibOrgBouncycastleCryptoDigestsBlake2sDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2sDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2s;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 = { "Blake2s160", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160_init(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(160));
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160 *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s160)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)java_clone {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *d = (LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *) cast_chk([super java_clone], [LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 class]);
  ((LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *) nil_chk(d))->digest_ = new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithLibOrgBouncycastleCryptoDigestsBlake2sDigest_((LibOrgBouncycastleCryptoDigestsBlake2sDigest *) cast_chk(digest_, [LibOrgBouncycastleCryptoDigestsBlake2sDigest class]));
  return d;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaLangCloneNotSupportedException;", "LLibOrgBouncycastleJcajceProviderDigestBlake2s;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 = { "Blake2s128", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128_init(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *self) {
  LibOrgBouncycastleJcajceProviderDigestBCMessageDigest_initWithLibOrgBouncycastleCryptoDigest_(self, new_LibOrgBouncycastleCryptoDigestsBlake2sDigest_initWithInt_(128));
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128 *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s_Blake2s128)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"MessageDigest.BLAKE2S-256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX, @"$Blake2s256")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2s256)) withNSString:@"BLAKE2S-256"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2S-224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX, @"$Blake2s224")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2s224)) withNSString:@"BLAKE2S-224"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2S-160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX, @"$Blake2s160")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2s160)) withNSString:@"BLAKE2S-160"];
  [provider addAlgorithmWithNSString:@"MessageDigest.BLAKE2S-128" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX, @"$Blake2s128")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.MessageDigest.", JreLoadStatic(LibOrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_blake2s128)) withNSString:@"BLAKE2S-128"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderDigestBlake2s;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.digest", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings class]) {
    LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderDigestBlake2s_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_init(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings *self) {
  LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings *new_LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings *create_LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDigestBlake2s_Mappings)
