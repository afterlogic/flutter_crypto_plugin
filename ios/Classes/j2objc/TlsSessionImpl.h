//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/TlsSessionImpl.java
//

#ifndef TlsSessionImpl_H
#define TlsSessionImpl_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TlsSession.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoTlsSessionParameters;

@interface LibOrgBouncycastleCryptoTlsTlsSessionImpl : NSObject < LibOrgBouncycastleCryptoTlsTlsSession > {
 @public
  IOSByteArray *sessionID_;
  LibOrgBouncycastleCryptoTlsSessionParameters *sessionParameters_;
  jboolean resumable_;
}

#pragma mark Public

- (LibOrgBouncycastleCryptoTlsSessionParameters *)exportSessionParameters;

- (IOSByteArray *)getSessionID;

- (void)invalidate;

- (jboolean)isResumable;

#pragma mark Package-Private

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)sessionID
withLibOrgBouncycastleCryptoTlsSessionParameters:(LibOrgBouncycastleCryptoTlsSessionParameters *)sessionParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsTlsSessionImpl)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsTlsSessionImpl, sessionID_, IOSByteArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoTlsTlsSessionImpl, sessionParameters_, LibOrgBouncycastleCryptoTlsSessionParameters *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsTlsSessionImpl_initWithByteArray_withLibOrgBouncycastleCryptoTlsSessionParameters_(LibOrgBouncycastleCryptoTlsTlsSessionImpl *self, IOSByteArray *sessionID, LibOrgBouncycastleCryptoTlsSessionParameters *sessionParameters);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsSessionImpl *new_LibOrgBouncycastleCryptoTlsTlsSessionImpl_initWithByteArray_withLibOrgBouncycastleCryptoTlsSessionParameters_(IOSByteArray *sessionID, LibOrgBouncycastleCryptoTlsSessionParameters *sessionParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsTlsSessionImpl *create_LibOrgBouncycastleCryptoTlsTlsSessionImpl_initWithByteArray_withLibOrgBouncycastleCryptoTlsSessionParameters_(IOSByteArray *sessionID, LibOrgBouncycastleCryptoTlsSessionParameters *sessionParameters);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsTlsSessionImpl)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TlsSessionImpl_H
