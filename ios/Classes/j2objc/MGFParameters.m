//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/MGFParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MGFParameters.h"
#include "java/lang/System.h"

@implementation LibOrgBouncycastleCryptoParamsMGFParameters

- (instancetype)initWithByteArray:(IOSByteArray *)seed {
  LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(self, seed);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)seed
                          withInt:(jint)off
                          withInt:(jint)len {
  LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(self, seed, off, len);
  return self;
}

- (IOSByteArray *)getSeed {
  return seed_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(getSeed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seed_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "[BII" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsMGFParameters = { "MGFParameters", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsMGFParameters;
}

@end

void LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(LibOrgBouncycastleCryptoParamsMGFParameters *self, IOSByteArray *seed) {
  LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(self, seed, 0, ((IOSByteArray *) nil_chk(seed))->size_);
}

LibOrgBouncycastleCryptoParamsMGFParameters *new_LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsMGFParameters, initWithByteArray_, seed)
}

LibOrgBouncycastleCryptoParamsMGFParameters *create_LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsMGFParameters, initWithByteArray_, seed)
}

void LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(LibOrgBouncycastleCryptoParamsMGFParameters *self, IOSByteArray *seed, jint off, jint len) {
  NSObject_init(self);
  self->seed_ = [IOSByteArray newArrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(seed, off, self->seed_, 0, len);
}

LibOrgBouncycastleCryptoParamsMGFParameters *new_LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsMGFParameters, initWithByteArray_withInt_withInt_, seed, off, len)
}

LibOrgBouncycastleCryptoParamsMGFParameters *create_LibOrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsMGFParameters, initWithByteArray_withInt_withInt_, seed, off, len)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsMGFParameters)
