//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/rsa/RSAUtil.java
//

#include "ASN1ObjectIdentifier.h"
#include "Fingerprint.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKCSObjectIdentifiers.h"
#include "RSAKeyParameters.h"
#include "RSAPrivateCrtKeyParameters.h"
#include "RSAUtil.h"
#include "X509ObjectIdentifiers.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/RSAPrivateCrtKey.h"
#include "java/security/interfaces/RSAPrivateKey.h"
#include "java/security/interfaces/RSAPublicKey.h"

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil)

IOSObjectArray *LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids;

@implementation LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil

+ (IOSObjectArray *)rsaOids {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isRsaOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_isRsaOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(algOid);
}

+ (LibOrgBouncycastleCryptoParamsRSAKeyParameters *)generatePublicKeyParameterWithJavaSecurityInterfacesRSAPublicKey:(id<JavaSecurityInterfacesRSAPublicKey>)key {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePublicKeyParameterWithJavaSecurityInterfacesRSAPublicKey_(key);
}

+ (LibOrgBouncycastleCryptoParamsRSAKeyParameters *)generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey:(id<JavaSecurityInterfacesRSAPrivateKey>)key {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey_(key);
}

+ (NSString *)generateKeyFingerprintWithJavaMathBigInteger:(JavaMathBigInteger *)modulus {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generateKeyFingerprintWithJavaMathBigInteger_(modulus);
}

+ (NSString *)generateExponentFingerprintWithJavaMathBigInteger:(JavaMathBigInteger *)exponent {
  return LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generateExponentFingerprintWithJavaMathBigInteger_(exponent);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsRSAKeyParameters;", 0x8, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsRSAKeyParameters;", 0x8, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 8, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isRsaOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[2].selector = @selector(generatePublicKeyParameterWithJavaSecurityInterfacesRSAPublicKey:);
  methods[3].selector = @selector(generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey:);
  methods[4].selector = @selector(generateKeyFingerprintWithJavaMathBigInteger:);
  methods[5].selector = @selector(generateExponentFingerprintWithJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "rsaOids", "[LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "isRsaOid", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", "generatePublicKeyParameter", "LJavaSecurityInterfacesRSAPublicKey;", "generatePrivateKeyParameter", "LJavaSecurityInterfacesRSAPrivateKey;", "generateKeyFingerprint", "LJavaMathBigInteger;", "generateExponentFingerprint", &LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil = { "RSAUtil", "lib.org.bouncycastle.jcajce.provider.asymmetric.rsa", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil class]) {
    LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids = [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, rsaEncryption), JreLoadStatic(LibOrgBouncycastleAsn1X509X509ObjectIdentifiers, id_ea_rsa), JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_RSAES_OAEP), JreLoadStatic(LibOrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_RSASSA_PSS) } count:4 type:LibOrgBouncycastleAsn1ASN1ObjectIdentifier_class_()];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil)
  }
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_init(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil *new_LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil *create_LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil, init)
}

jboolean LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_isRsaOidWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *algOid) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_initialize();
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids))->size_; i++) {
    if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algOid)) isEqual:IOSObjectArray_Get(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_rsaOids, i)]) {
      return true;
    }
  }
  return false;
}

LibOrgBouncycastleCryptoParamsRSAKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePublicKeyParameterWithJavaSecurityInterfacesRSAPublicKey_(id<JavaSecurityInterfacesRSAPublicKey> key) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_initialize();
  return new_LibOrgBouncycastleCryptoParamsRSAKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_(false, [((id<JavaSecurityInterfacesRSAPublicKey>) nil_chk(key)) getModulus], [key getPublicExponent]);
}

LibOrgBouncycastleCryptoParamsRSAKeyParameters *LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generatePrivateKeyParameterWithJavaSecurityInterfacesRSAPrivateKey_(id<JavaSecurityInterfacesRSAPrivateKey> key) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_initialize();
  if ([JavaSecurityInterfacesRSAPrivateCrtKey_class_() isInstance:key]) {
    id<JavaSecurityInterfacesRSAPrivateCrtKey> k = (id<JavaSecurityInterfacesRSAPrivateCrtKey>) cast_check(key, JavaSecurityInterfacesRSAPrivateCrtKey_class_());
    return new_LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((id<JavaSecurityInterfacesRSAPrivateCrtKey>) nil_chk(k)) getModulus], [k getPublicExponent], [k getPrivateExponent], [k getPrimeP], [k getPrimeQ], [k getPrimeExponentP], [k getPrimeExponentQ], [k getCrtCoefficient]);
  }
  else {
    id<JavaSecurityInterfacesRSAPrivateKey> k = key;
    return new_LibOrgBouncycastleCryptoParamsRSAKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_(true, [((id<JavaSecurityInterfacesRSAPrivateKey>) nil_chk(k)) getModulus], [k getPrivateExponent]);
  }
}

NSString *LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generateKeyFingerprintWithJavaMathBigInteger_(JavaMathBigInteger *modulus) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_initialize();
  return [new_LibOrgBouncycastleUtilFingerprint_initWithByteArray_([((JavaMathBigInteger *) nil_chk(modulus)) toByteArray]) description];
}

NSString *LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_generateExponentFingerprintWithJavaMathBigInteger_(JavaMathBigInteger *exponent) {
  LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil_initialize();
  return [new_LibOrgBouncycastleUtilFingerprint_initWithByteArray_withInt_([((JavaMathBigInteger *) nil_chk(exponent)) toByteArray], 32) description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricRsaRSAUtil)
