//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/GetCRL.java
//

#ifndef GetCRL_H
#define GetCRL_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509GeneralName;
@class LibOrgBouncycastleAsn1X509ReasonFlags;

@interface LibOrgBouncycastleAsn1CmcGetCRL : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)issuerName
                           withLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)cRLName
                       withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)time
                           withLibOrgBouncycastleAsn1X509ReasonFlags:(LibOrgBouncycastleAsn1X509ReasonFlags *)reasons;

- (LibOrgBouncycastleAsn1X509GeneralName *)getcRLName;

+ (LibOrgBouncycastleAsn1CmcGetCRL *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1X500X500Name *)getIssuerName;

- (LibOrgBouncycastleAsn1X509ReasonFlags *)getReasons;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getTime;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcGetCRL)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcGetCRL_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509ReasonFlags_(LibOrgBouncycastleAsn1CmcGetCRL *self, LibOrgBouncycastleAsn1X500X500Name *issuerName, LibOrgBouncycastleAsn1X509GeneralName *cRLName, LibOrgBouncycastleAsn1ASN1GeneralizedTime *time, LibOrgBouncycastleAsn1X509ReasonFlags *reasons);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcGetCRL *new_LibOrgBouncycastleAsn1CmcGetCRL_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509ReasonFlags_(LibOrgBouncycastleAsn1X500X500Name *issuerName, LibOrgBouncycastleAsn1X509GeneralName *cRLName, LibOrgBouncycastleAsn1ASN1GeneralizedTime *time, LibOrgBouncycastleAsn1X509ReasonFlags *reasons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcGetCRL *create_LibOrgBouncycastleAsn1CmcGetCRL_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1X509GeneralName_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509ReasonFlags_(LibOrgBouncycastleAsn1X500X500Name *issuerName, LibOrgBouncycastleAsn1X509GeneralName *cRLName, LibOrgBouncycastleAsn1ASN1GeneralizedTime *time, LibOrgBouncycastleAsn1X509ReasonFlags *reasons);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcGetCRL *LibOrgBouncycastleAsn1CmcGetCRL_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcGetCRL)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GetCRL_H
