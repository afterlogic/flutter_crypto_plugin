//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/pkcs/PKCS12PBEParams.java
//

#ifndef PKCS12PBEParams_H
#define PKCS12PBEParams_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1PkcsPKCS12PBEParams : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1ASN1Integer *iterations_;
  LibOrgBouncycastleAsn1ASN1OctetString *iv_;
}

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)salt
                                    withInt:(jint)iterations;

+ (LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *)getInstanceWithId:(id)obj;

- (JavaMathBigInteger *)getIterations;

- (IOSByteArray *)getIV;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams, iterations_, LibOrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams, iv_, LibOrgBouncycastleAsn1ASN1OctetString *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1PkcsPKCS12PBEParams_initWithByteArray_withInt_(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *self, IOSByteArray *salt, jint iterations);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *new_LibOrgBouncycastleAsn1PkcsPKCS12PBEParams_initWithByteArray_withInt_(IOSByteArray *salt, jint iterations) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *create_LibOrgBouncycastleAsn1PkcsPKCS12PBEParams_initWithByteArray_withInt_(IOSByteArray *salt, jint iterations);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1PkcsPKCS12PBEParams *LibOrgBouncycastleAsn1PkcsPKCS12PBEParams_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1PkcsPKCS12PBEParams)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKCS12PBEParams_H
