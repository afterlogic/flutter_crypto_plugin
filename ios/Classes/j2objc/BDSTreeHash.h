//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/BDSTreeHash.java
//

#ifndef BDSTreeHash_H
#define BDSTreeHash_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class IOSByteArray;
@class JavaUtilStack;
@class LibOrgBouncycastlePqcCryptoXmssOTSHashAddress;
@class LibOrgBouncycastlePqcCryptoXmssWOTSPlus;
@class LibOrgBouncycastlePqcCryptoXmssXMSSNode;

@interface LibOrgBouncycastlePqcCryptoXmssBDSTreeHash : NSObject < JavaIoSerializable >

#pragma mark Public

- (LibOrgBouncycastlePqcCryptoXmssXMSSNode *)getTailNode;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)initialHeight;

- (jint)getHeight;

- (jint)getIndexLeaf;

- (void)initialize__WithInt:(jint)nextIndex OBJC_METHOD_FAMILY_NONE;

- (jboolean)isFinished;

- (jboolean)isInitialized;

- (void)setNodeWithLibOrgBouncycastlePqcCryptoXmssXMSSNode:(LibOrgBouncycastlePqcCryptoXmssXMSSNode *)node;

- (void)updateWithJavaUtilStack:(JavaUtilStack *)stack
withLibOrgBouncycastlePqcCryptoXmssWOTSPlus:(LibOrgBouncycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                  withByteArray:(IOSByteArray *)publicSeed
                  withByteArray:(IOSByteArray *)secretSeed
withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssBDSTreeHash)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssBDSTreeHash_initWithInt_(LibOrgBouncycastlePqcCryptoXmssBDSTreeHash *self, jint initialHeight);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSTreeHash *new_LibOrgBouncycastlePqcCryptoXmssBDSTreeHash_initWithInt_(jint initialHeight) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSTreeHash *create_LibOrgBouncycastlePqcCryptoXmssBDSTreeHash_initWithInt_(jint initialHeight);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssBDSTreeHash)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BDSTreeHash_H
