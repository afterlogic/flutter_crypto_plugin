//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/bc/ObjectStoreIntegrityCheck.java
//

#ifndef ObjectStoreIntegrityCheck_H
#define ObjectStoreIntegrityCheck_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck;
@class LibOrgBouncycastleAsn1BcSignatureCheck;

@interface LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice >
@property (readonly, class) jint PBKD_MAC_CHECK NS_SWIFT_NAME(PBKD_MAC_CHECK);
@property (readonly, class) jint SIG_CHECK NS_SWIFT_NAME(SIG_CHECK);

+ (jint)PBKD_MAC_CHECK;

+ (jint)SIG_CHECK;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck:(LibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck *)macIntegrityCheck;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1BcSignatureCheck:(LibOrgBouncycastleAsn1BcSignatureCheck *)signatureCheck;

+ (LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Object *)getIntegrityCheck;

- (jint)getType;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck)

inline jint LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_get_PBKD_MAC_CHECK(void);
#define LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_PBKD_MAC_CHECK 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck, PBKD_MAC_CHECK, jint)

inline jint LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_get_SIG_CHECK(void);
#define LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_SIG_CHECK 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck, SIG_CHECK, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck_(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *self, LibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck *macIntegrityCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *new_LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck_(LibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck *macIntegrityCheck) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *create_LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck_(LibOrgBouncycastleAsn1BcPbkdMacIntegrityCheck *macIntegrityCheck);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcSignatureCheck_(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *self, LibOrgBouncycastleAsn1BcSignatureCheck *signatureCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *new_LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcSignatureCheck_(LibOrgBouncycastleAsn1BcSignatureCheck *signatureCheck) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *create_LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_initWithLibOrgBouncycastleAsn1BcSignatureCheck_(LibOrgBouncycastleAsn1BcSignatureCheck *signatureCheck);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck *LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1BcObjectStoreIntegrityCheck)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ObjectStoreIntegrityCheck_H
