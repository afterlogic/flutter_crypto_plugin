//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/DigestingMessageSigner.java
//

#ifndef DigestingMessageSigner_H
#define DigestingMessageSigner_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Signer.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleCryptoDigest;
@protocol LibOrgBouncycastlePqcCryptoMessageSigner;

@interface LibOrgBouncycastlePqcCryptoDigestingMessageSigner : NSObject < LibOrgBouncycastleCryptoSigner >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoMessageSigner:(id<LibOrgBouncycastlePqcCryptoMessageSigner>)messSigner
                                        withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)messDigest;

- (IOSByteArray *)generateSignature;

- (void)init__WithBoolean:(jboolean)forSigning
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (void)reset;

- (void)updateWithByte:(jbyte)b;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)off
                    withInt:(jint)len;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)signature;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoDigestingMessageSigner)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoDigestingMessageSigner_initWithLibOrgBouncycastlePqcCryptoMessageSigner_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastlePqcCryptoDigestingMessageSigner *self, id<LibOrgBouncycastlePqcCryptoMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoDigestingMessageSigner *new_LibOrgBouncycastlePqcCryptoDigestingMessageSigner_initWithLibOrgBouncycastlePqcCryptoMessageSigner_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastlePqcCryptoMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoDigestingMessageSigner *create_LibOrgBouncycastlePqcCryptoDigestingMessageSigner_initWithLibOrgBouncycastlePqcCryptoMessageSigner_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastlePqcCryptoMessageSigner> messSigner, id<LibOrgBouncycastleCryptoDigest> messDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoDigestingMessageSigner)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DigestingMessageSigner_H
