//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/ContentType.java
//

#include "ContentType.h"
#include "J2ObjC_source.h"

@implementation LibOrgBouncycastleCryptoTlsContentType

+ (jshort)change_cipher_spec {
  return LibOrgBouncycastleCryptoTlsContentType_change_cipher_spec;
}

+ (jshort)alert {
  return LibOrgBouncycastleCryptoTlsContentType_alert;
}

+ (jshort)handshake {
  return LibOrgBouncycastleCryptoTlsContentType_handshake;
}

+ (jshort)application_data {
  return LibOrgBouncycastleCryptoTlsContentType_application_data;
}

+ (jshort)heartbeat {
  return LibOrgBouncycastleCryptoTlsContentType_heartbeat;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsContentType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "change_cipher_spec", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsContentType_change_cipher_spec, 0x19, -1, -1, -1, -1 },
    { "alert", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsContentType_alert, 0x19, -1, -1, -1, -1 },
    { "handshake", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsContentType_handshake, 0x19, -1, -1, -1, -1 },
    { "application_data", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsContentType_application_data, 0x19, -1, -1, -1, -1 },
    { "heartbeat", "S", .constantValue.asShort = LibOrgBouncycastleCryptoTlsContentType_heartbeat, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsContentType = { "ContentType", "lib.org.bouncycastle.crypto.tls", NULL, methods, fields, 7, 0x1, 1, 5, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsContentType;
}

@end

void LibOrgBouncycastleCryptoTlsContentType_init(LibOrgBouncycastleCryptoTlsContentType *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoTlsContentType *new_LibOrgBouncycastleCryptoTlsContentType_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoTlsContentType, init)
}

LibOrgBouncycastleCryptoTlsContentType *create_LibOrgBouncycastleCryptoTlsContentType_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoTlsContentType, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsContentType)
