//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/RevokedInfo.java
//

#ifndef RevokedInfo_H
#define RevokedInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509CRLReason;

@interface LibOrgBouncycastleAsn1OcspRevokedInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)revocationTime
                                    withLibOrgBouncycastleAsn1X509CRLReason:(LibOrgBouncycastleAsn1X509CRLReason *)revocationReason;

+ (LibOrgBouncycastleAsn1OcspRevokedInfo *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspRevokedInfo *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509CRLReason *)getRevocationReason;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getRevocationTime;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspRevokedInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspRevokedInfo_initWithLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509CRLReason_(LibOrgBouncycastleAsn1OcspRevokedInfo *self, LibOrgBouncycastleAsn1ASN1GeneralizedTime *revocationTime, LibOrgBouncycastleAsn1X509CRLReason *revocationReason);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRevokedInfo *new_LibOrgBouncycastleAsn1OcspRevokedInfo_initWithLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509CRLReason_(LibOrgBouncycastleAsn1ASN1GeneralizedTime *revocationTime, LibOrgBouncycastleAsn1X509CRLReason *revocationReason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRevokedInfo *create_LibOrgBouncycastleAsn1OcspRevokedInfo_initWithLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1X509CRLReason_(LibOrgBouncycastleAsn1ASN1GeneralizedTime *revocationTime, LibOrgBouncycastleAsn1X509CRLReason *revocationReason);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRevokedInfo *LibOrgBouncycastleAsn1OcspRevokedInfo_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspRevokedInfo *LibOrgBouncycastleAsn1OcspRevokedInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspRevokedInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RevokedInfo_H
