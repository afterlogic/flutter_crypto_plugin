//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/test/SimpleTest.java
//

#ifndef SimpleTest_H
#define SimpleTest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Test.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaLangThrowable;
@protocol LibOrgBouncycastleUtilTestTestResult;

@interface LibOrgBouncycastleUtilTestSimpleTest : NSObject < LibOrgBouncycastleUtilTestTest >

#pragma mark Public

- (instancetype __nonnull)init;

- (NSString *)getName;

- (id<LibOrgBouncycastleUtilTestTestResult>)perform;

- (void)performTest;

#pragma mark Protected

- (jboolean)areEqualWithByteArray:(IOSByteArray *)a
                    withByteArray:(IOSByteArray *)b;

- (jboolean)areEqualWithByteArray2:(IOSObjectArray *)left
                    withByteArray2:(IOSObjectArray *)right;

- (void)failWithNSString:(NSString *)message;

- (void)failWithNSString:(NSString *)message
                  withId:(id)expected
                  withId:(id)found;

- (void)failWithNSString:(NSString *)message
   withJavaLangThrowable:(JavaLangThrowable *)throwable;

- (void)isEqualsWithInt:(jint)a
                withInt:(jint)b;

- (void)isEqualsWithLong:(jlong)a
                withLong:(jlong)b;

- (void)isEqualsWithId:(id)a
                withId:(id)b;

- (void)isEqualsWithNSString:(NSString *)message
                 withBoolean:(jboolean)a
                 withBoolean:(jboolean)b;

- (void)isEqualsWithNSString:(NSString *)message
                    withLong:(jlong)a
                    withLong:(jlong)b;

- (void)isEqualsWithNSString:(NSString *)message
                      withId:(id)a
                      withId:(id)b;

- (void)isTrueWithBoolean:(jboolean)value;

- (void)isTrueWithNSString:(NSString *)message
               withBoolean:(jboolean)value;

+ (void)runTestWithLibOrgBouncycastleUtilTestTest:(id<LibOrgBouncycastleUtilTestTest>)test;

+ (void)runTestWithLibOrgBouncycastleUtilTestTest:(id<LibOrgBouncycastleUtilTestTest>)test
                            withJavaIoPrintStream:(JavaIoPrintStream *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleUtilTestSimpleTest)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestSimpleTest_init(LibOrgBouncycastleUtilTestSimpleTest *self);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestSimpleTest_runTestWithLibOrgBouncycastleUtilTestTest_(id<LibOrgBouncycastleUtilTestTest> test);

FOUNDATION_EXPORT void LibOrgBouncycastleUtilTestSimpleTest_runTestWithLibOrgBouncycastleUtilTestTest_withJavaIoPrintStream_(id<LibOrgBouncycastleUtilTestTest> test, JavaIoPrintStream *outArg);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilTestSimpleTest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SimpleTest_H
