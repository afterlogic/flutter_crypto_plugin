//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.java
//

#ifndef RSAPrivateCrtKeyParameters_H
#define RSAPrivateCrtKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "RSAKeyParameters.h"

@class JavaMathBigInteger;

@interface LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters : LibOrgBouncycastleCryptoParamsRSAKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)modulus
                              withJavaMathBigInteger:(JavaMathBigInteger *)publicExponent
                              withJavaMathBigInteger:(JavaMathBigInteger *)privateExponent
                              withJavaMathBigInteger:(JavaMathBigInteger *)p
                              withJavaMathBigInteger:(JavaMathBigInteger *)q
                              withJavaMathBigInteger:(JavaMathBigInteger *)dP
                              withJavaMathBigInteger:(JavaMathBigInteger *)dQ
                              withJavaMathBigInteger:(JavaMathBigInteger *)qInv;

- (JavaMathBigInteger *)getDP;

- (JavaMathBigInteger *)getDQ;

- (JavaMathBigInteger *)getP;

- (JavaMathBigInteger *)getPublicExponent;

- (JavaMathBigInteger *)getQ;

- (JavaMathBigInteger *)getQInv;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
                   withJavaMathBigInteger:(JavaMathBigInteger *)arg1
                   withJavaMathBigInteger:(JavaMathBigInteger *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *self, JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *new_LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *create_LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RSAPrivateCrtKeyParameters_H
