//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/util/encoders/UrlBase64.java
//

#ifndef UrlBase64_H
#define UrlBase64_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoOutputStream;

@interface LibOrgBouncycastleUtilEncodersUrlBase64 : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)data;

+ (jint)decodeWithByteArray:(IOSByteArray *)data
     withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

+ (IOSByteArray *)decodeWithNSString:(NSString *)data;

+ (jint)decodeWithNSString:(NSString *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

+ (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)data;

+ (jint)encodeWithByteArray:(IOSByteArray *)data
     withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleUtilEncodersUrlBase64)

FOUNDATION_EXPORT void LibOrgBouncycastleUtilEncodersUrlBase64_init(LibOrgBouncycastleUtilEncodersUrlBase64 *self);

FOUNDATION_EXPORT LibOrgBouncycastleUtilEncodersUrlBase64 *new_LibOrgBouncycastleUtilEncodersUrlBase64_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleUtilEncodersUrlBase64 *create_LibOrgBouncycastleUtilEncodersUrlBase64_init(void);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleUtilEncodersUrlBase64_encodeWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT jint LibOrgBouncycastleUtilEncodersUrlBase64_encodeWithByteArray_withJavaIoOutputStream_(IOSByteArray *data, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleUtilEncodersUrlBase64_decodeWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT jint LibOrgBouncycastleUtilEncodersUrlBase64_decodeWithByteArray_withJavaIoOutputStream_(IOSByteArray *data, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleUtilEncodersUrlBase64_decodeWithNSString_(NSString *data);

FOUNDATION_EXPORT jint LibOrgBouncycastleUtilEncodersUrlBase64_decodeWithNSString_withJavaIoOutputStream_(NSString *data, JavaIoOutputStream *outArg);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleUtilEncodersUrlBase64)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // UrlBase64_H
