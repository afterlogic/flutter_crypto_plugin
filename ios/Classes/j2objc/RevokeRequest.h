//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/RevokeRequest.java
//

#ifndef RevokeRequest_H
#define RevokeRequest_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1DERUTF8String;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509CRLReason;

@interface LibOrgBouncycastleAsn1CmcRevokeRequest : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)name
                               withLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)serialNumber
                             withLibOrgBouncycastleAsn1X509CRLReason:(LibOrgBouncycastleAsn1X509CRLReason *)reason
                       withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)invalidityDate
                           withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)passphrase
                             withLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)comment;

- (LibOrgBouncycastleAsn1DERUTF8String *)getComment;

+ (LibOrgBouncycastleAsn1CmcRevokeRequest *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getInvalidityDate;

- (LibOrgBouncycastleAsn1X500X500Name *)getName;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getPassphrase;

- (IOSByteArray *)getPassPhrase;

- (LibOrgBouncycastleAsn1X509CRLReason *)getReason;

- (JavaMathBigInteger *)getSerialNumber;

- (void)setCommentWithLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)comment;

- (void)setInvalidityDateWithLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)invalidityDate;

- (void)setPassphraseWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)passphrase;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcRevokeRequest)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcRevokeRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1X509CRLReason_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1CmcRevokeRequest *self, LibOrgBouncycastleAsn1X500X500Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber, LibOrgBouncycastleAsn1X509CRLReason *reason, LibOrgBouncycastleAsn1ASN1GeneralizedTime *invalidityDate, LibOrgBouncycastleAsn1ASN1OctetString *passphrase, LibOrgBouncycastleAsn1DERUTF8String *comment);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcRevokeRequest *new_LibOrgBouncycastleAsn1CmcRevokeRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1X509CRLReason_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1X500X500Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber, LibOrgBouncycastleAsn1X509CRLReason *reason, LibOrgBouncycastleAsn1ASN1GeneralizedTime *invalidityDate, LibOrgBouncycastleAsn1ASN1OctetString *passphrase, LibOrgBouncycastleAsn1DERUTF8String *comment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcRevokeRequest *create_LibOrgBouncycastleAsn1CmcRevokeRequest_initWithLibOrgBouncycastleAsn1X500X500Name_withLibOrgBouncycastleAsn1ASN1Integer_withLibOrgBouncycastleAsn1X509CRLReason_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1X500X500Name *name, LibOrgBouncycastleAsn1ASN1Integer *serialNumber, LibOrgBouncycastleAsn1X509CRLReason *reason, LibOrgBouncycastleAsn1ASN1GeneralizedTime *invalidityDate, LibOrgBouncycastleAsn1ASN1OctetString *passphrase, LibOrgBouncycastleAsn1DERUTF8String *comment);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcRevokeRequest *LibOrgBouncycastleAsn1CmcRevokeRequest_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcRevokeRequest)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RevokeRequest_H
