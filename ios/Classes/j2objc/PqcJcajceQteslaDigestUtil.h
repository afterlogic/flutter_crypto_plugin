//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/qtesla/PqcJcajceQteslaDigestUtil.java
//

#ifndef PqcJcajceQteslaDigestUtil_H
#define PqcJcajceQteslaDigestUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil : NSObject

#pragma mark Public

+ (IOSByteArray *)getDigestResultWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

+ (jint)getDigestSizeWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (id<LibOrgBouncycastleCryptoDigest>)getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_init(void);

FOUNDATION_EXPORT id<LibOrgBouncycastleCryptoDigest> LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestResultWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT jint LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestSizeWithLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PqcJcajceQteslaDigestUtil_H
