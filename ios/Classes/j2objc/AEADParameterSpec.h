//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/spec/AEADParameterSpec.java
//

#ifndef AEADParameterSpec_H
#define AEADParameterSpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@class IOSByteArray;

@interface LibOrgBouncycastleJcajceSpecAEADParameterSpec : JavaxCryptoSpecIvParameterSpec

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)nonce
                                    withInt:(jint)macSizeInBits;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)nonce
                                    withInt:(jint)macSizeInBits
                              withByteArray:(IOSByteArray *)associatedData;

- (IOSByteArray *)getAssociatedData;

- (jint)getMacSizeInBits;

- (IOSByteArray *)getNonce;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0
                                    withInt:(jint)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceSpecAEADParameterSpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(LibOrgBouncycastleJcajceSpecAEADParameterSpec *self, IOSByteArray *nonce, jint macSizeInBits);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecAEADParameterSpec *new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(IOSByteArray *nonce, jint macSizeInBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecAEADParameterSpec *create_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_(IOSByteArray *nonce, jint macSizeInBits);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(LibOrgBouncycastleJcajceSpecAEADParameterSpec *self, IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecAEADParameterSpec *new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceSpecAEADParameterSpec *create_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_withByteArray_(IOSByteArray *nonce, jint macSizeInBits, IOSByteArray *associatedData);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceSpecAEADParameterSpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AEADParameterSpec_H
