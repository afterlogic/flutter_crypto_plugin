//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JcePKIXNameConstraintValidator.java
//

#ifndef JcePKIXNameConstraintValidator_H
#define JcePKIXNameConstraintValidator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1X509GeneralName;
@class LibOrgBouncycastleAsn1X509GeneralSubtree;
@protocol JavaUtilSet;

@interface LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addExcludedSubtreeWithLibOrgBouncycastleAsn1X509GeneralSubtree:(LibOrgBouncycastleAsn1X509GeneralSubtree *)subtree;

- (void)checkExcludedWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)name;

- (void)checkExcludedDNWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)dns;

- (void)checkPermittedWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)name;

- (void)checkPermittedDNWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)dns;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (void)intersectEmptyPermittedSubtreeWithInt:(jint)nameType;

- (void)intersectPermittedSubtreeWithLibOrgBouncycastleAsn1X509GeneralSubtree:(LibOrgBouncycastleAsn1X509GeneralSubtree *)permitted;

- (void)intersectPermittedSubtreeWithLibOrgBouncycastleAsn1X509GeneralSubtreeArray:(IOSObjectArray *)permitted;

- (NSString *)description;

#pragma mark Protected

- (id<JavaUtilSet>)unionDNSWithJavaUtilSet:(id<JavaUtilSet>)excluded
                              withNSString:(NSString *)dns;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator_init(LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator *self);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator *new_LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator *create_LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderJcePKIXNameConstraintValidator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcePKIXNameConstraintValidator_H
