//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/DSAPublicKeyParameters.java
//

#ifndef DSAPublicKeyParameters_H
#define DSAPublicKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DSAKeyParameters.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDSAParameters;

@interface LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters : LibOrgBouncycastleCryptoParamsDSAKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
     withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)params;

- (JavaMathBigInteger *)getY;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastleCryptoParamsDSAParameters:(LibOrgBouncycastleCryptoParamsDSAParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *self, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *new_LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *create_LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_initWithJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDSAParameters_(JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDSAParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DSAPublicKeyParameters_H
