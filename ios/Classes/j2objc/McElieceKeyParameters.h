//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters.java
//

#ifndef McElieceKeyParameters_H
#define McElieceKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters : LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)isPrivate
withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)params;

- (LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *self, jboolean isPrivate, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(jboolean isPrivate, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withLibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(jboolean isPrivate, LibOrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceKeyParameters_H
