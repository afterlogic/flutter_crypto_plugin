//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ua/DSTU4145ECBinary.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "DSTU4145BinaryField.h"
#include "DSTU4145ECBinary.h"
#include "DSTU4145PointEncoder.h"
#include "ECAlgorithms.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECFieldElement.h"
#include "ECPoint.h"
#include "FiniteField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Polynomial.h"
#include "PolynomialExtensionField.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastleAsn1UaDSTU4145ECBinary ()

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1UaDSTU4145ECBinary *new_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1UaDSTU4145ECBinary *create_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1UaDSTU4145ECBinary

- (instancetype)initWithLibOrgBouncycastleCryptoParamsECDomainParameters:(LibOrgBouncycastleCryptoParamsECDomainParameters *)params {
  LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_(self, params);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1UaDSTU4145ECBinary *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1UaDSTU4145ECBinary_getInstanceWithId_(obj);
}

- (LibOrgBouncycastleAsn1UaDSTU4145BinaryField *)getField {
  return f_;
}

- (JavaMathBigInteger *)getA {
  return [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(a_)) getValue];
}

- (IOSByteArray *)getB {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(b_)) getOctets]);
}

- (JavaMathBigInteger *)getN {
  return [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(n_)) getValue];
}

- (IOSByteArray *)getG {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(bp_)) getOctets]);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (0 != [((JavaMathBigInteger *) nil_chk(version__)) compareToWithId:JavaMathBigInteger_valueOfWithLong_(0)]) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 0, new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(version__))];
  }
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:f_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:a_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:b_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:n_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:bp_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1UaDSTU4145ECBinary;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1UaDSTU4145BinaryField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoParamsECDomainParameters:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithId:);
  methods[3].selector = @selector(getField);
  methods[4].selector = @selector(getA);
  methods[5].selector = @selector(getB);
  methods[6].selector = @selector(getN);
  methods[7].selector = @selector(getG);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, 4, -1, -1, -1 },
    { "f_", "LLibOrgBouncycastleAsn1UaDSTU4145BinaryField;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "a_", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "b_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "n_", "LLibOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bp_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoParamsECDomainParameters;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "version" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1UaDSTU4145ECBinary = { "DSTU4145ECBinary", "lib.org.bouncycastle.asn1.ua", ptrTable, methods, fields, 7, 0x1, 9, 6, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1UaDSTU4145ECBinary;
}

@end

void LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *self, LibOrgBouncycastleCryptoParamsECDomainParameters *params) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = JavaMathBigInteger_valueOfWithLong_(0);
  LibOrgBouncycastleMathEcECCurve *curve = [((LibOrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(params)) getCurve];
  if (!LibOrgBouncycastleMathEcECAlgorithms_isF2mCurveWithLibOrgBouncycastleMathEcECCurve_(curve)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"only binary domain is possible");
  }
  id<LibOrgBouncycastleMathFieldPolynomialExtensionField> field = (id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) cast_check([((LibOrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField], LibOrgBouncycastleMathFieldPolynomialExtensionField_class_());
  IOSIntArray *exponents = [((id<LibOrgBouncycastleMathFieldPolynomial>) nil_chk([((id<LibOrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(field)) getMinimalPolynomial])) getExponentsPresent];
  if (((IOSIntArray *) nil_chk(exponents))->size_ == 3) {
    self->f_ = new_LibOrgBouncycastleAsn1UaDSTU4145BinaryField_initWithInt_withInt_(IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 1));
  }
  else if (exponents->size_ == 5) {
    self->f_ = new_LibOrgBouncycastleAsn1UaDSTU4145BinaryField_initWithInt_withInt_withInt_withInt_(IOSIntArray_Get(exponents, 4), IOSIntArray_Get(exponents, 1), IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 3));
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"curve must have a trinomial or pentanomial basis");
  }
  self->a_ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger]);
  self->b_ = new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([((LibOrgBouncycastleMathEcECFieldElement *) nil_chk([curve getB])) getEncoded]);
  self->n_ = new_LibOrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_([params getN]);
  self->bp_ = new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(LibOrgBouncycastleAsn1UaDSTU4145PointEncoder_encodePointWithLibOrgBouncycastleMathEcECPoint_([params getG]));
}

LibOrgBouncycastleAsn1UaDSTU4145ECBinary *new_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1UaDSTU4145ECBinary, initWithLibOrgBouncycastleCryptoParamsECDomainParameters_, params)
}

LibOrgBouncycastleAsn1UaDSTU4145ECBinary *create_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleCryptoParamsECDomainParameters_(LibOrgBouncycastleCryptoParamsECDomainParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1UaDSTU4145ECBinary, initWithLibOrgBouncycastleCryptoParamsECDomainParameters_, params)
}

void LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1UaDSTU4145ECBinary *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->version__ = JavaMathBigInteger_valueOfWithLong_(0);
  jint index = 0;
  if ([[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:index] isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
    LibOrgBouncycastleAsn1ASN1TaggedObject *taggedVersion = (LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:index], [LibOrgBouncycastleAsn1ASN1TaggedObject class]);
    if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedVersion)) isExplicit] && 0 == [taggedVersion getTagNo]) {
      self->version__ = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([taggedVersion getLoadedObject]))) getValue];
      index++;
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"object parse error");
    }
  }
  self->f_ = LibOrgBouncycastleAsn1UaDSTU4145BinaryField_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->a_ = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->b_ = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->n_ = LibOrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:index]);
  index++;
  self->bp_ = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:index]);
}

LibOrgBouncycastleAsn1UaDSTU4145ECBinary *new_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1UaDSTU4145ECBinary, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1UaDSTU4145ECBinary *create_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1UaDSTU4145ECBinary, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1UaDSTU4145ECBinary *LibOrgBouncycastleAsn1UaDSTU4145ECBinary_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1UaDSTU4145ECBinary class]]) {
    return (LibOrgBouncycastleAsn1UaDSTU4145ECBinary *) obj;
  }
  if (obj != nil) {
    return new_LibOrgBouncycastleAsn1UaDSTU4145ECBinary_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1UaDSTU4145ECBinary)
