//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcElieceCCA2PublicKey.java
//

#ifndef BCMcElieceCCA2PublicKey_H
#define BCMcElieceCCA2PublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CipherParameters.h"
#include "J2ObjC_header.h"
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@class LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters;
@class LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix;

@interface LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey : NSObject < LibOrgBouncycastleCryptoCipherParameters, JavaSecurityPublicKey >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *)params;

- (jboolean)isEqual:(id)other;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getG;

- (jint)getK;

- (jint)getN;

- (jint)getT;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters_(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey *self, LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey *new_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey *create_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCMcElieceCCA2PublicKey_H
