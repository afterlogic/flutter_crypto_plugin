//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/OtherHash.java
//

#ifndef OtherHash_H
#define OtherHash_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface LibOrgBouncycastleAsn1EsfOtherHash : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)sha1Hash;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue:(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)otherHash;

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm;

- (IOSByteArray *)getHashValue;

+ (LibOrgBouncycastleAsn1EsfOtherHash *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EsfOtherHash)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOtherHash *LibOrgBouncycastleAsn1EsfOtherHash_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfOtherHash_initWithLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1EsfOtherHash *self, LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *otherHash);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOtherHash *new_LibOrgBouncycastleAsn1EsfOtherHash_initWithLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *otherHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOtherHash *create_LibOrgBouncycastleAsn1EsfOtherHash_initWithLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *otherHash);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EsfOtherHash_initWithByteArray_(LibOrgBouncycastleAsn1EsfOtherHash *self, IOSByteArray *sha1Hash);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOtherHash *new_LibOrgBouncycastleAsn1EsfOtherHash_initWithByteArray_(IOSByteArray *sha1Hash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EsfOtherHash *create_LibOrgBouncycastleAsn1EsfOtherHash_initWithByteArray_(IOSByteArray *sha1Hash);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EsfOtherHash)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OtherHash_H
