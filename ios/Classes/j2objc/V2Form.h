//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/V2Form.java
//

#ifndef V2Form_H
#define V2Form_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X509GeneralNames;
@class LibOrgBouncycastleAsn1X509IssuerSerial;
@class LibOrgBouncycastleAsn1X509ObjectDigestInfo;

@interface LibOrgBouncycastleAsn1X509V2Form : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1X509GeneralNames *issuerName_;
  LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID_;
  LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                              withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                              withLibOrgBouncycastleAsn1X509IssuerSerial:(LibOrgBouncycastleAsn1X509IssuerSerial *)baseCertificateID
                          withLibOrgBouncycastleAsn1X509ObjectDigestInfo:(LibOrgBouncycastleAsn1X509ObjectDigestInfo *)objectDigestInfo;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509GeneralNames:(LibOrgBouncycastleAsn1X509GeneralNames *)issuerName
                          withLibOrgBouncycastleAsn1X509ObjectDigestInfo:(LibOrgBouncycastleAsn1X509ObjectDigestInfo *)objectDigestInfo;

- (LibOrgBouncycastleAsn1X509IssuerSerial *)getBaseCertificateID;

+ (LibOrgBouncycastleAsn1X509V2Form *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1X509V2Form *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X509GeneralNames *)getIssuerName;

- (LibOrgBouncycastleAsn1X509ObjectDigestInfo *)getObjectDigestInfo;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509V2Form)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509V2Form, issuerName_, LibOrgBouncycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509V2Form, baseCertificateID_, LibOrgBouncycastleAsn1X509IssuerSerial *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1X509V2Form, objectDigestInfo_, LibOrgBouncycastleAsn1X509ObjectDigestInfo *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *LibOrgBouncycastleAsn1X509V2Form_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *LibOrgBouncycastleAsn1X509V2Form_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1X509GeneralNames_withLibOrgBouncycastleAsn1X509IssuerSerial_withLibOrgBouncycastleAsn1X509ObjectDigestInfo_(LibOrgBouncycastleAsn1X509GeneralNames *issuerName, LibOrgBouncycastleAsn1X509IssuerSerial *baseCertificateID, LibOrgBouncycastleAsn1X509ObjectDigestInfo *objectDigestInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1X509V2Form *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *new_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509V2Form *create_LibOrgBouncycastleAsn1X509V2Form_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509V2Form)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // V2Form_H
