//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/jcajce/JcaPGPPublicKeyRing.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JcaKeyFingerprintCalculator.h"
#include "JcaPGPPublicKeyRing.h"
#include "KeyFingerPrintCalculator.h"
#include "PGPPublicKeyRing.h"
#include "java/io/InputStream.h"

inline id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_get_fingerPrintCalculator(void);
inline id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_set_fingerPrintCalculator(id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> value);
static id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator> LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_fingerPrintCalculator;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing, fingerPrintCalculator, id<LibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator>)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing)

@implementation LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing

- (instancetype)initWithByteArray:(IOSByteArray *)encoding {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithByteArray_(self, encoding);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fingerPrintCalculator", "LLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator;", .constantValue.asLong = 0, 0xa, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "LJavaIoIOException;", "LJavaIoInputStream;", &LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_fingerPrintCalculator };
  static const J2ObjcClassInfo _LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing = { "JcaPGPPublicKeyRing", "lib.org.bouncycastle.openpgp.jcajce", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing class]) {
    LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_fingerPrintCalculator = new_LibOrgBouncycastleOpenpgpOperatorJcajceJcaKeyFingerprintCalculator_init();
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing)
  }
}

@end

void LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithByteArray_(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *self, IOSByteArray *encoding) {
  LibOrgBouncycastleOpenpgpPGPPublicKeyRing_initWithByteArray_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(self, encoding, LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_fingerPrintCalculator);
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *new_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing, initWithByteArray_, encoding)
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *create_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing, initWithByteArray_, encoding)
}

void LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithJavaIoInputStream_(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *self, JavaIoInputStream *inArg) {
  LibOrgBouncycastleOpenpgpPGPPublicKeyRing_initWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpOperatorKeyFingerPrintCalculator_(self, inArg, LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_fingerPrintCalculator);
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *new_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing, initWithJavaIoInputStream_, inArg)
}

LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing *create_LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing, initWithJavaIoInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleOpenpgpJcajceJcaPGPPublicKeyRing)
