//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/esf/OtherHashAlgAndValue.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"
#include "OtherHashAlgAndValue.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue () {
 @public
  LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm_;
  LibOrgBouncycastleAsn1ASN1OctetString *hashValue_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, hashAlgorithm_, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, hashValue_, LibOrgBouncycastleAsn1ASN1OctetString *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *new_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *create_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue

+ (LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_getInstanceWithId_(obj);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                            withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)hashValue {
  LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(self, hashAlgorithm, hashValue);
  return self;
}

- (LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  return hashAlgorithm_;
}

- (LibOrgBouncycastleAsn1ASN1OctetString *)getHashValue {
  return hashValue_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:hashAlgorithm_];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:hashValue_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1OctetString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:withLibOrgBouncycastleAsn1ASN1OctetString:);
  methods[3].selector = @selector(getHashAlgorithm);
  methods[4].selector = @selector(getHashValue);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashAlgorithm_", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValue_", "LLibOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "LLibOrgBouncycastleAsn1X509AlgorithmIdentifier;LLibOrgBouncycastleAsn1ASN1OctetString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue = { "OtherHashAlgAndValue", "lib.org.bouncycastle.asn1.esf", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue;
}

@end

LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue class]]) {
    return (LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *) obj;
  }
  else if (obj != nil) {
    return new_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  return nil;
}

void LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  self->hashAlgorithm_ = LibOrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->hashValue_ = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([seq getObjectAtWithInt:1]);
}

LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *new_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *create_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *self, LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *hashValue) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->hashAlgorithm_ = hashAlgorithm;
  self->hashValue_ = hashValue;
}

LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *new_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *hashValue) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_, hashAlgorithm, hashValue)
}

LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue *create_LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, LibOrgBouncycastleAsn1ASN1OctetString *hashValue) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue, initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1OctetString_, hashAlgorithm, hashValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EsfOtherHashAlgAndValue)
