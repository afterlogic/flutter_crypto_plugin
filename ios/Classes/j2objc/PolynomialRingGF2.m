//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2.java
//

#include "J2ObjC_source.h"
#include "PolynomialRingGF2.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *self);

__attribute__((unused)) static LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *create_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init(void);

@implementation LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)addWithInt:(jint)p
           withInt:(jint)q {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_addWithInt_withInt_(p, q);
}

+ (jlong)multiplyWithInt:(jint)p
                 withInt:(jint)q {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_multiplyWithInt_withInt_(p, q);
}

+ (jint)modMultiplyWithInt:(jint)a
                   withInt:(jint)b
                   withInt:(jint)r {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(a, b, r);
}

+ (jint)degreeWithInt:(jint)p {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(p);
}

+ (jint)degreeWithLong:(jlong)p {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithLong_(p);
}

+ (jint)remainderWithInt:(jint)p
                 withInt:(jint)q {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(p, q);
}

+ (jint)restWithLong:(jlong)p
             withInt:(jint)q {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_restWithLong_withInt_(p, q);
}

+ (jint)gcdWithInt:(jint)p
           withInt:(jint)q {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_gcdWithInt_withInt_(p, q);
}

+ (jboolean)isIrreducibleWithInt:(jint)p {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(p);
}

+ (jint)getIrreduciblePolynomialWithInt:(jint)deg {
  return LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(deg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 11, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 12, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 13, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithInt:withInt:);
  methods[2].selector = @selector(multiplyWithInt:withInt:);
  methods[3].selector = @selector(modMultiplyWithInt:withInt:withInt:);
  methods[4].selector = @selector(degreeWithInt:);
  methods[5].selector = @selector(degreeWithLong:);
  methods[6].selector = @selector(remainderWithInt:withInt:);
  methods[7].selector = @selector(restWithLong:withInt:);
  methods[8].selector = @selector(gcdWithInt:withInt:);
  methods[9].selector = @selector(isIrreducibleWithInt:);
  methods[10].selector = @selector(getIrreduciblePolynomialWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "add", "II", "multiply", "modMultiply", "III", "degree", "I", "J", "remainder", "rest", "JI", "gcd", "isIrreducible", "getIrreduciblePolynomial" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 = { "PolynomialRingGF2", "lib.org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, NULL, 7, 0x11, 11, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2;
}

@end

void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *self) {
  NSObject_init(self);
}

LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2, init)
}

LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 *create_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2, init)
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_addWithInt_withInt_(jint p, jint q) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  return p ^ q;
}

jlong LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_multiplyWithInt_withInt_(jint p, jint q) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jlong result = 0;
  if (q != 0) {
    jlong q1 = q & (jlong) 0x00000000ffffffffLL;
    while (p != 0) {
      jbyte b = (jbyte) (p & (jint) 0x01);
      if (b == 1) {
        result ^= q1;
      }
      JreURShiftAssignInt(&p, 1);
      JreLShiftAssignLong(&q1, 1);
    }
  }
  return result;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(jint a, jint b, jint r) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jint result = 0;
  jint p = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(a, r);
  jint q = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(b, r);
  if (q != 0) {
    jint d = JreLShift32(1, LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(r));
    while (p != 0) {
      jbyte pMod2 = (jbyte) (p & (jint) 0x01);
      if (pMod2 == 1) {
        result ^= q;
      }
      JreURShiftAssignInt(&p, 1);
      JreLShiftAssignInt(&q, 1);
      if (q >= d) {
        q ^= r;
      }
    }
  }
  return result;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(jint p) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jint result = -1;
  while (p != 0) {
    result++;
    JreURShiftAssignInt(&p, 1);
  }
  return result;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithLong_(jlong p) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jint result = 0;
  while (p != 0) {
    result++;
    JreURShiftAssignLong(&p, 1);
  }
  return result - 1;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(jint p, jint q) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jint result = p;
  if (q == 0) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Error: to be divided by 0"];
    return 0;
  }
  while (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(result) >= LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(q)) {
    result ^= JreLShift32(q, (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(result) - LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(q)));
  }
  return result;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_restWithLong_withInt_(jlong p, jint q) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jlong p1 = p;
  if (q == 0) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Error: to be divided by 0"];
    return 0;
  }
  jlong q1 = q & (jlong) 0x00000000ffffffffLL;
  while ((JreURShift64(p1, 32)) != 0) {
    p1 ^= JreLShift64(q1, (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithLong_(p1) - LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithLong_(q1)));
  }
  jint result = (jint) (p1 & (jint) 0xffffffff);
  while (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(result) >= LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(q)) {
    result ^= JreLShift32(q, (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(result) - LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(q)));
  }
  return result;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_gcdWithInt_withInt_(jint p, jint q) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  jint a;
  jint b;
  jint c;
  a = p;
  b = q;
  while (b != 0) {
    c = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(a, b);
    a = b;
    b = c;
  }
  return a;
}

jboolean LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(jint p) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  if (p == 0) {
    return false;
  }
  jint d = JreURShift32(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(p), 1);
  jint u = 2;
  for (jint i = 0; i < d; i++) {
    u = LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(u, u, p);
    if (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_gcdWithInt_withInt_(u ^ 2, p) != 1) {
      return false;
    }
  }
  return true;
}

jint LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(jint deg) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_initialize();
  if (deg < 0) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"The Degree is negative"];
    return 0;
  }
  if (deg > 31) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"The Degree is more then 31"];
    return 0;
  }
  if (deg == 0) {
    return 1;
  }
  jint a = JreLShift32(1, deg);
  a++;
  jint b = JreLShift32(1, (deg + 1));
  for (jint i = a; i < b; i += 2) {
    if (LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(i)) {
      return i;
    }
  }
  return 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2)
