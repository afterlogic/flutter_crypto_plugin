//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/SXprUtils.java
//

#include "HashAlgorithmTags.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "S2K.h"
#include "SXprUtils.h"
#include "Streams.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Long.h"

@interface LibOrgBouncycastleGpgSXprUtils ()

+ (jint)readLengthWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                withInt:(jint)ch;

@end

__attribute__((unused)) static jint LibOrgBouncycastleGpgSXprUtils_readLengthWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint ch);

@interface LibOrgBouncycastleGpgSXprUtils_1 : LibOrgBouncycastleBcpgS2K {
 @public
  jlong val$iterationCount_;
}

- (instancetype)initWithLong:(jlong)capture$0
                     withInt:(jint)algorithm
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)itCount;

- (jlong)getIterationCount;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleGpgSXprUtils_1)

__attribute__((unused)) static void LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(LibOrgBouncycastleGpgSXprUtils_1 *self, jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount);

__attribute__((unused)) static LibOrgBouncycastleGpgSXprUtils_1 *new_LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleGpgSXprUtils_1 *create_LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount);

@implementation LibOrgBouncycastleGpgSXprUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleGpgSXprUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)readLengthWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                withInt:(jint)ch {
  return LibOrgBouncycastleGpgSXprUtils_readLengthWithJavaIoInputStream_withInt_(inArg, ch);
}

+ (NSString *)readStringWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withInt:(jint)ch {
  return LibOrgBouncycastleGpgSXprUtils_readStringWithJavaIoInputStream_withInt_(inArg, ch);
}

+ (IOSByteArray *)readBytesWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                         withInt:(jint)ch {
  return LibOrgBouncycastleGpgSXprUtils_readBytesWithJavaIoInputStream_withInt_(inArg, ch);
}

+ (LibOrgBouncycastleBcpgS2K *)parseS2KWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return LibOrgBouncycastleGpgSXprUtils_parseS2KWithJavaIoInputStream_(inArg);
}

+ (void)skipOpenParenthesisWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleGpgSXprUtils_skipOpenParenthesisWithJavaIoInputStream_(inArg);
}

+ (void)skipCloseParenthesisWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  LibOrgBouncycastleGpgSXprUtils_skipCloseParenthesisWithJavaIoInputStream_(inArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 3, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x8, 4, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleBcpgS2K;", 0x8, 5, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x8, 7, 6, 2, -1, -1, -1 },
    { NULL, "V", 0x8, 8, 6, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readLengthWithJavaIoInputStream:withInt:);
  methods[2].selector = @selector(readStringWithJavaIoInputStream:withInt:);
  methods[3].selector = @selector(readBytesWithJavaIoInputStream:withInt:);
  methods[4].selector = @selector(parseS2KWithJavaIoInputStream:);
  methods[5].selector = @selector(skipOpenParenthesisWithJavaIoInputStream:);
  methods[6].selector = @selector(skipCloseParenthesisWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "readLength", "LJavaIoInputStream;I", "LJavaIoIOException;", "readString", "readBytes", "parseS2K", "LJavaIoInputStream;", "skipOpenParenthesis", "skipCloseParenthesis" };
  static const J2ObjcClassInfo _LibOrgBouncycastleGpgSXprUtils = { "SXprUtils", "lib.org.bouncycastle.gpg", ptrTable, methods, NULL, 7, 0x0, 7, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleGpgSXprUtils;
}

@end

void LibOrgBouncycastleGpgSXprUtils_init(LibOrgBouncycastleGpgSXprUtils *self) {
  NSObject_init(self);
}

LibOrgBouncycastleGpgSXprUtils *new_LibOrgBouncycastleGpgSXprUtils_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleGpgSXprUtils, init)
}

LibOrgBouncycastleGpgSXprUtils *create_LibOrgBouncycastleGpgSXprUtils_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleGpgSXprUtils, init)
}

jint LibOrgBouncycastleGpgSXprUtils_readLengthWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint ch) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  jint len = ch - '0';
  while ((ch = [((JavaIoInputStream *) nil_chk(inArg)) read]) >= 0 && ch != ':') {
    len = len * 10 + ch - '0';
  }
  return len;
}

NSString *LibOrgBouncycastleGpgSXprUtils_readStringWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint ch) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  jint len = LibOrgBouncycastleGpgSXprUtils_readLengthWithJavaIoInputStream_withInt_(inArg, ch);
  IOSCharArray *chars = [IOSCharArray newArrayWithLength:len];
  for (jint i = 0; i != chars->size_; i++) {
    *IOSCharArray_GetRef(chars, i) = (jchar) [((JavaIoInputStream *) nil_chk(inArg)) read];
  }
  return [NSString java_stringWithCharacters:chars];
}

IOSByteArray *LibOrgBouncycastleGpgSXprUtils_readBytesWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint ch) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  jint len = LibOrgBouncycastleGpgSXprUtils_readLengthWithJavaIoInputStream_withInt_(inArg, ch);
  IOSByteArray *data = [IOSByteArray newArrayWithLength:len];
  LibOrgBouncycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(inArg, data);
  return data;
}

LibOrgBouncycastleBcpgS2K *LibOrgBouncycastleGpgSXprUtils_parseS2KWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  LibOrgBouncycastleGpgSXprUtils_skipOpenParenthesisWithJavaIoInputStream_(inArg);
  NSString *alg = LibOrgBouncycastleGpgSXprUtils_readStringWithJavaIoInputStream_withInt_(inArg, [((JavaIoInputStream *) nil_chk(inArg)) read]);
  IOSByteArray *iv = LibOrgBouncycastleGpgSXprUtils_readBytesWithJavaIoInputStream_withInt_(inArg, [inArg read]);
  jlong iterationCount = JavaLangLong_parseLongWithNSString_(LibOrgBouncycastleGpgSXprUtils_readStringWithJavaIoInputStream_withInt_(inArg, [inArg read]));
  LibOrgBouncycastleGpgSXprUtils_skipCloseParenthesisWithJavaIoInputStream_(inArg);
  LibOrgBouncycastleBcpgS2K *s2k = new_LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(iterationCount, LibOrgBouncycastleBcpgHashAlgorithmTags_SHA1, iv, (jint) iterationCount);
  return s2k;
}

void LibOrgBouncycastleGpgSXprUtils_skipOpenParenthesisWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  jint ch = [((JavaIoInputStream *) nil_chk(inArg)) read];
  if (ch != '(') {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown character encountered");
  }
}

void LibOrgBouncycastleGpgSXprUtils_skipCloseParenthesisWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  LibOrgBouncycastleGpgSXprUtils_initialize();
  jint ch = [((JavaIoInputStream *) nil_chk(inArg)) read];
  if (ch != ')') {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown character encountered");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleGpgSXprUtils)

@implementation LibOrgBouncycastleGpgSXprUtils_1

- (instancetype)initWithLong:(jlong)capture$0
                     withInt:(jint)algorithm
               withByteArray:(IOSByteArray *)iv
                     withInt:(jint)itCount {
  LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(self, capture$0, algorithm, iv, itCount);
  return self;
}

- (jlong)getIterationCount {
  return val$iterationCount_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withInt:withByteArray:withInt:);
  methods[1].selector = @selector(getIterationCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$iterationCount_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[BI", "LLibOrgBouncycastleGpgSXprUtils;", "parseS2KWithJavaIoInputStream:" };
  static const J2ObjcClassInfo _LibOrgBouncycastleGpgSXprUtils_1 = { "", "lib.org.bouncycastle.gpg", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_LibOrgBouncycastleGpgSXprUtils_1;
}

@end

void LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(LibOrgBouncycastleGpgSXprUtils_1 *self, jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount) {
  self->val$iterationCount_ = capture$0;
  LibOrgBouncycastleBcpgS2K_initWithInt_withByteArray_withInt_(self, algorithm, iv, itCount);
}

LibOrgBouncycastleGpgSXprUtils_1 *new_LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleGpgSXprUtils_1, initWithLong_withInt_withByteArray_withInt_, capture$0, algorithm, iv, itCount)
}

LibOrgBouncycastleGpgSXprUtils_1 *create_LibOrgBouncycastleGpgSXprUtils_1_initWithLong_withInt_withByteArray_withInt_(jlong capture$0, jint algorithm, IOSByteArray *iv, jint itCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleGpgSXprUtils_1, initWithLong_withInt_withByteArray_withInt_, capture$0, algorithm, iv, itCount)
}
