//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/DigestInputBuffer.java
//

#include "Digest.h"
#include "DigestInputBuffer.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"

@implementation LibOrgBouncycastleCryptoTlsDigestInputBuffer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsDigestInputBuffer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)updateDigestWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)d {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(d)) updateWithByteArray:self->buf_ withInt:0 withInt:count_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(updateDigestWithLibOrgBouncycastleCryptoDigest:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "updateDigest", "LLibOrgBouncycastleCryptoDigest;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsDigestInputBuffer = { "DigestInputBuffer", "lib.org.bouncycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsDigestInputBuffer;
}

@end

void LibOrgBouncycastleCryptoTlsDigestInputBuffer_init(LibOrgBouncycastleCryptoTlsDigestInputBuffer *self) {
  JavaIoByteArrayOutputStream_init(self);
}

LibOrgBouncycastleCryptoTlsDigestInputBuffer *new_LibOrgBouncycastleCryptoTlsDigestInputBuffer_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoTlsDigestInputBuffer, init)
}

LibOrgBouncycastleCryptoTlsDigestInputBuffer *create_LibOrgBouncycastleCryptoTlsDigestInputBuffer_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoTlsDigestInputBuffer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsDigestInputBuffer)
