//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/gm/GMNamedCurves.java
//

#ifndef GMNamedCurves_H
#define GMNamedCurves_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilHashtable;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1X9X9ECParameters;
@class LibOrgBouncycastleAsn1X9X9ECParametersHolder;
@protocol JavaUtilEnumeration;

@interface LibOrgBouncycastleAsn1GmGMNamedCurves : NSObject
@property (class) LibOrgBouncycastleAsn1X9X9ECParametersHolder *sm2p256v1 NS_SWIFT_NAME(sm2p256v1);
@property (class) LibOrgBouncycastleAsn1X9X9ECParametersHolder *wapip192v1 NS_SWIFT_NAME(wapip192v1);
@property (readonly, class) JavaUtilHashtable *objIds NS_SWIFT_NAME(objIds);
@property (readonly, class) JavaUtilHashtable *curves NS_SWIFT_NAME(curves);
@property (readonly, nonatomic, getter=getNames, class) JavaUtilHashtable *names NS_SWIFT_NAME(names);

+ (LibOrgBouncycastleAsn1X9X9ECParametersHolder *)sm2p256v1;

+ (void)setSm2p256v1:(LibOrgBouncycastleAsn1X9X9ECParametersHolder *)value;

+ (LibOrgBouncycastleAsn1X9X9ECParametersHolder *)wapip192v1;

+ (void)setWapip192v1:(LibOrgBouncycastleAsn1X9X9ECParametersHolder *)value;

+ (JavaUtilHashtable *)objIds;

+ (JavaUtilHashtable *)curves;

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name;

+ (LibOrgBouncycastleAsn1X9X9ECParameters *)getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (NSString *)getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (id<JavaUtilEnumeration>)getNames;

+ (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name;

#pragma mark Package-Private

+ (void)defineCurveWithNSString:(NSString *)name
withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
withLibOrgBouncycastleAsn1X9X9ECParametersHolder:(LibOrgBouncycastleAsn1X9X9ECParametersHolder *)holder;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1GmGMNamedCurves)

inline LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_get_sm2p256v1(void);
inline LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_set_sm2p256v1(LibOrgBouncycastleAsn1X9X9ECParametersHolder *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_sm2p256v1;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleAsn1GmGMNamedCurves, sm2p256v1, LibOrgBouncycastleAsn1X9X9ECParametersHolder *)

inline LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_get_wapip192v1(void);
inline LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_set_wapip192v1(LibOrgBouncycastleAsn1X9X9ECParametersHolder *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9ECParametersHolder *LibOrgBouncycastleAsn1GmGMNamedCurves_wapip192v1;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleAsn1GmGMNamedCurves, wapip192v1, LibOrgBouncycastleAsn1X9X9ECParametersHolder *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_get_objIds(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_objIds;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1GmGMNamedCurves, objIds, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_get_curves(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_curves;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1GmGMNamedCurves, curves, JavaUtilHashtable *)

inline JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_get_names(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *LibOrgBouncycastleAsn1GmGMNamedCurves_names;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1GmGMNamedCurves, names, JavaUtilHashtable *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1GmGMNamedCurves_init(LibOrgBouncycastleAsn1GmGMNamedCurves *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1GmGMNamedCurves *new_LibOrgBouncycastleAsn1GmGMNamedCurves_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1GmGMNamedCurves *create_LibOrgBouncycastleAsn1GmGMNamedCurves_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1GmGMNamedCurves_defineCurveWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1X9X9ECParametersHolder_(NSString *name, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleAsn1X9X9ECParametersHolder *holder);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1GmGMNamedCurves_getByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X9X9ECParameters *LibOrgBouncycastleAsn1GmGMNamedCurves_getByOIDWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1ObjectIdentifier *LibOrgBouncycastleAsn1GmGMNamedCurves_getOIDWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleAsn1GmGMNamedCurves_getNameWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT id<JavaUtilEnumeration> LibOrgBouncycastleAsn1GmGMNamedCurves_getNames(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1GmGMNamedCurves)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMNamedCurves_H
