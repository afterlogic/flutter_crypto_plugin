//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/X25519PublicKeyParameters.java
//

#ifndef X25519PublicKeyParameters_H
#define X25519PublicKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricKeyParameter.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoInputStream;

@interface LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters : LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter
@property (readonly, class) jint KEY_SIZE NS_SWIFT_NAME(KEY_SIZE);

+ (jint)KEY_SIZE;

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)buf
                                    withInt:(jint)off;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)input;

- (void)encodeWithByteArray:(IOSByteArray *)buf
                    withInt:(jint)off;

- (IOSByteArray *)getEncoded;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters)

inline jint LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_get_KEY_SIZE(void);
#define LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_KEY_SIZE 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters, KEY_SIZE, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithByteArray_withInt_(LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *self, IOSByteArray *buf, jint off);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *new_LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithByteArray_withInt_(IOSByteArray *buf, jint off) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *create_LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithByteArray_withInt_(IOSByteArray *buf, jint off);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithJavaIoInputStream_(LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *self, JavaIoInputStream *input);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *new_LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithJavaIoInputStream_(JavaIoInputStream *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters *create_LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters_initWithJavaIoInputStream_(JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsX25519PublicKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // X25519PublicKeyParameters_H
