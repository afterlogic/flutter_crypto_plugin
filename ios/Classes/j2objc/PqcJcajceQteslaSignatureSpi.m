//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/qtesla/PqcJcajceQteslaSignatureSpi.java
//

#include "BCqTESLAPrivateKey.h"
#include "BCqTESLAPublicKey.h"
#include "CipherParameters.h"
#include "Digest.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NullDigest.h"
#include "ParametersWithRandom.h"
#include "PqcJcajceQteslaDigestUtil.h"
#include "PqcJcajceQteslaSignatureSpi.h"
#include "QTESLASecurityCategory.h"
#include "QTESLASigner.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/Signature.h"
#include "java/security/SignatureException.h"
#include "java/security/spec/AlgorithmParameterSpec.h"

@interface LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi () {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
  LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *signer_;
  JavaSecuritySecureRandom *random_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, signer_, LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, random_, JavaSecuritySecureRandom *)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi

- (instancetype)initWithNSString:(NSString *)algorithm {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_(self, algorithm);
  return self;
}

- (instancetype)initWithNSString:(NSString *)sigName
withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner:(LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *)signer {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, sigName, digest, signer);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  if ([publicKey isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey class]]) {
    id<LibOrgBouncycastleCryptoCipherParameters> param = [((LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *) nil_chk(((LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPublicKey *) publicKey))) getKeyParams];
    [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) reset];
    [((LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *) nil_chk(signer_)) init__WithBoolean:false withLibOrgBouncycastleCryptoCipherParameters:param];
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"unknown public key passed to qTESLA");
  }
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  self->random_ = random;
  [self engineInitSignWithJavaSecurityPrivateKey:privateKey];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  if ([privateKey isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey class]]) {
    id<LibOrgBouncycastleCryptoCipherParameters> param = [((LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *) nil_chk(((LibOrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *) privateKey))) getKeyParams];
    if (random_ != nil) {
      param = new_LibOrgBouncycastleCryptoParamsParametersWithRandom_initWithLibOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, random_);
    }
    [((LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *) nil_chk(signer_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:param];
  }
  else {
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"unknown private key passed to qTESLA");
  }
}

- (void)engineUpdateWithByte:(jbyte)b {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByte:b];
}

- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  [((id<LibOrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:b withInt:off withInt:len];
}

- (IOSByteArray *)engineSign {
  @try {
    IOSByteArray *hash_ = LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestResultWithLibOrgBouncycastleCryptoDigest_(digest_);
    return [((LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *) nil_chk(signer_)) generateSignatureWithByteArray:hash_];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[JavaLangIllegalStateException class]]) {
      @throw new_JavaSecuritySignatureException_initWithNSString_([e getMessage]);
    }
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}

- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  IOSByteArray *hash_ = LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaDigestUtil_getDigestResultWithLibOrgBouncycastleCryptoDigest_(digest_);
  return [((LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *) nil_chk(signer_)) verifySignatureWithByteArray:hash_ withByteArray:sigBytes];
}

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

- (id)engineGetParameterWithNSString:(NSString *)param {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 6, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 7, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 11, 10, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 10, -1, -1, -1 },
    { NULL, "Z", 0x4, 12, 13, 10, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 16, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 17, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withLibOrgBouncycastleCryptoDigest:withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner:);
  methods[2].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[3].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[4].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  methods[5].selector = @selector(engineUpdateWithByte:);
  methods[6].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[7].selector = @selector(engineSign);
  methods[8].selector = @selector(engineVerifyWithByteArray:);
  methods[9].selector = @selector(engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[10].selector = @selector(engineSetParameterWithNSString:withId:);
  methods[11].selector = @selector(engineGetParameterWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LLibOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signer_", "LLibOrgBouncycastlePqcCryptoQteslaQTESLASigner;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LLibOrgBouncycastleCryptoDigest;LLibOrgBouncycastlePqcCryptoQteslaQTESLASigner;", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;", "engineUpdate", "B", "LJavaSecuritySignatureException;", "[BII", "engineVerify", "[B", "engineSetParameter", "LJavaSecuritySpecAlgorithmParameterSpec;", "LNSString;LNSObject;", "engineGetParameter", "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA;LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI;LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize;LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed;LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI;LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi = { "PqcJcajceQteslaSignatureSpi", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, 18, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *self, NSString *algorithm) {
  JavaSecuritySignature_initWithNSString_(self, algorithm);
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_(NSString *algorithm) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, initWithNSString_, algorithm)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_(NSString *algorithm) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, initWithNSString_, algorithm)
}

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *self, NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *signer) {
  JavaSecuritySignature_initWithNSString_(self, sigName);
  self->digest_ = digest;
  self->signer_ = signer;
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *signer) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_, sigName, digest, signer)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(NSString *sigName, id<LibOrgBouncycastleCryptoDigest> digest, LibOrgBouncycastlePqcCryptoQteslaQTESLASigner *signer) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi, initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_, sigName, digest, signer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA = { "qTESLA", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, @"qTESLA", new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_qTESLA)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI = { "HeuristicI", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_I), new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicI)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize = { "HeuristicIIISize", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SIZE), new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISize)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed = { "HeuristicIIISpeed", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_HEURISTIC_III_SPEED), new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_HeuristicIIISpeed)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI = { "ProvablySecureI", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_I), new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureI)

@implementation LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi;" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII = { "ProvablySecureIII", "lib.org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII;
}

@end

void LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII_init(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII *self) {
  LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_initWithNSString_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastlePqcCryptoQteslaQTESLASigner_(self, LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_(LibOrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_PROVABLY_SECURE_III), new_LibOrgBouncycastleCryptoDigestsNullDigest_init(), new_LibOrgBouncycastlePqcCryptoQteslaQTESLASigner_init());
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII *new_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII, init)
}

LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII *create_LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderQteslaPqcJcajceQteslaSignatureSpi_ProvablySecureIII)
