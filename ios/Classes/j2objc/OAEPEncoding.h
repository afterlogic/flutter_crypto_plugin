//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/encodings/OAEPEncoding.java
//

#ifndef OAEPEncoding_H
#define OAEPEncoding_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricBlockCipher.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoEncodingsOAEPEncoding : NSObject < LibOrgBouncycastleCryptoAsymmetricBlockCipher >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)cipher;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                             withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hash_;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                             withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hash_
                                                                  withByteArray:(IOSByteArray *)encodingParams;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher:(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)cipher
                                             withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)hash_
                                             withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)mgf1Hash
                                                                  withByteArray:(IOSByteArray *)encodingParams;

- (IOSByteArray *)decodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

- (IOSByteArray *)encodeBlockWithByteArray:(IOSByteArray *)inArg
                                   withInt:(jint)inOff
                                   withInt:(jint)inLen;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (id<LibOrgBouncycastleCryptoAsymmetricBlockCipher>)getUnderlyingCipher;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)inLen;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoEncodingsOAEPEncoding)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(LibOrgBouncycastleCryptoEncodingsOAEPEncoding *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *new_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *create_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoEncodingsOAEPEncoding *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *new_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *create_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withByteArray_(LibOrgBouncycastleCryptoEncodingsOAEPEncoding *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, IOSByteArray *encodingParams);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *new_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withByteArray_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, IOSByteArray *encodingParams) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *create_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withByteArray_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, IOSByteArray *encodingParams);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withByteArray_(LibOrgBouncycastleCryptoEncodingsOAEPEncoding *self, id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, id<LibOrgBouncycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *new_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withByteArray_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, id<LibOrgBouncycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEncodingsOAEPEncoding *create_LibOrgBouncycastleCryptoEncodingsOAEPEncoding_initWithLibOrgBouncycastleCryptoAsymmetricBlockCipher_withLibOrgBouncycastleCryptoDigest_withLibOrgBouncycastleCryptoDigest_withByteArray_(id<LibOrgBouncycastleCryptoAsymmetricBlockCipher> cipher, id<LibOrgBouncycastleCryptoDigest> hash_, id<LibOrgBouncycastleCryptoDigest> mgf1Hash, IOSByteArray *encodingParams);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEncodingsOAEPEncoding)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // OAEPEncoding_H
