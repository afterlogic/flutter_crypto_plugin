//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/BDSStateMap.java
//

#ifndef BDSStateMap_H
#define BDSStateMap_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastlePqcCryptoXmssBDS;
@class LibOrgBouncycastlePqcCryptoXmssOTSHashAddress;
@class LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters;

@interface LibOrgBouncycastlePqcCryptoXmssBDSStateMap : NSObject < JavaIoSerializable >

#pragma mark Public

- (jboolean)isEmpty;

- (LibOrgBouncycastlePqcCryptoXmssBDSStateMap *)withWOTSDigestWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)digestName;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssBDSStateMap:(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *)stateMap
                         withLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params
                                                                    withLong:(jlong)globalIndex
                                                               withByteArray:(IOSByteArray *)publicSeed
                                                               withByteArray:(IOSByteArray *)secretKeySeed;

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params
                                                                         withLong:(jlong)globalIndex
                                                                    withByteArray:(IOSByteArray *)publicSeed
                                                                    withByteArray:(IOSByteArray *)secretKeySeed;

- (LibOrgBouncycastlePqcCryptoXmssBDS *)getWithInt:(jint)index;

- (void)putWithInt:(jint)index
withLibOrgBouncycastlePqcCryptoXmssBDS:(LibOrgBouncycastlePqcCryptoXmssBDS *)bds;

- (LibOrgBouncycastlePqcCryptoXmssBDS *)updateWithInt:(jint)index
                                        withByteArray:(IOSByteArray *)publicSeed
                                        withByteArray:(IOSByteArray *)secretKeySeed
    withLibOrgBouncycastlePqcCryptoXmssOTSHashAddress:(LibOrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssBDSStateMap)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssBDSStateMap_init(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *new_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *create_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *self, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *new_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *create_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssBDSStateMap_withLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *self, LibOrgBouncycastlePqcCryptoXmssBDSStateMap *stateMap, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *new_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssBDSStateMap_withLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *stateMap, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssBDSStateMap *create_LibOrgBouncycastlePqcCryptoXmssBDSStateMap_initWithLibOrgBouncycastlePqcCryptoXmssBDSStateMap_withLibOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withLong_withByteArray_withByteArray_(LibOrgBouncycastlePqcCryptoXmssBDSStateMap *stateMap, LibOrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, jlong globalIndex, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssBDSStateMap)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BDSStateMap_H
