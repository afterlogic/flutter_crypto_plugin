//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/generators/KDFDoublePipelineIterationBytesGenerator.java
//

#ifndef KDFDoublePipelineIterationBytesGenerator_H
#define KDFDoublePipelineIterationBytesGenerator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "MacDerivationFunction.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoDerivationParameters;
@protocol LibOrgBouncycastleCryptoMac;

@interface LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator : NSObject < LibOrgBouncycastleCryptoMacDerivationFunction >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)prf;

- (jint)generateBytesWithByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOff
                           withInt:(jint)len;

- (id<LibOrgBouncycastleCryptoMac>)getMac;

- (void)init__WithLibOrgBouncycastleCryptoDerivationParameters:(id<LibOrgBouncycastleCryptoDerivationParameters>)params OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator_initWithLibOrgBouncycastleCryptoMac_(LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator *self, id<LibOrgBouncycastleCryptoMac> prf);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator *new_LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator_initWithLibOrgBouncycastleCryptoMac_(id<LibOrgBouncycastleCryptoMac> prf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator *create_LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator_initWithLibOrgBouncycastleCryptoMac_(id<LibOrgBouncycastleCryptoMac> prf);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoGeneratorsKDFDoublePipelineIterationBytesGenerator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KDFDoublePipelineIterationBytesGenerator_H
