//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PKCS12KeyWithParameters.java
//

#include "Arrays.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKCS12Key.h"
#include "PKCS12KeyWithParameters.h"

@interface LibOrgBouncycastleJcajcePKCS12KeyWithParameters () {
 @public
  IOSByteArray *salt_;
  jint iterationCount_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKCS12KeyWithParameters, salt_, IOSByteArray *)

@implementation LibOrgBouncycastleJcajcePKCS12KeyWithParameters

- (instancetype)initWithCharArray:(IOSCharArray *)password
                    withByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount {
  LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(self, password, salt, iterationCount);
  return self;
}

- (instancetype)initWithCharArray:(IOSCharArray *)password
                      withBoolean:(jboolean)useWrongZeroLengthConversion
                    withByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount {
  LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(self, password, useWrongZeroLengthConversion, salt, iterationCount);
  return self;
}

- (IOSByteArray *)getSalt {
  return salt_;
}

- (jint)getIterationCount {
  return iterationCount_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:withByteArray:withInt:);
  methods[1].selector = @selector(initWithCharArray:withBoolean:withByteArray:withInt:);
  methods[2].selector = @selector(getSalt);
  methods[3].selector = @selector(getIterationCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "salt_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iterationCount_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[C[BI", "[CZ[BI" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKCS12KeyWithParameters = { "PKCS12KeyWithParameters", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKCS12KeyWithParameters;
}

@end

void LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(LibOrgBouncycastleJcajcePKCS12KeyWithParameters *self, IOSCharArray *password, IOSByteArray *salt, jint iterationCount) {
  LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_(self, password);
  self->salt_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(salt);
  self->iterationCount_ = iterationCount;
}

LibOrgBouncycastleJcajcePKCS12KeyWithParameters *new_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKCS12KeyWithParameters, initWithCharArray_withByteArray_withInt_, password, salt, iterationCount)
}

LibOrgBouncycastleJcajcePKCS12KeyWithParameters *create_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKCS12KeyWithParameters, initWithCharArray_withByteArray_withInt_, password, salt, iterationCount)
}

void LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(LibOrgBouncycastleJcajcePKCS12KeyWithParameters *self, IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount) {
  LibOrgBouncycastleJcajcePKCS12Key_initWithCharArray_withBoolean_(self, password, useWrongZeroLengthConversion);
  self->salt_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(salt);
  self->iterationCount_ = iterationCount;
}

LibOrgBouncycastleJcajcePKCS12KeyWithParameters *new_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKCS12KeyWithParameters, initWithCharArray_withBoolean_withByteArray_withInt_, password, useWrongZeroLengthConversion, salt, iterationCount)
}

LibOrgBouncycastleJcajcePKCS12KeyWithParameters *create_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKCS12KeyWithParameters, initWithCharArray_withBoolean_withByteArray_withInt_, password, useWrongZeroLengthConversion, salt, iterationCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKCS12KeyWithParameters)
