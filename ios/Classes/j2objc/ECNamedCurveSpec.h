//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/spec/ECNamedCurveSpec.java
//

#ifndef ECNamedCurveSpec_H
#define ECNamedCurveSpec_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/spec/ECParameterSpec.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecEllipticCurve;
@class LibOrgBouncycastleMathEcECCurve;
@class LibOrgBouncycastleMathEcECPoint;

@interface LibOrgBouncycastleJceSpecECNamedCurveSpec : JavaSecuritySpecECParameterSpec

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)n
                    withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype __nonnull)initWithNSString:(NSString *)name
       withLibOrgBouncycastleMathEcECCurve:(LibOrgBouncycastleMathEcECCurve *)curve
       withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)n
                    withJavaMathBigInteger:(JavaMathBigInteger *)h
                             withByteArray:(IOSByteArray *)seed;

- (instancetype __nonnull)initWithNSString:(NSString *)name
         withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
               withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype __nonnull)initWithNSString:(NSString *)name
         withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
               withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
                    withJavaMathBigInteger:(JavaMathBigInteger *)n
                    withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)arg0
                                    withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)arg1
                                         withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                                                        withInt:(jint)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceSpecECNamedCurveSpec)

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(LibOrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *new_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceSpecECNamedCurveSpec *create_LibOrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withLibOrgBouncycastleMathEcECCurve_withLibOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, LibOrgBouncycastleMathEcECCurve *curve, LibOrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceSpecECNamedCurveSpec)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ECNamedCurveSpec_H
