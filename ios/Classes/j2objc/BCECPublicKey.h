//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPublicKey.java
//

#ifndef BCECPublicKey_H
#define BCECPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECPointEncoder.h"
#include "ECPublicKey.h"
#include "J2ObjC_header.h"
#include "java/security/interfaces/ECPublicKey.h"

@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecECPublicKeySpec;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleCryptoParamsECPublicKeyParameters;
@class LibOrgBouncycastleJceSpecECParameterSpec;
@class LibOrgBouncycastleJceSpecECPublicKeySpec;
@class LibOrgBouncycastleMathEcECPoint;
@protocol LibOrgBouncycastleJcajceProviderConfigProviderConfiguration;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey : NSObject < JavaSecurityInterfacesECPublicKey, LibOrgBouncycastleJceInterfacesECPublicKey, LibOrgBouncycastleJceInterfacesECPointEncoder >
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecurityInterfacesECPublicKey:(id<JavaSecurityInterfacesECPublicKey>)key
    withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)key;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
       withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPublicKeyParameters:(LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
       withJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceSpecECPublicKeySpec:(LibOrgBouncycastleJceSpecECPublicKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (LibOrgBouncycastleMathEcECPoint *)getQ;

- (JavaSecuritySpecECPoint *)getW;

- (NSUInteger)hash;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (LibOrgBouncycastleCryptoParamsECPublicKeyParameters *)engineGetKeyParameters;

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey)

inline jlong LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_serialVersionUID 2422789860422731812LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleJceSpecECPublicKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPublicKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPublicKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, id<JavaSecurityInterfacesECPublicKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCECPublicKey_H
