//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/digest/SM3.java
//

#ifndef SM3_H
#define SM3_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCMessageDigest.h"
#include "DigestAlgorithmProvider.h"
#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleCryptoDigest;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastleJcajceProviderDigestSM3 : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSM3)

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSM3)

@interface LibOrgBouncycastleJcajceProviderDigestSM3_Digest : LibOrgBouncycastleJcajceProviderDigestBCMessageDigest < NSCopying >

#pragma mark Public

- (instancetype __nonnull)init;

- (id)java_clone;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSM3_Digest)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSM3_Digest_init(LibOrgBouncycastleJcajceProviderDigestSM3_Digest *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSM3_Digest *new_LibOrgBouncycastleJcajceProviderDigestSM3_Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSM3_Digest *create_LibOrgBouncycastleJcajceProviderDigestSM3_Digest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSM3_Digest)

@interface LibOrgBouncycastleJcajceProviderDigestSM3_Mappings : LibOrgBouncycastleJcajceProviderDigestDigestAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleJcajceProviderDigestSM3_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderDigestSM3_Mappings_init(LibOrgBouncycastleJcajceProviderDigestSM3_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSM3_Mappings *new_LibOrgBouncycastleJcajceProviderDigestSM3_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderDigestSM3_Mappings *create_LibOrgBouncycastleJcajceProviderDigestSM3_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDigestSM3_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SM3_H
