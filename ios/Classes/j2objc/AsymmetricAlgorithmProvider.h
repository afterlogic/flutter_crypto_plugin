//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/util/AsymmetricAlgorithmProvider.java
//

#ifndef AsymmetricAlgorithmProvider_H
#define AsymmetricAlgorithmProvider_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AlgorithmProvider.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;
@protocol LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;

@interface LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider : LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

- (void)addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                               withNSString:(NSString *)algorithm
                                                                               withNSString:(NSString *)className_
                                             withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (void)addSignatureAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                                               withNSString:(NSString *)digest
                                                                               withNSString:(NSString *)algorithm
                                                                               withNSString:(NSString *)className_
                                             withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (void)registerOidWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                   withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                     withNSString:(NSString *)name
               withLibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:(id<LibOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)keyFactory;

- (void)registerOidAlgorithmParameterGeneratorWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                              withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                                withNSString:(NSString *)name;

- (void)registerOidAlgorithmParametersWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider
                                                      withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                        withNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider *self);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AsymmetricAlgorithmProvider_H
