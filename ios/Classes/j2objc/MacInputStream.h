//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/io/MacInputStream.java
//

#ifndef MacInputStream_H
#define MacInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@protocol LibOrgBouncycastleCryptoMac;

@interface LibOrgBouncycastleCryptoIoMacInputStream : JavaIoFilterInputStream {
 @public
  id<LibOrgBouncycastleCryptoMac> mac_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                    withLibOrgBouncycastleCryptoMac:(id<LibOrgBouncycastleCryptoMac>)mac;

- (id<LibOrgBouncycastleCryptoMac>)getMac;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoIoMacInputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoIoMacInputStream, mac_, id<LibOrgBouncycastleCryptoMac>)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoIoMacInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoMac_(LibOrgBouncycastleCryptoIoMacInputStream *self, JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoMac> mac);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoMacInputStream *new_LibOrgBouncycastleCryptoIoMacInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoMac_(JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoMac> mac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoMacInputStream *create_LibOrgBouncycastleCryptoIoMacInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoMac_(JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoMac> mac);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoIoMacInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MacInputStream_H
