//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/PGPPBEEncryptedData.java
//

#ifndef PGPPBEEncryptedData_H
#define PGPPBEEncryptedData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PGPEncryptedData.h"

@class JavaIoInputStream;
@class LibOrgBouncycastleBcpgInputStreamPacket;
@class LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket;
@class LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory;

@interface LibOrgBouncycastleOpenpgpPGPPBEEncryptedData : LibOrgBouncycastleOpenpgpPGPEncryptedData {
 @public
  LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *keyData_;
}

#pragma mark Public

- (JavaIoInputStream *)getDataStreamWithLibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory:(LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory *)dataDecryptorFactory;

- (jint)getSymmetricAlgorithmWithLibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory:(LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory *)dataDecryptorFactory;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket:(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *)keyData
                                         withLibOrgBouncycastleBcpgInputStreamPacket:(LibOrgBouncycastleBcpgInputStreamPacket *)encData;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithLibOrgBouncycastleBcpgInputStreamPacket:(LibOrgBouncycastleBcpgInputStreamPacket *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpPGPPBEEncryptedData)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleOpenpgpPGPPBEEncryptedData, keyData_, LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpPGPPBEEncryptedData_initWithLibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_withLibOrgBouncycastleBcpgInputStreamPacket_(LibOrgBouncycastleOpenpgpPGPPBEEncryptedData *self, LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *keyData, LibOrgBouncycastleBcpgInputStreamPacket *encData);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPBEEncryptedData *new_LibOrgBouncycastleOpenpgpPGPPBEEncryptedData_initWithLibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_withLibOrgBouncycastleBcpgInputStreamPacket_(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *keyData, LibOrgBouncycastleBcpgInputStreamPacket *encData) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpPGPPBEEncryptedData *create_LibOrgBouncycastleOpenpgpPGPPBEEncryptedData_initWithLibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket_withLibOrgBouncycastleBcpgInputStreamPacket_(LibOrgBouncycastleBcpgSymmetricKeyEncSessionPacket *keyData, LibOrgBouncycastleBcpgInputStreamPacket *encData);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpPGPPBEEncryptedData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PGPPBEEncryptedData_H
