//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x500/style/BCStrictStyle.java
//

#ifndef BCStrictStyle_H
#define BCStrictStyle_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BCStyle.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1X500X500Name;
@protocol LibOrgBouncycastleAsn1X500X500NameStyle;

@interface LibOrgBouncycastleAsn1X500StyleBCStrictStyle : LibOrgBouncycastleAsn1X500StyleBCStyle
@property (readonly, class) id<LibOrgBouncycastleAsn1X500X500NameStyle> INSTANCE NS_SWIFT_NAME(INSTANCE);

+ (id<LibOrgBouncycastleAsn1X500X500NameStyle>)INSTANCE;

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)areEqualWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)name1
                    withLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)name2;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1X500StyleBCStrictStyle)

inline id<LibOrgBouncycastleAsn1X500X500NameStyle> LibOrgBouncycastleAsn1X500StyleBCStrictStyle_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<LibOrgBouncycastleAsn1X500X500NameStyle> LibOrgBouncycastleAsn1X500StyleBCStrictStyle_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1X500StyleBCStrictStyle, INSTANCE, id<LibOrgBouncycastleAsn1X500X500NameStyle>)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X500StyleBCStrictStyle_init(LibOrgBouncycastleAsn1X500StyleBCStrictStyle *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500StyleBCStrictStyle *new_LibOrgBouncycastleAsn1X500StyleBCStrictStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X500StyleBCStrictStyle *create_LibOrgBouncycastleAsn1X500StyleBCStrictStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X500StyleBCStrictStyle)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCStrictStyle_H
