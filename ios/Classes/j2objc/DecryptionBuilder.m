//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/decryption_verification/DecryptionBuilder.java
//

#include "DecryptionBuilder.h"
#include "DecryptionBuilderInterface.h"
#include "DecryptionStream.h"
#include "DecryptionStreamFactory.h"
#include "J2ObjC_source.h"
#include "MissingPublicKeyCallback.h"
#include "OpenPgpV4Fingerprint.h"
#include "PGPPublicKeyRing.h"
#include "PGPPublicKeyRingCollection.h"
#include "PGPSecretKeyRingCollection.h"
#include "SecretKeyRingProtector.h"
#include "java/io/InputStream.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

@interface LibComAfterlogicPgpDecryption_verificationDecryptionBuilder () {
 @public
  JavaIoInputStream *inputStream_;
  LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *decryptionKeys_;
  id<LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector> decryptionKeyDecryptor_;
  id<JavaUtilSet> verificationKeys_;
  id<LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback> missingPublicKeyCallback_;
}

@end

J2OBJC_FIELD_SETTER(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, inputStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, decryptionKeys_, LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, decryptionKeyDecryptor_, id<LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector>)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, verificationKeys_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, missingPublicKeyCallback_, id<LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback>)

@interface LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl () {
 @public
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *this$0_;
}

@end

@interface LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl () {
 @public
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *this$0_;
}

@end

@interface LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl () {
 @public
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *this$0_;
}

@end

@interface LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl () {
 @public
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *this$0_;
}

@end

@implementation LibComAfterlogicPgpDecryption_verificationDecryptionBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_DecryptWith>)onInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  self->inputStream_ = inputStream;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_DecryptWith;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onInputStreamWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "inputStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "decryptionKeys_", "LLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "decryptionKeyDecryptor_", "LLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "verificationKeys_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 2, -1 },
    { "missingPublicKeyCallback_", "LLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onInputStream", "LJavaIoInputStream;", "Ljava/util/Set<Llib/org/bouncycastle/openpgp/PGPPublicKeyRing;>;", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl;LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl;LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl;LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpDecryption_verificationDecryptionBuilder = { "DecryptionBuilder", "lib.com.afterlogic.pgp.decryption_verification", ptrTable, methods, fields, 7, 0x1, 2, 5, -1, 3, -1, -1, -1 };
  return &_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder;
}

@end

void LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_init(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *self) {
  NSObject_init(self);
  self->verificationKeys_ = new_JavaUtilHashSet_init();
  self->missingPublicKeyCallback_ = nil;
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_init() {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, init)
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *create_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_init() {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder)

@implementation LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl

- (instancetype)initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *)outer$ {
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(self, outer$);
  return self;
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_VerifyWith>)decryptWithWithLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:(id<LibComAfterlogicPgpKeyProtectionSecretKeyRingProtector>)decryptor
                                                                                                     withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)secretKeyRings {
  this$0_->decryptionKeys_ = secretKeyRings;
  this$0_->decryptionKeyDecryptor_ = decryptor;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_VerifyWith>)doNotDecrypt {
  this$0_->decryptionKeys_ = nil;
  this$0_->decryptionKeyDecryptor_ = nil;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_VerifyWith;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_VerifyWith;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:);
  methods[1].selector = @selector(decryptWithWithLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection:);
  methods[2].selector = @selector(doNotDecrypt);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "decryptWith", "LLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;LLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection;", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl = { "DecryptWithImpl", "lib.com.afterlogic.pgp.decryption_verification", ptrTable, methods, fields, 7, 0x0, 3, 1, 2, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl;
}

@end

void LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl *self, LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl *new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl *create_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_DecryptWithImpl)

@implementation LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl

- (instancetype)initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *)outer$ {
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(self, outer$);
  return self;
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys>)verifyWithWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)publicKeyRingCollection {
  id<JavaUtilSet> publicKeyRings = new_JavaUtilHashSet_init();
  for (id<JavaUtilIterator> i = [((LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *) nil_chk(publicKeyRingCollection)) getKeyRings]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    [publicKeyRings addWithId:[i next]];
  }
  return [self verifyWithWithJavaUtilSet:publicKeyRings];
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys>)verifyWithWithJavaUtilSet:(id<JavaUtilSet>)trustedKeyIds
                                                                      withLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:(LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *)publicKeyRingCollection {
  id<JavaUtilSet> publicKeyRings = new_JavaUtilHashSet_init();
  for (id<JavaUtilIterator> i = [((LibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection *) nil_chk(publicKeyRingCollection)) getKeyRings]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    LibOrgBouncycastleOpenpgpPGPPublicKeyRing *p = [i next];
    LibComAfterlogicPgpKeyOpenPgpV4Fingerprint *fingerprint = new_LibComAfterlogicPgpKeyOpenPgpV4Fingerprint_initWithLibOrgBouncycastleOpenpgpPGPPublicKeyRing_(p);
    if ([((id<JavaUtilSet>) nil_chk(trustedKeyIds)) containsWithId:fingerprint]) {
      [publicKeyRings addWithId:p];
    }
  }
  return [self verifyWithWithJavaUtilSet:publicKeyRings];
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys>)verifyWithWithJavaUtilSet:(id<JavaUtilSet>)publicKeyRings {
  this$0_->verificationKeys_ = publicKeyRings;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build>)doNotVerify {
  this$0_->verificationKeys_ = nil;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys;", 0x1, 0, 2, -1, 3, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_HandleMissingPublicKeys;", 0x1, 0, 4, -1, 5, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:);
  methods[1].selector = @selector(verifyWithWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:);
  methods[2].selector = @selector(verifyWithWithJavaUtilSet:withLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:);
  methods[3].selector = @selector(verifyWithWithJavaUtilSet:);
  methods[4].selector = @selector(doNotVerify);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "verifyWith", "LLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;", "LJavaUtilSet;LLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;", "(Ljava/util/Set<Llib/com/afterlogic/pgp/key/OpenPgpV4Fingerprint;>;Llib/org/bouncycastle/openpgp/PGPPublicKeyRingCollection;)Llib/com/afterlogic/pgp/decryption_verification/DecryptionBuilderInterface$HandleMissingPublicKeys;", "LJavaUtilSet;", "(Ljava/util/Set<Llib/org/bouncycastle/openpgp/PGPPublicKeyRing;>;)Llib/com/afterlogic/pgp/decryption_verification/DecryptionBuilderInterface$HandleMissingPublicKeys;", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl = { "VerifyWithImpl", "lib.com.afterlogic.pgp.decryption_verification", ptrTable, methods, fields, 7, 0x0, 5, 1, 6, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl;
}

@end

void LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl *self, LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl *new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl *create_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_VerifyWithImpl)

@implementation LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl

- (instancetype)initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *)outer$ {
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(self, outer$);
  return self;
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build>)handleMissingPublicKeysWithWithLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback:(id<LibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback>)callback {
  this$0_->missingPublicKeyCallback_ = callback;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

- (id<LibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build>)ignoreMissingPublicKeys {
  this$0_->missingPublicKeyCallback_ = nil;
  return new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilderInterface_Build;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:);
  methods[1].selector = @selector(handleMissingPublicKeysWithWithLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback:);
  methods[2].selector = @selector(ignoreMissingPublicKeys);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleMissingPublicKeysWith", "LLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback;", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl = { "HandleMissingPublicKeysImpl", "lib.com.afterlogic.pgp.decryption_verification", ptrTable, methods, fields, 7, 0x0, 3, 1, 2, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl;
}

@end

void LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl *self, LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl *new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl *create_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_HandleMissingPublicKeysImpl)

@implementation LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl

- (instancetype)initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *)outer$ {
  LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(self, outer$);
  return self;
}

- (LibComAfterlogicPgpDecryption_verificationDecryptionStream *)build {
  return LibComAfterlogicPgpDecryption_verificationDecryptionStreamFactory_createWithJavaIoInputStream_withLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection_withLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector_withJavaUtilSet_withLibComAfterlogicPgpDecryption_verificationMissingPublicKeyCallback_(this$0_->inputStream_, this$0_->decryptionKeys_, this$0_->decryptionKeyDecryptor_, this$0_->verificationKeys_, this$0_->missingPublicKeyCallback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpDecryption_verificationDecryptionStream;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder:);
  methods[1].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;LLibOrgBouncycastleOpenpgpPGPException;", "LLibComAfterlogicPgpDecryption_verificationDecryptionBuilder;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl = { "BuildImpl", "lib.com.afterlogic.pgp.decryption_verification", ptrTable, methods, fields, 7, 0x0, 2, 1, 1, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl;
}

@end

void LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl *self, LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl *new_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_NEW_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl *create_LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl_initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder *outer$) {
  J2OBJC_CREATE_IMPL(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl, initWithLibComAfterlogicPgpDecryption_verificationDecryptionBuilder_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpDecryption_verificationDecryptionBuilder_BuildImpl)
