//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSSigner.java
//

#ifndef XMSSSigner_H
#define XMSSSigner_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "StateAwareMessageSigner.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSSigner : NSObject < LibOrgBouncycastlePqcCryptoStateAwareMessageSigner >

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)generateSignatureWithByteArray:(IOSByteArray *)message;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getUpdatedPrivateKey;

- (jlong)getUsagesRemaining;

- (void)init__WithBoolean:(jboolean)forSigning
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                           withByteArray:(IOSByteArray *)signature;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSSigner)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSSigner_init(LibOrgBouncycastlePqcCryptoXmssXMSSSigner *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSSigner *new_LibOrgBouncycastlePqcCryptoXmssXMSSSigner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSSigner *create_LibOrgBouncycastlePqcCryptoXmssXMSSSigner_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSSigner)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSSigner_H
