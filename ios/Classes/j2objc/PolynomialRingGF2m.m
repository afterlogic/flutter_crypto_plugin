//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2m.java
//

#include "GF2mField.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PolynomialGF2mSmallM.h"
#include "PolynomialRingGF2m.h"
#include "java/lang/ArithmeticException.h"

@interface LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m () {
 @public
  LibOrgBouncycastlePqcMathLinearalgebraGF2mField *field_;
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *p_;
}

- (void)computeSquaringMatrix;

- (void)computeSquareRootMatrix;

+ (void)swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray:(IOSObjectArray *)matrix
                                                                               withInt:(jint)first
                                                                               withInt:(jint)second;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m, field_, LibOrgBouncycastlePqcMathLinearalgebraGF2mField *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m, p_, LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)

__attribute__((unused)) static void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquaringMatrix(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *self);

__attribute__((unused)) static void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquareRootMatrix(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *self);

__attribute__((unused)) static void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray_withInt_withInt_(IOSObjectArray *matrix, jint first, jint second);

@implementation LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m

- (instancetype)initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField:(LibOrgBouncycastlePqcMathLinearalgebraGF2mField *)field
         withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)p {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(self, field, p);
  return self;
}

- (IOSObjectArray *)getSquaringMatrix {
  return sqMatrix_;
}

- (IOSObjectArray *)getSquareRootMatrix {
  return sqRootMatrix_;
}

- (void)computeSquaringMatrix {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquaringMatrix(self);
}

- (void)computeSquareRootMatrix {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquareRootMatrix(self);
}

+ (void)swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray:(IOSObjectArray *)matrix
                                                                               withInt:(jint)first
                                                                               withInt:(jint)second {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray_withInt_withInt_(matrix, first, second);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField:withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:);
  methods[1].selector = @selector(getSquaringMatrix);
  methods[2].selector = @selector(getSquareRootMatrix);
  methods[3].selector = @selector(computeSquaringMatrix);
  methods[4].selector = @selector(computeSquareRootMatrix);
  methods[5].selector = @selector(swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LLibOrgBouncycastlePqcMathLinearalgebraGF2mField;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "p_", "LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sqMatrix_", "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "sqRootMatrix_", "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcMathLinearalgebraGF2mField;LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", "swapColumns", "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;II" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m = { "PolynomialRingGF2m", "lib.org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m;
}

@end

void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *self, LibOrgBouncycastlePqcMathLinearalgebraGF2mField *field, LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *p) {
  NSObject_init(self);
  self->field_ = field;
  self->p_ = p;
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquaringMatrix(self);
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquareRootMatrix(self);
}

LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(LibOrgBouncycastlePqcMathLinearalgebraGF2mField *field, LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *p) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m, initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_, field, p)
}

LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *create_LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(LibOrgBouncycastlePqcMathLinearalgebraGF2mField *field, LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *p) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m, initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_, field, p)
}

void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquaringMatrix(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *self) {
  jint numColumns = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(self->p_)) getDegree];
  self->sqMatrix_ = [IOSObjectArray newArrayWithLength:numColumns type:LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_class_()];
  for (jint i = 0; i < JreRShift32(numColumns, 1); i++) {
    IOSIntArray *monomCoeffs = [IOSIntArray newArrayWithLength:(JreLShift32(i, 1)) + 1];
    *IOSIntArray_GetRef(monomCoeffs, JreLShift32(i, 1)) = 1;
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->sqMatrix_), i, new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(self->field_, monomCoeffs));
  }
  for (jint i = JreRShift32(numColumns, 1); i < numColumns; i++) {
    IOSIntArray *monomCoeffs = [IOSIntArray newArrayWithLength:(JreLShift32(i, 1)) + 1];
    *IOSIntArray_GetRef(monomCoeffs, JreLShift32(i, 1)) = 1;
    LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *monomial = new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(self->field_, monomCoeffs);
    (void) IOSObjectArray_Set(nil_chk(self->sqMatrix_), i, [monomial modWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:self->p_]);
  }
}

void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_computeSquareRootMatrix(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m *self) {
  jint numColumns = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(self->p_)) getDegree];
  IOSObjectArray *tmpMatrix = [IOSObjectArray newArrayWithLength:numColumns type:LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_class_()];
  for (jint i = numColumns - 1; i >= 0; i--) {
    (void) IOSObjectArray_SetAndConsume(tmpMatrix, i, new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(IOSObjectArray_Get(nil_chk(self->sqMatrix_), i)));
  }
  self->sqRootMatrix_ = [IOSObjectArray newArrayWithLength:numColumns type:LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_class_()];
  for (jint i = numColumns - 1; i >= 0; i--) {
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->sqRootMatrix_), i, new_LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_(self->field_, i));
  }
  for (jint i = 0; i < numColumns; i++) {
    if ([((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, i))) getCoefficientWithInt:i] == 0) {
      jboolean foundNonZero = false;
      for (jint j = i + 1; j < numColumns; j++) {
        if ([((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, j))) getCoefficientWithInt:i] != 0) {
          foundNonZero = true;
          LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray_withInt_withInt_(tmpMatrix, i, j);
          LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray_withInt_withInt_(self->sqRootMatrix_, i, j);
          j = numColumns;
          continue;
        }
      }
      if (!foundNonZero) {
        @throw new_JavaLangArithmeticException_initWithNSString_(@"Squaring matrix is not invertible.");
      }
    }
    jint coef = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, i))) getCoefficientWithInt:i];
    jint invCoef = [((LibOrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(self->field_)) inverseWithInt:coef];
    [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, i))) multThisWithElementWithInt:invCoef];
    [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(nil_chk(self->sqRootMatrix_), i))) multThisWithElementWithInt:invCoef];
    for (jint j = 0; j < numColumns; j++) {
      if (j != i) {
        coef = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, j))) getCoefficientWithInt:i];
        if (coef != 0) {
          LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *tmpSqColumn = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, i))) multWithElementWithInt:coef];
          LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *tmpInvColumn = [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(nil_chk(self->sqRootMatrix_), i))) multWithElementWithInt:coef];
          [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(tmpMatrix, j))) addToThisWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:tmpSqColumn];
          [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk(IOSObjectArray_Get(nil_chk(self->sqRootMatrix_), j))) addToThisWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:tmpInvColumn];
        }
      }
    }
  }
}

void LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_swapColumnsWithLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray_withInt_withInt_(IOSObjectArray *matrix, jint first, jint second) {
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m_initialize();
  LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *tmp = IOSObjectArray_Get(nil_chk(matrix), first);
  (void) IOSObjectArray_Set(matrix, first, IOSObjectArray_Get(matrix, second));
  (void) IOSObjectArray_Set(matrix, second, tmp);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2m)
