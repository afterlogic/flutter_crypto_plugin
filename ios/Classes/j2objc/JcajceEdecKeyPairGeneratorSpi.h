//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/edec/JcajceEdecKeyPairGeneratorSpi.java
//

#ifndef JcajceEdecKeyPairGeneratorSpi_H
#define JcajceEdecKeyPairGeneratorSpi_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/KeyPairGeneratorSpi.h"

@class JavaSecurityKeyPair;
@class JavaSecuritySecureRandom;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi : JavaSecurityKeyPairGeneratorSpi

#pragma mark Public

- (JavaSecurityKeyPair *)generateKeyPair;

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom OBJC_METHOD_FAMILY_NONE;

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)algorithm
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)generator;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_initWithInt_withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator_(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi *self, jint algorithm, id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator> generator);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_initWithInt_withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator_(jint algorithm, id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator> generator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_initWithInt_withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator_(jint algorithm, id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator> generator);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_EdDSA)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448 : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed448)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519 : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_Ed25519)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_XDH)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448 : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X448)

@interface LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519 : LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
withLibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator:(id<LibOrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519_init(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519 *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519 *new_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519 *create_LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEdecJcajceEdecKeyPairGeneratorSpi_X25519)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcajceEdecKeyPairGeneratorSpi_H
