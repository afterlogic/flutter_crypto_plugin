//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/key/selection/keyring/SecretKeyRingSelectionStrategy.java
//

#include "J2ObjC_source.h"
#include "MultiMap.h"
#include "PGPSecretKeyRing.h"
#include "PGPSecretKeyRingCollection.h"
#include "SecretKeyRingSelectionStrategy.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilSet>)selectKeyRingsFromCollectionWithId:(id)identifier
                                               withId:(LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *)keyRingCollection {
  id<JavaUtilSet> accepted = new_JavaUtilHashSet_init();
  for (id<JavaUtilIterator> i = [((LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection *) nil_chk(keyRingCollection)) getKeyRings]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    LibOrgBouncycastleOpenpgpPGPSecretKeyRing *ring = [i next];
    if ([self acceptWithId:identifier withId:ring]) [accepted addWithId:ring];
  }
  return accepted;
}

- (LibComAfterlogicPgpUtilMultiMap *)selectKeyRingsFromCollectionsWithLibComAfterlogicPgpUtilMultiMap:(LibComAfterlogicPgpUtilMultiMap *)keyRingCollections {
  LibComAfterlogicPgpUtilMultiMap *keyRings = new_LibComAfterlogicPgpUtilMultiMap_init();
  for (id __strong identifier in nil_chk([((LibComAfterlogicPgpUtilMultiMap *) nil_chk(keyRingCollections)) keySet])) {
    for (LibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection * __strong collection in nil_chk([keyRingCollections getWithId:identifier])) {
      [keyRings putWithId:identifier withJavaUtilSet:[self selectKeyRingsFromCollectionWithId:identifier withId:collection]];
    }
  }
  return keyRings;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LLibComAfterlogicPgpUtilMultiMap;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(selectKeyRingsFromCollectionWithId:withId:);
  methods[2].selector = @selector(selectKeyRingsFromCollectionsWithLibComAfterlogicPgpUtilMultiMap:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "selectKeyRingsFromCollection", "LNSObject;LLibOrgBouncycastleOpenpgpPGPSecretKeyRingCollection;", "(TO;Llib/org/bouncycastle/openpgp/PGPSecretKeyRingCollection;)Ljava/util/Set<Llib/org/bouncycastle/openpgp/PGPSecretKeyRing;>;", "selectKeyRingsFromCollections", "LLibComAfterlogicPgpUtilMultiMap;", "(Llib/com/afterlogic/pgp/util/MultiMap<TO;Llib/org/bouncycastle/openpgp/PGPSecretKeyRingCollection;>;)Llib/com/afterlogic/pgp/util/MultiMap<TO;Llib/org/bouncycastle/openpgp/PGPSecretKeyRing;>;", "<O:Ljava/lang/Object;>Ljava/lang/Object;Llib/com/afterlogic/pgp/key/selection/keyring/KeyRingSelectionStrategy<Llib/org/bouncycastle/openpgp/PGPSecretKeyRing;Llib/org/bouncycastle/openpgp/PGPSecretKeyRingCollection;TO;>;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy = { "SecretKeyRingSelectionStrategy", "lib.com.afterlogic.pgp.key.selection.keyring", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, 6, -1 };
  return &_LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy;
}

@end

void LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy_init(LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy)
