//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/QTESLA.java
//

#ifndef QTESLA_H
#define QTESLA_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricAlgorithmProvider.h"
#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastlePqcJcajceProviderQTESLA : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderQTESLA)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderQTESLA_init(LibOrgBouncycastlePqcJcajceProviderQTESLA *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQTESLA *new_LibOrgBouncycastlePqcJcajceProviderQTESLA_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQTESLA *create_LibOrgBouncycastlePqcJcajceProviderQTESLA_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderQTESLA)

@interface LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings : LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings_init(LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings *new_LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings *create_LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderQTESLA_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // QTESLA_H
