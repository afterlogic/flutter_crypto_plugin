//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/util/ExtendedInvalidKeySpecException.java
//

#ifndef ExtendedInvalidKeySpecException_H
#define ExtendedInvalidKeySpecException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/spec/InvalidKeySpecException.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException : JavaSecuritySpecInvalidKeySpecException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException *new_LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException *create_LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricUtilExtendedInvalidKeySpecException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExtendedInvalidKeySpecException_H
