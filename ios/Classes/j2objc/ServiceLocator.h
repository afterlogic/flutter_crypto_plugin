//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/ServiceLocator.java
//

#ifndef ServiceLocator_H
#define ServiceLocator_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1X500X500Name;
@class LibOrgBouncycastleAsn1X509AuthorityInformationAccess;

@interface LibOrgBouncycastleAsn1OcspServiceLocator : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

+ (LibOrgBouncycastleAsn1OcspServiceLocator *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1X500X500Name *)getIssuer;

- (LibOrgBouncycastleAsn1X509AuthorityInformationAccess *)getLocator;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspServiceLocator)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspServiceLocator *LibOrgBouncycastleAsn1OcspServiceLocator_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspServiceLocator)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ServiceLocator_H
