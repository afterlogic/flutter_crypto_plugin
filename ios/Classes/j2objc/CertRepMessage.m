//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/CertRepMessage.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "CMPCertificate.h"
#include "CertRepMessage.h"
#include "CertResponse.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"

@interface LibOrgBouncycastleAsn1CmpCertRepMessage () {
 @public
  LibOrgBouncycastleAsn1ASN1Sequence *caPubs_;
  LibOrgBouncycastleAsn1ASN1Sequence *response_;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpCertRepMessage, caPubs_, LibOrgBouncycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1CmpCertRepMessage, response_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static void LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpCertRepMessage *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpCertRepMessage *new_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleAsn1CmpCertRepMessage *create_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

@implementation LibOrgBouncycastleAsn1CmpCertRepMessage

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

+ (LibOrgBouncycastleAsn1CmpCertRepMessage *)getInstanceWithId:(id)o {
  return LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(o);
}

- (instancetype)initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray:(IOSObjectArray *)caPubs
                      withLibOrgBouncycastleAsn1CmpCertResponseArray:(IOSObjectArray *)response {
  LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_(self, caPubs, response);
  return self;
}

- (IOSObjectArray *)getCaPubs {
  if (caPubs_ == nil) {
    return nil;
  }
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[caPubs_ size] type:LibOrgBouncycastleAsn1CmpCMPCertificate_class_()];
  for (jint i = 0; i != results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1CmpCMPCertificate_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(caPubs_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (IOSObjectArray *)getResponse {
  IOSObjectArray *results = [IOSObjectArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(response_)) size] type:LibOrgBouncycastleAsn1CmpCertResponse_class_()];
  for (jint i = 0; i != results->size_; i++) {
    (void) IOSObjectArray_Set(results, i, LibOrgBouncycastleAsn1CmpCertResponse_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(response_)) getObjectAtWithInt:i]));
  }
  return results;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  if (caPubs_ != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 1, caPubs_)];
  }
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:response_];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1CmpCertRepMessage;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1CmpCMPCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleAsn1CmpCertResponse;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray:withLibOrgBouncycastleAsn1CmpCertResponseArray:);
  methods[3].selector = @selector(getCaPubs);
  methods[4].selector = @selector(getResponse);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "caPubs_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "response_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "[LLibOrgBouncycastleAsn1CmpCMPCertificate;[LLibOrgBouncycastleAsn1CmpCertResponse;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1CmpCertRepMessage = { "CertRepMessage", "lib.org.bouncycastle.asn1.cmp", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1CmpCertRepMessage;
}

@end

void LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1CmpCertRepMessage *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  jint index = 0;
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 1) {
    self->caPubs_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((LibOrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:index++], [LibOrgBouncycastleAsn1ASN1TaggedObject class]), true);
  }
  self->response_ = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:index]);
}

LibOrgBouncycastleAsn1CmpCertRepMessage *new_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpCertRepMessage, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpCertRepMessage *create_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpCertRepMessage, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1CmpCertRepMessage *LibOrgBouncycastleAsn1CmpCertRepMessage_getInstanceWithId_(id o) {
  LibOrgBouncycastleAsn1CmpCertRepMessage_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastleAsn1CmpCertRepMessage class]]) {
    return (LibOrgBouncycastleAsn1CmpCertRepMessage *) o;
  }
  if (o != nil) {
    return new_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

void LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_(LibOrgBouncycastleAsn1CmpCertRepMessage *self, IOSObjectArray *caPubs, IOSObjectArray *response) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if (response == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'response' cannot be null");
  }
  if (caPubs != nil) {
    LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
    for (jint i = 0; i < caPubs->size_; i++) {
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:IOSObjectArray_Get(caPubs, i)];
    }
    self->caPubs_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
  }
  {
    LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
    for (jint i = 0; i < response->size_; i++) {
      [v addWithLibOrgBouncycastleAsn1ASN1Encodable:IOSObjectArray_Get(response, i)];
    }
    self->response_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
  }
}

LibOrgBouncycastleAsn1CmpCertRepMessage *new_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_(IOSObjectArray *caPubs, IOSObjectArray *response) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1CmpCertRepMessage, initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_, caPubs, response)
}

LibOrgBouncycastleAsn1CmpCertRepMessage *create_LibOrgBouncycastleAsn1CmpCertRepMessage_initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_(IOSObjectArray *caPubs, IOSObjectArray *response) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1CmpCertRepMessage, initWithLibOrgBouncycastleAsn1CmpCMPCertificateArray_withLibOrgBouncycastleAsn1CmpCertResponseArray_, caPubs, response)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1CmpCertRepMessage)
