//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcEliecePrivateKey.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "AsymmetricKeyParameter.h"
#include "BCMcEliecePrivateKey.h"
#include "GF2Matrix.h"
#include "GF2mField.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "McEliecePrivateKey.h"
#include "McEliecePrivateKeyParameters.h"
#include "PQCObjectIdentifiers.h"
#include "Permutation.h"
#include "PolynomialGF2mSmallM.h"
#include "PrivateKeyInfo.h"
#include "java/io/IOException.h"
#include "javax/security/auth/Destroyable.h"

@interface LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey () {
 @public
  LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey, params_, LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *)

inline jlong LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_get_serialVersionUID(void);
#define LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey, serialVersionUID, jlong)

@implementation LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey

- (instancetype)initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *)params {
  LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_(self, params);
  return self;
}

- (NSString *)getAlgorithm {
  return @"McEliece";
}

- (jint)getN {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getN];
}

- (jint)getK {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getK];
}

- (LibOrgBouncycastlePqcMathLinearalgebraGF2mField *)getField {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getField];
}

- (LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)getGoppaPoly {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getGoppaPoly];
}

- (LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getSInv {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getSInv];
}

- (LibOrgBouncycastlePqcMathLinearalgebraPermutation *)getP1 {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP1];
}

- (LibOrgBouncycastlePqcMathLinearalgebraPermutation *)getP2 {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP2];
}

- (LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getH {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getH];
}

- (IOSObjectArray *)getQInv {
  return [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getQInv];
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey class]])) {
    return false;
  }
  LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *otherKey = (LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *) cast_chk(other, [LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey class]);
  return ([self getN] == [((LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *) nil_chk(otherKey)) getN]) && ([self getK] == [otherKey getK]) && [((LibOrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk([self getField])) isEqual:[otherKey getField]] && [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk([self getGoppaPoly])) isEqual:[otherKey getGoppaPoly]] && [((LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([self getSInv])) isEqual:[otherKey getSInv]] && [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([self getP1])) isEqual:[otherKey getP1]] && [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([self getP2])) isEqual:[otherKey getP2]];
}

- (NSUInteger)hash {
  jint code = [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getK];
  code = code * 37 + [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getN];
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getField])) hash]);
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getGoppaPoly])) hash]);
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP1])) hash]);
  code = code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP2])) hash]);
  return code * 37 + ((jint) [((LibOrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getSInv])) hash]);
}

- (IOSByteArray *)getEncoded {
  LibOrgBouncycastlePqcAsn1McEliecePrivateKey *privateKey = new_LibOrgBouncycastlePqcAsn1McEliecePrivateKey_initWithInt_withInt_withLibOrgBouncycastlePqcMathLinearalgebraGF2mField_withLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withLibOrgBouncycastlePqcMathLinearalgebraPermutation_withLibOrgBouncycastlePqcMathLinearalgebraPermutation_withLibOrgBouncycastlePqcMathLinearalgebraGF2Matrix_([((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getN], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getK], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getField], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getGoppaPoly], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP1], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getP2], [((LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *) nil_chk(params_)) getSInv]);
  LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *pki;
  @try {
    LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(LibOrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcEliece));
    pki = new_LibOrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, privateKey);
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
  @try {
    IOSByteArray *encoded = [((LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(pki)) getEncoded];
    return encoded;
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (NSString *)getFormat {
  return @"PKCS#8";
}

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getKeyParams {
  return params_;
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraGF2mField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraGF2Matrix;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraPermutation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraPermutation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcMathLinearalgebraGF2Matrix;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters:);
  methods[1].selector = @selector(getAlgorithm);
  methods[2].selector = @selector(getN);
  methods[3].selector = @selector(getK);
  methods[4].selector = @selector(getField);
  methods[5].selector = @selector(getGoppaPoly);
  methods[6].selector = @selector(getSInv);
  methods[7].selector = @selector(getP1);
  methods[8].selector = @selector(getP2);
  methods[9].selector = @selector(getH);
  methods[10].selector = @selector(getQInv);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(getEncoded);
  methods[14].selector = @selector(getFormat);
  methods[15].selector = @selector(getKeyParams);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "params_", "LLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey = { "BCMcEliecePrivateKey", "lib.org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, fields, 7, 0x1, 16, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey;
}

@end

void LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *self, LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *params) {
  NSObject_init(self);
  self->params_ = params;
}

LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *new_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *params) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey, initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_, params)
}

LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey *create_LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey_initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_(LibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *params) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey, initWithLibOrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePrivateKey)
