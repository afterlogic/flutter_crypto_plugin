//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PKCS12KeyWithParameters.java
//

#ifndef PKCS12KeyWithParameters_H
#define PKCS12KeyWithParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PKCS12Key.h"
#include "javax/crypto/interfaces/PBEKey.h"

@class IOSByteArray;
@class IOSCharArray;

@interface LibOrgBouncycastleJcajcePKCS12KeyWithParameters : LibOrgBouncycastleJcajcePKCS12Key < JavaxCryptoInterfacesPBEKey >

#pragma mark Public

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)password
                                withBoolean:(jboolean)useWrongZeroLengthConversion
                              withByteArray:(IOSByteArray *)salt
                                    withInt:(jint)iterationCount;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)password
                              withByteArray:(IOSByteArray *)salt
                                    withInt:(jint)iterationCount;

- (jint)getIterationCount;

- (IOSByteArray *)getSalt;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0
                                withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajcePKCS12KeyWithParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(LibOrgBouncycastleJcajcePKCS12KeyWithParameters *self, IOSCharArray *password, IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePKCS12KeyWithParameters *new_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePKCS12KeyWithParameters *create_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withByteArray_withInt_(IOSCharArray *password, IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(LibOrgBouncycastleJcajcePKCS12KeyWithParameters *self, IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePKCS12KeyWithParameters *new_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajcePKCS12KeyWithParameters *create_LibOrgBouncycastleJcajcePKCS12KeyWithParameters_initWithCharArray_withBoolean_withByteArray_withInt_(IOSCharArray *password, jboolean useWrongZeroLengthConversion, IOSByteArray *salt, jint iterationCount);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajcePKCS12KeyWithParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKCS12KeyWithParameters_H
