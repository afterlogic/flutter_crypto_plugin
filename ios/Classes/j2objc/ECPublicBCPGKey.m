//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/ECPublicBCPGKey.java
//

#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "BCPGInputStream.h"
#include "BCPGObject.h"
#include "BCPGOutputStream.h"
#include "ECPoint.h"
#include "ECPublicBCPGKey.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MPInteger.h"
#include "java/io/IOException.h"
#include "java/math/BigInteger.h"

@implementation LibOrgBouncycastleBcpgECPublicBCPGKey

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                               withLibOrgBouncycastleMathEcECPoint:(LibOrgBouncycastleMathEcECPoint *)point {
  LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECPoint_(self, oid, point);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                            withJavaMathBigInteger:(JavaMathBigInteger *)encodedPoint {
  LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_(self, oid, encodedPoint);
  return self;
}

- (NSString *)getFormat {
  return @"PGP";
}

- (IOSByteArray *)getEncoded {
  @try {
    return [super getEncoded];
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
}

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg {
  IOSByteArray *oid = [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(self->oid_)) getEncoded];
  [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(outArg)) writeWithByteArray:oid withInt:1 withInt:((IOSByteArray *) nil_chk(oid))->size_ - 1];
  LibOrgBouncycastleBcpgMPInteger *point = new_LibOrgBouncycastleBcpgMPInteger_initWithJavaMathBigInteger_(self->point_);
  [outArg writeObjectWithLibOrgBouncycastleBcpgBCPGObject:point];
}

- (JavaMathBigInteger *)getEncodedPoint {
  return point_;
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getCurveOID {
  return oid_;
}

+ (IOSByteArray *)readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  return LibOrgBouncycastleBcpgECPublicBCPGKey_readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0xc, 6, 0, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withLibOrgBouncycastleMathEcECPoint:);
  methods[2].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withJavaMathBigInteger:);
  methods[3].selector = @selector(getFormat);
  methods[4].selector = @selector(getEncoded);
  methods[5].selector = @selector(encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:);
  methods[6].selector = @selector(getEncodedPoint);
  methods[7].selector = @selector(getCurveOID);
  methods[8].selector = @selector(readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oid_", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "point_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LLibOrgBouncycastleMathEcECPoint;", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;LJavaMathBigInteger;", "encode", "LLibOrgBouncycastleBcpgBCPGOutputStream;", "readBytesOfEncodedLength" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgECPublicBCPGKey = { "ECPublicBCPGKey", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x401, 9, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgECPublicBCPGKey;
}

@end

void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->oid_ = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(LibOrgBouncycastleBcpgECPublicBCPGKey_readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg)));
  self->point_ = [new_LibOrgBouncycastleBcpgMPInteger_initWithLibOrgBouncycastleBcpgBCPGInputStream_(inArg) getValue];
}

void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleMathEcECPoint_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, LibOrgBouncycastleMathEcECPoint *point) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->point_ = new_JavaMathBigInteger_initWithInt_withByteArray_(1, [((LibOrgBouncycastleMathEcECPoint *) nil_chk(point)) getEncodedWithBoolean:false]);
  self->oid_ = oid;
}

void LibOrgBouncycastleBcpgECPublicBCPGKey_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaMathBigInteger_(LibOrgBouncycastleBcpgECPublicBCPGKey *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, JavaMathBigInteger *encodedPoint) {
  LibOrgBouncycastleBcpgBCPGObject_init(self);
  self->point_ = encodedPoint;
  self->oid_ = oid;
}

IOSByteArray *LibOrgBouncycastleBcpgECPublicBCPGKey_readBytesOfEncodedLengthWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgECPublicBCPGKey_initialize();
  jint length = [((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(inArg)) read];
  if (length == 0 || length == (jint) 0xFF) {
    @throw new_JavaIoIOException_initWithNSString_(@"future extensions not yet implemented.");
  }
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:length + 2];
  [inArg readFullyWithByteArray:buffer withInt:2 withInt:buffer->size_ - 2];
  *IOSByteArray_GetRef(buffer, 0) = (jbyte) (jint) 0x06;
  *IOSByteArray_GetRef(buffer, 1) = (jbyte) length;
  return buffer;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgECPublicBCPGKey)
