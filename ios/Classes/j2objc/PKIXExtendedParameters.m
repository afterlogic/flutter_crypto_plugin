//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/PKIXExtendedParameters.java
//

#include "GeneralName.h"
#include "J2ObjC_source.h"
#include "PKIXCRLStore.h"
#include "PKIXCertStore.h"
#include "PKIXCertStoreSelector.h"
#include "PKIXExtendedParameters.h"
#include "java/security/cert/CertSelector.h"
#include "java/security/cert/PKIXParameters.h"
#include "java/security/cert/TrustAnchor.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface LibOrgBouncycastleJcajcePKIXExtendedParameters () {
 @public
  JavaSecurityCertPKIXParameters *baseParameters_;
  LibOrgBouncycastleJcajcePKIXCertStoreSelector *targetConstraints_;
  JavaUtilDate *date_;
  id<JavaUtilList> extraCertStores_;
  id<JavaUtilMap> namedCertificateStoreMap_;
  id<JavaUtilList> extraCRLStores_;
  id<JavaUtilMap> namedCRLStoreMap_;
  jboolean revocationEnabled_;
  jboolean useDeltas_;
  jint validityModel_;
  id<JavaUtilSet> trustAnchors_;
}

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder:(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, baseParameters_, JavaSecurityCertPKIXParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, targetConstraints_, LibOrgBouncycastleJcajcePKIXCertStoreSelector *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, date_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, extraCertStores_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, namedCertificateStoreMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, extraCRLStores_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, namedCRLStoreMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters, trustAnchors_, id<JavaUtilSet>)

__attribute__((unused)) static void LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters *self, LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder);

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXExtendedParameters *new_LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajcePKIXExtendedParameters *create_LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder);

@interface LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder () {
 @public
  JavaSecurityCertPKIXParameters *baseParameters_;
  JavaUtilDate *date_;
  LibOrgBouncycastleJcajcePKIXCertStoreSelector *targetConstraints_;
  id<JavaUtilList> extraCertStores_;
  id<JavaUtilMap> namedCertificateStoreMap_;
  id<JavaUtilList> extraCRLStores_;
  id<JavaUtilMap> namedCRLStoreMap_;
  jboolean revocationEnabled_;
  jint validityModel_;
  jboolean useDeltas_;
  id<JavaUtilSet> trustAnchors_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, baseParameters_, JavaSecurityCertPKIXParameters *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, date_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, targetConstraints_, LibOrgBouncycastleJcajcePKIXCertStoreSelector *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, extraCertStores_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, namedCertificateStoreMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, extraCRLStores_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, namedCRLStoreMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, trustAnchors_, id<JavaUtilSet>)

@implementation LibOrgBouncycastleJcajcePKIXExtendedParameters

+ (jint)PKIX_VALIDITY_MODEL {
  return LibOrgBouncycastleJcajcePKIXExtendedParameters_PKIX_VALIDITY_MODEL;
}

+ (jint)CHAIN_VALIDITY_MODEL {
  return LibOrgBouncycastleJcajcePKIXExtendedParameters_CHAIN_VALIDITY_MODEL;
}

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder:(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)builder {
  LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(self, builder);
  return self;
}

- (id<JavaUtilList>)getCertificateStores {
  return extraCertStores_;
}

- (id<JavaUtilMap>)getNamedCertificateStoreMap {
  return namedCertificateStoreMap_;
}

- (id<JavaUtilList>)getCRLStores {
  return extraCRLStores_;
}

- (id<JavaUtilMap>)getNamedCRLStoreMap {
  return namedCRLStoreMap_;
}

- (JavaUtilDate *)getDate {
  return new_JavaUtilDate_initWithLong_([((JavaUtilDate *) nil_chk(date_)) getTime]);
}

- (jboolean)isUseDeltasEnabled {
  return useDeltas_;
}

- (jint)getValidityModel {
  return validityModel_;
}

- (id)java_clone {
  return self;
}

- (LibOrgBouncycastleJcajcePKIXCertStoreSelector *)getTargetConstraints {
  return targetConstraints_;
}

- (id<JavaUtilSet>)getTrustAnchors {
  return trustAnchors_;
}

- (id<JavaUtilSet>)getInitialPolicies {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) getInitialPolicies];
}

- (NSString *)getSigProvider {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) getSigProvider];
}

- (jboolean)isExplicitPolicyRequired {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) isExplicitPolicyRequired];
}

- (jboolean)isAnyPolicyInhibited {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) isAnyPolicyInhibited];
}

- (jboolean)isPolicyMappingInhibited {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) isPolicyMappingInhibited];
}

- (id<JavaUtilList>)getCertPathCheckers {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) getCertPathCheckers];
}

- (id<JavaUtilList>)getCertStores {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) getCertStores];
}

- (jboolean)isRevocationEnabled {
  return revocationEnabled_;
}

- (jboolean)getPolicyQualifiersRejected {
  return [((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters_)) getPolicyQualifiersRejected];
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXCertStoreSelector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder:);
  methods[1].selector = @selector(getCertificateStores);
  methods[2].selector = @selector(getNamedCertificateStoreMap);
  methods[3].selector = @selector(getCRLStores);
  methods[4].selector = @selector(getNamedCRLStoreMap);
  methods[5].selector = @selector(getDate);
  methods[6].selector = @selector(isUseDeltasEnabled);
  methods[7].selector = @selector(getValidityModel);
  methods[8].selector = @selector(java_clone);
  methods[9].selector = @selector(getTargetConstraints);
  methods[10].selector = @selector(getTrustAnchors);
  methods[11].selector = @selector(getInitialPolicies);
  methods[12].selector = @selector(getSigProvider);
  methods[13].selector = @selector(isExplicitPolicyRequired);
  methods[14].selector = @selector(isAnyPolicyInhibited);
  methods[15].selector = @selector(isPolicyMappingInhibited);
  methods[16].selector = @selector(getCertPathCheckers);
  methods[17].selector = @selector(getCertStores);
  methods[18].selector = @selector(isRevocationEnabled);
  methods[19].selector = @selector(getPolicyQualifiersRejected);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PKIX_VALIDITY_MODEL", "I", .constantValue.asInt = LibOrgBouncycastleJcajcePKIXExtendedParameters_PKIX_VALIDITY_MODEL, 0x19, -1, -1, -1, -1 },
    { "CHAIN_VALIDITY_MODEL", "I", .constantValue.asInt = LibOrgBouncycastleJcajcePKIXExtendedParameters_CHAIN_VALIDITY_MODEL, 0x19, -1, -1, -1, -1 },
    { "baseParameters_", "LJavaSecurityCertPKIXParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "targetConstraints_", "LLibOrgBouncycastleJcajcePKIXCertStoreSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "date_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "extraCertStores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "namedCertificateStoreMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "extraCRLStores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "namedCRLStoreMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "revocationEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "useDeltas_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "validityModel_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "trustAnchors_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", "()Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "()Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "()Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "()Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "clone", "()Ljava/util/List<Ljava/security/cert/CertStore;>;", "Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKIXExtendedParameters = { "PKIXExtendedParameters", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x1, 20, 13, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKIXExtendedParameters;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters *self, LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder) {
  NSObject_init(self);
  self->baseParameters_ = ((LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *) nil_chk(builder))->baseParameters_;
  self->date_ = builder->date_;
  self->extraCertStores_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(builder->extraCertStores_);
  self->namedCertificateStoreMap_ = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(new_JavaUtilHashMap_initWithJavaUtilMap_(builder->namedCertificateStoreMap_));
  self->extraCRLStores_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(builder->extraCRLStores_);
  self->namedCRLStoreMap_ = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(new_JavaUtilHashMap_initWithJavaUtilMap_(builder->namedCRLStoreMap_));
  self->targetConstraints_ = builder->targetConstraints_;
  self->revocationEnabled_ = builder->revocationEnabled_;
  self->useDeltas_ = builder->useDeltas_;
  self->validityModel_ = builder->validityModel_;
  self->trustAnchors_ = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(builder->trustAnchors_);
}

LibOrgBouncycastleJcajcePKIXExtendedParameters *new_LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters, initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_, builder)
}

LibOrgBouncycastleJcajcePKIXExtendedParameters *create_LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *builder) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters, initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKIXExtendedParameters)

@implementation LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder

- (instancetype)initWithJavaSecurityCertPKIXParameters:(JavaSecurityCertPKIXParameters *)baseParameters {
  LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(self, baseParameters);
  return self;
}

- (instancetype)initWithLibOrgBouncycastleJcajcePKIXExtendedParameters:(LibOrgBouncycastleJcajcePKIXExtendedParameters *)baseParameters {
  LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_(self, baseParameters);
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)addCertificateStoreWithLibOrgBouncycastleJcajcePKIXCertStore:(id<LibOrgBouncycastleJcajcePKIXCertStore>)store {
  [((id<JavaUtilList>) nil_chk(extraCertStores_)) addWithId:store];
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)addNamedCertificateStoreWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)issuerAltName
                                                                                    withLibOrgBouncycastleJcajcePKIXCertStore:(id<LibOrgBouncycastleJcajcePKIXCertStore>)store {
  (void) [((id<JavaUtilMap>) nil_chk(namedCertificateStoreMap_)) putWithId:issuerAltName withId:store];
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)addCRLStoreWithLibOrgBouncycastleJcajcePKIXCRLStore:(id<LibOrgBouncycastleJcajcePKIXCRLStore>)store {
  [((id<JavaUtilList>) nil_chk(extraCRLStores_)) addWithId:store];
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)addNamedCRLStoreWithLibOrgBouncycastleAsn1X509GeneralName:(LibOrgBouncycastleAsn1X509GeneralName *)issuerAltName
                                                                             withLibOrgBouncycastleJcajcePKIXCRLStore:(id<LibOrgBouncycastleJcajcePKIXCRLStore>)store {
  (void) [((id<JavaUtilMap>) nil_chk(namedCRLStoreMap_)) putWithId:issuerAltName withId:store];
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)setTargetConstraintsWithLibOrgBouncycastleJcajcePKIXCertStoreSelector:(LibOrgBouncycastleJcajcePKIXCertStoreSelector *)selector {
  targetConstraints_ = selector;
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)setUseDeltasEnabledWithBoolean:(jboolean)useDeltas {
  self->useDeltas_ = useDeltas;
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)setValidityModelWithInt:(jint)validityModel {
  self->validityModel_ = validityModel;
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)setTrustAnchorWithJavaSecurityCertTrustAnchor:(JavaSecurityCertTrustAnchor *)trustAnchor {
  self->trustAnchors_ = JavaUtilCollections_singletonWithId_(trustAnchor);
  return self;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *)setTrustAnchorsWithJavaUtilSet:(id<JavaUtilSet>)trustAnchors {
  self->trustAnchors_ = trustAnchors;
  return self;
}

- (void)setRevocationEnabledWithBoolean:(jboolean)revocationEnabled {
  self->revocationEnabled_ = revocationEnabled;
}

- (LibOrgBouncycastleJcajcePKIXExtendedParameters *)build {
  return new_LibOrgBouncycastleJcajcePKIXExtendedParameters_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;", 0x1, 18, 19, -1, 20, -1, -1 },
    { NULL, "V", 0x1, 21, 13, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJcajcePKIXExtendedParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityCertPKIXParameters:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleJcajcePKIXExtendedParameters:);
  methods[2].selector = @selector(addCertificateStoreWithLibOrgBouncycastleJcajcePKIXCertStore:);
  methods[3].selector = @selector(addNamedCertificateStoreWithLibOrgBouncycastleAsn1X509GeneralName:withLibOrgBouncycastleJcajcePKIXCertStore:);
  methods[4].selector = @selector(addCRLStoreWithLibOrgBouncycastleJcajcePKIXCRLStore:);
  methods[5].selector = @selector(addNamedCRLStoreWithLibOrgBouncycastleAsn1X509GeneralName:withLibOrgBouncycastleJcajcePKIXCRLStore:);
  methods[6].selector = @selector(setTargetConstraintsWithLibOrgBouncycastleJcajcePKIXCertStoreSelector:);
  methods[7].selector = @selector(setUseDeltasEnabledWithBoolean:);
  methods[8].selector = @selector(setValidityModelWithInt:);
  methods[9].selector = @selector(setTrustAnchorWithJavaSecurityCertTrustAnchor:);
  methods[10].selector = @selector(setTrustAnchorsWithJavaUtilSet:);
  methods[11].selector = @selector(setRevocationEnabledWithBoolean:);
  methods[12].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseParameters_", "LJavaSecurityCertPKIXParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "date_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "targetConstraints_", "LLibOrgBouncycastleJcajcePKIXCertStoreSelector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraCertStores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 22, -1 },
    { "namedCertificateStoreMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 23, -1 },
    { "extraCRLStores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 24, -1 },
    { "namedCRLStoreMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 25, -1 },
    { "revocationEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "validityModel_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useDeltas_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "trustAnchors_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 26, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityCertPKIXParameters;", "LLibOrgBouncycastleJcajcePKIXExtendedParameters;", "addCertificateStore", "LLibOrgBouncycastleJcajcePKIXCertStore;", "addNamedCertificateStore", "LLibOrgBouncycastleAsn1X509GeneralName;LLibOrgBouncycastleJcajcePKIXCertStore;", "addCRLStore", "LLibOrgBouncycastleJcajcePKIXCRLStore;", "addNamedCRLStore", "LLibOrgBouncycastleAsn1X509GeneralName;LLibOrgBouncycastleJcajcePKIXCRLStore;", "setTargetConstraints", "LLibOrgBouncycastleJcajcePKIXCertStoreSelector;", "setUseDeltasEnabled", "Z", "setValidityModel", "I", "setTrustAnchor", "LJavaSecurityCertTrustAnchor;", "setTrustAnchors", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;)Llib/org/bouncycastle/jcajce/PKIXExtendedParameters$Builder;", "setRevocationEnabled", "Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCertStore;>;", "Ljava/util/List<Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "Ljava/util/Map<Llib/org/bouncycastle/asn1/x509/GeneralName;Llib/org/bouncycastle/jcajce/PKIXCRLStore;>;", "Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder = { "Builder", "lib.org.bouncycastle.jcajce", ptrTable, methods, fields, 7, 0x9, 13, 11, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder;
}

@end

void LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *self, JavaSecurityCertPKIXParameters *baseParameters) {
  NSObject_init(self);
  self->extraCertStores_ = new_JavaUtilArrayList_init();
  self->namedCertificateStoreMap_ = new_JavaUtilHashMap_init();
  self->extraCRLStores_ = new_JavaUtilArrayList_init();
  self->namedCRLStoreMap_ = new_JavaUtilHashMap_init();
  self->validityModel_ = LibOrgBouncycastleJcajcePKIXExtendedParameters_PKIX_VALIDITY_MODEL;
  self->useDeltas_ = false;
  self->baseParameters_ = (JavaSecurityCertPKIXParameters *) cast_chk([((JavaSecurityCertPKIXParameters *) nil_chk(baseParameters)) java_clone], [JavaSecurityCertPKIXParameters class]);
  id<JavaSecurityCertCertSelector> constraints = [baseParameters getTargetCertConstraints];
  if (constraints != nil) {
    self->targetConstraints_ = [new_LibOrgBouncycastleJcajcePKIXCertStoreSelector_Builder_initWithJavaSecurityCertCertSelector_(constraints) build];
  }
  JavaUtilDate *checkDate = [baseParameters getDate];
  self->date_ = (checkDate == nil) ? new_JavaUtilDate_init() : checkDate;
  self->revocationEnabled_ = [baseParameters isRevocationEnabled];
  self->trustAnchors_ = [baseParameters getTrustAnchors];
}

LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *new_LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(JavaSecurityCertPKIXParameters *baseParameters) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, initWithJavaSecurityCertPKIXParameters_, baseParameters)
}

LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *create_LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(JavaSecurityCertPKIXParameters *baseParameters) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, initWithJavaSecurityCertPKIXParameters_, baseParameters)
}

void LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *self, LibOrgBouncycastleJcajcePKIXExtendedParameters *baseParameters) {
  NSObject_init(self);
  self->extraCertStores_ = new_JavaUtilArrayList_init();
  self->namedCertificateStoreMap_ = new_JavaUtilHashMap_init();
  self->extraCRLStores_ = new_JavaUtilArrayList_init();
  self->namedCRLStoreMap_ = new_JavaUtilHashMap_init();
  self->validityModel_ = LibOrgBouncycastleJcajcePKIXExtendedParameters_PKIX_VALIDITY_MODEL;
  self->useDeltas_ = false;
  self->baseParameters_ = ((LibOrgBouncycastleJcajcePKIXExtendedParameters *) nil_chk(baseParameters))->baseParameters_;
  self->date_ = baseParameters->date_;
  self->targetConstraints_ = baseParameters->targetConstraints_;
  self->extraCertStores_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(baseParameters->extraCertStores_);
  self->namedCertificateStoreMap_ = new_JavaUtilHashMap_initWithJavaUtilMap_(baseParameters->namedCertificateStoreMap_);
  self->extraCRLStores_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(baseParameters->extraCRLStores_);
  self->namedCRLStoreMap_ = new_JavaUtilHashMap_initWithJavaUtilMap_(baseParameters->namedCRLStoreMap_);
  self->useDeltas_ = baseParameters->useDeltas_;
  self->validityModel_ = baseParameters->validityModel_;
  self->revocationEnabled_ = [baseParameters isRevocationEnabled];
  self->trustAnchors_ = [baseParameters getTrustAnchors];
}

LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *new_LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_(LibOrgBouncycastleJcajcePKIXExtendedParameters *baseParameters) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_, baseParameters)
}

LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder *create_LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder_initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_(LibOrgBouncycastleJcajcePKIXExtendedParameters *baseParameters) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder, initWithLibOrgBouncycastleJcajcePKIXExtendedParameters_, baseParameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajcePKIXExtendedParameters_Builder)
