//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/RSAKeyGenerationParameters.java
//

#ifndef RSAKeyGenerationParameters_H
#define RSAKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;

@interface LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)publicExponent
                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                                             withInt:(jint)strength
                                             withInt:(jint)certainty;

- (jint)getCertainty;

- (JavaMathBigInteger *)getPublicExponent;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters_initWithJavaMathBigInteger_withJavaSecuritySecureRandom_withInt_withInt_(LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters *self, JavaMathBigInteger *publicExponent, JavaSecuritySecureRandom *random, jint strength, jint certainty);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters *new_LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters_initWithJavaMathBigInteger_withJavaSecuritySecureRandom_withInt_withInt_(JavaMathBigInteger *publicExponent, JavaSecuritySecureRandom *random, jint strength, jint certainty) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters *create_LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters_initWithJavaMathBigInteger_withJavaSecuritySecureRandom_withInt_withInt_(JavaMathBigInteger *publicExponent, JavaSecuritySecureRandom *random, jint strength, jint certainty);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoParamsRSAKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RSAKeyGenerationParameters_H
