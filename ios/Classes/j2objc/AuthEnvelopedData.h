//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/AuthEnvelopedData.java
//

#ifndef AuthEnvelopedData_H
#define AuthEnvelopedData_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1Set;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmsEncryptedContentInfo;
@class LibOrgBouncycastleAsn1CmsOriginatorInfo;

@interface LibOrgBouncycastleAsn1CmsAuthEnvelopedData : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsOriginatorInfo:(LibOrgBouncycastleAsn1CmsOriginatorInfo *)originatorInfo
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)recipientInfos
                        withLibOrgBouncycastleAsn1CmsEncryptedContentInfo:(LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)authEncryptedContentInfo
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)authAttrs
                                withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)mac
                                        withLibOrgBouncycastleAsn1ASN1Set:(LibOrgBouncycastleAsn1ASN1Set *)unauthAttrs;

- (LibOrgBouncycastleAsn1ASN1Set *)getAuthAttrs;

- (LibOrgBouncycastleAsn1CmsEncryptedContentInfo *)getAuthEncryptedContentInfo;

+ (LibOrgBouncycastleAsn1CmsAuthEnvelopedData *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                          withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsAuthEnvelopedData *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getMac;

- (LibOrgBouncycastleAsn1CmsOriginatorInfo *)getOriginatorInfo;

- (LibOrgBouncycastleAsn1ASN1Set *)getRecipientInfos;

- (LibOrgBouncycastleAsn1ASN1Set *)getUnauthAttrs;

- (LibOrgBouncycastleAsn1ASN1Integer *)getVersion;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsAuthEnvelopedData)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsAuthEnvelopedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsAuthEnvelopedData *self, LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1CmsEncryptedContentInfo *authEncryptedContentInfo, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthEnvelopedData *new_LibOrgBouncycastleAsn1CmsAuthEnvelopedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1CmsEncryptedContentInfo *authEncryptedContentInfo, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthEnvelopedData *create_LibOrgBouncycastleAsn1CmsAuthEnvelopedData_initWithLibOrgBouncycastleAsn1CmsOriginatorInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1CmsEncryptedContentInfo_withLibOrgBouncycastleAsn1ASN1Set_withLibOrgBouncycastleAsn1ASN1OctetString_withLibOrgBouncycastleAsn1ASN1Set_(LibOrgBouncycastleAsn1CmsOriginatorInfo *originatorInfo, LibOrgBouncycastleAsn1ASN1Set *recipientInfos, LibOrgBouncycastleAsn1CmsEncryptedContentInfo *authEncryptedContentInfo, LibOrgBouncycastleAsn1ASN1Set *authAttrs, LibOrgBouncycastleAsn1ASN1OctetString *mac, LibOrgBouncycastleAsn1ASN1Set *unauthAttrs);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthEnvelopedData *LibOrgBouncycastleAsn1CmsAuthEnvelopedData_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsAuthEnvelopedData *LibOrgBouncycastleAsn1CmsAuthEnvelopedData_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsAuthEnvelopedData)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AuthEnvelopedData_H
