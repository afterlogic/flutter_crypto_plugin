//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/AttributeCertificateIssuer.java
//

#ifndef AttributeCertificateIssuer_H
#define AttributeCertificateIssuer_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Selector.h"
#include "java/security/cert/CertSelector.h"

@class IOSObjectArray;
@class JavaSecurityCertCertificate;
@class JavaxSecurityAuthX500X500Principal;
@class LibOrgBouncycastleAsn1X509AttCertIssuer;
@class LibOrgBouncycastleJceX509Principal;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleX509AttributeCertificateIssuer : NSObject < JavaSecurityCertCertSelector, LibOrgBouncycastleUtilSelector > {
 @public
  id<LibOrgBouncycastleAsn1ASN1Encodable> form_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509AttCertIssuer:(LibOrgBouncycastleAsn1X509AttCertIssuer *)issuer;

- (instancetype __nonnull)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)principal;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)principal;

- (id)java_clone;

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getPrincipals;

- (NSUInteger)hash;

- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (jboolean)matchWithId:(id)obj;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509AttributeCertificateIssuer)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509AttributeCertificateIssuer, form_, id<LibOrgBouncycastleAsn1ASN1Encodable>)

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleAsn1X509AttCertIssuer_(LibOrgBouncycastleX509AttributeCertificateIssuer *self, LibOrgBouncycastleAsn1X509AttCertIssuer *issuer);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *new_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleAsn1X509AttCertIssuer_(LibOrgBouncycastleAsn1X509AttCertIssuer *issuer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *create_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleAsn1X509AttCertIssuer_(LibOrgBouncycastleAsn1X509AttCertIssuer *issuer);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateIssuer_initWithJavaxSecurityAuthX500X500Principal_(LibOrgBouncycastleX509AttributeCertificateIssuer *self, JavaxSecurityAuthX500X500Principal *principal);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *new_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *create_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleX509AttributeCertificateIssuer *self, LibOrgBouncycastleJceX509Principal *principal);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *new_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateIssuer *create_LibOrgBouncycastleX509AttributeCertificateIssuer_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509AttributeCertificateIssuer)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AttributeCertificateIssuer_H
