//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters.java
//

#ifndef GMSSPrivateKeyParameters_H
#define GMSSPrivateKeyParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "GMSSKeyParameters.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class LibOrgBouncycastlePqcCryptoGmssGMSSParameters;
@protocol LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters : LibOrgBouncycastlePqcCryptoGmssGMSSKeyParameters

#pragma mark Public

- (instancetype __nonnull)initWithByteArray2:(IOSObjectArray *)currentSeed
                              withByteArray2:(IOSObjectArray *)nextNextSeed
                              withByteArray3:(IOSObjectArray *)currentAuthPath
                              withByteArray3:(IOSObjectArray *)nextAuthPath
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)currentTreehash
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)nextTreehash
                     withJavaUtilVectorArray:(IOSObjectArray *)currentStack
                     withJavaUtilVectorArray:(IOSObjectArray *)nextStack
                    withJavaUtilVectorArray2:(IOSObjectArray *)currentRetain
                    withJavaUtilVectorArray2:(IOSObjectArray *)nextRetain
                              withByteArray2:(IOSObjectArray *)nextRoot
                              withByteArray2:(IOSObjectArray *)currentRootSig
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)gmssParameterset
withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider:(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider>)digestProvider;

- (instancetype __nonnull)initWithIntArray:(IOSIntArray *)index
                            withByteArray2:(IOSObjectArray *)currentSeeds
                            withByteArray2:(IOSObjectArray *)nextNextSeeds
                            withByteArray3:(IOSObjectArray *)currentAuthPaths
                            withByteArray3:(IOSObjectArray *)nextAuthPaths
                            withByteArray3:(IOSObjectArray *)keep
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)currentTreehash
withLibOrgBouncycastlePqcCryptoGmssTreehashArray2:(IOSObjectArray *)nextTreehash
                   withJavaUtilVectorArray:(IOSObjectArray *)currentStack
                   withJavaUtilVectorArray:(IOSObjectArray *)nextStack
                  withJavaUtilVectorArray2:(IOSObjectArray *)currentRetain
                  withJavaUtilVectorArray2:(IOSObjectArray *)nextRetain
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)nextNextLeaf
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperLeaf
withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray:(IOSObjectArray *)upperTreehashLeaf
                              withIntArray:(IOSIntArray *)minTreehash
                            withByteArray2:(IOSObjectArray *)nextRoot
withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray:(IOSObjectArray *)nextNextRoot
                            withByteArray2:(IOSObjectArray *)currentRootSig
withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray:(IOSObjectArray *)nextRootSig
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)gmssParameterset
withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider:(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider>)digestProvider;

- (IOSObjectArray *)getCurrentAuthPaths;

- (IOSObjectArray *)getCurrentSeeds;

- (IOSIntArray *)getIndex;

- (jint)getIndexWithInt:(jint)i;

- (id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider>)getName;

- (jint)getNumLeafsWithInt:(jint)i;

- (IOSByteArray *)getSubtreeRootSigWithInt:(jint)i;

- (jboolean)isUsed;

- (void)markUsed;

- (LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *)nextKey;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
withLibOrgBouncycastlePqcCryptoGmssGMSSParameters:(LibOrgBouncycastlePqcCryptoGmssGMSSParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithByteArray2_withByteArray2_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withByteArray2_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(IOSObjectArray *currentSeed, IOSObjectArray *nextNextSeed, IOSObjectArray *currentAuthPath, IOSObjectArray *nextAuthPath, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextRoot, IOSObjectArray *currentRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *self, IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *new_LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters *create_LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters_initWithIntArray_withByteArray2_withByteArray2_withByteArray3_withByteArray3_withByteArray3_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withLibOrgBouncycastlePqcCryptoGmssTreehashArray2_withJavaUtilVectorArray_withJavaUtilVectorArray_withJavaUtilVectorArray2_withJavaUtilVectorArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withLibOrgBouncycastlePqcCryptoGmssGMSSLeafArray_withIntArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootCalcArray_withByteArray2_withLibOrgBouncycastlePqcCryptoGmssGMSSRootSigArray_withLibOrgBouncycastlePqcCryptoGmssGMSSParameters_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(IOSIntArray *index, IOSObjectArray *currentSeeds, IOSObjectArray *nextNextSeeds, IOSObjectArray *currentAuthPaths, IOSObjectArray *nextAuthPaths, IOSObjectArray *keep, IOSObjectArray *currentTreehash, IOSObjectArray *nextTreehash, IOSObjectArray *currentStack, IOSObjectArray *nextStack, IOSObjectArray *currentRetain, IOSObjectArray *nextRetain, IOSObjectArray *nextNextLeaf, IOSObjectArray *upperLeaf, IOSObjectArray *upperTreehashLeaf, IOSIntArray *minTreehash, IOSObjectArray *nextRoot, IOSObjectArray *nextNextRoot, IOSObjectArray *currentRootSig, IOSObjectArray *nextRootSig, LibOrgBouncycastlePqcCryptoGmssGMSSParameters *gmssParameterset, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSPrivateKeyParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSPrivateKeyParameters_H
