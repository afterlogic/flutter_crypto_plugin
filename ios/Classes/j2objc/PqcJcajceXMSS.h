//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/PqcJcajceXMSS.java
//

#ifndef PqcJcajceXMSS_H
#define PqcJcajceXMSS_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricAlgorithmProvider.h"
#include "J2ObjC_header.h"

@protocol LibOrgBouncycastleJcajceProviderConfigConfigurableProvider;

@interface LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_init(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS *new_LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS *create_LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS)

@interface LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings : LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider

#pragma mark Public

- (instancetype __nonnull)init;

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings_init(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings *new_LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings *create_LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderPqcJcajceXMSS_Mappings)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PqcJcajceXMSS_H
