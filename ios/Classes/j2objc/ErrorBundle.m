//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/i18n/ErrorBundle.java
//

#include "ErrorBundle.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "MessageBundle.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

NSString *LibOrgBouncycastleI18nErrorBundle_SUMMARY_ENTRY = @"summary";
NSString *LibOrgBouncycastleI18nErrorBundle_DETAIL_ENTRY = @"details";

@implementation LibOrgBouncycastleI18nErrorBundle

+ (NSString *)SUMMARY_ENTRY {
  return LibOrgBouncycastleI18nErrorBundle_SUMMARY_ENTRY;
}

+ (NSString *)DETAIL_ENTRY {
  return LibOrgBouncycastleI18nErrorBundle_DETAIL_ENTRY;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_ {
  LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_(self, resource, id_);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding {
  LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_(self, resource, id_, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
               withNSObjectArray:(IOSObjectArray *)arguments {
  LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSObjectArray_(self, resource, id_, arguments);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resource
                    withNSString:(NSString *)id_
                    withNSString:(NSString *)encoding
               withNSObjectArray:(IOSObjectArray *)arguments {
  LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_withNSObjectArray_(self, resource, id_, encoding, arguments);
  return self;
}

- (NSString *)getSummaryWithJavaUtilLocale:(JavaUtilLocale *)loc
                      withJavaUtilTimeZone:(JavaUtilTimeZone *)timezone {
  return [self getEntryWithNSString:LibOrgBouncycastleI18nErrorBundle_SUMMARY_ENTRY withJavaUtilLocale:loc withJavaUtilTimeZone:timezone];
}

- (NSString *)getSummaryWithJavaUtilLocale:(JavaUtilLocale *)loc {
  return [self getEntryWithNSString:LibOrgBouncycastleI18nErrorBundle_SUMMARY_ENTRY withJavaUtilLocale:loc withJavaUtilTimeZone:JavaUtilTimeZone_getDefault()];
}

- (NSString *)getDetailWithJavaUtilLocale:(JavaUtilLocale *)loc
                     withJavaUtilTimeZone:(JavaUtilTimeZone *)timezone {
  return [self getEntryWithNSString:LibOrgBouncycastleI18nErrorBundle_DETAIL_ENTRY withJavaUtilLocale:loc withJavaUtilTimeZone:timezone];
}

- (NSString *)getDetailWithJavaUtilLocale:(JavaUtilLocale *)loc {
  return [self getEntryWithNSString:LibOrgBouncycastleI18nErrorBundle_DETAIL_ENTRY withJavaUtilLocale:loc withJavaUtilTimeZone:JavaUtilTimeZone_getDefault()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 9, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 7, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 9, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[2].selector = @selector(initWithNSString:withNSString:withNSObjectArray:);
  methods[3].selector = @selector(initWithNSString:withNSString:withNSString:withNSObjectArray:);
  methods[4].selector = @selector(getSummaryWithJavaUtilLocale:withJavaUtilTimeZone:);
  methods[5].selector = @selector(getSummaryWithJavaUtilLocale:);
  methods[6].selector = @selector(getDetailWithJavaUtilLocale:withJavaUtilTimeZone:);
  methods[7].selector = @selector(getDetailWithJavaUtilLocale:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SUMMARY_ENTRY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "DETAIL_ENTRY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "LJavaLangNullPointerException;", "LNSString;LNSString;LNSString;", "LJavaLangNullPointerException;LJavaIoUnsupportedEncodingException;", "LNSString;LNSString;[LNSObject;", "LNSString;LNSString;LNSString;[LNSObject;", "getSummary", "LJavaUtilLocale;LJavaUtilTimeZone;", "LLibOrgBouncycastleI18nMissingEntryException;", "LJavaUtilLocale;", "getDetail", &LibOrgBouncycastleI18nErrorBundle_SUMMARY_ENTRY, &LibOrgBouncycastleI18nErrorBundle_DETAIL_ENTRY };
  static const J2ObjcClassInfo _LibOrgBouncycastleI18nErrorBundle = { "ErrorBundle", "lib.org.bouncycastle.i18n", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleI18nErrorBundle;
}

@end

void LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_(LibOrgBouncycastleI18nErrorBundle *self, NSString *resource, NSString *id_) {
  LibOrgBouncycastleI18nMessageBundle_initWithNSString_withNSString_(self, resource, id_);
}

LibOrgBouncycastleI18nErrorBundle *new_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_, resource, id_)
}

LibOrgBouncycastleI18nErrorBundle *create_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_(NSString *resource, NSString *id_) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_, resource, id_)
}

void LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_(LibOrgBouncycastleI18nErrorBundle *self, NSString *resource, NSString *id_, NSString *encoding) {
  LibOrgBouncycastleI18nMessageBundle_initWithNSString_withNSString_withNSString_(self, resource, id_, encoding);
}

LibOrgBouncycastleI18nErrorBundle *new_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

LibOrgBouncycastleI18nErrorBundle *create_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_(NSString *resource, NSString *id_, NSString *encoding) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSString_, resource, id_, encoding)
}

void LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSObjectArray_(LibOrgBouncycastleI18nErrorBundle *self, NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  LibOrgBouncycastleI18nMessageBundle_initWithNSString_withNSString_withNSObjectArray_(self, resource, id_, arguments);
}

LibOrgBouncycastleI18nErrorBundle *new_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSObjectArray_, resource, id_, arguments)
}

LibOrgBouncycastleI18nErrorBundle *create_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, IOSObjectArray *arguments) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSObjectArray_, resource, id_, arguments)
}

void LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_withNSObjectArray_(LibOrgBouncycastleI18nErrorBundle *self, NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  LibOrgBouncycastleI18nMessageBundle_initWithNSString_withNSString_withNSString_withNSObjectArray_(self, resource, id_, encoding, arguments);
}

LibOrgBouncycastleI18nErrorBundle *new_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

LibOrgBouncycastleI18nErrorBundle *create_LibOrgBouncycastleI18nErrorBundle_initWithNSString_withNSString_withNSString_withNSObjectArray_(NSString *resource, NSString *id_, NSString *encoding, IOSObjectArray *arguments) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nErrorBundle, initWithNSString_withNSString_withNSString_withNSObjectArray_, resource, id_, encoding, arguments)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleI18nErrorBundle)
