//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/x509/ReasonFlags.java
//

#ifndef ReasonFlags_H
#define ReasonFlags_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "DERBitString.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1X509ReasonFlags : LibOrgBouncycastleAsn1DERBitString
@property (readonly, class) jint UNUSED NS_SWIFT_NAME(UNUSED);
@property (readonly, class) jint KEY_COMPROMISE NS_SWIFT_NAME(KEY_COMPROMISE);
@property (readonly, class) jint CA_COMPROMISE NS_SWIFT_NAME(CA_COMPROMISE);
@property (readonly, class) jint AFFILIATION_CHANGED NS_SWIFT_NAME(AFFILIATION_CHANGED);
@property (readonly, class) jint SUPERSEDED NS_SWIFT_NAME(SUPERSEDED);
@property (readonly, class) jint CESSATION_OF_OPERATION NS_SWIFT_NAME(CESSATION_OF_OPERATION);
@property (readonly, class) jint CERTIFICATE_HOLD NS_SWIFT_NAME(CERTIFICATE_HOLD);
@property (readonly, class) jint PRIVILEGE_WITHDRAWN NS_SWIFT_NAME(PRIVILEGE_WITHDRAWN);
@property (readonly, class) jint AA_COMPROMISE NS_SWIFT_NAME(AA_COMPROMISE);
@property (readonly, class) jint unused NS_SWIFT_NAME(unused);
@property (readonly, class) jint keyCompromise NS_SWIFT_NAME(keyCompromise);
@property (readonly, class) jint cACompromise NS_SWIFT_NAME(cACompromise);
@property (readonly, class) jint affiliationChanged NS_SWIFT_NAME(affiliationChanged);
@property (readonly, class) jint superseded NS_SWIFT_NAME(superseded);
@property (readonly, class) jint cessationOfOperation NS_SWIFT_NAME(cessationOfOperation);
@property (readonly, class) jint certificateHold NS_SWIFT_NAME(certificateHold);
@property (readonly, class) jint privilegeWithdrawn NS_SWIFT_NAME(privilegeWithdrawn);
@property (readonly, class) jint aACompromise NS_SWIFT_NAME(aACompromise);

+ (jint)UNUSED;

+ (jint)KEY_COMPROMISE;

+ (jint)CA_COMPROMISE;

+ (jint)AFFILIATION_CHANGED;

+ (jint)SUPERSEDED;

+ (jint)CESSATION_OF_OPERATION;

+ (jint)CERTIFICATE_HOLD;

+ (jint)PRIVILEGE_WITHDRAWN;

+ (jint)AA_COMPROMISE;

+ (jint)unused;

+ (jint)keyCompromise;

+ (jint)cACompromise;

+ (jint)affiliationChanged;

+ (jint)superseded;

+ (jint)cessationOfOperation;

+ (jint)certificateHold;

+ (jint)privilegeWithdrawn;

+ (jint)aACompromise;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)reasons;

- (instancetype __nonnull)initWithInt:(jint)reasons;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithByte:(jbyte)arg0
                               withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0
                                    withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1X509ReasonFlags)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_UNUSED(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_UNUSED 128
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, UNUSED, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_KEY_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_KEY_COMPROMISE 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, KEY_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_CA_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_CA_COMPROMISE 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, CA_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_AFFILIATION_CHANGED(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_AFFILIATION_CHANGED 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, AFFILIATION_CHANGED, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_SUPERSEDED(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_SUPERSEDED 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, SUPERSEDED, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_CESSATION_OF_OPERATION(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_CESSATION_OF_OPERATION 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, CESSATION_OF_OPERATION, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_CERTIFICATE_HOLD(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_CERTIFICATE_HOLD 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, CERTIFICATE_HOLD, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_PRIVILEGE_WITHDRAWN(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_PRIVILEGE_WITHDRAWN 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, PRIVILEGE_WITHDRAWN, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_AA_COMPROMISE(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_AA_COMPROMISE 32768
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, AA_COMPROMISE, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_unused(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_unused 128
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, unused, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_keyCompromise(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_keyCompromise 64
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, keyCompromise, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_cACompromise(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_cACompromise 32
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, cACompromise, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_affiliationChanged(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_affiliationChanged 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, affiliationChanged, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_superseded(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_superseded 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, superseded, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_cessationOfOperation(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_cessationOfOperation 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, cessationOfOperation, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_certificateHold(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_certificateHold 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, certificateHold, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_privilegeWithdrawn(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_privilegeWithdrawn 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, privilegeWithdrawn, jint)

inline jint LibOrgBouncycastleAsn1X509ReasonFlags_get_aACompromise(void);
#define LibOrgBouncycastleAsn1X509ReasonFlags_aACompromise 32768
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1X509ReasonFlags, aACompromise, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(LibOrgBouncycastleAsn1X509ReasonFlags *self, jint reasons);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ReasonFlags *new_LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(jint reasons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ReasonFlags *create_LibOrgBouncycastleAsn1X509ReasonFlags_initWithInt_(jint reasons);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1X509ReasonFlags *self, LibOrgBouncycastleAsn1DERBitString *reasons);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ReasonFlags *new_LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *reasons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1X509ReasonFlags *create_LibOrgBouncycastleAsn1X509ReasonFlags_initWithLibOrgBouncycastleAsn1DERBitString_(LibOrgBouncycastleAsn1DERBitString *reasons);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1X509ReasonFlags)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ReasonFlags_H
