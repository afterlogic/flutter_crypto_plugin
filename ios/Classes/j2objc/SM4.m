//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/SM4.java
//

#include "BaseAlgorithmParameterGenerator.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "CryptoServicesRegistrar.h"
#include "GCMBlockCipher.h"
#include "GMac.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "SM4.h"
#include "SM4Engine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4 ()

- (instancetype)init;

@end

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricSM4_init(LibOrgBouncycastleJcajceProviderSymmetricSM4 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSM4 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSM4 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init(void);

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4_ECB;LLibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC;LLibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC;LLibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4 = { "SM4", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_init(LibOrgBouncycastleJcajceProviderSymmetricSM4 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSM4 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesSM4Engine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"SM4", 128, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC = { "CMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSM4Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_CMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC = { "GMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSM4Engine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_GMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesSM4Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-SM4", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for SM4 parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = LibOrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  }
  [((JavaSecuritySecureRandom *) nil_chk(random_)) nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"SM4"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"SM4 IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_AlgParams)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameters.SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:@"Cipher.SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$KeyGen")];
  [self addCMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$CMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$KeyGen")];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$GMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$KeyGen")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"SM4" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricSM4;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricSM4_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricSM4_Mappings)
