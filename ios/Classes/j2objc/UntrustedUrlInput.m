//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/i18n/filter/UntrustedUrlInput.java
//

#include "J2ObjC_source.h"
#include "UntrustedInput.h"
#include "UntrustedUrlInput.h"

@implementation LibOrgBouncycastleI18nFilterUntrustedUrlInput

- (instancetype)initWithId:(id)url {
  LibOrgBouncycastleI18nFilterUntrustedUrlInput_initWithId_(self, url);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleI18nFilterUntrustedUrlInput = { "UntrustedUrlInput", "lib.org.bouncycastle.i18n.filter", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleI18nFilterUntrustedUrlInput;
}

@end

void LibOrgBouncycastleI18nFilterUntrustedUrlInput_initWithId_(LibOrgBouncycastleI18nFilterUntrustedUrlInput *self, id url) {
  LibOrgBouncycastleI18nFilterUntrustedInput_initWithId_(self, url);
}

LibOrgBouncycastleI18nFilterUntrustedUrlInput *new_LibOrgBouncycastleI18nFilterUntrustedUrlInput_initWithId_(id url) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleI18nFilterUntrustedUrlInput, initWithId_, url)
}

LibOrgBouncycastleI18nFilterUntrustedUrlInput *create_LibOrgBouncycastleI18nFilterUntrustedUrlInput_initWithId_(id url) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleI18nFilterUntrustedUrlInput, initWithId_, url)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleI18nFilterUntrustedUrlInput)
