//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/LongArray.java
//

#ifndef LongArray_H
#define LongArray_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSLongArray;
@class JavaMathBigInteger;

@interface LibOrgBouncycastleMathEcLongArray : NSObject < NSCopying >
@property (readonly, class) IOSByteArray *bitLengths NS_SWIFT_NAME(bitLengths);

+ (IOSByteArray *)bitLengths;

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)bigInt;

- (instancetype __nonnull)initWithInt:(jint)intLen;

- (instancetype __nonnull)initWithLongArray:(IOSLongArray *)ints;

- (instancetype __nonnull)initWithLongArray:(IOSLongArray *)ints
                                    withInt:(jint)off
                                    withInt:(jint)len;

- (LibOrgBouncycastleMathEcLongArray *)addOne;

- (void)addShiftedByWordsWithLibOrgBouncycastleMathEcLongArray:(LibOrgBouncycastleMathEcLongArray *)other
                                                       withInt:(jint)words;

- (id)java_clone;

- (jint)degree;

- (jboolean)isEqual:(id)o;

- (jint)getLength;

- (jint)getUsedLength;

- (jint)getUsedLengthFromWithInt:(jint)from;

- (NSUInteger)hash;

- (jboolean)isOne;

- (jboolean)isZero;

- (LibOrgBouncycastleMathEcLongArray *)modInverseWithInt:(jint)m
                                            withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modMultiplyWithLibOrgBouncycastleMathEcLongArray:(LibOrgBouncycastleMathEcLongArray *)other
                                                                                withInt:(jint)m
                                                                           withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modMultiplyAltWithLibOrgBouncycastleMathEcLongArray:(LibOrgBouncycastleMathEcLongArray *)other
                                                                                   withInt:(jint)m
                                                                              withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modMultiplyLDWithLibOrgBouncycastleMathEcLongArray:(LibOrgBouncycastleMathEcLongArray *)other
                                                                                  withInt:(jint)m
                                                                             withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modReduceWithInt:(jint)m
                                           withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modSquareWithInt:(jint)m
                                           withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)modSquareNWithInt:(jint)n
                                                 withInt:(jint)m
                                            withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)multiplyWithLibOrgBouncycastleMathEcLongArray:(LibOrgBouncycastleMathEcLongArray *)other
                                                                             withInt:(jint)m
                                                                        withIntArray:(IOSIntArray *)ks;

- (void)reduceWithInt:(jint)m
         withIntArray:(IOSIntArray *)ks;

- (LibOrgBouncycastleMathEcLongArray *)squareWithInt:(jint)m
                                        withIntArray:(IOSIntArray *)ks;

- (jboolean)testBitZero;

- (JavaMathBigInteger *)toBigInteger;

- (NSString *)description;

#pragma mark Package-Private

- (void)copyToWithLongArray:(IOSLongArray *)z
                    withInt:(jint)zOff OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleMathEcLongArray)

inline IOSByteArray *LibOrgBouncycastleMathEcLongArray_get_bitLengths(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleMathEcLongArray_bitLengths;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleMathEcLongArray, bitLengths, IOSByteArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcLongArray_initWithInt_(LibOrgBouncycastleMathEcLongArray *self, jint intLen);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *new_LibOrgBouncycastleMathEcLongArray_initWithInt_(jint intLen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *create_LibOrgBouncycastleMathEcLongArray_initWithInt_(jint intLen);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcLongArray_initWithLongArray_(LibOrgBouncycastleMathEcLongArray *self, IOSLongArray *ints);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *new_LibOrgBouncycastleMathEcLongArray_initWithLongArray_(IOSLongArray *ints) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *create_LibOrgBouncycastleMathEcLongArray_initWithLongArray_(IOSLongArray *ints);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcLongArray_initWithLongArray_withInt_withInt_(LibOrgBouncycastleMathEcLongArray *self, IOSLongArray *ints, jint off, jint len);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *new_LibOrgBouncycastleMathEcLongArray_initWithLongArray_withInt_withInt_(IOSLongArray *ints, jint off, jint len) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *create_LibOrgBouncycastleMathEcLongArray_initWithLongArray_withInt_withInt_(IOSLongArray *ints, jint off, jint len);

FOUNDATION_EXPORT void LibOrgBouncycastleMathEcLongArray_initWithJavaMathBigInteger_(LibOrgBouncycastleMathEcLongArray *self, JavaMathBigInteger *bigInt);

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *new_LibOrgBouncycastleMathEcLongArray_initWithJavaMathBigInteger_(JavaMathBigInteger *bigInt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleMathEcLongArray *create_LibOrgBouncycastleMathEcLongArray_initWithJavaMathBigInteger_(JavaMathBigInteger *bigInt);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleMathEcLongArray)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // LongArray_H
