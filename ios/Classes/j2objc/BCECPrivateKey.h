//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.java
//

#ifndef BCECPrivateKey_H
#define BCECPrivateKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ECPointEncoder.h"
#include "J2ObjC_header.h"
#include "JceECPrivateKey.h"
#include "PKCS12BagAttributeCarrier.h"
#include "java/security/interfaces/ECPrivateKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPrivateKeySpec;
@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class LibOrgBouncycastleCryptoParamsECPrivateKeyParameters;
@class LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;
@class LibOrgBouncycastleJceSpecECParameterSpec;
@class LibOrgBouncycastleJceSpecECPrivateKeySpec;
@protocol JavaUtilEnumeration;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;
@protocol LibOrgBouncycastleJcajceProviderConfigProviderConfiguration;

@interface LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey : NSObject < JavaSecurityInterfacesECPrivateKey, LibOrgBouncycastleJceInterfacesJceECPrivateKey, LibOrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier, LibOrgBouncycastleJceInterfacesECPointEncoder >
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (instancetype __nonnull)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key
     withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *)key;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
       withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withLibOrgBouncycastleJceSpecECParameterSpec:(LibOrgBouncycastleJceSpecECParameterSpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters:(LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleJceSpecECPrivateKeySpec:(LibOrgBouncycastleJceSpecECPrivateKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
      withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (id<LibOrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (id<JavaUtilEnumeration>)getBagAttributeKeys;

- (JavaMathBigInteger *)getD;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (LibOrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (JavaMathBigInteger *)getS;

- (NSUInteger)hash;

- (void)setBagAttributeWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)attribute;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)init;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)algorithm
withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info
withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (LibOrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)

inline jlong LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_get_serialVersionUID(void);
#define LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_serialVersionUID 994553197664784084LL
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJceSpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleJceSpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withLibOrgBouncycastleJceSpecECParameterSpec_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, LibOrgBouncycastleJceSpecECParameterSpec *spec, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleCryptoParamsECPrivateKeyParameters_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_withLibOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<LibOrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BCECPrivateKey_H
