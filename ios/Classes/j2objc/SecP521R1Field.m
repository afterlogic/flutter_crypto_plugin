//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/math/ec/custom/sec/SecP521R1Field.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Nat.h"
#include "Nat512.h"
#include "SecP521R1Field.h"
#include "java/math/BigInteger.h"

inline jint LibOrgBouncycastleMathEcCustomSecSecP521R1Field_get_P16(void);
#define LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 511
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleMathEcCustomSecSecP521R1Field, P16, jint)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleMathEcCustomSecSecP521R1Field)

IOSIntArray *LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P;

@implementation LibOrgBouncycastleMathEcCustomSecSecP521R1Field

+ (IOSIntArray *)P {
  return LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_addWithIntArray_withIntArray_withIntArray_(x, y, z);
}

+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_addOneWithIntArray_withIntArray_(x, z);
}

+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  return LibOrgBouncycastleMathEcCustomSecSecP521R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
}

+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_halfWithIntArray_withIntArray_(x, z);
}

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x, y, z);
}

+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_negateWithIntArray_withIntArray_(x, z);
}

+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(xx, z);
}

+ (void)reduce23WithIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduce23WithIntArray_(z);
}

+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_squareWithIntArray_withIntArray_(x, z);
}

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_squareNWithIntArray_withInt_withIntArray_(x, n, z);
}

+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_subtractWithIntArray_withIntArray_withIntArray_(x, y, z);
}

+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_twiceWithIntArray_withIntArray_(x, z);
}

+ (void)implMultiplyWithIntArray:(IOSIntArray *)x
                    withIntArray:(IOSIntArray *)y
                    withIntArray:(IOSIntArray *)zz {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implMultiplyWithIntArray_withIntArray_withIntArray_(x, y, zz);
}

+ (void)implSquareWithIntArray:(IOSIntArray *)x
                  withIntArray:(IOSIntArray *)zz {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implSquareWithIntArray_withIntArray_(x, zz);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 9, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 12, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 16, 3, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 17, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xc, 18, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(addOneWithIntArray:withIntArray:);
  methods[3].selector = @selector(fromBigIntegerWithJavaMathBigInteger:);
  methods[4].selector = @selector(halfWithIntArray:withIntArray:);
  methods[5].selector = @selector(multiplyWithIntArray:withIntArray:withIntArray:);
  methods[6].selector = @selector(negateWithIntArray:withIntArray:);
  methods[7].selector = @selector(reduceWithIntArray:withIntArray:);
  methods[8].selector = @selector(reduce23WithIntArray:);
  methods[9].selector = @selector(squareWithIntArray:withIntArray:);
  methods[10].selector = @selector(squareNWithIntArray:withInt:withIntArray:);
  methods[11].selector = @selector(subtractWithIntArray:withIntArray:withIntArray:);
  methods[12].selector = @selector(twiceWithIntArray:withIntArray:);
  methods[13].selector = @selector(implMultiplyWithIntArray:withIntArray:withIntArray:);
  methods[14].selector = @selector(implSquareWithIntArray:withIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "P", "[I", .constantValue.asLong = 0, 0x18, -1, 19, -1, -1 },
    { "P16", "I", .constantValue.asInt = LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "[I[I[I", "addOne", "[I[I", "fromBigInteger", "LJavaMathBigInteger;", "half", "multiply", "negate", "reduce", "reduce23", "[I", "square", "squareN", "[II[I", "subtract", "twice", "implMultiply", "implSquare", &LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P };
  static const J2ObjcClassInfo _LibOrgBouncycastleMathEcCustomSecSecP521R1Field = { "SecP521R1Field", "lib.org.bouncycastle.math.ec.custom.sec", ptrTable, methods, fields, 7, 0x1, 15, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleMathEcCustomSecSecP521R1Field;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleMathEcCustomSecSecP521R1Field class]) {
    LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0x1FF } count:17];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleMathEcCustomSecSecP521R1Field)
  }
}

@end

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_init(LibOrgBouncycastleMathEcCustomSecSecP521R1Field *self) {
  NSObject_init(self);
}

LibOrgBouncycastleMathEcCustomSecSecP521R1Field *new_LibOrgBouncycastleMathEcCustomSecSecP521R1Field_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleMathEcCustomSecSecP521R1Field, init)
}

LibOrgBouncycastleMathEcCustomSecSecP521R1Field *create_LibOrgBouncycastleMathEcCustomSecSecP521R1Field_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleMathEcCustomSecSecP521R1Field, init)
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint c = LibOrgBouncycastleMathRawNat_addWithInt_withIntArray_withIntArray_withIntArray_(16, x, y, z) + IOSIntArray_Get(nil_chk(x), 16) + IOSIntArray_Get(nil_chk(y), 16);
  if (c > LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 || (c == LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 && LibOrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(16, z, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P))) {
    c += LibOrgBouncycastleMathRawNat_incWithInt_withIntArray_(16, z);
    c &= LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
  }
  *IOSIntArray_GetRef(nil_chk(z), 16) = c;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint c = LibOrgBouncycastleMathRawNat_incWithInt_withIntArray_withIntArray_(16, x, z) + IOSIntArray_Get(nil_chk(x), 16);
  if (c > LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 || (c == LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 && LibOrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(16, z, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P))) {
    c += LibOrgBouncycastleMathRawNat_incWithInt_withIntArray_(16, z);
    c &= LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
  }
  *IOSIntArray_GetRef(nil_chk(z), 16) = c;
}

IOSIntArray *LibOrgBouncycastleMathEcCustomSecSecP521R1Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  IOSIntArray *z = LibOrgBouncycastleMathRawNat_fromBigIntegerWithInt_withJavaMathBigInteger_(521, x);
  if (LibOrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(17, z, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P)) {
    LibOrgBouncycastleMathRawNat_zeroWithInt_withIntArray_(17, z);
  }
  return z;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint x16 = IOSIntArray_Get(nil_chk(x), 16);
  jint c = LibOrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(16, x, x16, z);
  *IOSIntArray_GetRef(nil_chk(z), 16) = (JreURShift32(x16, 1)) | (JreURShift32(c, 23));
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  IOSIntArray *tt = LibOrgBouncycastleMathRawNat_createWithInt_(33);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implMultiplyWithIntArray_withIntArray_withIntArray_(x, y, tt);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  if (LibOrgBouncycastleMathRawNat_isZeroWithInt_withIntArray_(17, x)) {
    LibOrgBouncycastleMathRawNat_zeroWithInt_withIntArray_(17, z);
  }
  else {
    LibOrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(17, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P, x, z);
  }
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint xx32 = IOSIntArray_Get(nil_chk(xx), 32);
  jint c = JreURShift32(LibOrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(16, xx, 16, 9, xx32, z, 0), 23);
  c += JreURShift32(xx32, 9);
  c += LibOrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(16, xx, z);
  if (c > LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 || (c == LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 && LibOrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(16, z, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P))) {
    c += LibOrgBouncycastleMathRawNat_incWithInt_withIntArray_(16, z);
    c &= LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
  }
  *IOSIntArray_GetRef(nil_chk(z), 16) = c;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduce23WithIntArray_(IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint z16 = IOSIntArray_Get(nil_chk(z), 16);
  jint c = LibOrgBouncycastleMathRawNat_addWordToWithInt_withInt_withIntArray_(16, JreURShift32(z16, 9), z) + (z16 & LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16);
  if (c > LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 || (c == LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16 && LibOrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(16, z, LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P))) {
    c += LibOrgBouncycastleMathRawNat_incWithInt_withIntArray_(16, z);
    c &= LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
  }
  *IOSIntArray_GetRef(z, 16) = c;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  IOSIntArray *tt = LibOrgBouncycastleMathRawNat_createWithInt_(33);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implSquareWithIntArray_withIntArray_(x, tt);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  IOSIntArray *tt = LibOrgBouncycastleMathRawNat_createWithInt_(33);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implSquareWithIntArray_withIntArray_(x, tt);
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(tt, z);
  while (--n > 0) {
    LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implSquareWithIntArray_withIntArray_(z, tt);
    LibOrgBouncycastleMathEcCustomSecSecP521R1Field_reduceWithIntArray_withIntArray_(tt, z);
  }
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint c = LibOrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(16, x, y, z) + IOSIntArray_Get(nil_chk(x), 16) - IOSIntArray_Get(nil_chk(y), 16);
  if (c < 0) {
    c += LibOrgBouncycastleMathRawNat_decWithInt_withIntArray_(16, z);
    c &= LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
  }
  *IOSIntArray_GetRef(nil_chk(z), 16) = c;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  jint x16 = IOSIntArray_Get(nil_chk(x), 16);
  jint c = LibOrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(16, x, JreLShift32(x16, 23), z) | (JreLShift32(x16, 1));
  *IOSIntArray_GetRef(nil_chk(z), 16) = c & LibOrgBouncycastleMathEcCustomSecSecP521R1Field_P16;
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implMultiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  LibOrgBouncycastleMathRawNat512_mulWithIntArray_withIntArray_withIntArray_(x, y, zz);
  jint x16 = IOSIntArray_Get(nil_chk(x), 16);
  jint y16 = IOSIntArray_Get(nil_chk(y), 16);
  *IOSIntArray_GetRef(nil_chk(zz), 32) = LibOrgBouncycastleMathRawNat_mul31BothAddWithInt_withInt_withIntArray_withInt_withIntArray_withIntArray_withInt_(16, x16, y, y16, x, zz, 16) + (x16 * y16);
}

void LibOrgBouncycastleMathEcCustomSecSecP521R1Field_implSquareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *zz) {
  LibOrgBouncycastleMathEcCustomSecSecP521R1Field_initialize();
  LibOrgBouncycastleMathRawNat512_squareWithIntArray_withIntArray_(x, zz);
  jint x16 = IOSIntArray_Get(nil_chk(x), 16);
  *IOSIntArray_GetRef(nil_chk(zz), 32) = LibOrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(16, JreLShift32(x16, 1), x, 0, zz, 16) + (x16 * x16);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleMathEcCustomSecSecP521R1Field)
