//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ocsp/ResponderID.java
//

#ifndef ResponderID_H
#define ResponderID_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Choice.h"
#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1X500X500Name;

@interface LibOrgBouncycastleAsn1OcspResponderID : LibOrgBouncycastleAsn1ASN1Object < LibOrgBouncycastleAsn1ASN1Choice >

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)value;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X500X500Name:(LibOrgBouncycastleAsn1X500X500Name *)value;

+ (LibOrgBouncycastleAsn1OcspResponderID *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1OcspResponderID *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getKeyHash;

- (LibOrgBouncycastleAsn1X500X500Name *)getName;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1OcspResponderID)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1OcspResponderID *self, LibOrgBouncycastleAsn1ASN1OctetString *value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *new_LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *create_LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1ASN1OctetString *value);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleAsn1OcspResponderID *self, LibOrgBouncycastleAsn1X500X500Name *value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *new_LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleAsn1X500X500Name *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *create_LibOrgBouncycastleAsn1OcspResponderID_initWithLibOrgBouncycastleAsn1X500X500Name_(LibOrgBouncycastleAsn1X500X500Name *value);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *LibOrgBouncycastleAsn1OcspResponderID_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1OcspResponderID *LibOrgBouncycastleAsn1OcspResponderID_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1OcspResponderID)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ResponderID_H
