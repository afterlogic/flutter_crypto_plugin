//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/LiteralDataPacket.java
//

#include "Arrays.h"
#include "BCPGInputStream.h"
#include "IOSPrimitiveArray.h"
#include "InputStreamPacket.h"
#include "J2ObjC_source.h"
#include "LiteralDataPacket.h"
#include "Strings.h"
#include "java/io/IOException.h"

@implementation LibOrgBouncycastleBcpgLiteralDataPacket

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgLiteralDataPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (jint)getFormat {
  return format_;
}

- (jlong)getModificationTime {
  return modDate_ * 1000LL;
}

- (NSString *)getFileName {
  return LibOrgBouncycastleUtilStrings_fromUTF8ByteArrayWithByteArray_(fileName_);
}

- (IOSByteArray *)getRawFileName {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(fileName_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(getFormat);
  methods[2].selector = @selector(getModificationTime);
  methods[3].selector = @selector(getFileName);
  methods[4].selector = @selector(getRawFileName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "format_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fileName_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "modDate_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgLiteralDataPacket = { "LiteralDataPacket", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgLiteralDataPacket;
}

@end

void LibOrgBouncycastleBcpgLiteralDataPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgLiteralDataPacket *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgInputStreamPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  self->format_ = [((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(inArg)) read];
  jint l = [inArg read];
  self->fileName_ = [IOSByteArray newArrayWithLength:l];
  for (jint i = 0; i != self->fileName_->size_; i++) {
    jint ch = [inArg read];
    if (ch < 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"literal data truncated in header");
    }
    *IOSByteArray_GetRef(nil_chk(self->fileName_), i) = (jbyte) ch;
  }
  self->modDate_ = (JreLShift64((jlong) [inArg read], 24)) | (JreLShift32([inArg read], 16)) | (JreLShift32([inArg read], 8)) | [inArg read];
  if (self->modDate_ < 0) {
    @throw new_JavaIoIOException_initWithNSString_(@"literal data truncated in header");
  }
}

LibOrgBouncycastleBcpgLiteralDataPacket *new_LibOrgBouncycastleBcpgLiteralDataPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgLiteralDataPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleBcpgLiteralDataPacket *create_LibOrgBouncycastleBcpgLiteralDataPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgLiteralDataPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgLiteralDataPacket)
