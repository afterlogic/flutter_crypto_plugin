//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/KeyExchangeAlgorithm.java
//

#ifndef KeyExchangeAlgorithm_H
#define KeyExchangeAlgorithm_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm : NSObject
@property (readonly, class) jint NULL_ NS_SWIFT_NAME(NULL_);
@property (readonly, class) jint RSA NS_SWIFT_NAME(RSA);
@property (readonly, class) jint RSA_EXPORT NS_SWIFT_NAME(RSA_EXPORT);
@property (readonly, class) jint DHE_DSS NS_SWIFT_NAME(DHE_DSS);
@property (readonly, class) jint DHE_DSS_EXPORT NS_SWIFT_NAME(DHE_DSS_EXPORT);
@property (readonly, class) jint DHE_RSA NS_SWIFT_NAME(DHE_RSA);
@property (readonly, class) jint DHE_RSA_EXPORT NS_SWIFT_NAME(DHE_RSA_EXPORT);
@property (readonly, class) jint DH_DSS NS_SWIFT_NAME(DH_DSS);
@property (readonly, class) jint DH_DSS_EXPORT NS_SWIFT_NAME(DH_DSS_EXPORT);
@property (readonly, class) jint DH_RSA NS_SWIFT_NAME(DH_RSA);
@property (readonly, class) jint DH_RSA_EXPORT NS_SWIFT_NAME(DH_RSA_EXPORT);
@property (readonly, class) jint DH_anon NS_SWIFT_NAME(DH_anon);
@property (readonly, class) jint DH_anon_EXPORT NS_SWIFT_NAME(DH_anon_EXPORT);
@property (readonly, class) jint PSK NS_SWIFT_NAME(PSK);
@property (readonly, class) jint DHE_PSK NS_SWIFT_NAME(DHE_PSK);
@property (readonly, class) jint RSA_PSK NS_SWIFT_NAME(RSA_PSK);
@property (readonly, class) jint ECDH_ECDSA NS_SWIFT_NAME(ECDH_ECDSA);
@property (readonly, class) jint ECDHE_ECDSA NS_SWIFT_NAME(ECDHE_ECDSA);
@property (readonly, class) jint ECDH_RSA NS_SWIFT_NAME(ECDH_RSA);
@property (readonly, class) jint ECDHE_RSA NS_SWIFT_NAME(ECDHE_RSA);
@property (readonly, class) jint ECDH_anon NS_SWIFT_NAME(ECDH_anon);
@property (readonly, class) jint SRP NS_SWIFT_NAME(SRP);
@property (readonly, class) jint SRP_DSS NS_SWIFT_NAME(SRP_DSS);
@property (readonly, class) jint SRP_RSA NS_SWIFT_NAME(SRP_RSA);
@property (readonly, class) jint ECDHE_PSK NS_SWIFT_NAME(ECDHE_PSK);

+ (jint)NULL_;

+ (jint)RSA;

+ (jint)RSA_EXPORT;

+ (jint)DHE_DSS;

+ (jint)DHE_DSS_EXPORT;

+ (jint)DHE_RSA;

+ (jint)DHE_RSA_EXPORT;

+ (jint)DH_DSS;

+ (jint)DH_DSS_EXPORT;

+ (jint)DH_RSA;

+ (jint)DH_RSA_EXPORT;

+ (jint)DH_anon;

+ (jint)DH_anon_EXPORT;

+ (jint)PSK;

+ (jint)DHE_PSK;

+ (jint)RSA_PSK;

+ (jint)ECDH_ECDSA;

+ (jint)ECDHE_ECDSA;

+ (jint)ECDH_RSA;

+ (jint)ECDHE_RSA;

+ (jint)ECDH_anon;

+ (jint)SRP;

+ (jint)SRP_DSS;

+ (jint)SRP_RSA;

+ (jint)ECDHE_PSK;

#pragma mark Public

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_NULL(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_NULL 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, NULL, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_RSA 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_RSA_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_RSA_EXPORT 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, RSA_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DHE_DSS(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DHE_DSS 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DHE_DSS, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DHE_DSS_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DHE_DSS_EXPORT 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DHE_DSS_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DHE_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DHE_RSA 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DHE_RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DHE_RSA_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DHE_RSA_EXPORT 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DHE_RSA_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_DSS(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_DSS 7
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_DSS, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_DSS_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_DSS_EXPORT 8
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_DSS_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_RSA 9
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_RSA_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_RSA_EXPORT 10
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_RSA_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_anon(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_anon 11
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_anon, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DH_anon_EXPORT(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DH_anon_EXPORT 12
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DH_anon_EXPORT, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_PSK(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_PSK 13
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, PSK, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_DHE_PSK(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_DHE_PSK 14
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, DHE_PSK, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_RSA_PSK(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_RSA_PSK 15
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, RSA_PSK, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDH_ECDSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDH_ECDSA 16
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDH_ECDSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDHE_ECDSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDHE_ECDSA 17
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDHE_ECDSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDH_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDH_RSA 18
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDH_RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDHE_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDHE_RSA 19
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDHE_RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDH_anon(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDH_anon 20
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDH_anon, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_SRP(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_SRP 21
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, SRP, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_SRP_DSS(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_SRP_DSS 22
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, SRP_DSS, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_SRP_RSA(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_SRP_RSA 23
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, SRP_RSA, jint)

inline jint LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_get_ECDHE_PSK(void);
#define LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_ECDHE_PSK 24
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm, ECDHE_PSK, jint)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_init(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm *new_LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm *create_LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoTlsKeyExchangeAlgorithm)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyExchangeAlgorithm_H
