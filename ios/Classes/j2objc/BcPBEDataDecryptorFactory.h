//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/openpgp/operator/bc/BcPBEDataDecryptorFactory.java
//

#ifndef BcPBEDataDecryptorFactory_H
#define BcPBEDataDecryptorFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "PBEDataDecryptorFactory.h"

@class IOSByteArray;
@class IOSCharArray;
@class LibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor;
@protocol LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider;

@interface LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory : LibOrgBouncycastleOpenpgpOperatorPBEDataDecryptorFactory

#pragma mark Public

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)pass
withLibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider:(LibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider *)calculatorProvider;

- (id<LibOrgBouncycastleOpenpgpOperatorPGPDataDecryptor>)createDataDecryptorWithBoolean:(jboolean)withIntegrityPacket
                                                                                withInt:(jint)encAlgorithm
                                                                          withByteArray:(IOSByteArray *)key;

- (IOSByteArray *)recoverSessionDataWithInt:(jint)keyAlgorithm
                              withByteArray:(IOSByteArray *)key
                              withByteArray:(IOSByteArray *)secKeyData;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)arg0
withLibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider:(id<LibOrgBouncycastleOpenpgpOperatorPGPDigestCalculatorProvider>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory)

FOUNDATION_EXPORT void LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider_(LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory *self, IOSCharArray *pass, LibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider *calculatorProvider);

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory *new_LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider_(IOSCharArray *pass, LibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider *calculatorProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory *create_LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory_initWithCharArray_withLibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider_(IOSCharArray *pass, LibOrgBouncycastleOpenpgpOperatorBcBcPGPDigestCalculatorProvider *calculatorProvider);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleOpenpgpOperatorBcBcPBEDataDecryptorFactory)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // BcPBEDataDecryptorFactory_H
