//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/dh/JcaJceDhDHUtil.java
//

#ifndef JcaJceDhDHUtil_H
#define JcaJceDhDHUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleCryptoParamsDHParameters;

@interface LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (NSString *)privateKeyToStringWithNSString:(NSString *)algorithm
                      withJavaMathBigInteger:(JavaMathBigInteger *)x
withLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)dhParams;

+ (NSString *)publicKeyToStringWithNSString:(NSString *)algorithm
                     withJavaMathBigInteger:(JavaMathBigInteger *)y
withLibOrgBouncycastleCryptoParamsDHParameters:(LibOrgBouncycastleCryptoParamsDHParameters *)dhParams;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil_init(LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil *new_LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil *create_LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil_init(void);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(NSString *algorithm, JavaMathBigInteger *x, LibOrgBouncycastleCryptoParamsDHParameters *dhParams);

FOUNDATION_EXPORT NSString *LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil_publicKeyToStringWithNSString_withJavaMathBigInteger_withLibOrgBouncycastleCryptoParamsDHParameters_(NSString *algorithm, JavaMathBigInteger *y, LibOrgBouncycastleCryptoParamsDHParameters *dhParams);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderAsymmetricDhJcaJceDhDHUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JcaJceDhDHUtil_H
