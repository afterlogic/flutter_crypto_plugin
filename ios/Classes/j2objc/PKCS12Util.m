//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/PKCS12Util.java
//

#include "ASN1Encodable.h"
#include "ASN1InputStream.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "AlgorithmIdentifier.h"
#include "ContentInfo.h"
#include "DERNull.h"
#include "DEROctetString.h"
#include "DEROutputStream.h"
#include "DigestInfo.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MacData.h"
#include "PKCS12Util.h"
#include "Pfx.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "javax/crypto/Mac.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/SecretKeyFactory.h"
#include "javax/crypto/spec/PBEKeySpec.h"
#include "javax/crypto/spec/PBEParameterSpec.h"

@interface LibOrgBouncycastleJcePKCS12Util ()

+ (IOSByteArray *)calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                  withByteArray:(IOSByteArray *)salt
                                                                        withInt:(jint)itCount
                                                                  withCharArray:(IOSCharArray *)password
                                                                  withByteArray:(IOSByteArray *)data
                                                                   withNSString:(NSString *)provider;

@end

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleJcePKCS12Util_calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_withInt_withCharArray_withByteArray_withNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, IOSByteArray *salt, jint itCount, IOSCharArray *password, IOSByteArray *data, NSString *provider);

@implementation LibOrgBouncycastleJcePKCS12Util

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcePKCS12Util_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSByteArray *)convertToDefiniteLengthWithByteArray:(IOSByteArray *)berPKCS12File {
  return LibOrgBouncycastleJcePKCS12Util_convertToDefiniteLengthWithByteArray_(berPKCS12File);
}

+ (IOSByteArray *)convertToDefiniteLengthWithByteArray:(IOSByteArray *)berPKCS12File
                                         withCharArray:(IOSCharArray *)passwd
                                          withNSString:(NSString *)provider {
  return LibOrgBouncycastleJcePKCS12Util_convertToDefiniteLengthWithByteArray_withCharArray_withNSString_(berPKCS12File, passwd, provider);
}

+ (IOSByteArray *)calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                  withByteArray:(IOSByteArray *)salt
                                                                        withInt:(jint)itCount
                                                                  withCharArray:(IOSCharArray *)password
                                                                  withByteArray:(IOSByteArray *)data
                                                                   withNSString:(NSString *)provider {
  return LibOrgBouncycastleJcePKCS12Util_calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_withInt_withCharArray_withByteArray_withNSString_(oid, salt, itCount, password, data, provider);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "[B", 0xa, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertToDefiniteLengthWithByteArray:);
  methods[2].selector = @selector(convertToDefiniteLengthWithByteArray:withCharArray:withNSString:);
  methods[3].selector = @selector(calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:withByteArray:withInt:withCharArray:withByteArray:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToDefiniteLength", "[B", "LJavaIoIOException;", "[B[CLNSString;", "calculatePbeMac", "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;[BI[C[BLNSString;", "LJavaLangException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcePKCS12Util = { "PKCS12Util", "lib.org.bouncycastle.jce", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcePKCS12Util;
}

@end

void LibOrgBouncycastleJcePKCS12Util_init(LibOrgBouncycastleJcePKCS12Util *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcePKCS12Util *new_LibOrgBouncycastleJcePKCS12Util_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcePKCS12Util, init)
}

LibOrgBouncycastleJcePKCS12Util *create_LibOrgBouncycastleJcePKCS12Util_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcePKCS12Util, init)
}

IOSByteArray *LibOrgBouncycastleJcePKCS12Util_convertToDefiniteLengthWithByteArray_(IOSByteArray *berPKCS12File) {
  LibOrgBouncycastleJcePKCS12Util_initialize();
  JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
  LibOrgBouncycastleAsn1DEROutputStream *dOut = new_LibOrgBouncycastleAsn1DEROutputStream_initWithJavaIoOutputStream_(bOut);
  LibOrgBouncycastleAsn1PkcsPfx *pfx = LibOrgBouncycastleAsn1PkcsPfx_getInstanceWithId_(berPKCS12File);
  [bOut reset];
  [dOut writeObjectWithLibOrgBouncycastleAsn1ASN1Encodable:pfx];
  return [bOut toByteArray];
}

IOSByteArray *LibOrgBouncycastleJcePKCS12Util_convertToDefiniteLengthWithByteArray_withCharArray_withNSString_(IOSByteArray *berPKCS12File, IOSCharArray *passwd, NSString *provider) {
  LibOrgBouncycastleJcePKCS12Util_initialize();
  LibOrgBouncycastleAsn1PkcsPfx *pfx = LibOrgBouncycastleAsn1PkcsPfx_getInstanceWithId_(berPKCS12File);
  LibOrgBouncycastleAsn1PkcsContentInfo *info = [((LibOrgBouncycastleAsn1PkcsPfx *) nil_chk(pfx)) getAuthSafe];
  LibOrgBouncycastleAsn1ASN1OctetString *content = LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((LibOrgBouncycastleAsn1PkcsContentInfo *) nil_chk(info)) getContent]);
  JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
  LibOrgBouncycastleAsn1DEROutputStream *dOut = new_LibOrgBouncycastleAsn1DEROutputStream_initWithJavaIoOutputStream_(bOut);
  LibOrgBouncycastleAsn1ASN1InputStream *contentIn = new_LibOrgBouncycastleAsn1ASN1InputStream_initWithByteArray_([((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(content)) getOctets]);
  LibOrgBouncycastleAsn1ASN1Primitive *obj = [contentIn readObject];
  [dOut writeObjectWithLibOrgBouncycastleAsn1ASN1Encodable:obj];
  info = new_LibOrgBouncycastleAsn1PkcsContentInfo_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_([info getContentType], new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_([bOut toByteArray]));
  LibOrgBouncycastleAsn1PkcsMacData *mData = [pfx getMacData];
  @try {
    jint itCount = [((JavaMathBigInteger *) nil_chk([((LibOrgBouncycastleAsn1PkcsMacData *) nil_chk(mData)) getIterationCount])) intValue];
    IOSByteArray *data = [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(LibOrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([info getContent]))) getOctets];
    IOSByteArray *res = LibOrgBouncycastleJcePKCS12Util_calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_withInt_withCharArray_withByteArray_withNSString_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509DigestInfo *) nil_chk([mData getMac])) getAlgorithmId])) getAlgorithm], [mData getSalt], itCount, passwd, data, provider);
    LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId = new_LibOrgBouncycastleAsn1X509AlgorithmIdentifier_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_([((LibOrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((LibOrgBouncycastleAsn1X509DigestInfo *) nil_chk([mData getMac])) getAlgorithmId])) getAlgorithm], JreLoadStatic(LibOrgBouncycastleAsn1DERNull, INSTANCE));
    LibOrgBouncycastleAsn1X509DigestInfo *dInfo = new_LibOrgBouncycastleAsn1X509DigestInfo_initWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(algId, res);
    mData = new_LibOrgBouncycastleAsn1PkcsMacData_initWithLibOrgBouncycastleAsn1X509DigestInfo_withByteArray_withInt_(dInfo, [mData getSalt], itCount);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", @"error constructing MAC: ", [e description]));
  }
  pfx = new_LibOrgBouncycastleAsn1PkcsPfx_initWithLibOrgBouncycastleAsn1PkcsContentInfo_withLibOrgBouncycastleAsn1PkcsMacData_(info, mData);
  [bOut reset];
  [dOut writeObjectWithLibOrgBouncycastleAsn1ASN1Encodable:pfx];
  return [bOut toByteArray];
}

IOSByteArray *LibOrgBouncycastleJcePKCS12Util_calculatePbeMacWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_withInt_withCharArray_withByteArray_withNSString_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *oid, IOSByteArray *salt, jint itCount, IOSCharArray *password, IOSByteArray *data, NSString *provider) {
  LibOrgBouncycastleJcePKCS12Util_initialize();
  JavaxCryptoSecretKeyFactory *keyFact = JavaxCryptoSecretKeyFactory_getInstanceWithNSString_withNSString_([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], provider);
  JavaxCryptoSpecPBEParameterSpec *defParams = new_JavaxCryptoSpecPBEParameterSpec_initWithByteArray_withInt_(salt, itCount);
  JavaxCryptoSpecPBEKeySpec *pbeSpec = new_JavaxCryptoSpecPBEKeySpec_initWithCharArray_(password);
  id<JavaxCryptoSecretKey> key = [((JavaxCryptoSecretKeyFactory *) nil_chk(keyFact)) generateSecretWithJavaSecuritySpecKeySpec:pbeSpec];
  JavaxCryptoMac *mac = JavaxCryptoMac_getInstanceWithNSString_withNSString_([oid getId], provider);
  [((JavaxCryptoMac *) nil_chk(mac)) init__WithJavaSecurityKey:key withJavaSecuritySpecAlgorithmParameterSpec:defParams];
  [mac updateWithByteArray:data];
  return [mac doFinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcePKCS12Util)
