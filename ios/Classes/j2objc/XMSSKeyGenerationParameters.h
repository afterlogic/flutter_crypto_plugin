//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/xmss/XMSSKeyGenerationParameters.java
//

#ifndef XMSSKeyGenerationParameters_H
#define XMSSKeyGenerationParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@class LibOrgBouncycastlePqcCryptoXmssXMSSParameters;

@interface LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters : LibOrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters:(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)xmssParameters
                                                   withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng;

- (LibOrgBouncycastlePqcCryptoXmssXMSSParameters *)getParameters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                                   withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters *self, LibOrgBouncycastlePqcCryptoXmssXMSSParameters *xmssParameters, JavaSecuritySecureRandom *prng);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters *new_LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *xmssParameters, JavaSecuritySecureRandom *prng) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters *create_LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters_initWithLibOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(LibOrgBouncycastlePqcCryptoXmssXMSSParameters *xmssParameters, JavaSecuritySecureRandom *prng);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoXmssXMSSKeyGenerationParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // XMSSKeyGenerationParameters_H
