//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/ExchangePair.java
//

#ifndef ExchangePair_H
#define ExchangePair_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;

@interface LibOrgBouncycastlePqcCryptoExchangePair : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                                                                         withByteArray:(IOSByteArray *)shared;

- (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKey;

- (IOSByteArray *)getSharedValue;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoExchangePair)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoExchangePair_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(LibOrgBouncycastlePqcCryptoExchangePair *self, LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoExchangePair *new_LibOrgBouncycastlePqcCryptoExchangePair_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoExchangePair *create_LibOrgBouncycastlePqcCryptoExchangePair_initWithLibOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoExchangePair)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExchangePair_H
