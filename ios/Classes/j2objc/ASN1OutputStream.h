//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ASN1OutputStream.java
//

#ifndef ASN1OutputStream_H
#define ASN1OutputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaIoOutputStream;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastleAsn1ASN1OutputStream : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (void)close;

- (void)flush;

- (void)writeObjectWithLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)obj;

#pragma mark Protected

- (void)writeNull;

#pragma mark Package-Private

- (LibOrgBouncycastleAsn1ASN1OutputStream *)getDERSubStream;

- (LibOrgBouncycastleAsn1ASN1OutputStream *)getDLSubStream;

- (void)writeWithByteArray:(IOSByteArray *)bytes;

- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)b;

- (void)writeEncodedWithInt:(jint)tag
              withByteArray:(IOSByteArray *)bytes;

- (void)writeEncodedWithInt:(jint)flags
                    withInt:(jint)tagNo
              withByteArray:(IOSByteArray *)bytes;

- (void)writeImplicitObjectWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)obj;

- (void)writeLengthWithInt:(jint)length;

- (void)writeTagWithInt:(jint)flags
                withInt:(jint)tagNo;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1ASN1OutputStream)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(LibOrgBouncycastleAsn1ASN1OutputStream *self, JavaIoOutputStream *os);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1OutputStream *new_LibOrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1OutputStream *create_LibOrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1ASN1OutputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ASN1OutputStream_H
