//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/AbstractTlsCipherFactory.java
//

#include "AbstractTlsCipherFactory.h"
#include "AlertDescription.h"
#include "J2ObjC_source.h"
#include "TlsCipher.h"
#include "TlsContext.h"
#include "TlsFatalAlert.h"

@implementation LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoTlsTlsCipher>)createCipherWithLibOrgBouncycastleCryptoTlsTlsContext:(id<LibOrgBouncycastleCryptoTlsTlsContext>)context
                                                                                          withInt:(jint)encryptionAlgorithm
                                                                                          withInt:(jint)macAlgorithm {
  @throw new_LibOrgBouncycastleCryptoTlsTlsFatalAlert_initWithShort_(LibOrgBouncycastleCryptoTlsAlertDescription_internal_error);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoTlsTlsCipher;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createCipherWithLibOrgBouncycastleCryptoTlsTlsContext:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createCipher", "LLibOrgBouncycastleCryptoTlsTlsContext;II", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory = { "AbstractTlsCipherFactory", "lib.org.bouncycastle.crypto.tls", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory;
}

@end

void LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *new_LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory, init)
}

LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory *create_LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsAbstractTlsCipherFactory)
