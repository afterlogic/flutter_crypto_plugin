//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DERT61String.java
//

#ifndef DERT61String_H
#define DERT61String_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Primitive.h"
#include "ASN1String.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1OutputStream;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;

@interface LibOrgBouncycastleAsn1DERT61String : LibOrgBouncycastleAsn1ASN1Primitive < LibOrgBouncycastleAsn1ASN1String >

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)string;

- (instancetype __nonnull)initWithNSString:(NSString *)string;

+ (LibOrgBouncycastleAsn1DERT61String *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                  withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1DERT61String *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getOctets;

- (NSString *)getString;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (jboolean)asn1EqualsWithLibOrgBouncycastleAsn1ASN1Primitive:(LibOrgBouncycastleAsn1ASN1Primitive *)o;

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

- (jboolean)isConstructed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1DERT61String)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *LibOrgBouncycastleAsn1DERT61String_getInstanceWithId_(id obj);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *LibOrgBouncycastleAsn1DERT61String_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERT61String_initWithByteArray_(LibOrgBouncycastleAsn1DERT61String *self, IOSByteArray *string);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *new_LibOrgBouncycastleAsn1DERT61String_initWithByteArray_(IOSByteArray *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *create_LibOrgBouncycastleAsn1DERT61String_initWithByteArray_(IOSByteArray *string);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERT61String_initWithNSString_(LibOrgBouncycastleAsn1DERT61String *self, NSString *string);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *new_LibOrgBouncycastleAsn1DERT61String_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERT61String *create_LibOrgBouncycastleAsn1DERT61String_initWithNSString_(NSString *string);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1DERT61String)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DERT61String_H
