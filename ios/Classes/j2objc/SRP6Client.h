//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/agreement/srp/SRP6Client.java
//

#ifndef SRP6Client_H
#define SRP6Client_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;
@class LibOrgBouncycastleCryptoParamsSRP6GroupParameters;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoAgreementSrpSRP6Client : NSObject {
 @public
  JavaMathBigInteger *N_;
  JavaMathBigInteger *g_;
  JavaMathBigInteger *a_;
  JavaMathBigInteger *A_;
  JavaMathBigInteger *B_;
  JavaMathBigInteger *x_;
  JavaMathBigInteger *u_;
  JavaMathBigInteger *S_;
  JavaMathBigInteger *M1_;
  JavaMathBigInteger *M2_;
  JavaMathBigInteger *Key_;
  id<LibOrgBouncycastleCryptoDigest> digest_;
  JavaSecuritySecureRandom *random_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaMathBigInteger *)calculateClientEvidenceMessage;

- (JavaMathBigInteger *)calculateSecretWithJavaMathBigInteger:(JavaMathBigInteger *)serverB;

- (JavaMathBigInteger *)calculateSessionKey;

- (JavaMathBigInteger *)generateClientCredentialsWithByteArray:(IOSByteArray *)salt
                                                 withByteArray:(IOSByteArray *)identity
                                                 withByteArray:(IOSByteArray *)password;

- (void)init__WithJavaMathBigInteger:(JavaMathBigInteger *)N
              withJavaMathBigInteger:(JavaMathBigInteger *)g
  withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)init__WithLibOrgBouncycastleCryptoParamsSRP6GroupParameters:(LibOrgBouncycastleCryptoParamsSRP6GroupParameters *)group
                                 withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest
                                       withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (jboolean)verifyServerEvidenceMessageWithJavaMathBigInteger:(JavaMathBigInteger *)serverM2;

#pragma mark Protected

- (JavaMathBigInteger *)selectPrivateValue;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoAgreementSrpSRP6Client)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, N_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, g_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, a_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, A_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, B_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, x_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, u_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, S_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, M1_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, M2_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, Key_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, digest_, id<LibOrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client, random_, JavaSecuritySecureRandom *)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoAgreementSrpSRP6Client_init(LibOrgBouncycastleCryptoAgreementSrpSRP6Client *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementSrpSRP6Client *new_LibOrgBouncycastleCryptoAgreementSrpSRP6Client_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoAgreementSrpSRP6Client *create_LibOrgBouncycastleCryptoAgreementSrpSRP6Client_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoAgreementSrpSRP6Client)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SRP6Client_H
