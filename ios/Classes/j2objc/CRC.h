//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/apache/bzip2/CRC.java
//

#ifndef CRC_H
#define CRC_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSIntArray;

@interface LibOrgBouncycastleApacheBzip2CRC : NSObject {
 @public
  jint globalCrc_;
}
@property (class) IOSIntArray *crc32Table NS_SWIFT_NAME(crc32Table);

+ (IOSIntArray *)crc32Table;

+ (void)setCrc32Table:(IOSIntArray *)value;

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Package-Private

- (jint)getFinalCRC;

- (jint)getGlobalCRC;

- (void)initialiseCRC OBJC_METHOD_FAMILY_NONE;

- (void)setGlobalCRCWithInt:(jint)newCrc;

- (void)updateCRCWithInt:(jint)inCh;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleApacheBzip2CRC)

inline IOSIntArray *LibOrgBouncycastleApacheBzip2CRC_get_crc32Table(void);
inline IOSIntArray *LibOrgBouncycastleApacheBzip2CRC_set_crc32Table(IOSIntArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *LibOrgBouncycastleApacheBzip2CRC_crc32Table;
J2OBJC_STATIC_FIELD_OBJ(LibOrgBouncycastleApacheBzip2CRC, crc32Table, IOSIntArray *)

FOUNDATION_EXPORT void LibOrgBouncycastleApacheBzip2CRC_init(LibOrgBouncycastleApacheBzip2CRC *self);

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CRC *new_LibOrgBouncycastleApacheBzip2CRC_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleApacheBzip2CRC *create_LibOrgBouncycastleApacheBzip2CRC_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleApacheBzip2CRC)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CRC_H
