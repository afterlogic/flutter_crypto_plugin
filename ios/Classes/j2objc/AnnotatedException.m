//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/AnnotatedException.java
//

#include "AnnotatedException.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"

@interface LibOrgBouncycastleJceProviderAnnotatedException () {
 @public
  JavaLangThrowable *_underlyingException_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderAnnotatedException, _underlyingException_, JavaLangThrowable *)

@implementation LibOrgBouncycastleJceProviderAnnotatedException

- (instancetype)initWithNSString:(NSString *)string
           withJavaLangThrowable:(JavaLangThrowable *)e {
  LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_withJavaLangThrowable_(self, string, e);
  return self;
}

- (instancetype)initWithNSString:(NSString *)string {
  LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_(self, string);
  return self;
}

- (JavaLangThrowable *)getUnderlyingException {
  return _underlyingException_;
}

- (JavaLangThrowable *)getCause {
  return _underlyingException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(getUnderlyingException);
  methods[3].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_underlyingException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LNSString;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJceProviderAnnotatedException = { "AnnotatedException", "lib.org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJceProviderAnnotatedException;
}

@end

void LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleJceProviderAnnotatedException *self, NSString *string, JavaLangThrowable *e) {
  JavaLangException_initWithNSString_(self, string);
  self->_underlyingException_ = e;
}

LibOrgBouncycastleJceProviderAnnotatedException *new_LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_withJavaLangThrowable_(NSString *string, JavaLangThrowable *e) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderAnnotatedException, initWithNSString_withJavaLangThrowable_, string, e)
}

LibOrgBouncycastleJceProviderAnnotatedException *create_LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_withJavaLangThrowable_(NSString *string, JavaLangThrowable *e) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderAnnotatedException, initWithNSString_withJavaLangThrowable_, string, e)
}

void LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_(LibOrgBouncycastleJceProviderAnnotatedException *self, NSString *string) {
  LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_withJavaLangThrowable_(self, string, nil);
}

LibOrgBouncycastleJceProviderAnnotatedException *new_LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_(NSString *string) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJceProviderAnnotatedException, initWithNSString_, string)
}

LibOrgBouncycastleJceProviderAnnotatedException *create_LibOrgBouncycastleJceProviderAnnotatedException_initWithNSString_(NSString *string) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJceProviderAnnotatedException, initWithNSString_, string)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJceProviderAnnotatedException)
