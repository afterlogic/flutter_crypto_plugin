//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/gpg/keybox/CertificateBlob.java
//

#ifndef CertificateBlob_H
#define CertificateBlob_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "KeyBlob.h"

@class IOSByteArray;
@class LibOrgBouncycastleGpgKeyboxBlob;
@class LibOrgBouncycastleGpgKeyboxBlobType;
@class LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer;
@protocol LibOrgBouncycastleGpgKeyboxBlobVerifier;

@interface LibOrgBouncycastleGpgKeyboxCertificateBlob : LibOrgBouncycastleGpgKeyboxKeyBlob

#pragma mark Public

- (IOSByteArray *)getEncodedCertificate;

#pragma mark Package-Private

+ (LibOrgBouncycastleGpgKeyboxBlob *)parseContentWithInt:(jint)base
                                                withLong:(jlong)length
                 withLibOrgBouncycastleGpgKeyboxBlobType:(LibOrgBouncycastleGpgKeyboxBlobType *)type
                                                 withInt:(jint)version_
         withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer:(LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *)buffer
             withLibOrgBouncycastleGpgKeyboxBlobVerifier:(id<LibOrgBouncycastleGpgKeyboxBlobVerifier>)blobVerifier;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleGpgKeyboxCertificateBlob)

FOUNDATION_EXPORT LibOrgBouncycastleGpgKeyboxBlob *LibOrgBouncycastleGpgKeyboxCertificateBlob_parseContentWithInt_withLong_withLibOrgBouncycastleGpgKeyboxBlobType_withInt_withLibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer_withLibOrgBouncycastleGpgKeyboxBlobVerifier_(jint base, jlong length, LibOrgBouncycastleGpgKeyboxBlobType *type, jint version_, LibOrgBouncycastleGpgKeyboxKeyBoxByteBuffer *buffer, id<LibOrgBouncycastleGpgKeyboxBlobVerifier> blobVerifier);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleGpgKeyboxCertificateBlob)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CertificateBlob_H
