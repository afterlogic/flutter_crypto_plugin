//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/PrincipalUtil.java
//

#include "ASN1Primitive.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PrincipalUtil.h"
#include "TBSCertList.h"
#include "TBSCertificateStructure.h"
#include "X500Name.h"
#include "X509Name.h"
#include "X509Principal.h"
#include "java/io/IOException.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/X509CRL.h"
#include "java/security/cert/X509Certificate.h"

@implementation LibOrgBouncycastleJcePrincipalUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcePrincipalUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleJceX509Principal *)getIssuerX509PrincipalWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  return LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(cert);
}

+ (LibOrgBouncycastleJceX509Principal *)getSubjectX509PrincipalWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  return LibOrgBouncycastleJcePrincipalUtil_getSubjectX509PrincipalWithJavaSecurityCertX509Certificate_(cert);
}

+ (LibOrgBouncycastleJceX509Principal *)getIssuerX509PrincipalWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)crl {
  return LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509CRL_(crl);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceX509Principal;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceX509Principal;", 0x9, 3, 1, 2, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleJceX509Principal;", 0x9, 0, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getIssuerX509PrincipalWithJavaSecurityCertX509Certificate:);
  methods[2].selector = @selector(getSubjectX509PrincipalWithJavaSecurityCertX509Certificate:);
  methods[3].selector = @selector(getIssuerX509PrincipalWithJavaSecurityCertX509CRL:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getIssuerX509Principal", "LJavaSecurityCertX509Certificate;", "LJavaSecurityCertCertificateEncodingException;", "getSubjectX509Principal", "LJavaSecurityCertX509CRL;", "LJavaSecurityCertCRLException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcePrincipalUtil = { "PrincipalUtil", "lib.org.bouncycastle.jce", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcePrincipalUtil;
}

@end

void LibOrgBouncycastleJcePrincipalUtil_init(LibOrgBouncycastleJcePrincipalUtil *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcePrincipalUtil *new_LibOrgBouncycastleJcePrincipalUtil_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcePrincipalUtil, init)
}

LibOrgBouncycastleJcePrincipalUtil *create_LibOrgBouncycastleJcePrincipalUtil_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcePrincipalUtil, init)
}

LibOrgBouncycastleJceX509Principal *LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  LibOrgBouncycastleJcePrincipalUtil_initialize();
  @try {
    LibOrgBouncycastleAsn1X509TBSCertificateStructure *tbsCert = LibOrgBouncycastleAsn1X509TBSCertificateStructure_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((JavaSecurityCertX509Certificate *) nil_chk(cert)) getTBSCertificate]));
    return new_LibOrgBouncycastleJceX509Principal_initWithLibOrgBouncycastleAsn1X509X509Name_(LibOrgBouncycastleAsn1X509X509Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert)) getIssuer]));
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaSecurityCertCertificateEncodingException_initWithNSString_([e description]);
  }
}

LibOrgBouncycastleJceX509Principal *LibOrgBouncycastleJcePrincipalUtil_getSubjectX509PrincipalWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  LibOrgBouncycastleJcePrincipalUtil_initialize();
  @try {
    LibOrgBouncycastleAsn1X509TBSCertificateStructure *tbsCert = LibOrgBouncycastleAsn1X509TBSCertificateStructure_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((JavaSecurityCertX509Certificate *) nil_chk(cert)) getTBSCertificate]));
    return new_LibOrgBouncycastleJceX509Principal_initWithLibOrgBouncycastleAsn1X509X509Name_(LibOrgBouncycastleAsn1X509X509Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert)) getSubject]));
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaSecurityCertCertificateEncodingException_initWithNSString_([e description]);
  }
}

LibOrgBouncycastleJceX509Principal *LibOrgBouncycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509CRL_(JavaSecurityCertX509CRL *crl) {
  LibOrgBouncycastleJcePrincipalUtil_initialize();
  @try {
    LibOrgBouncycastleAsn1X509TBSCertList *tbsCertList = LibOrgBouncycastleAsn1X509TBSCertList_getInstanceWithId_(LibOrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((JavaSecurityCertX509CRL *) nil_chk(crl)) getTBSCertList]));
    return new_LibOrgBouncycastleJceX509Principal_initWithLibOrgBouncycastleAsn1X509X509Name_(LibOrgBouncycastleAsn1X509X509Name_getInstanceWithId_([((LibOrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList)) getIssuer]));
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaSecurityCertCRLException_initWithNSString_([e description]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcePrincipalUtil)
