//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/modes/GOST3413CipherUtil.java
//

#ifndef GOST3413CipherUtil_H
#define GOST3413CipherUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;

@interface LibOrgBouncycastleCryptoModesGOST3413CipherUtil : NSObject

#pragma mark Public

+ (IOSByteArray *)copyFromInputWithByteArray:(IOSByteArray *)input
                                     withInt:(jint)size
                                     withInt:(jint)offset OBJC_METHOD_FAMILY_NONE;

+ (IOSByteArray *)LSBWithByteArray:(IOSByteArray *)from
                           withInt:(jint)size;

+ (IOSByteArray *)MSBWithByteArray:(IOSByteArray *)from
                           withInt:(jint)size;

+ (IOSByteArray *)sumWithByteArray:(IOSByteArray *)inArg
                     withByteArray:(IOSByteArray *)gamma;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoModesGOST3413CipherUtil)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoModesGOST3413CipherUtil_init(LibOrgBouncycastleCryptoModesGOST3413CipherUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoModesGOST3413CipherUtil *new_LibOrgBouncycastleCryptoModesGOST3413CipherUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoModesGOST3413CipherUtil *create_LibOrgBouncycastleCryptoModesGOST3413CipherUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGOST3413CipherUtil_MSBWithByteArray_withInt_(IOSByteArray *from, jint size);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGOST3413CipherUtil_LSBWithByteArray_withInt_(IOSByteArray *from, jint size);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGOST3413CipherUtil_sumWithByteArray_withByteArray_(IOSByteArray *inArg, IOSByteArray *gamma);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastleCryptoModesGOST3413CipherUtil_copyFromInputWithByteArray_withInt_withInt_(IOSByteArray *input, jint size, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoModesGOST3413CipherUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GOST3413CipherUtil_H
