//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/engines/NaccacheSternEngine.java
//

#ifndef NaccacheSternEngine_H
#define NaccacheSternEngine_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AsymmetricBlockCipher.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastleCryptoEnginesNaccacheSternEngine : NSObject < LibOrgBouncycastleCryptoAsymmetricBlockCipher >

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)addCryptedBlocksWithByteArray:(IOSByteArray *)block1
                                  withByteArray:(IOSByteArray *)block2;

- (IOSByteArray *)encryptWithJavaMathBigInteger:(JavaMathBigInteger *)plain;

- (jint)getInputBlockSize;

- (jint)getOutputBlockSize;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)len;

- (IOSByteArray *)processDataWithByteArray:(IOSByteArray *)data;

- (void)setDebugWithBoolean:(jboolean)debug;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleCryptoEnginesNaccacheSternEngine)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoEnginesNaccacheSternEngine_init(LibOrgBouncycastleCryptoEnginesNaccacheSternEngine *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesNaccacheSternEngine *new_LibOrgBouncycastleCryptoEnginesNaccacheSternEngine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoEnginesNaccacheSternEngine *create_LibOrgBouncycastleCryptoEnginesNaccacheSternEngine_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoEnginesNaccacheSternEngine)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NaccacheSternEngine_H
