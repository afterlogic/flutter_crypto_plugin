//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmp/PKIStatus.java
//

#ifndef PKIStatus_H
#define PKIStatus_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CmpPKIStatus : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) jint GRANTED NS_SWIFT_NAME(GRANTED);
@property (readonly, class) jint GRANTED_WITH_MODS NS_SWIFT_NAME(GRANTED_WITH_MODS);
@property (readonly, class) jint REJECTION NS_SWIFT_NAME(REJECTION);
@property (readonly, class) jint WAITING NS_SWIFT_NAME(WAITING);
@property (readonly, class) jint REVOCATION_WARNING NS_SWIFT_NAME(REVOCATION_WARNING);
@property (readonly, class) jint REVOCATION_NOTIFICATION NS_SWIFT_NAME(REVOCATION_NOTIFICATION);
@property (readonly, class) jint KEY_UPDATE_WARNING NS_SWIFT_NAME(KEY_UPDATE_WARNING);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *granted NS_SWIFT_NAME(granted);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *grantedWithMods NS_SWIFT_NAME(grantedWithMods);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *rejection NS_SWIFT_NAME(rejection);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *waiting NS_SWIFT_NAME(waiting);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *revocationWarning NS_SWIFT_NAME(revocationWarning);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *revocationNotification NS_SWIFT_NAME(revocationNotification);
@property (readonly, class) LibOrgBouncycastleAsn1CmpPKIStatus *keyUpdateWaiting NS_SWIFT_NAME(keyUpdateWaiting);

+ (jint)GRANTED;

+ (jint)GRANTED_WITH_MODS;

+ (jint)REJECTION;

+ (jint)WAITING;

+ (jint)REVOCATION_WARNING;

+ (jint)REVOCATION_NOTIFICATION;

+ (jint)KEY_UPDATE_WARNING;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)granted;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)grantedWithMods;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)rejection;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)waiting;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)revocationWarning;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)revocationNotification;

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)keyUpdateWaiting;

#pragma mark Public

+ (LibOrgBouncycastleAsn1CmpPKIStatus *)getInstanceWithId:(id)o;

- (JavaMathBigInteger *)getValue;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CmpPKIStatus)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_GRANTED(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_GRANTED 0
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, GRANTED, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_GRANTED_WITH_MODS(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_GRANTED_WITH_MODS 1
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, GRANTED_WITH_MODS, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_REJECTION(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_REJECTION 2
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, REJECTION, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_WAITING(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_WAITING 3
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, WAITING, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_REVOCATION_WARNING(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_REVOCATION_WARNING 4
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, REVOCATION_WARNING, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_REVOCATION_NOTIFICATION(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_REVOCATION_NOTIFICATION 5
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, REVOCATION_NOTIFICATION, jint)

inline jint LibOrgBouncycastleAsn1CmpPKIStatus_get_KEY_UPDATE_WARNING(void);
#define LibOrgBouncycastleAsn1CmpPKIStatus_KEY_UPDATE_WARNING 6
J2OBJC_STATIC_FIELD_CONSTANT(LibOrgBouncycastleAsn1CmpPKIStatus, KEY_UPDATE_WARNING, jint)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_granted(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_granted;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, granted, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_grantedWithMods(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_grantedWithMods;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, grantedWithMods, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_rejection(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_rejection;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, rejection, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_waiting(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_waiting;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, waiting, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_revocationWarning(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_revocationWarning;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, revocationWarning, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_revocationNotification(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_revocationNotification;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, revocationNotification, LibOrgBouncycastleAsn1CmpPKIStatus *)

inline LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_get_keyUpdateWaiting(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_keyUpdateWaiting;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CmpPKIStatus, keyUpdateWaiting, LibOrgBouncycastleAsn1CmpPKIStatus *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmpPKIStatus *LibOrgBouncycastleAsn1CmpPKIStatus_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmpPKIStatus)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIStatus_H
