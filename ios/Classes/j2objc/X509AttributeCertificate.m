//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/X509AttributeCertificate.java
//

#include "J2ObjC_source.h"
#include "X509AttributeCertificate.h"

@interface LibOrgBouncycastleX509X509AttributeCertificate : NSObject

@end

@implementation LibOrgBouncycastleX509X509AttributeCertificate

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509AttributeCertificateHolder;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleX509AttributeCertificateIssuer;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleX509X509X509Attribute;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LLibOrgBouncycastleX509X509X509Attribute;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "[Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, 2, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 7, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getVersion);
  methods[1].selector = @selector(getSerialNumber);
  methods[2].selector = @selector(getNotBefore);
  methods[3].selector = @selector(getNotAfter);
  methods[4].selector = @selector(getHolder);
  methods[5].selector = @selector(getIssuer);
  methods[6].selector = @selector(getAttributes);
  methods[7].selector = @selector(getAttributesWithNSString:);
  methods[8].selector = @selector(getIssuerUniqueID);
  methods[9].selector = @selector(checkValidity);
  methods[10].selector = @selector(checkValidityWithJavaUtilDate:);
  methods[11].selector = @selector(getSignature);
  methods[12].selector = @selector(verifyWithJavaSecurityPublicKey:withNSString:);
  methods[13].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAttributes", "LNSString;", "LJavaSecurityCertCertificateExpiredException;LJavaSecurityCertCertificateNotYetValidException;", "checkValidity", "LJavaUtilDate;", "verify", "LJavaSecurityPublicKey;LNSString;", "LJavaSecurityCertCertificateException;LJavaSecurityNoSuchAlgorithmException;LJavaSecurityInvalidKeyException;LJavaSecurityNoSuchProviderException;LJavaSecuritySignatureException;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleX509X509AttributeCertificate = { "X509AttributeCertificate", "lib.org.bouncycastle.x509", ptrTable, methods, NULL, 7, 0x609, 14, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleX509X509AttributeCertificate;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibOrgBouncycastleX509X509AttributeCertificate)
