//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/JDKDSAPublicKey.java
//

#ifndef JDKDSAPublicKey_H
#define JDKDSAPublicKey_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/interfaces/DSAPublicKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecDSAParameterSpec;
@class JavaSecuritySpecDSAPublicKeySpec;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters;
@protocol JavaSecurityInterfacesDSAParams;

@interface LibOrgBouncycastleJceProviderJDKDSAPublicKey : NSObject < JavaSecurityInterfacesDSAPublicKey >

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (id<JavaSecurityInterfacesDSAParams>)getParams;

- (JavaMathBigInteger *)getY;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)y
                withJavaSecuritySpecDSAParameterSpec:(JavaSecuritySpecDSAParameterSpec *)dsaSpec;

- (instancetype __nonnull)initWithJavaSecurityInterfacesDSAPublicKey:(id<JavaSecurityInterfacesDSAPublicKey>)key;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters:(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *)params;

- (instancetype __nonnull)initWithJavaSecuritySpecDSAPublicKeySpec:(JavaSecuritySpecDSAPublicKeySpec *)spec;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderJDKDSAPublicKey)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaSecuritySpecDSAPublicKeySpec *spec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(JavaSecuritySpecDSAPublicKeySpec *spec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecuritySpecDSAPublicKeySpec_(JavaSecuritySpecDSAPublicKeySpec *spec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, id<JavaSecurityInterfacesDSAPublicKey> key);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(id<JavaSecurityInterfacesDSAPublicKey> key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaSecurityInterfacesDSAPublicKey_(id<JavaSecurityInterfacesDSAPublicKey> key);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleCryptoParamsDSAPublicKeyParameters_(LibOrgBouncycastleCryptoParamsDSAPublicKeyParameters *params);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithJavaMathBigInteger_withJavaSecuritySpecDSAParameterSpec_(JavaMathBigInteger *y, JavaSecuritySpecDSAParameterSpec *dsaSpec);

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleJceProviderJDKDSAPublicKey *self, LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *new_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderJDKDSAPublicKey *create_LibOrgBouncycastleJceProviderJDKDSAPublicKey_initWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderJDKDSAPublicKey)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JDKDSAPublicKey_H
