//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/util/KeyUtil.java
//

#ifndef KeyUtil_H
#define KeyUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class LibOrgBouncycastleAsn1X509AlgorithmIdentifier;
@class LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@protocol LibOrgBouncycastleAsn1ASN1Encodable;

@interface LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (IOSByteArray *)getEncodedPrivateKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                    withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)privKey;

+ (IOSByteArray *)getEncodedPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo:(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                          withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)keyData;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier:(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                                                    withByteArray:(IOSByteArray *)keyData;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_init(LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil *new_LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil *create_LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<LibOrgBouncycastleAsn1ASN1Encodable> keyData);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *keyData);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithLibOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(LibOrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_getEncodedPrivateKeyInfoWithLibOrgBouncycastleAsn1X509AlgorithmIdentifier_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<LibOrgBouncycastleAsn1ASN1Encodable> privKey);

FOUNDATION_EXPORT IOSByteArray *LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil_getEncodedPrivateKeyInfoWithLibOrgBouncycastleAsn1PkcsPrivateKeyInfo_(LibOrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderUtilKeyUtil)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // KeyUtil_H
