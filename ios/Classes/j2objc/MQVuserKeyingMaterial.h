//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cms/ecc/MQVuserKeyingMaterial.java
//

#ifndef MQVuserKeyingMaterial_H
#define MQVuserKeyingMaterial_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1OctetString;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1ASN1TaggedObject;
@class LibOrgBouncycastleAsn1CmsOriginatorPublicKey;

@interface LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmsOriginatorPublicKey:(LibOrgBouncycastleAsn1CmsOriginatorPublicKey *)ephemeralPublicKey
                                     withLibOrgBouncycastleAsn1ASN1OctetString:(LibOrgBouncycastleAsn1ASN1OctetString *)addedukm;

- (LibOrgBouncycastleAsn1ASN1OctetString *)getAddedukm;

- (LibOrgBouncycastleAsn1CmsOriginatorPublicKey *)getEphemeralPublicKey;

+ (LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *)getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject:(LibOrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                                 withBoolean:(jboolean)explicit_;

+ (LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *)getInstanceWithId:(id)obj;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial_initWithLibOrgBouncycastleAsn1CmsOriginatorPublicKey_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *self, LibOrgBouncycastleAsn1CmsOriginatorPublicKey *ephemeralPublicKey, LibOrgBouncycastleAsn1ASN1OctetString *addedukm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *new_LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial_initWithLibOrgBouncycastleAsn1CmsOriginatorPublicKey_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1CmsOriginatorPublicKey *ephemeralPublicKey, LibOrgBouncycastleAsn1ASN1OctetString *addedukm) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *create_LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial_initWithLibOrgBouncycastleAsn1CmsOriginatorPublicKey_withLibOrgBouncycastleAsn1ASN1OctetString_(LibOrgBouncycastleAsn1CmsOriginatorPublicKey *ephemeralPublicKey, LibOrgBouncycastleAsn1ASN1OctetString *addedukm);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial_getInstanceWithLibOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(LibOrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial *LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmsEccMQVuserKeyingMaterial)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MQVuserKeyingMaterial_H
