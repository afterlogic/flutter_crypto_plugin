//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/decryption_verification/DecryptionStream.java
//

#ifndef DecryptionStream_H
#define DecryptionStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/InputStream.h"

@class LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata;
@class LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder;

@interface LibComAfterlogicPgpDecryption_verificationDecryptionStream : JavaIoInputStream

#pragma mark Public

- (void)close;

- (LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata *)getResult;

- (jint)read;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)wrapped
withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder:(LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *)resultBuilder;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibComAfterlogicPgpDecryption_verificationDecryptionStream)

FOUNDATION_EXPORT void LibComAfterlogicPgpDecryption_verificationDecryptionStream_initWithJavaIoInputStream_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(LibComAfterlogicPgpDecryption_verificationDecryptionStream *self, JavaIoInputStream *wrapped, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder);

FOUNDATION_EXPORT LibComAfterlogicPgpDecryption_verificationDecryptionStream *new_LibComAfterlogicPgpDecryption_verificationDecryptionStream_initWithJavaIoInputStream_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(JavaIoInputStream *wrapped, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibComAfterlogicPgpDecryption_verificationDecryptionStream *create_LibComAfterlogicPgpDecryption_verificationDecryptionStream_initWithJavaIoInputStream_withLibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder_(JavaIoInputStream *wrapped, LibComAfterlogicPgpDecryption_verificationOpenPgpMetadata_Builder *resultBuilder);

J2OBJC_TYPE_LITERAL_HEADER(LibComAfterlogicPgpDecryption_verificationDecryptionStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DecryptionStream_H
