//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/gmss/GMSSRootCalc.java
//

#ifndef GMSSRootCalc_H
#define GMSSRootCalc_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilVector;
@protocol LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider;

@interface LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)heightOfTree
                              withInt:(jint)K
withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider:(id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider>)digestProvider;

- (IOSObjectArray *)getAuthPath;

- (IOSObjectArray *)getRetain;

- (IOSByteArray *)getRoot;

- (JavaUtilVector *)getStack;

- (IOSObjectArray *)getStatByte;

- (IOSIntArray *)getStatInt;

- (IOSObjectArray *)getTreehash;

- (void)initialize__WithJavaUtilVector:(JavaUtilVector *)sharedStack OBJC_METHOD_FAMILY_NONE;

- (void)initializeTreehashSeedWithByteArray:(IOSByteArray *)seed
                                    withInt:(jint)index OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

- (void)updateWithByteArray:(IOSByteArray *)leaf;

- (void)updateWithByteArray:(IOSByteArray *)seed
              withByteArray:(IOSByteArray *)leaf;

- (jboolean)wasFinished;

- (jboolean)wasInitialized;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc_initWithInt_withInt_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc *self, jint heightOfTree, jint K, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc *new_LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc_initWithInt_withInt_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(jint heightOfTree, jint K, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc *create_LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc_initWithInt_withInt_withLibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider_(jint heightOfTree, jint K, id<LibOrgBouncycastlePqcCryptoGmssGMSSDigestProvider> digestProvider);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoGmssGMSSRootCalc)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // GMSSRootCalc_H
