//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/asn1/ParSet.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "Arrays.h"
#include "DERSequence.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParSet.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/math/BigInteger.h"

@interface LibOrgBouncycastlePqcAsn1ParSet () {
 @public
  jint t_;
  IOSIntArray *h_;
  IOSIntArray *w_;
  IOSIntArray *k_;
}

+ (jint)checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger:(JavaMathBigInteger *)b;

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcAsn1ParSet, h_, IOSIntArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcAsn1ParSet, w_, IOSIntArray *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastlePqcAsn1ParSet, k_, IOSIntArray *)

inline JavaMathBigInteger *LibOrgBouncycastlePqcAsn1ParSet_get_ZERO(void);
static JavaMathBigInteger *LibOrgBouncycastlePqcAsn1ParSet_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcAsn1ParSet, ZERO, JavaMathBigInteger *)

__attribute__((unused)) static jint LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_(JavaMathBigInteger *b);

__attribute__((unused)) static void LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastlePqcAsn1ParSet *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static LibOrgBouncycastlePqcAsn1ParSet *new_LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastlePqcAsn1ParSet *create_LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastlePqcAsn1ParSet)

@implementation LibOrgBouncycastlePqcAsn1ParSet

+ (jint)checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger:(JavaMathBigInteger *)b {
  return LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_(b);
}

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithInt:(jint)t
               withIntArray:(IOSIntArray *)h
               withIntArray:(IOSIntArray *)w
               withIntArray:(IOSIntArray *)k {
  LibOrgBouncycastlePqcAsn1ParSet_initWithInt_withIntArray_withIntArray_withIntArray_(self, t, h, w, k);
  return self;
}

+ (LibOrgBouncycastlePqcAsn1ParSet *)getInstanceWithId:(id)o {
  return LibOrgBouncycastlePqcAsn1ParSet_getInstanceWithId_(o);
}

- (jint)getT {
  return t_;
}

- (IOSIntArray *)getH {
  return LibOrgBouncycastleUtilArrays_cloneWithIntArray_(h_);
}

- (IOSIntArray *)getW {
  return LibOrgBouncycastleUtilArrays_cloneWithIntArray_(w_);
}

- (IOSIntArray *)getK {
  return LibOrgBouncycastleUtilArrays_cloneWithIntArray_(k_);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  LibOrgBouncycastleAsn1ASN1EncodableVector *seqOfPSh = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  LibOrgBouncycastleAsn1ASN1EncodableVector *seqOfPSw = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  LibOrgBouncycastleAsn1ASN1EncodableVector *seqOfPSK = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(h_))->size_; i++) {
    [seqOfPSh addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(IOSIntArray_Get(h_, i))];
    [seqOfPSw addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(IOSIntArray_Get(nil_chk(w_), i))];
    [seqOfPSK addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(IOSIntArray_Get(nil_chk(k_), i))];
  }
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(t_)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(seqOfPSh)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(seqOfPSw)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(seqOfPSK)];
  return new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastlePqcAsn1ParSet;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger:);
  methods[1].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithInt:withIntArray:withIntArray:withIntArray:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(getT);
  methods[5].selector = @selector(getH);
  methods[6].selector = @selector(getW);
  methods[7].selector = @selector(getK);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "t_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "h_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "w_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "k_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "checkBigIntegerInIntRangeAndPositive", "LJavaMathBigInteger;", "LLibOrgBouncycastleAsn1ASN1Sequence;", "I[I[I[I", "getInstance", "LNSObject;", &LibOrgBouncycastlePqcAsn1ParSet_ZERO };
  static const J2ObjcClassInfo _LibOrgBouncycastlePqcAsn1ParSet = { "ParSet", "lib.org.bouncycastle.pqc.asn1", ptrTable, methods, fields, 7, 0x1, 9, 5, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastlePqcAsn1ParSet;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastlePqcAsn1ParSet class]) {
    LibOrgBouncycastlePqcAsn1ParSet_ZERO = JavaMathBigInteger_valueOfWithLong_(0);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastlePqcAsn1ParSet)
  }
}

@end

jint LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_(JavaMathBigInteger *b) {
  LibOrgBouncycastlePqcAsn1ParSet_initialize();
  if (([((JavaMathBigInteger *) nil_chk(b)) compareToWithId:JavaMathBigInteger_valueOfWithLong_(JavaLangInteger_MAX_VALUE)] > 0) || ([b compareToWithId:LibOrgBouncycastlePqcAsn1ParSet_ZERO] <= 0)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"BigInteger not in Range: ", [b description]));
  }
  return [b intValue];
}

void LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastlePqcAsn1ParSet *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  if ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 4) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"sie of seqOfParams = ", [seq size]));
  }
  JavaMathBigInteger *asn1int = [((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk(((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:0], [LibOrgBouncycastleAsn1ASN1Integer class])))) getValue];
  self->t_ = LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_(asn1int);
  LibOrgBouncycastleAsn1ASN1Sequence *seqOfPSh = (LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk([seq getObjectAtWithInt:1], [LibOrgBouncycastleAsn1ASN1Sequence class]);
  LibOrgBouncycastleAsn1ASN1Sequence *seqOfPSw = (LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk([seq getObjectAtWithInt:2], [LibOrgBouncycastleAsn1ASN1Sequence class]);
  LibOrgBouncycastleAsn1ASN1Sequence *seqOfPSK = (LibOrgBouncycastleAsn1ASN1Sequence *) cast_chk([seq getObjectAtWithInt:3], [LibOrgBouncycastleAsn1ASN1Sequence class]);
  if (([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seqOfPSh)) size] != self->t_) || ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seqOfPSw)) size] != self->t_) || ([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seqOfPSK)) size] != self->t_)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"invalid size of sequences");
  }
  self->h_ = [IOSIntArray newArrayWithLength:[seqOfPSh size]];
  self->w_ = [IOSIntArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seqOfPSw)) size]];
  self->k_ = [IOSIntArray newArrayWithLength:[((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seqOfPSK)) size]];
  for (jint i = 0; i < self->t_; i++) {
    *IOSIntArray_GetRef(nil_chk(self->h_), i) = LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk((((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seqOfPSh getObjectAtWithInt:i], [LibOrgBouncycastleAsn1ASN1Integer class]))))) getValue]);
    *IOSIntArray_GetRef(nil_chk(self->w_), i) = LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk((((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seqOfPSw getObjectAtWithInt:i], [LibOrgBouncycastleAsn1ASN1Integer class]))))) getValue]);
    *IOSIntArray_GetRef(nil_chk(self->k_), i) = LibOrgBouncycastlePqcAsn1ParSet_checkBigIntegerInIntRangeAndPositiveWithJavaMathBigInteger_([((LibOrgBouncycastleAsn1ASN1Integer *) nil_chk((((LibOrgBouncycastleAsn1ASN1Integer *) cast_chk([seqOfPSK getObjectAtWithInt:i], [LibOrgBouncycastleAsn1ASN1Integer class]))))) getValue]);
  }
}

LibOrgBouncycastlePqcAsn1ParSet *new_LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcAsn1ParSet, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastlePqcAsn1ParSet *create_LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcAsn1ParSet, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastlePqcAsn1ParSet_initWithInt_withIntArray_withIntArray_withIntArray_(LibOrgBouncycastlePqcAsn1ParSet *self, jint t, IOSIntArray *h, IOSIntArray *w, IOSIntArray *k) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->t_ = t;
  self->h_ = h;
  self->w_ = w;
  self->k_ = k;
}

LibOrgBouncycastlePqcAsn1ParSet *new_LibOrgBouncycastlePqcAsn1ParSet_initWithInt_withIntArray_withIntArray_withIntArray_(jint t, IOSIntArray *h, IOSIntArray *w, IOSIntArray *k) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastlePqcAsn1ParSet, initWithInt_withIntArray_withIntArray_withIntArray_, t, h, w, k)
}

LibOrgBouncycastlePqcAsn1ParSet *create_LibOrgBouncycastlePqcAsn1ParSet_initWithInt_withIntArray_withIntArray_withIntArray_(jint t, IOSIntArray *h, IOSIntArray *w, IOSIntArray *k) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastlePqcAsn1ParSet, initWithInt_withIntArray_withIntArray_withIntArray_, t, h, w, k)
}

LibOrgBouncycastlePqcAsn1ParSet *LibOrgBouncycastlePqcAsn1ParSet_getInstanceWithId_(id o) {
  LibOrgBouncycastlePqcAsn1ParSet_initialize();
  if ([o isKindOfClass:[LibOrgBouncycastlePqcAsn1ParSet class]]) {
    return (LibOrgBouncycastlePqcAsn1ParSet *) o;
  }
  else if (o != nil) {
    return new_LibOrgBouncycastlePqcAsn1ParSet_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastlePqcAsn1ParSet)
