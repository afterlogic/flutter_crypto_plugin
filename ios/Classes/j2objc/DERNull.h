//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DERNull.java
//

#ifndef DERNull_H
#define DERNull_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Null.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1OutputStream;

@interface LibOrgBouncycastleAsn1DERNull : LibOrgBouncycastleAsn1ASN1Null
@property (readonly, class) LibOrgBouncycastleAsn1DERNull *INSTANCE NS_SWIFT_NAME(INSTANCE);

+ (LibOrgBouncycastleAsn1DERNull *)INSTANCE;

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Package-Private

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

- (jboolean)isConstructed;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1DERNull)

inline LibOrgBouncycastleAsn1DERNull *LibOrgBouncycastleAsn1DERNull_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERNull *LibOrgBouncycastleAsn1DERNull_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1DERNull, INSTANCE, LibOrgBouncycastleAsn1DERNull *)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERNull_init(LibOrgBouncycastleAsn1DERNull *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERNull *new_LibOrgBouncycastleAsn1DERNull_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERNull *create_LibOrgBouncycastleAsn1DERNull_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1DERNull)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DERNull_H
