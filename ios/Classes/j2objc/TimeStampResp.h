//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/tsp/TimeStampResp.java
//

#ifndef TimeStampResp_H
#define TimeStampResp_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CmpPKIStatusInfo;
@class LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo;

@interface LibOrgBouncycastleAsn1TspTimeStampResp : LibOrgBouncycastleAsn1ASN1Object {
 @public
  LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo_;
  LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *timeStampToken_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo:(LibOrgBouncycastleAsn1CmpPKIStatusInfo *)pkiStatusInfo
                         withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo:(LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)timeStampToken;

+ (LibOrgBouncycastleAsn1TspTimeStampResp *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1CmpPKIStatusInfo *)getStatus;

- (LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)getTimeStampToken;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1TspTimeStampResp)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1TspTimeStampResp, pkiStatusInfo_, LibOrgBouncycastleAsn1CmpPKIStatusInfo *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1TspTimeStampResp, timeStampToken_, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspTimeStampResp *LibOrgBouncycastleAsn1TspTimeStampResp_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1TspTimeStampResp_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1TspTimeStampResp *self, LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *timeStampToken);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspTimeStampResp *new_LibOrgBouncycastleAsn1TspTimeStampResp_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *timeStampToken) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1TspTimeStampResp *create_LibOrgBouncycastleAsn1TspTimeStampResp_initWithLibOrgBouncycastleAsn1CmpPKIStatusInfo_withLibOrgBouncycastleAsn1CmsAsn1CmsContentInfo_(LibOrgBouncycastleAsn1CmpPKIStatusInfo *pkiStatusInfo, LibOrgBouncycastleAsn1CmsAsn1CmsContentInfo *timeStampToken);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1TspTimeStampResp)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // TimeStampResp_H
