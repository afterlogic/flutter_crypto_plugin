//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/x509/AttributeCertificateHolder.java
//

#ifndef AttributeCertificateHolder_H
#define AttributeCertificateHolder_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "Selector.h"
#include "java/security/cert/CertSelector.h"

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@class JavaSecurityCertCertificate;
@class JavaSecurityCertX509Certificate;
@class JavaxSecurityAuthX500X500Principal;
@class LibOrgBouncycastleAsn1ASN1Sequence;
@class LibOrgBouncycastleAsn1X509Holder;
@class LibOrgBouncycastleJceX509Principal;

@interface LibOrgBouncycastleX509AttributeCertificateHolder : NSObject < JavaSecurityCertCertSelector, LibOrgBouncycastleUtilSelector > {
 @public
  LibOrgBouncycastleAsn1X509Holder *holder_;
}

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)digestedObjectType
                         withNSString:(NSString *)digestAlgorithm
                         withNSString:(NSString *)otherObjectTypeID
                        withByteArray:(IOSByteArray *)objectDigest;

- (instancetype __nonnull)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)principal;

- (instancetype __nonnull)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)issuerName
                                              withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (instancetype __nonnull)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)principal;

- (instancetype __nonnull)initWithLibOrgBouncycastleJceX509Principal:(LibOrgBouncycastleJceX509Principal *)issuerName
                                              withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (id)java_clone;

- (jboolean)isEqual:(id)obj;

- (NSString *)getDigestAlgorithm;

- (jint)getDigestedObjectType;

- (IOSObjectArray *)getEntityNames;

- (IOSObjectArray *)getIssuer;

- (IOSByteArray *)getObjectDigest;

- (NSString *)getOtherObjectTypeID;

- (JavaMathBigInteger *)getSerialNumber;

- (NSUInteger)hash;

- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (jboolean)matchWithId:(id)obj;

#pragma mark Package-Private

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleX509AttributeCertificateHolder)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleX509AttributeCertificateHolder, holder_, LibOrgBouncycastleAsn1X509Holder *)

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_withJavaMathBigInteger_(LibOrgBouncycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaSecurityCertX509Certificate *cert);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, LibOrgBouncycastleJceX509Principal *principal);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithLibOrgBouncycastleJceX509Principal_(LibOrgBouncycastleJceX509Principal *principal);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(LibOrgBouncycastleX509AttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *principal);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal);

FOUNDATION_EXPORT void LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(LibOrgBouncycastleX509AttributeCertificateHolder *self, jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest);

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *new_LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleX509AttributeCertificateHolder *create_LibOrgBouncycastleX509AttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleX509AttributeCertificateHolder)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AttributeCertificateHolder_H
