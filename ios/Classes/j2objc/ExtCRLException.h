//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/provider/ExtCRLException.java
//

#ifndef ExtCRLException_H
#define ExtCRLException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/CRLException.h"

@class JavaLangThrowable;

@interface LibOrgBouncycastleJceProviderExtCRLException : JavaSecurityCertCRLException {
 @public
  JavaLangThrowable *cause_ExtCRLException_;
}

#pragma mark Public

- (JavaLangThrowable *)getCause;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceProviderExtCRLException)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJceProviderExtCRLException, cause_ExtCRLException_, JavaLangThrowable *)

FOUNDATION_EXPORT void LibOrgBouncycastleJceProviderExtCRLException_initWithNSString_withJavaLangThrowable_(LibOrgBouncycastleJceProviderExtCRLException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderExtCRLException *new_LibOrgBouncycastleJceProviderExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceProviderExtCRLException *create_LibOrgBouncycastleJceProviderExtCRLException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceProviderExtCRLException)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExtCRLException_H
