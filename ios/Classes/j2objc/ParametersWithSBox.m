//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/params/ParametersWithSBox.java
//

#include "CipherParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParametersWithSBox.h"

@interface LibOrgBouncycastleCryptoParamsParametersWithSBox () {
 @public
  id<LibOrgBouncycastleCryptoCipherParameters> parameters_;
  IOSByteArray *sBox_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsParametersWithSBox, parameters_, id<LibOrgBouncycastleCryptoCipherParameters>)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoParamsParametersWithSBox, sBox_, IOSByteArray *)

@implementation LibOrgBouncycastleCryptoParamsParametersWithSBox

- (instancetype)initWithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)parameters
                                                   withByteArray:(IOSByteArray *)sBox {
  LibOrgBouncycastleCryptoParamsParametersWithSBox_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(self, parameters, sBox);
  return self;
}

- (IOSByteArray *)getSBox {
  return sBox_;
}

- (id<LibOrgBouncycastleCryptoCipherParameters>)getParameters {
  return parameters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoCipherParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleCryptoCipherParameters:withByteArray:);
  methods[1].selector = @selector(getSBox);
  methods[2].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", "LLibOrgBouncycastleCryptoCipherParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sBox_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleCryptoCipherParameters;[B" };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoParamsParametersWithSBox = { "ParametersWithSBox", "lib.org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoParamsParametersWithSBox;
}

@end

void LibOrgBouncycastleCryptoParamsParametersWithSBox_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(LibOrgBouncycastleCryptoParamsParametersWithSBox *self, id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  NSObject_init(self);
  self->parameters_ = parameters;
  self->sBox_ = sBox;
}

LibOrgBouncycastleCryptoParamsParametersWithSBox *new_LibOrgBouncycastleCryptoParamsParametersWithSBox_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoParamsParametersWithSBox, initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_, parameters, sBox)
}

LibOrgBouncycastleCryptoParamsParametersWithSBox *create_LibOrgBouncycastleCryptoParamsParametersWithSBox_initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_(id<LibOrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoParamsParametersWithSBox, initWithLibOrgBouncycastleCryptoCipherParameters_withByteArray_, parameters, sBox)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoParamsParametersWithSBox)
