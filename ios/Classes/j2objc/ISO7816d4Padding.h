//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/paddings/ISO7816d4Padding.java
//

#ifndef ISO7816d4Padding_H
#define ISO7816d4Padding_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BlockCipherPadding.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;

@interface LibOrgBouncycastleCryptoPaddingsISO7816d4Padding : NSObject < LibOrgBouncycastleCryptoPaddingsBlockCipherPadding >

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)addPaddingWithByteArray:(IOSByteArray *)inArg
                        withInt:(jint)inOff;

- (NSString *)getPaddingName;

- (void)init__WithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (jint)padCountWithByteArray:(IOSByteArray *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPaddingsISO7816d4Padding)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPaddingsISO7816d4Padding_init(LibOrgBouncycastleCryptoPaddingsISO7816d4Padding *self);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsISO7816d4Padding *new_LibOrgBouncycastleCryptoPaddingsISO7816d4Padding_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsISO7816d4Padding *create_LibOrgBouncycastleCryptoPaddingsISO7816d4Padding_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPaddingsISO7816d4Padding)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ISO7816d4Padding_H
