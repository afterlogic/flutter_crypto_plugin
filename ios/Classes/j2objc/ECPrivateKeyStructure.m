//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/sec/ECPrivateKeyStructure.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "BigIntegers.h"
#include "DERBitString.h"
#include "DEROctetString.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "ECPrivateKeyStructure.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"

@interface LibOrgBouncycastleAsn1SecECPrivateKeyStructure () {
 @public
  LibOrgBouncycastleAsn1ASN1Sequence *seq_;
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)getObjectInTagWithInt:(jint)tagNo;

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, seq_, LibOrgBouncycastleAsn1ASN1Sequence *)

__attribute__((unused)) static LibOrgBouncycastleAsn1ASN1Primitive *LibOrgBouncycastleAsn1SecECPrivateKeyStructure_getObjectInTagWithInt_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, jint tagNo);

@implementation LibOrgBouncycastleAsn1SecECPrivateKeyStructure

- (instancetype)initWithLibOrgBouncycastleAsn1ASN1Sequence:(LibOrgBouncycastleAsn1ASN1Sequence *)seq {
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)key {
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_(self, key);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)key
   withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)parameters {
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_(self, key, parameters);
  return self;
}

- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)key
    withLibOrgBouncycastleAsn1DERBitString:(LibOrgBouncycastleAsn1DERBitString *)publicKey
   withLibOrgBouncycastleAsn1ASN1Encodable:(id<LibOrgBouncycastleAsn1ASN1Encodable>)parameters {
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(self, key, publicKey, parameters);
  return self;
}

- (JavaMathBigInteger *)getKey {
  LibOrgBouncycastleAsn1ASN1OctetString *octs = (LibOrgBouncycastleAsn1ASN1OctetString *) cast_chk([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq_)) getObjectAtWithInt:1], [LibOrgBouncycastleAsn1ASN1OctetString class]);
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, [((LibOrgBouncycastleAsn1ASN1OctetString *) nil_chk(octs)) getOctets]);
}

- (LibOrgBouncycastleAsn1DERBitString *)getPublicKey {
  return (LibOrgBouncycastleAsn1DERBitString *) cast_chk(LibOrgBouncycastleAsn1SecECPrivateKeyStructure_getObjectInTagWithInt_(self, 1), [LibOrgBouncycastleAsn1DERBitString class]);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)getParameters {
  return LibOrgBouncycastleAsn1SecECPrivateKeyStructure_getObjectInTagWithInt_(self, 0);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)getObjectInTagWithInt:(jint)tagNo {
  return LibOrgBouncycastleAsn1SecECPrivateKeyStructure_getObjectInTagWithInt_(self, tagNo);
}

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  return seq_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithJavaMathBigInteger:);
  methods[2].selector = @selector(initWithJavaMathBigInteger:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(initWithJavaMathBigInteger:withLibOrgBouncycastleAsn1DERBitString:withLibOrgBouncycastleAsn1ASN1Encodable:);
  methods[4].selector = @selector(getKey);
  methods[5].selector = @selector(getPublicKey);
  methods[6].selector = @selector(getParameters);
  methods[7].selector = @selector(getObjectInTagWithInt:);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", "LLibOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleAsn1ASN1Sequence;", "LJavaMathBigInteger;", "LJavaMathBigInteger;LLibOrgBouncycastleAsn1ASN1Encodable;", "LJavaMathBigInteger;LLibOrgBouncycastleAsn1DERBitString;LLibOrgBouncycastleAsn1ASN1Encodable;", "getObjectInTag", "I" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1SecECPrivateKeyStructure = { "ECPrivateKeyStructure", "lib.org.bouncycastle.asn1.sec", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1SecECPrivateKeyStructure;
}

@end

void LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  self->seq_ = seq;
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *create_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithLibOrgBouncycastleAsn1ASN1Sequence_(LibOrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithLibOrgBouncycastleAsn1ASN1Sequence_, seq)
}

void LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, JavaMathBigInteger *key) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  IOSByteArray *bytes = LibOrgBouncycastleUtilBigIntegers_asUnsignedByteArrayWithJavaMathBigInteger_(key);
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(1)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(bytes)];
  self->seq_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_(JavaMathBigInteger *key) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_, key)
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *create_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_(JavaMathBigInteger *key) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_, key)
}

void LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, JavaMathBigInteger *key, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(self, key, nil, parameters);
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_(JavaMathBigInteger *key, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_, key, parameters)
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *create_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_(JavaMathBigInteger *key, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1ASN1Encodable_, key, parameters)
}

void LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, JavaMathBigInteger *key, LibOrgBouncycastleAsn1DERBitString *publicKey, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
  IOSByteArray *bytes = LibOrgBouncycastleUtilBigIntegers_asUnsignedByteArrayWithJavaMathBigInteger_(key);
  LibOrgBouncycastleAsn1ASN1EncodableVector *v = new_LibOrgBouncycastleAsn1ASN1EncodableVector_init();
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1ASN1Integer_initWithLong_(1)];
  [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DEROctetString_initWithByteArray_(bytes)];
  if (parameters != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 0, parameters)];
  }
  if (publicKey != nil) {
    [v addWithLibOrgBouncycastleAsn1ASN1Encodable:new_LibOrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withLibOrgBouncycastleAsn1ASN1Encodable_(true, 1, publicKey)];
  }
  self->seq_ = new_LibOrgBouncycastleAsn1DERSequence_initWithLibOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *new_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(JavaMathBigInteger *key, LibOrgBouncycastleAsn1DERBitString *publicKey, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_, key, publicKey, parameters)
}

LibOrgBouncycastleAsn1SecECPrivateKeyStructure *create_LibOrgBouncycastleAsn1SecECPrivateKeyStructure_initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_(JavaMathBigInteger *key, LibOrgBouncycastleAsn1DERBitString *publicKey, id<LibOrgBouncycastleAsn1ASN1Encodable> parameters) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleAsn1SecECPrivateKeyStructure, initWithJavaMathBigInteger_withLibOrgBouncycastleAsn1DERBitString_withLibOrgBouncycastleAsn1ASN1Encodable_, key, publicKey, parameters)
}

LibOrgBouncycastleAsn1ASN1Primitive *LibOrgBouncycastleAsn1SecECPrivateKeyStructure_getObjectInTagWithInt_(LibOrgBouncycastleAsn1SecECPrivateKeyStructure *self, jint tagNo) {
  id<JavaUtilEnumeration> e = [((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(self->seq_)) getObjects];
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    id<LibOrgBouncycastleAsn1ASN1Encodable> obj = (id<LibOrgBouncycastleAsn1ASN1Encodable>) cast_check([e nextElement], LibOrgBouncycastleAsn1ASN1Encodable_class_());
    if ([obj isKindOfClass:[LibOrgBouncycastleAsn1ASN1TaggedObject class]]) {
      LibOrgBouncycastleAsn1ASN1TaggedObject *tag = (LibOrgBouncycastleAsn1ASN1TaggedObject *) obj;
      if ([((LibOrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tag)) getTagNo] == tagNo) {
        return [((id<LibOrgBouncycastleAsn1ASN1Encodable>) nil_chk(([tag getObject]))) toASN1Primitive];
      }
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1SecECPrivateKeyStructure)
