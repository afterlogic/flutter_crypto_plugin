//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/ess/ContentHints.java
//

#ifndef ContentHints_H
#define ContentHints_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class LibOrgBouncycastleAsn1ASN1ObjectIdentifier;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1DERUTF8String;

@interface LibOrgBouncycastleAsn1EssContentHints : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)contentType;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)contentType
                                     withLibOrgBouncycastleAsn1DERUTF8String:(LibOrgBouncycastleAsn1DERUTF8String *)contentDescription;

- (LibOrgBouncycastleAsn1DERUTF8String *)getContentDescription;

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getContentType;

+ (LibOrgBouncycastleAsn1EssContentHints *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EssContentHints)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EssContentHints *LibOrgBouncycastleAsn1EssContentHints_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1EssContentHints *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EssContentHints *new_LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EssContentHints *create_LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1EssContentHints *self, LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1DERUTF8String *contentDescription);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EssContentHints *new_LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1DERUTF8String *contentDescription) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EssContentHints *create_LibOrgBouncycastleAsn1EssContentHints_initWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withLibOrgBouncycastleAsn1DERUTF8String_(LibOrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, LibOrgBouncycastleAsn1DERUTF8String *contentDescription);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EssContentHints)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ContentHints_H
