//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jce/MultiCertStoreParameters.java
//

#ifndef MultiCertStoreParameters_H
#define MultiCertStoreParameters_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/security/cert/CertStoreParameters.h"

@protocol JavaUtilCollection;

@interface LibOrgBouncycastleJceMultiCertStoreParameters : NSObject < JavaSecurityCertCertStoreParameters >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)certStores;

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)certStores
                                         withBoolean:(jboolean)searchAllStores;

- (id)java_clone;

- (id<JavaUtilCollection>)getCertStores;

- (jboolean)getSearchAllStores;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJceMultiCertStoreParameters)

FOUNDATION_EXPORT void LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(LibOrgBouncycastleJceMultiCertStoreParameters *self, id<JavaUtilCollection> certStores);

FOUNDATION_EXPORT LibOrgBouncycastleJceMultiCertStoreParameters *new_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> certStores) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceMultiCertStoreParameters *create_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_(id<JavaUtilCollection> certStores);

FOUNDATION_EXPORT void LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(LibOrgBouncycastleJceMultiCertStoreParameters *self, id<JavaUtilCollection> certStores, jboolean searchAllStores);

FOUNDATION_EXPORT LibOrgBouncycastleJceMultiCertStoreParameters *new_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> certStores, jboolean searchAllStores) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleJceMultiCertStoreParameters *create_LibOrgBouncycastleJceMultiCertStoreParameters_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> certStores, jboolean searchAllStores);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJceMultiCertStoreParameters)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // MultiCertStoreParameters_H
