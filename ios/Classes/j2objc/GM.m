//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/asymmetric/GM.java
//

#include "ASN1ObjectIdentifier.h"
#include "AsymmetricAlgorithmProvider.h"
#include "ConfigurableProvider.h"
#include "GM.h"
#include "GMObjectIdentifiers.h"
#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

inline NSString *LibOrgBouncycastleJcajceProviderAsymmetricGM_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX = @"lib.org.bouncycastle.jcajce.provider.asymmetric.ec.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricGM, PREFIX, NSString *)

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricGM_get_generalSm2Attributes(void);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderAsymmetricGM_generalSm2Attributes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderAsymmetricGM, generalSm2Attributes, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderAsymmetricGM)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricGM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricGM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
    { "generalSm2Attributes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 1, 2, -1 },
  };
  static const void *ptrTable[] = { &LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, &LibOrgBouncycastleJcajceProviderAsymmetricGM_generalSm2Attributes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LLibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricGM = { "GM", "lib.org.bouncycastle.jcajce.provider.asymmetric", ptrTable, methods, fields, 7, 0x1, 1, 2, -1, 3, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricGM;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderAsymmetricGM class]) {
    LibOrgBouncycastleJcajceProviderAsymmetricGM_generalSm2Attributes = new_JavaUtilHashMap_init();
    {
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricGM_generalSm2Attributes putWithId:@"SupportedKeyClasses" withId:@"java.security.interfaces.ECPublicKey|java.security.interfaces.ECPrivateKey"];
      (void) [LibOrgBouncycastleJcajceProviderAsymmetricGM_generalSm2Attributes putWithId:@"SupportedKeyFormats" withId:@"PKCS#8|X.509"];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderAsymmetricGM)
  }
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricGM_init(LibOrgBouncycastleJcajceProviderAsymmetricGM *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricGM *new_LibOrgBouncycastleJcajceProviderAsymmetricGM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGM, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricGM *create_LibOrgBouncycastleJcajceProviderAsymmetricGM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricGM)

@implementation LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Signature.SM3WITHSM2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMSignatureSpi$sm3WithSM2")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Signature.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2sign_with_sm3)) withNSString:@"SM3WITHSM2"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.SM2WITHSM3" withNSString:@"SM2"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sm3)) withNSString:@"SM2"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHBLAKE2B" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withBlake2b")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_blake2b512)) withNSString:@"SM2WITHBLAKE2B"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHBLAKE2S" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withBlake2s")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_blake2s256)) withNSString:@"SM2WITHBLAKE2S"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHWHIRLPOOL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withWhirlpool")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_whirlpool)) withNSString:@"SM2WITHWHIRLPOOL"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHMD5" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withMD5")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_md5)) withNSString:@"SM2WITHMD5"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHRIPEMD160" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withRMD")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_rmd160)) withNSString:@"SM2WITHRIPEMD160"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHSHA1" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withSha1")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sha1)) withNSString:@"SM2WITHSHA1"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHSHA224" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withSha224")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sha224)) withNSString:@"SM2WITHSHA224"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHSHA256" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withSha256")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sha256)) withNSString:@"SM2WITHSHA256"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHSHA384" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withSha384")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sha384)) withNSString:@"SM2WITHSHA384"];
  [provider addAlgorithmWithNSString:@"Cipher.SM2WITHSHA512" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderAsymmetricGM_PREFIX, @"GMCipherSpi$SM2withSha512")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.Cipher.", JreLoadStatic(LibOrgBouncycastleAsn1GmGMObjectIdentifiers, sm2encrypt_with_sha512)) withNSString:@"SM2WITHSHA512"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "LLibOrgBouncycastleJcajceProviderAsymmetricGM;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.asymmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings;
}

@end

void LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings_init(LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings *new_LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings, init)
}

LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings *create_LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderAsymmetricGM_Mappings)
