//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/AES.java
//

#include "AEADParameterSpec.h"
#include "AES.h"
#include "AESEngine.h"
#include "AESWrapEngine.h"
#include "AESWrapPadEngine.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "BCObjectIdentifiers.h"
#include "BaseAlgorithmParameterGenerator.h"
#include "BaseAlgorithmParameters.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BaseSecretKeyFactory.h"
#include "BaseWrapCipher.h"
#include "BlockCipher.h"
#include "BlockCipherProvider.h"
#include "BufferedBlockCipher.h"
#include "CBCBlockCipher.h"
#include "CCMBlockCipher.h"
#include "CFBBlockCipher.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "CipherParameters.h"
#include "CmsCCMParameters.h"
#include "ConfigurableProvider.h"
#include "GCMBlockCipher.h"
#include "GCMParameters.h"
#include "GMac.h"
#include "GcmSpecUtil.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "InvalidCipherTextException.h"
#include "IvAlgorithmParameters.h"
#include "J2ObjC_source.h"
#include "Mac.h"
#include "NISTObjectIdentifiers.h"
#include "OFBBlockCipher.h"
#include "PBE.h"
#include "PBESecretKeyFactory.h"
#include "Poly1305.h"
#include "Poly1305KeyGenerator.h"
#include "RFC3211WrapEngine.h"
#include "RFC5649WrapEngine.h"
#include "SymmetricAlgorithmProvider.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/security/spec/InvalidParameterSpecException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "javax/crypto/spec/IvParameterSpec.h"

@interface LibOrgBouncycastleJcajceProviderSymmetricAES ()

- (instancetype)init;

@end

inline id<JavaUtilMap> LibOrgBouncycastleJcajceProviderSymmetricAES_get_generalAesAttributes(void);
static id<JavaUtilMap> LibOrgBouncycastleJcajceProviderSymmetricAES_generalAesAttributes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes, id<JavaUtilMap>)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricAES_init(LibOrgBouncycastleJcajceProviderSymmetricAES *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES *new_LibOrgBouncycastleJcajceProviderSymmetricAES_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES *create_LibOrgBouncycastleJcajceProviderSymmetricAES_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 : NSObject < LibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider >

- (instancetype)init;

- (id<LibOrgBouncycastleCryptoBlockCipher>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init(void);

@interface LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac : NSObject < LibOrgBouncycastleCryptoMac > {
 @public
  LibOrgBouncycastleCryptoModesCCMBlockCipher *ccm_;
  jint macLength_;
}

- (instancetype)init;

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (NSString *)getAlgorithmName;

- (jint)getMacSize;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac, ccm_, LibOrgBouncycastleCryptoModesCCMBlockCipher *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac)

@interface LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM () {
 @public
  LibOrgBouncycastleAsn1CmsGCMParameters *gcmParams_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM, gcmParams_, LibOrgBouncycastleAsn1CmsGCMParameters *)

@interface LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM () {
 @public
  LibOrgBouncycastleAsn1CmsCmsCCMParameters *ccmParams_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM, ccmParams_, LibOrgBouncycastleAsn1CmsCmsCCMParameters *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, PREFIX, NSString *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_get_wrongAES128(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128 = @"2.16.840.1.101.3.4.2";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, wrongAES128, NSString *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_get_wrongAES192(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192 = @"2.16.840.1.101.3.4.22";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, wrongAES192, NSString *)

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_get_wrongAES256(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256 = @"2.16.840.1.101.3.4.42";
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, wrongAES256, NSString *)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricAES)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "generalAesAttributes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 0, 1, -1 },
  };
  static const void *ptrTable[] = { &LibOrgBouncycastleJcajceProviderSymmetricAES_generalAesAttributes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LLibOrgBouncycastleJcajceProviderSymmetricAES_ECB;LLibOrgBouncycastleJcajceProviderSymmetricAES_CBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_CFB;LLibOrgBouncycastleJcajceProviderSymmetricAES_OFB;LLibOrgBouncycastleJcajceProviderSymmetricAES_GCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_CCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC;LLibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC;LLibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC;LLibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory;LLibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305;LLibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricAES_Wrap;LLibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad;LLibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap;LLibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256;LLibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128;LLibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192;LLibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL;LLibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM;LLibOrgBouncycastleJcajceProviderSymmetricAES_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES = { "AES", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x11, 1, 1, -1, 2, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricAES class]) {
    LibOrgBouncycastleJcajceProviderSymmetricAES_generalAesAttributes = new_JavaUtilHashMap_init();
    {
      (void) [LibOrgBouncycastleJcajceProviderSymmetricAES_generalAesAttributes putWithId:@"SupportedKeyClasses" withId:@"javax.crypto.SecretKey"];
      (void) [LibOrgBouncycastleJcajceProviderSymmetricAES_generalAesAttributes putWithId:@"SupportedKeyFormats" withId:@"RAW"];
    }
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricAES)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_init(LibOrgBouncycastleJcajceProviderSymmetricAES *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES *new_LibOrgBouncycastleJcajceProviderSymmetricAES_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES *create_LibOrgBouncycastleJcajceProviderSymmetricAES_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleJcajceProviderSymmetricUtilBlockCipherProvider_(self, new_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<LibOrgBouncycastleCryptoBlockCipher>)get {
  return new_LibOrgBouncycastleCryptoEnginesAESEngine_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoBlockCipher;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES_ECB;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 = { "", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 0, -1, 1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_ECB_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_CFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_CFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_CFB = { "CFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_CFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_CFB_init(LibOrgBouncycastleJcajceProviderSymmetricAES_CFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesCFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CFB *new_LibOrgBouncycastleJcajceProviderSymmetricAES_CFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CFB *create_LibOrgBouncycastleJcajceProviderSymmetricAES_CFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_CFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_OFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_OFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_OFB = { "OFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_OFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_OFB_init(LibOrgBouncycastleJcajceProviderSymmetricAES_OFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesOFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init(), 128)), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_OFB *new_LibOrgBouncycastleJcajceProviderSymmetricAES_OFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_OFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_OFB *create_LibOrgBouncycastleJcajceProviderSymmetricAES_OFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_OFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_OFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_GCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_GCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_GCM = { "GCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_GCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_GCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_GCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoModesAEADBlockCipher_(self, new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_GCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_GCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_GCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_GCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_GCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_GCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_GCM)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_CCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_CCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_CCM = { "CCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_CCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_CCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_CCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoModesAEADBlockCipher_withBoolean_withInt_(self, new_LibOrgBouncycastleCryptoModesCCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), false, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_CCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_CCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_CCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_CCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_CCM)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC = { "AESCMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC = { "AESGMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsGMac_initWithLibOrgBouncycastleCryptoModesGCMBlockCipher_(new_LibOrgBouncycastleCryptoModesGCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init())));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AESGMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;", "LLibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC = { "AESCCMMAC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, 1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params {
  [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) init__WithBoolean:true withLibOrgBouncycastleCryptoCipherParameters:params];
  self->macLength_ = ((IOSByteArray *) nil_chk([ccm_ getMac]))->size_;
}

- (NSString *)getAlgorithmName {
  return JreStrcat("$$", [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) getAlgorithmName], @"Mac");
}

- (jint)getMacSize {
  return macLength_;
}

- (void)updateWithByte:(jbyte)inArg {
  [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) processAADByteWithByte:inArg];
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) processAADBytesWithByteArray:inArg withInt:inOff withInt:len];
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  @try {
    return [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) doFinalWithByteArray:outArg withInt:0];
  }
  @catch (LibOrgBouncycastleCryptoInvalidCipherTextException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"exception on doFinal(): ", [e description]));
  }
}

- (void)reset {
  [((LibOrgBouncycastleCryptoModesCCMBlockCipher *) nil_chk(ccm_)) reset];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 6, 7, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, 7, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithLibOrgBouncycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getAlgorithmName);
  methods[3].selector = @selector(getMacSize);
  methods[4].selector = @selector(updateWithByte:);
  methods[5].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(doFinalWithByteArray:withInt:);
  methods[7].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ccm_", "LLibOrgBouncycastleCryptoModesCCMBlockCipher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "macLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LLibOrgBouncycastleCryptoCipherParameters;", "LJavaLangIllegalArgumentException;", "update", "B", "LJavaLangIllegalStateException;", "[BII", "LLibOrgBouncycastleCryptoDataLengthException;LJavaLangIllegalStateException;", "doFinal", "[BI", "LLibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac = { "CCMMac", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0xa, 8, 2, 10, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *self) {
  NSObject_init(self);
  self->ccm_ = new_LibOrgBouncycastleCryptoModesCCMBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init());
  self->macLength_ = 8;
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AESCCMMAC_CCMMac)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory = { "KeyFactory", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory_init(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseSecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, @"AES", nil);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyFactory)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305 = { "Poly1305", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305_init(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsPoly1305_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen = { "Poly1305KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"Poly1305-AES", 256, new_LibOrgBouncycastleCryptoGeneratorsPoly1305KeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_Poly1305KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap = { "Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesAESWrapEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad = { "WrapPad", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad_init(LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesAESWrapPadEngine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad *new_LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad *create_LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_WrapPad)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap = { "RFC3211Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_withInt_(self, new_LibOrgBouncycastleCryptoEnginesRFC3211WrapEngine_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC3211Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap = { "RFC5649Wrap", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap_init(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseWrapCipher_initWithLibOrgBouncycastleCryptoWrapper_(self, new_LibOrgBouncycastleCryptoEnginesRFC5649WrapEngine_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap *new_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap *create_LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_RFC5649Wrap)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC = { "PBEWithAESCBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithAESCBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128 = { "PBEWithSHA1AESCBC128", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC128)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192 = { "PBEWithSHA1AESCBC192", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 192, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC192)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256 = { "PBEWithSHA1AESCBC256", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 256, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA1AESCBC256)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128 = { "PBEWithSHA256AESCBC128", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 128, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC128)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192 = { "PBEWithSHA256AESCBC192", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 192, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC192)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256 = { "PBEWithSHA256AESCBC256", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_withInt_withInt_withInt_(self, new_LibOrgBouncycastleCryptoModesCBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesAESEngine_init()), LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 256, 16);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256AESCBC256)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)keySize {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(self, keySize);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(self, 192);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen, init)
}

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *self, jint keySize) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"AES", keySize, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen, initWithInt_, keySize)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen, initWithInt_, keySize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128 = { "KeyGen128", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128_init(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(self, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen128)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192 = { "KeyGen192", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192_init(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(self, 192);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen192)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256 = { "KeyGen256", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256_init(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256 *new_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256 *create_LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_KeyGen256)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC = { "PBEWithSHAAnd128BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA1And128BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 128, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd128BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC = { "PBEWithSHAAnd192BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA1And192BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 192, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd192BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC = { "PBEWithSHAAnd256BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA1And256BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA1, 256, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHAAnd256BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC = { "PBEWithSHA256And128BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA256And128BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 128, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And128BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC = { "PBEWithSHA256And192BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA256And192BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 192, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And192BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC = { "PBEWithSHA256And256BitAESBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithSHA256And256BitAES-CBC-BC", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_PKCS12, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_SHA256, 256, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithSHA256And256BitAESBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL = { "PBEWithMD5And128BitAESCBCOpenSSL", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithMD5And128BitAES-CBC-OpenSSL", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_OPENSSL, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD5, 128, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And128BitAESCBCOpenSSL)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL = { "PBEWithMD5And192BitAESCBCOpenSSL", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithMD5And192BitAES-CBC-OpenSSL", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_OPENSSL, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD5, 192, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And192BitAESCBCOpenSSL)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL = { "PBEWithMD5And256BitAESCBCOpenSSL", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL_init(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilPBESecretKeyFactory_initWithNSString_withLibOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withInt_withInt_withInt_withInt_(self, @"PBEWithMD5And256BitAES-CBC-OpenSSL", nil, true, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_OPENSSL, LibOrgBouncycastleJcajceProviderSymmetricUtilPBE_MD5, 256, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL *new_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL *create_LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_PBEWithMD5And256BitAESCBCOpenSSL)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for AES parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:16];
  if (random_ == nil) {
    random_ = new_JavaSecuritySecureRandom_init();
  }
  [random_ nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"AES"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithJavaSecuritySpecAlgorithmParameterSpec:new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_(iv)];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen = { "AlgParamGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGen)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for AES parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *iv = [IOSByteArray newArrayWithLength:12];
  if (random_ == nil) {
    random_ = new_JavaSecuritySecureRandom_init();
  }
  [random_ nextBytesWithByteArray:iv];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"CCM"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithByteArray:[new_LibOrgBouncycastleAsn1CmsCmsCCMParameters_initWithByteArray_withInt_(iv, 12) getEncoded]];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM = { "AlgParamGenCCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenCCM)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)genParamSpec
                                withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"No supported AlgorithmParameterSpec for AES parameter generation.");
}

- (JavaSecurityAlgorithmParameters *)engineGenerateParameters {
  IOSByteArray *nonce = [IOSByteArray newArrayWithLength:12];
  if (random_ == nil) {
    random_ = new_JavaSecuritySecureRandom_init();
  }
  [random_ nextBytesWithByteArray:nonce];
  JavaSecurityAlgorithmParameters *params;
  @try {
    params = [self createParametersInstanceWithNSString:@"GCM"];
    [((JavaSecurityAlgorithmParameters *) nil_chk(params)) init__WithByteArray:[new_LibOrgBouncycastleAsn1CmsGCMParameters_initWithByteArray_withInt_(nonce, 16) getEncoded]];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
  return params;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(engineGenerateParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM = { "AlgParamGenGCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 3, 0, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameterGenerator_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamGenGCM)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)engineToString {
  return @"AES IV";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineToString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams = { "AlgParams", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilIvAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParams)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec {
  if (LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec)) {
    gcmParams_ = LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmParametersWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec);
  }
  else if ([paramSpec isKindOfClass:[LibOrgBouncycastleJcajceSpecAEADParameterSpec class]]) {
    gcmParams_ = new_LibOrgBouncycastleAsn1CmsGCMParameters_initWithByteArray_withInt_([((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) paramSpec))) getNonce], [((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) paramSpec))) getMacSizeInBits] / 8);
  }
  else {
    @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(JreStrcat("$$", @"AlgorithmParameterSpec class not recognized: ", [[((id<JavaSecuritySpecAlgorithmParameterSpec>) nil_chk(paramSpec)) java_getClass] getName]));
  }
}

- (void)engineInitWithByteArray:(IOSByteArray *)params {
  gcmParams_ = LibOrgBouncycastleAsn1CmsGCMParameters_getInstanceWithId_(params);
}

- (void)engineInitWithByteArray:(IOSByteArray *)params
                   withNSString:(NSString *)format {
  if (![self isASN1FormatStringWithNSString:format]) {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown format specified");
  }
  gcmParams_ = LibOrgBouncycastleAsn1CmsGCMParameters_getInstanceWithId_(params);
}

- (IOSByteArray *)engineGetEncoded {
  return [((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getEncoded];
}

- (IOSByteArray *)engineGetEncodedWithNSString:(NSString *)format {
  if (![self isASN1FormatStringWithNSString:format]) {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown format specified");
  }
  return [((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getEncoded];
}

- (NSString *)engineToString {
  return @"GCM";
}

- (id<JavaSecuritySpecAlgorithmParameterSpec>)localEngineGetParameterSpecWithIOSClass:(IOSClass *)paramSpec {
  if (paramSpec == JavaSecuritySpecAlgorithmParameterSpec_class_() || LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithIOSClass_(paramSpec)) {
    if (LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_gcmSpecExists()) {
      return LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmSpecWithLibOrgBouncycastleAsn1ASN1Primitive_([((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) toASN1Primitive]);
    }
    return new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getNonce], [((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getIcvLen] * 8);
  }
  if (paramSpec == LibOrgBouncycastleJcajceSpecAEADParameterSpec_class_()) {
    return new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getNonce], [((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getIcvLen] * 8);
  }
  if (paramSpec == JavaxCryptoSpecIvParameterSpec_class_()) {
    return new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_([((LibOrgBouncycastleAsn1CmsGCMParameters *) nil_chk(gcmParams_)) getNonce]);
  }
  @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(JreStrcat("$$", @"AlgorithmParameterSpec not recognized: ", [((IOSClass *) nil_chk(paramSpec)) getName]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 5, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, 6, 7, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecAlgorithmParameterSpec;", 0x4, 8, 9, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[2].selector = @selector(engineInitWithByteArray:);
  methods[3].selector = @selector(engineInitWithByteArray:withNSString:);
  methods[4].selector = @selector(engineGetEncoded);
  methods[5].selector = @selector(engineGetEncodedWithNSString:);
  methods[6].selector = @selector(engineToString);
  methods[7].selector = @selector(localEngineGetParameterSpecWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gcmParams_", "LLibOrgBouncycastleAsn1CmsGCMParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;", "LJavaSecuritySpecInvalidParameterSpecException;", "[B", "LJavaIoIOException;", "[BLNSString;", "engineGetEncoded", "LNSString;", "localEngineGetParameterSpec", "LIOSClass;", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM = { "AlgParamsGCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 8, 1, 10, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsGCM)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineInitWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec {
  if (LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec)) {
    ccmParams_ = LibOrgBouncycastleAsn1CmsCmsCCMParameters_getInstanceWithId_(LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmParametersWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec));
  }
  else if ([paramSpec isKindOfClass:[LibOrgBouncycastleJcajceSpecAEADParameterSpec class]]) {
    ccmParams_ = new_LibOrgBouncycastleAsn1CmsCmsCCMParameters_initWithByteArray_withInt_([((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) paramSpec))) getNonce], [((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) nil_chk(((LibOrgBouncycastleJcajceSpecAEADParameterSpec *) paramSpec))) getMacSizeInBits] / 8);
  }
  else {
    @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(JreStrcat("$$", @"AlgorithmParameterSpec class not recognized: ", [[((id<JavaSecuritySpecAlgorithmParameterSpec>) nil_chk(paramSpec)) java_getClass] getName]));
  }
}

- (void)engineInitWithByteArray:(IOSByteArray *)params {
  ccmParams_ = LibOrgBouncycastleAsn1CmsCmsCCMParameters_getInstanceWithId_(params);
}

- (void)engineInitWithByteArray:(IOSByteArray *)params
                   withNSString:(NSString *)format {
  if (![self isASN1FormatStringWithNSString:format]) {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown format specified");
  }
  ccmParams_ = LibOrgBouncycastleAsn1CmsCmsCCMParameters_getInstanceWithId_(params);
}

- (IOSByteArray *)engineGetEncoded {
  return [((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getEncoded];
}

- (IOSByteArray *)engineGetEncodedWithNSString:(NSString *)format {
  if (![self isASN1FormatStringWithNSString:format]) {
    @throw new_JavaIoIOException_initWithNSString_(@"unknown format specified");
  }
  return [((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getEncoded];
}

- (NSString *)engineToString {
  return @"CCM";
}

- (id<JavaSecuritySpecAlgorithmParameterSpec>)localEngineGetParameterSpecWithIOSClass:(IOSClass *)paramSpec {
  if (paramSpec == JavaSecuritySpecAlgorithmParameterSpec_class_() || LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_isGcmSpecWithIOSClass_(paramSpec)) {
    if (LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_gcmSpecExists()) {
      return LibOrgBouncycastleJcajceProviderSymmetricGcmSpecUtil_extractGcmSpecWithLibOrgBouncycastleAsn1ASN1Primitive_([((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) toASN1Primitive]);
    }
    return new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getNonce], [((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getIcvLen] * 8);
  }
  if (paramSpec == LibOrgBouncycastleJcajceSpecAEADParameterSpec_class_()) {
    return new_LibOrgBouncycastleJcajceSpecAEADParameterSpec_initWithByteArray_withInt_([((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getNonce], [((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getIcvLen] * 8);
  }
  if (paramSpec == JavaxCryptoSpecIvParameterSpec_class_()) {
    return new_JavaxCryptoSpecIvParameterSpec_initWithByteArray_([((LibOrgBouncycastleAsn1CmsCmsCCMParameters *) nil_chk(ccmParams_)) getNonce]);
  }
  @throw new_JavaSecuritySpecInvalidParameterSpecException_initWithNSString_(JreStrcat("$$", @"AlgorithmParameterSpec not recognized: ", [((IOSClass *) nil_chk(paramSpec)) getName]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 5, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x4, 6, 7, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecAlgorithmParameterSpec;", 0x4, 8, 9, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineInitWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[2].selector = @selector(engineInitWithByteArray:);
  methods[3].selector = @selector(engineInitWithByteArray:withNSString:);
  methods[4].selector = @selector(engineGetEncoded);
  methods[5].selector = @selector(engineGetEncodedWithNSString:);
  methods[6].selector = @selector(engineToString);
  methods[7].selector = @selector(localEngineGetParameterSpecWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ccmParams_", "LLibOrgBouncycastleAsn1CmsCmsCCMParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "engineInit", "LJavaSecuritySpecAlgorithmParameterSpec;", "LJavaSecuritySpecInvalidParameterSpecException;", "[B", "LJavaIoIOException;", "[BLNSString;", "engineGetEncoded", "LNSString;", "localEngineGetParameterSpec", "LIOSClass;", "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM = { "AlgParamsCCM", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 8, 1, 10, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM_init(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseAlgorithmParameters_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM *new_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM *create_LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_AlgParamsCCM)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"AlgorithmParameters.AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParams")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC)) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC)) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.GCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParamsGCM")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM)) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM)) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM)) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameters.CCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParamsCCM")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM)) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM)) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameters.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM)) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParamGen")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameterGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameterGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameterGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC)) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC)) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)) withNSString:@"AES"];
  [provider addAttributesWithNSString:@"Cipher.AES" withJavaUtilMap:JreLoadStatic(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes)];
  [provider addAlgorithmWithNSString:@"Cipher.AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Cipher.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Cipher.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Cipher.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256) withNSString:@"AES"];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CFB")];
  [provider addAlgorithmWithNSString:@"Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CFB")];
  [provider addAttributesWithNSString:@"Cipher.AESWRAP" withJavaUtilMap:JreLoadStatic(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes)];
  [provider addAlgorithmWithNSString:@"Cipher.AESWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$Wrap")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) withNSString:@"AESWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap) withNSString:@"AESWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap) withNSString:@"AESWRAP"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.AESKW" withNSString:@"AESWRAP"];
  [provider addAttributesWithNSString:@"Cipher.AESWRAPPAD" withJavaUtilMap:JreLoadStatic(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes)];
  [provider addAlgorithmWithNSString:@"Cipher.AESWRAPPAD" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$WrapPad")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap_pad) withNSString:@"AESWRAPPAD"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap_pad) withNSString:@"AESWRAPPAD"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap_pad) withNSString:@"AESWRAPPAD"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.AESKWP" withNSString:@"AESWRAPPAD"];
  [provider addAlgorithmWithNSString:@"Cipher.AESRFC3211WRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$RFC3211Wrap")];
  [provider addAlgorithmWithNSString:@"Cipher.AESRFC5649WRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$RFC5649Wrap")];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.CCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParamGenCCM")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM)) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM)) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM)) withNSString:@"CCM"];
  [provider addAttributesWithNSString:@"Cipher.CCM" withJavaUtilMap:JreLoadStatic(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes)];
  [provider addAlgorithmWithNSString:@"Cipher.CCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$CCM")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM) withNSString:@"CCM"];
  [provider addAlgorithmWithNSString:@"AlgorithmParameterGenerator.GCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AlgParamGenGCM")];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM)) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM)) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:JreStrcat("$@", @"Alg.Alias.AlgorithmParameterGenerator.", JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM)) withNSString:@"GCM"];
  [provider addAttributesWithNSString:@"Cipher.GCM" withJavaUtilMap:JreLoadStatic(LibOrgBouncycastleJcajceProviderSymmetricAES, generalAesAttributes)];
  [provider addAlgorithmWithNSString:@"Cipher.GCM" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$GCM")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM) withNSString:@"GCM"];
  [provider addAlgorithmWithNSString:@"KeyGenerator.AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"KeyGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"KeyGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"KeyGenerator.", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_ECB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_OFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CFB) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.AESWRAP" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.AESWRAPPAD" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap_pad) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap_pad) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen192")];
  [provider addAlgorithmWithNSString:@"KeyGenerator" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap_pad) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen256")];
  [provider addAlgorithmWithNSString:@"Mac.AESCMAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AESCMAC")];
  [provider addAlgorithmWithNSString:@"Mac.AESCCMMAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AESCCMMAC")];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Mac.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM))) getId]) withNSString:@"AESCCMMAC"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Mac.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM))) getId]) withNSString:@"AESCCMMAC"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.Mac.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM))) getId]) withNSString:@"AESCCMMAC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes128_cbc) withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes192_cbc) withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes256_cbc) withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes128_cbc) withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes192_cbc) withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes256_cbc) withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND128BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA1AESCBC128")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND192BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA1AESCBC192")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHAAND256BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA1AESCBC256")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHA256AND128BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256AESCBC128")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHA256AND192BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256AESCBC192")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHSHA256AND256BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256AESCBC256")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAAND128BITAES-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAAND192BITAES-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHAAND256BITAES-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND128BITAES-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND192BITAES-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA1AND256BITAES-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND128BITAES-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND192BITAES-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-1AND256BITAES-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA256AND128BITAES-BC" withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA256AND192BITAES-BC" withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA256AND256BITAES-BC" withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND128BITAES-BC" withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND192BITAES-BC" withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Cipher.PBEWITHSHA-256AND256BITAES-BC" withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHMD5AND128BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithAESCBC")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHMD5AND192BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithAESCBC")];
  [provider addAlgorithmWithNSString:@"Cipher.PBEWITHMD5AND256BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithAESCBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1NistNISTObjectIdentifiers, aes) withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyFactory")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHMD5AND128BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithMD5And128BitAESCBCOpenSSL")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHMD5AND192BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithMD5And192BitAESCBCOpenSSL")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHMD5AND256BITAES-CBC-OPENSSL" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithMD5And256BitAESCBCOpenSSL")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHAAnd128BitAESBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND192BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHAAnd192BitAESBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHAAND256BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHAAnd256BitAESBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHA256AND128BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256And128BitAESBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHA256AND192BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256And192BitAESBC")];
  [provider addAlgorithmWithNSString:@"SecretKeyFactory.PBEWITHSHA256AND256BITAES-CBC-BC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$PBEWithSHA256And256BitAESBC")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND128BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND192BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND256BITAES-CBC-BC" withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND128BITAES-BC" withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND192BITAES-BC" withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND256BITAES-BC" withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes128_cbc) withNSString:@"PBEWITHSHAAND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes192_cbc) withNSString:@"PBEWITHSHAAND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes256_cbc) withNSString:@"PBEWITHSHAAND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes128_cbc) withNSString:@"PBEWITHSHA256AND128BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes192_cbc) withNSString:@"PBEWITHSHA256AND192BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.SecretKeyFactory" withLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes256_cbc) withNSString:@"PBEWITHSHA256AND256BITAES-CBC-BC"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND128BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND192BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHAAND256BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND128BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND192BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND256BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND128BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND192BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND256BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND128BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND192BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND256BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND128BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND192BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:@"Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND256BITAES-CBC-BC" withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes128_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes192_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha1_pkcs12_aes256_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes128_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes192_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [provider addAlgorithmWithNSString:JreStrcat("$$", @"Alg.Alias.AlgorithmParameters.", [((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(LibOrgBouncycastleAsn1BcBCObjectIdentifiers, bc_pbe_sha256_pkcs12_aes256_cbc))) getId]) withNSString:@"PKCS12PBE"];
  [self addGMacAlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$AESGMAC") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$KeyGen128")];
  [self addPoly1305AlgorithmWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:provider withNSString:@"AES" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$Poly1305") withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, @"$Poly1305KeyGen")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "wrongAES128", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "wrongAES192", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "wrongAES256", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX, &LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES128, &LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES192, &LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_wrongAES256, "LLibOrgBouncycastleJcajceProviderSymmetricAES;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 4, 6, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricAES_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings *self) {
  LibOrgBouncycastleJcajceProviderSymmetricSymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricAES_Mappings)
