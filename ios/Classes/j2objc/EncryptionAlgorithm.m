//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/tls/EncryptionAlgorithm.java
//

#include "EncryptionAlgorithm.h"
#include "J2ObjC_source.h"

@implementation LibOrgBouncycastleCryptoTlsEncryptionAlgorithm

+ (jint)NULL_ {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_NULL;
}

+ (jint)RC4_40 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC4_40;
}

+ (jint)RC4_128 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC4_128;
}

+ (jint)RC2_CBC_40 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC2_CBC_40;
}

+ (jint)IDEA_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_IDEA_CBC;
}

+ (jint)DES40_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_DES40_CBC;
}

+ (jint)DES_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_DES_CBC;
}

+ (jint)_3DES_EDE_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm__3DES_EDE_CBC;
}

+ (jint)AES_128_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CBC;
}

+ (jint)AES_256_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CBC;
}

+ (jint)AES_128_GCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_GCM;
}

+ (jint)AES_256_GCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_GCM;
}

+ (jint)CAMELLIA_128_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_128_CBC;
}

+ (jint)CAMELLIA_256_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_256_CBC;
}

+ (jint)SEED_CBC {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_SEED_CBC;
}

+ (jint)AES_128_CCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CCM;
}

+ (jint)AES_128_CCM_8 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CCM_8;
}

+ (jint)AES_256_CCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CCM;
}

+ (jint)AES_256_CCM_8 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CCM_8;
}

+ (jint)CAMELLIA_128_GCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_128_GCM;
}

+ (jint)CAMELLIA_256_GCM {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_256_GCM;
}

+ (jint)CHACHA20_POLY1305 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CHACHA20_POLY1305;
}

+ (jint)AES_128_OCB_TAGLEN96 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_OCB_TAGLEN96;
}

+ (jint)AES_256_OCB_TAGLEN96 {
  return LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_OCB_TAGLEN96;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_NULL, 0x19, -1, -1, -1, -1 },
    { "RC4_40", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC4_40, 0x19, -1, -1, -1, -1 },
    { "RC4_128", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC4_128, 0x19, -1, -1, -1, -1 },
    { "RC2_CBC_40", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_RC2_CBC_40, 0x19, -1, -1, -1, -1 },
    { "IDEA_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_IDEA_CBC, 0x19, -1, -1, -1, -1 },
    { "DES40_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_DES40_CBC, 0x19, -1, -1, -1, -1 },
    { "DES_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_DES_CBC, 0x19, -1, -1, -1, -1 },
    { "_3DES_EDE_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm__3DES_EDE_CBC, 0x19, -1, -1, -1, -1 },
    { "AES_128_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CBC, 0x19, -1, -1, -1, -1 },
    { "AES_256_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CBC, 0x19, -1, -1, -1, -1 },
    { "AES_128_GCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_GCM, 0x19, -1, -1, -1, -1 },
    { "AES_256_GCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_GCM, 0x19, -1, -1, -1, -1 },
    { "CAMELLIA_128_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_128_CBC, 0x19, -1, -1, -1, -1 },
    { "CAMELLIA_256_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_256_CBC, 0x19, -1, -1, -1, -1 },
    { "SEED_CBC", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_SEED_CBC, 0x19, -1, -1, -1, -1 },
    { "AES_128_CCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CCM, 0x19, -1, -1, -1, -1 },
    { "AES_128_CCM_8", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_CCM_8, 0x19, -1, -1, -1, -1 },
    { "AES_256_CCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CCM, 0x19, -1, -1, -1, -1 },
    { "AES_256_CCM_8", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_CCM_8, 0x19, -1, -1, -1, -1 },
    { "CAMELLIA_128_GCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_128_GCM, 0x19, -1, -1, -1, -1 },
    { "CAMELLIA_256_GCM", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CAMELLIA_256_GCM, 0x19, -1, -1, -1, -1 },
    { "CHACHA20_POLY1305", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_CHACHA20_POLY1305, 0x19, -1, -1, -1, -1 },
    { "AES_128_OCB_TAGLEN96", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_128_OCB_TAGLEN96, 0x19, -1, -1, -1, -1 },
    { "AES_256_OCB_TAGLEN96", "I", .constantValue.asInt = LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_AES_256_OCB_TAGLEN96, 0x19, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _LibOrgBouncycastleCryptoTlsEncryptionAlgorithm = { "EncryptionAlgorithm", "lib.org.bouncycastle.crypto.tls", NULL, methods, fields, 7, 0x1, 1, 24, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleCryptoTlsEncryptionAlgorithm;
}

@end

void LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_init(LibOrgBouncycastleCryptoTlsEncryptionAlgorithm *self) {
  NSObject_init(self);
}

LibOrgBouncycastleCryptoTlsEncryptionAlgorithm *new_LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleCryptoTlsEncryptionAlgorithm, init)
}

LibOrgBouncycastleCryptoTlsEncryptionAlgorithm *create_LibOrgBouncycastleCryptoTlsEncryptionAlgorithm_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleCryptoTlsEncryptionAlgorithm, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleCryptoTlsEncryptionAlgorithm)
