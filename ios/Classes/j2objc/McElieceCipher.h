//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/crypto/mceliece/McElieceCipher.java
//

#ifndef McElieceCipher_H
#define McElieceCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "MessageEncryptor.h"

@class IOSByteArray;
@class LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters;
@protocol LibOrgBouncycastleCryptoCipherParameters;

@interface LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher : NSObject < LibOrgBouncycastlePqcCryptoMessageEncryptor > {
 @public
  jint maxPlainTextSize_;
  jint cipherTextSize_;
}
@property (readonly, copy, class) NSString *OID NS_SWIFT_NAME(OID);

+ (NSString *)OID;

#pragma mark Public

- (instancetype __nonnull)init;

- (jint)getKeySizeWithLibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters:(LibOrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *)key;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)messageDecryptWithByteArray:(IOSByteArray *)input;

- (IOSByteArray *)messageEncryptWithByteArray:(IOSByteArray *)input;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher)

inline NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher, OID, NSString *)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher_init(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher *new_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher *create_LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcCryptoMcelieceMcElieceCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // McElieceCipher_H
