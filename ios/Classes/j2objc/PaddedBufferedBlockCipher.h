//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/paddings/PaddedBufferedBlockCipher.java
//

#ifndef PaddedBufferedBlockCipher_H
#define PaddedBufferedBlockCipher_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BufferedBlockCipher.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@protocol LibOrgBouncycastleCryptoBlockCipher;
@protocol LibOrgBouncycastleCryptoCipherParameters;
@protocol LibOrgBouncycastleCryptoPaddingsBlockCipherPadding;

@interface LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher : LibOrgBouncycastleCryptoBufferedBlockCipher {
 @public
  id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding> padding_;
}

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher;

- (instancetype __nonnull)initWithLibOrgBouncycastleCryptoBlockCipher:(id<LibOrgBouncycastleCryptoBlockCipher>)cipher
               withLibOrgBouncycastleCryptoPaddingsBlockCipherPadding:(id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding>)padding;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (jint)getOutputSizeWithInt:(jint)len;

- (jint)getUpdateOutputSizeWithInt:(jint)len;

- (void)init__WithBoolean:(jboolean)forEncryption
withLibOrgBouncycastleCryptoCipherParameters:(id<LibOrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processByteWithByte:(jbyte)inArg
              withByteArray:(IOSByteArray *)outArg
                    withInt:(jint)outOff;

- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher, padding_, id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding>)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withLibOrgBouncycastleCryptoPaddingsBlockCipherPadding_(LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *self, id<LibOrgBouncycastleCryptoBlockCipher> cipher, id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding> padding);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *new_LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withLibOrgBouncycastleCryptoPaddingsBlockCipherPadding_(id<LibOrgBouncycastleCryptoBlockCipher> cipher, id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding> padding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *create_LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withLibOrgBouncycastleCryptoPaddingsBlockCipherPadding_(id<LibOrgBouncycastleCryptoBlockCipher> cipher, id<LibOrgBouncycastleCryptoPaddingsBlockCipherPadding> padding);

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *self, id<LibOrgBouncycastleCryptoBlockCipher> cipher);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *new_LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> cipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher *create_LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(id<LibOrgBouncycastleCryptoBlockCipher> cipher);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoPaddingsPaddedBufferedBlockCipher)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PaddedBufferedBlockCipher_H
