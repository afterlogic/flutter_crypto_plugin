//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/crypto/io/DigestInputStream.java
//

#ifndef DigestInputStream_H
#define DigestInputStream_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@protocol LibOrgBouncycastleCryptoDigest;

@interface LibOrgBouncycastleCryptoIoDigestInputStream : JavaIoFilterInputStream {
 @public
  id<LibOrgBouncycastleCryptoDigest> digest_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                 withLibOrgBouncycastleCryptoDigest:(id<LibOrgBouncycastleCryptoDigest>)digest;

- (id<LibOrgBouncycastleCryptoDigest>)getDigest;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleCryptoIoDigestInputStream)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleCryptoIoDigestInputStream, digest_, id<LibOrgBouncycastleCryptoDigest>)

FOUNDATION_EXPORT void LibOrgBouncycastleCryptoIoDigestInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoDigest_(LibOrgBouncycastleCryptoIoDigestInputStream *self, JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoDigestInputStream *new_LibOrgBouncycastleCryptoIoDigestInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoDigest_(JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleCryptoIoDigestInputStream *create_LibOrgBouncycastleCryptoIoDigestInputStream_initWithJavaIoInputStream_withLibOrgBouncycastleCryptoDigest_(JavaIoInputStream *stream, id<LibOrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleCryptoIoDigestInputStream)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DigestInputStream_H
