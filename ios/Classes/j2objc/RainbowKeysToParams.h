//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeysToParams.java
//

#ifndef RainbowKeysToParams_H
#define RainbowKeysToParams_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;

@interface LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key;

+ (LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams)

FOUNDATION_EXPORT void LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_init(LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams *self);

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams *new_LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams *create_LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_init(void);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_generatePublicKeyParameterWithJavaSecurityPublicKey_(id<JavaSecurityPublicKey> key);

FOUNDATION_EXPORT LibOrgBouncycastleCryptoParamsAsymmetricKeyParameter *LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(id<JavaSecurityPrivateKey> key);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastlePqcJcajceProviderRainbowRainbowKeysToParams)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RainbowKeysToParams_H
