//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/drbg/DRBG.java
//

#include "Arrays.h"
#include "AsymmetricAlgorithmProvider.h"
#include "ClassUtil.h"
#include "ConfigurableProvider.h"
#include "DRBG.h"
#include "EntropySource.h"
#include "EntropySourceProvider.h"
#include "HMac.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pack.h"
#include "SHA512Digest.h"
#include "SP800SecureRandom.h"
#include "SP800SecureRandomBuilder.h"
#include "Strings.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/InternalError.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Method.h"
#include "java/net/URL.h"
#include "java/security/AccessController.h"
#include "java/security/PrivilegedAction.h"
#include "java/security/Provider.h"
#include "java/security/SecureRandom.h"
#include "java/security/SecureRandomSpi.h"
#include "java/security/Security.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG ()

+ (IOSObjectArray *)findSource;

+ (JavaSecuritySecureRandom *)createInitialEntropySource;

+ (JavaSecuritySecureRandom *)createCoreSecureRandom;

+ (id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)createEntropySource;

+ (JavaSecuritySecureRandom *)createBaseRandomWithBoolean:(jboolean)isPredictionResistant;

+ (IOSByteArray *)generateDefaultPersonalizationStringWithByteArray:(IOSByteArray *)seed;

+ (IOSByteArray *)generateNonceIVPersonalizationStringWithByteArray:(IOSByteArray *)seed;

@end

inline NSString *LibOrgBouncycastleJcajceProviderDrbgDRBG_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderDrbgDRBG_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDrbgDRBG, PREFIX, NSString *)

inline IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_get_initialEntropySourceNames(void);
static IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDrbgDRBG, initialEntropySourceNames, IOSObjectArray *)

inline IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_get_initialEntropySourceAndSpi(void);
static IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceAndSpi;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDrbgDRBG, initialEntropySourceAndSpi, IOSObjectArray *)

__attribute__((unused)) static IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_findSource(void);

__attribute__((unused)) static JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createInitialEntropySource(void);

__attribute__((unused)) static JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createCoreSecureRandom(void);

__attribute__((unused)) static id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> LibOrgBouncycastleJcajceProviderDrbgDRBG_createEntropySource(void);

__attribute__((unused)) static JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createBaseRandomWithBoolean_(jboolean isPredictionResistant);

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_generateDefaultPersonalizationStringWithByteArray_(IOSByteArray *seed);

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_generateNonceIVPersonalizationStringWithByteArray_(IOSByteArray *seed);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom : JavaSecuritySecureRandom

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_1 : NSObject < JavaSecurityPrivilegedAction >

- (instancetype)init;

- (JavaLangBoolean *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init(void);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_2 : NSObject < JavaSecurityPrivilegedAction >

- (instancetype)init;

- (JavaSecuritySecureRandom *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_2)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init(void);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_3 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  NSString *val$sourceClass_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_3)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *self, NSString *capture$0);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(NSString *capture$0);

inline JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_get_random(void);
static JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default, random, JavaSecuritySecureRandom *)

inline JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_get_random(void);
static JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV, random, JavaSecuritySecureRandom *)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider : JavaSecurityProvider

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom : JavaSecuritySecureRandom {
 @public
  JavaIoInputStream *seedStream_;
}

- (instancetype)initWithJavaNetURL:(JavaNetURL *)url;

- (void)setSeedWithByteArray:(IOSByteArray *)seed;

- (void)setSeedWithLong:(jlong)seed;

- (IOSByteArray *)generateSeedWithInt:(jint)numBytes;

- (jint)privilegedReadWithByteArray:(IOSByteArray *)data
                            withInt:(jint)off
                            withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom, seedStream_, JavaIoInputStream *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *self, JavaNetURL *url);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(JavaNetURL *url) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(JavaNetURL *url);

__attribute__((unused)) static jint LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_privilegedReadWithByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *self, IOSByteArray *data, jint off, jint len);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  JavaNetURL *val$url_;
}

- (instancetype)initWithJavaNetURL:(JavaNetURL *)capture$0;

- (JavaIoInputStream *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *self, JavaNetURL *capture$0);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(JavaNetURL *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(JavaNetURL *capture$0);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *this$0_;
  IOSByteArray *val$data_;
  jint val$off_;
  jint val$len_;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *)outer$
                                                                         withByteArray:(IOSByteArray *)capture$0
                                                                               withInt:(jint)capture$1
                                                                               withInt:(jint)capture$2;

- (JavaLangInteger *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom : JavaSecuritySecureRandom {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *seedAvailable_;
  JavaUtilConcurrentAtomicAtomicInteger *samples_;
  JavaSecuritySecureRandom *baseRandom_;
  LibOrgBouncycastleCryptoPrngSP800SecureRandom *drbg_;
}

- (instancetype)init;

- (void)setSeedWithByteArray:(IOSByteArray *)seed;

- (void)setSeedWithLong:(jlong)seed;

- (IOSByteArray *)generateSeedWithInt:(jint)numBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, seedAvailable_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, samples_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, baseRandom_, JavaSecuritySecureRandom *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, drbg_, LibOrgBouncycastleCryptoPrngSP800SecureRandom *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *self);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init(void);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 : NSObject < LibOrgBouncycastleCryptoPrngEntropySourceProvider > {
 @public
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *this$0_;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *)outer$;

- (id<LibOrgBouncycastleCryptoPrngEntropySource>)getWithInt:(jint)bitsRequired;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$);

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource : NSObject < LibOrgBouncycastleCryptoPrngEntropySource > {
 @public
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *this$0_;
  jint byteLength_;
  JavaUtilConcurrentAtomicAtomicReference *entropy_;
  JavaUtilConcurrentAtomicAtomicBoolean *scheduled_;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *)outer$
                                                                            withInt:(jint)bitsRequired;

- (jboolean)isPredictionResistant;

- (IOSByteArray *)getEntropy;

- (jint)entropySize;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource)

J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource, entropy_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource, scheduled_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource)

@interface LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer : NSObject < JavaLangRunnable > {
 @public
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *this$0_;
  jint numBytes_;
}

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *)outer$
                                                                                                    withInt:(jint)numBytes;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer)

__attribute__((unused)) static void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes);

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes) NS_RETURNS_RETAINED;

__attribute__((unused)) static LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDrbgDRBG)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSObjectArray *)findSource {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_findSource();
}

+ (JavaSecuritySecureRandom *)createInitialEntropySource {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_createInitialEntropySource();
}

+ (JavaSecuritySecureRandom *)createCoreSecureRandom {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_createCoreSecureRandom();
}

+ (id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)createEntropySource {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_createEntropySource();
}

+ (JavaSecuritySecureRandom *)createBaseRandomWithBoolean:(jboolean)isPredictionResistant {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_createBaseRandomWithBoolean_(isPredictionResistant);
}

+ (IOSByteArray *)generateDefaultPersonalizationStringWithByteArray:(IOSByteArray *)seed {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_generateDefaultPersonalizationStringWithByteArray_(seed);
}

+ (IOSByteArray *)generateNonceIVPersonalizationStringWithByteArray:(IOSByteArray *)seed {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_generateNonceIVPersonalizationStringWithByteArray_(seed);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1a, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngEntropySourceProvider;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 4, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findSource);
  methods[2].selector = @selector(createInitialEntropySource);
  methods[3].selector = @selector(createCoreSecureRandom);
  methods[4].selector = @selector(createEntropySource);
  methods[5].selector = @selector(createBaseRandomWithBoolean:);
  methods[6].selector = @selector(generateDefaultPersonalizationStringWithByteArray:);
  methods[7].selector = @selector(generateNonceIVPersonalizationStringWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "initialEntropySourceNames", "[[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "initialEntropySourceAndSpi", "[LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "createBaseRandom", "Z", "generateDefaultPersonalizationString", "[B", "generateNonceIVPersonalizationString", &LibOrgBouncycastleJcajceProviderDrbgDRBG_PREFIX, &LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceNames, &LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceAndSpi, "LLibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom;LLibOrgBouncycastleJcajceProviderDrbgDRBG_Default;LLibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV;LLibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings;LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider;LLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom;LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG = { "DRBG", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, 8, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDrbgDRBG class]) {
    LibOrgBouncycastleJcajceProviderDrbgDRBG_PREFIX = [LibOrgBouncycastleJcajceProviderDrbgDRBG_class_() getName];
    LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceNames = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"sun.security.provider.Sun", @"sun.security.provider.SecureRandom" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"org.apache.harmony.security.provider.crypto.CryptoProvider", @"org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"com.android.org.conscrypt.OpenSSLProvider", @"com.android.org.conscrypt.OpenSSLRandom" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"org.conscrypt.OpenSSLProvider", @"org.conscrypt.OpenSSLRandom" } count:2 type:NSString_class_()] } count:4 type:IOSClass_arrayType(NSString_class_(), 1)];
    LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceAndSpi = LibOrgBouncycastleJcajceProviderDrbgDRBG_findSource();
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDrbgDRBG)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_init(LibOrgBouncycastleJcajceProviderDrbgDRBG *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG, init)
}

IOSObjectArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_findSource() {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  for (jint t = 0; t < ((IOSObjectArray *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceNames))->size_; t++) {
    IOSObjectArray *pair = IOSObjectArray_Get(LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceNames, t);
    @try {
      IOSObjectArray *r = [IOSObjectArray newArrayWithObjects:(id[]){ [((IOSClass *) nil_chk(IOSClass_forName_(IOSObjectArray_Get(nil_chk(pair), 0)))) newInstance], [((IOSClass *) nil_chk(IOSClass_forName_(IOSObjectArray_Get(pair, 1)))) newInstance] } count:2 type:NSObject_class_()];
      return r;
    }
    @catch (JavaLangThrowable *ex) {
      continue;
    }
  }
  return nil;
}

JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createInitialEntropySource() {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  jboolean hasGetInstanceStrong = [((JavaLangBoolean *) nil_chk(JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init()))) booleanValue];
  if (hasGetInstanceStrong) {
    return JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init());
  }
  else {
    return LibOrgBouncycastleJcajceProviderDrbgDRBG_createCoreSecureRandom();
  }
}

JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createCoreSecureRandom() {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  if (LibOrgBouncycastleJcajceProviderDrbgDRBG_initialEntropySourceAndSpi != nil) {
    return new_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init();
  }
  else {
    @try {
      NSString *source = JavaSecuritySecurity_getPropertyWithNSString_(@"securerandom.source");
      return new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(new_JavaNetURL_initWithNSString_(source));
    }
    @catch (JavaLangException *e) {
      return new_JavaSecuritySecureRandom_init();
    }
  }
}

id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> LibOrgBouncycastleJcajceProviderDrbgDRBG_createEntropySource() {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  NSString *sourceClass = JavaLangSystem_getPropertyWithNSString_(@"lib.org.bouncycastle.drbg.entropysource");
  return JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(sourceClass));
}

JavaSecuritySecureRandom *LibOrgBouncycastleJcajceProviderDrbgDRBG_createBaseRandomWithBoolean_(jboolean isPredictionResistant) {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  if (JavaLangSystem_getPropertyWithNSString_(@"lib.org.bouncycastle.drbg.entropysource") != nil) {
    id<LibOrgBouncycastleCryptoPrngEntropySourceProvider> entropyProvider = LibOrgBouncycastleJcajceProviderDrbgDRBG_createEntropySource();
    id<LibOrgBouncycastleCryptoPrngEntropySource> initSource = [((id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>) nil_chk(entropyProvider)) getWithInt:16 * 8];
    IOSByteArray *personalisationString = isPredictionResistant ? LibOrgBouncycastleJcajceProviderDrbgDRBG_generateDefaultPersonalizationStringWithByteArray_([((id<LibOrgBouncycastleCryptoPrngEntropySource>) nil_chk(initSource)) getEntropy]) : LibOrgBouncycastleJcajceProviderDrbgDRBG_generateNonceIVPersonalizationStringWithByteArray_([((id<LibOrgBouncycastleCryptoPrngEntropySource>) nil_chk(initSource)) getEntropy]);
    return [((LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *) nil_chk([new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(entropyProvider) setPersonalizationStringWithByteArray:personalisationString])) buildHashWithLibOrgBouncycastleCryptoDigest:new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init() withByteArray:LibOrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_([initSource getEntropy], [initSource getEntropy]) withBoolean:isPredictionResistant];
  }
  else {
    JavaSecuritySecureRandom *randomSource = new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init();
    IOSByteArray *personalisationString = isPredictionResistant ? LibOrgBouncycastleJcajceProviderDrbgDRBG_generateDefaultPersonalizationStringWithByteArray_([randomSource generateSeedWithInt:16]) : LibOrgBouncycastleJcajceProviderDrbgDRBG_generateNonceIVPersonalizationStringWithByteArray_([randomSource generateSeedWithInt:16]);
    return [((LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *) nil_chk([new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithJavaSecuritySecureRandom_withBoolean_(randomSource, true) setPersonalizationStringWithByteArray:personalisationString])) buildHashWithLibOrgBouncycastleCryptoDigest:new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init() withByteArray:[randomSource generateSeedWithInt:32] withBoolean:isPredictionResistant];
  }
}

IOSByteArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_generateDefaultPersonalizationStringWithByteArray_(IOSByteArray *seed) {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  return LibOrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(LibOrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"Default"), seed, LibOrgBouncycastleUtilPack_longToBigEndianWithLong_([((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getId]), LibOrgBouncycastleUtilPack_longToBigEndianWithLong_(JavaLangSystem_currentTimeMillis()));
}

IOSByteArray *LibOrgBouncycastleJcajceProviderDrbgDRBG_generateNonceIVPersonalizationStringWithByteArray_(IOSByteArray *seed) {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_initialize();
  return LibOrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(LibOrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"Nonce"), seed, LibOrgBouncycastleUtilPack_longToLittleEndianWithLong_([((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getId]), LibOrgBouncycastleUtilPack_longToLittleEndianWithLong_(JavaLangSystem_currentTimeMillis()));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom = { "CoreSecureRandom", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *self) {
  JavaSecuritySecureRandom_initWithJavaSecuritySecureRandomSpi_withJavaSecurityProvider_(self, (JavaSecuritySecureRandomSpi *) cast_chk(IOSObjectArray_Get(nil_chk(JreLoadStatic(LibOrgBouncycastleJcajceProviderDrbgDRBG, initialEntropySourceAndSpi)), 1), [JavaSecuritySecureRandomSpi class]), (JavaSecurityProvider *) cast_chk(IOSObjectArray_Get(JreLoadStatic(LibOrgBouncycastleJcajceProviderDrbgDRBG, initialEntropySourceAndSpi), 0), [JavaSecurityProvider class]));
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_CoreSecureRandom)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangBoolean *)run {
  @try {
    IOSClass *def = JavaSecuritySecureRandom_class_();
    return JavaLangBoolean_valueOfWithBoolean_([def getMethod:@"getInstanceStrong" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]] != nil);
  }
  @catch (JavaLangException *e) {
    return JavaLangBoolean_valueOfWithBoolean_(false);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG;", "createInitialEntropySource", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_1 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, 1, 2, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_1;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_1, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_1_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_1, init)
}

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaSecuritySecureRandom *)run {
  @try {
    return (JavaSecuritySecureRandom *) cast_chk([((JavaLangReflectMethod *) nil_chk([JavaSecuritySecureRandom_class_() getMethod:@"getInstanceStrong" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], [JavaSecuritySecureRandom class]);
  }
  @catch (JavaLangException *e) {
    return LibOrgBouncycastleJcajceProviderDrbgDRBG_createCoreSecureRandom();
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG;", "createInitialEntropySource", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/security/SecureRandom;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_2 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, 1, 2, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_2;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_2, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_2 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_2_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_2, init)
}

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_3

- (instancetype)initWithNSString:(NSString *)capture$0 {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(self, capture$0);
  return self;
}

- (id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>)run {
  @try {
    IOSClass *clazz = LibOrgBouncycastleJcajceProviderSymmetricUtilClassUtil_loadClassWithIOSClass_withNSString_(LibOrgBouncycastleJcajceProviderDrbgDRBG_class_(), val$sourceClass_);
    return (id<LibOrgBouncycastleCryptoPrngEntropySourceProvider>) cast_check([((IOSClass *) nil_chk(clazz)) newInstance], LibOrgBouncycastleCryptoPrngEntropySourceProvider_class_());
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangIllegalStateException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$$", @"entropy source ", val$sourceClass_, @" not created: ", [e getMessage]), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngEntropySourceProvider;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sourceClass_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG;", "createEntropySource", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Llib/org/bouncycastle/crypto/prng/EntropySourceProvider;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_3 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, 2, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_3;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *self, NSString *capture$0) {
  self->val$sourceClass_ = capture$0;
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_3, initWithNSString_, capture$0)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_3 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_3_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_3, initWithNSString_, capture$0)
}

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_Default

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineSetSeedWithByteArray:(IOSByteArray *)bytes {
  [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random)) setSeedWithByteArray:bytes];
}

- (void)engineNextBytesWithByteArray:(IOSByteArray *)bytes {
  [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random)) nextBytesWithByteArray:bytes];
}

- (IOSByteArray *)engineGenerateSeedWithInt:(jint)numBytes {
  return [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random)) generateSeedWithInt:numBytes];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineSetSeedWithByteArray:);
  methods[2].selector = @selector(engineNextBytesWithByteArray:);
  methods[3].selector = @selector(engineGenerateSeedWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "engineSetSeed", "[B", "engineNextBytes", "engineGenerateSeed", "I", &LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random, "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_Default = { "Default", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x9, 4, 1, 6, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_Default;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDrbgDRBG_Default class]) {
    LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_random = LibOrgBouncycastleJcajceProviderDrbgDRBG_createBaseRandomWithBoolean_(true);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *self) {
  JavaSecuritySecureRandomSpi_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_Default *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_Default_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_Default)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)engineSetSeedWithByteArray:(IOSByteArray *)bytes {
  [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random)) setSeedWithByteArray:bytes];
}

- (void)engineNextBytesWithByteArray:(IOSByteArray *)bytes {
  [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random)) nextBytesWithByteArray:bytes];
}

- (IOSByteArray *)engineGenerateSeedWithInt:(jint)numBytes {
  return [((JavaSecuritySecureRandom *) nil_chk(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random)) generateSeedWithInt:numBytes];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(engineSetSeedWithByteArray:);
  methods[2].selector = @selector(engineNextBytesWithByteArray:);
  methods[3].selector = @selector(engineGenerateSeedWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "engineSetSeed", "[B", "engineNextBytes", "engineGenerateSeed", "I", &LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random, "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV = { "NonceAndIV", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x9, 4, 1, 6, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV class]) {
    LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_random = LibOrgBouncycastleJcajceProviderDrbgDRBG_createBaseRandomWithBoolean_(false);
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV)
  }
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *self) {
  JavaSecuritySecureRandomSpi_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_NonceAndIV)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"SecureRandom.DEFAULT" withNSString:JreStrcat("$$", JreLoadStatic(LibOrgBouncycastleJcajceProviderDrbgDRBG, PREFIX), @"$Default")];
  [provider addAlgorithmWithNSString:@"SecureRandom.NONCEANDIV" withNSString:JreStrcat("$$", JreLoadStatic(LibOrgBouncycastleJcajceProviderDrbgDRBG, PREFIX), @"$NonceAndIV")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAsymmetricAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_Mappings)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider = { "HybridRandomProvider", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *self) {
  JavaSecurityProvider_initWithNSString_withDouble_withNSString_(self, @"BCHEP", 1.0, @"Bouncy Castle Hybrid Entropy Provider");
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom

- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(self, url);
  return self;
}

- (void)setSeedWithByteArray:(IOSByteArray *)seed {
}

- (void)setSeedWithLong:(jlong)seed {
}

- (IOSByteArray *)generateSeedWithInt:(jint)numBytes {
  @synchronized(self) {
    IOSByteArray *data = [IOSByteArray newArrayWithLength:numBytes];
    jint off = 0;
    jint len;
    while (off != data->size_ && (len = LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_privilegedReadWithByteArray_withInt_withInt_(self, data, off, data->size_ - off)) > -1) {
      off += len;
    }
    if (off != data->size_) {
      @throw new_JavaLangInternalError_initWithNSString_(@"unable to fully read random source");
    }
    return data;
  }
}

- (jint)privilegedReadWithByteArray:(IOSByteArray *)data
                            withInt:(jint)off
                            withInt:(jint)len {
  return LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_privilegedReadWithByteArray_withInt_withInt_(self, data, off, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaNetURL:);
  methods[1].selector = @selector(setSeedWithByteArray:);
  methods[2].selector = @selector(setSeedWithLong:);
  methods[3].selector = @selector(generateSeedWithInt:);
  methods[4].selector = @selector(privilegedReadWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seedStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNetURL;", "setSeed", "[B", "J", "generateSeed", "I", "privilegedRead", "[BII", "LLibOrgBouncycastleJcajceProviderDrbgDRBG;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom = { "URLSeededSecureRandom", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0xa, 5, 1, 8, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *self, JavaNetURL *url) {
  JavaSecuritySecureRandom_initWithJavaSecuritySecureRandomSpi_withJavaSecurityProvider_(self, nil, new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init());
  self->seedStream_ = JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(url));
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom, initWithJavaNetURL_, url)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom, initWithJavaNetURL_, url)
}

jint LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_privilegedReadWithByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *self, IOSByteArray *data, jint off, jint len) {
  return [((JavaLangInteger *) nil_chk(JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(self, data, off, len)))) intValue];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1

- (instancetype)initWithJavaNetURL:(JavaNetURL *)capture$0 {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(self, capture$0);
  return self;
}

- (JavaIoInputStream *)run {
  @try {
    return [((JavaNetURL *) nil_chk(val$url_)) openStream];
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangInternalError_initWithNSString_(@"unable to open random source");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaNetURL:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$url_", "LJavaNetURL;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom;", "initWithJavaNetURL:", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/io/InputStream;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 1, 2, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *self, JavaNetURL *capture$0) {
  self->val$url_ = capture$0;
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(JavaNetURL *capture$0) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1, initWithJavaNetURL_, capture$0)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1_initWithJavaNetURL_(JavaNetURL *capture$0) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_1, initWithJavaNetURL_, capture$0)
}

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *)outer$
                                                                         withByteArray:(IOSByteArray *)capture$0
                                                                               withInt:(jint)capture$1
                                                                               withInt:(jint)capture$2 {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (JavaLangInteger *)run {
  @try {
    return JavaLangInteger_valueOfWithInt_([((JavaIoInputStream *) nil_chk(this$0_->seedStream_)) readWithByteArray:val$data_ withInt:val$off_ withInt:val$len_]);
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangInternalError_initWithNSString_(@"unable to read random source");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom:withByteArray:withInt:withInt:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$data_", "[B", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$off_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$len_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom;", "privilegedReadWithByteArray:withInt:withInt:", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x8010, 2, 4, 0, -1, 1, 2, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2) {
  self->this$0_ = outer$;
  self->val$data_ = capture$0;
  self->val$off_ = capture$1;
  self->val$len_ = capture$2;
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_, outer$, capture$0, capture$1, capture$2)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom *outer$, IOSByteArray *capture$0, jint capture$1, jint capture$2) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_2, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_URLSeededSecureRandom_withByteArray_withInt_withInt_, outer$, capture$0, capture$1, capture$2)
}

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setSeedWithByteArray:(IOSByteArray *)seed {
  if (drbg_ != nil) {
    [drbg_ setSeedWithByteArray:seed];
  }
}

- (void)setSeedWithLong:(jlong)seed {
  if (drbg_ != nil) {
    [drbg_ setSeedWithLong:seed];
  }
}

- (IOSByteArray *)generateSeedWithInt:(jint)numBytes {
  IOSByteArray *data = [IOSByteArray newArrayWithLength:numBytes];
  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(samples_)) getAndIncrement] > 20) {
    if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(seedAvailable_)) getAndSetWithBoolean:false]) {
      [samples_ setWithInt:0];
      [((LibOrgBouncycastleCryptoPrngSP800SecureRandom *) nil_chk(drbg_)) reseedWithByteArray:nil];
    }
  }
  [((LibOrgBouncycastleCryptoPrngSP800SecureRandom *) nil_chk(drbg_)) nextBytesWithByteArray:data];
  return data;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setSeedWithByteArray:);
  methods[2].selector = @selector(setSeedWithLong:);
  methods[3].selector = @selector(generateSeedWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seedAvailable_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "samples_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "baseRandom_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "drbg_", "LLibOrgBouncycastleCryptoPrngSP800SecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setSeed", "[B", "J", "generateSeed", "I", "LLibOrgBouncycastleJcajceProviderDrbgDRBG;", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom = { "HybridSecureRandom", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0xa, 4, 4, 5, 6, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *self) {
  JavaSecuritySecureRandom_initWithJavaSecuritySecureRandomSpi_withJavaSecurityProvider_(self, nil, new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridRandomProvider_init());
  self->seedAvailable_ = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  self->samples_ = new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(0);
  self->baseRandom_ = LibOrgBouncycastleJcajceProviderDrbgDRBG_createInitialEntropySource();
  self->drbg_ = [((LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder *) nil_chk([new_LibOrgBouncycastleCryptoPrngSP800SecureRandomBuilder_initWithLibOrgBouncycastleCryptoPrngEntropySourceProvider_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(self)) setPersonalizationStringWithByteArray:LibOrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"Bouncy Castle Hybrid Entropy Source")])) buildHMACWithLibOrgBouncycastleCryptoMac:new_LibOrgBouncycastleCryptoMacsHMac_initWithLibOrgBouncycastleCryptoDigest_(new_LibOrgBouncycastleCryptoDigestsSHA512Digest_init()) withByteArray:[((JavaSecuritySecureRandom *) nil_chk(self->baseRandom_)) generateSeedWithInt:32] withBoolean:false];
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, init)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *)outer$ {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(self, outer$);
  return self;
}

- (id<LibOrgBouncycastleCryptoPrngEntropySource>)getWithInt:(jint)bitsRequired {
  return new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(this$0_, bitsRequired);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleCryptoPrngEntropySource;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:);
  methods[1].selector = @selector(getWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "get", "I", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;", "init" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 = { "", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_, outer$)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1 *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_1, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_, outer$)
}

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *)outer$
                                                                            withInt:(jint)bitsRequired {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(self, outer$, bitsRequired);
  return self;
}

- (jboolean)isPredictionResistant {
  return true;
}

- (IOSByteArray *)getEntropy {
  IOSByteArray *seed = (IOSByteArray *) cast_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(entropy_)) getAndSetWithId:nil], [IOSByteArray class]);
  if (seed == nil || seed->size_ != byteLength_) {
    seed = [((JavaSecuritySecureRandom *) nil_chk(this$0_->baseRandom_)) generateSeedWithInt:byteLength_];
  }
  else {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(scheduled_)) setWithBoolean:false];
  }
  if (![((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(scheduled_)) getAndSetWithBoolean:true]) {
    [new_JavaLangThread_initWithJavaLangRunnable_(new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(self, byteLength_)) start];
  }
  return seed;
}

- (jint)entropySize {
  return byteLength_ * 8;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom:withInt:);
  methods[1].selector = @selector(isPredictionResistant);
  methods[2].selector = @selector(getEntropy);
  methods[3].selector = @selector(entropySize);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "byteLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "entropy_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduled_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom;", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource = { "SignallingEntropySource", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x2, 4, 4, 1, 2, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->entropy_ = new_JavaUtilConcurrentAtomicAtomicReference_init();
  self->scheduled_ = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  self->byteLength_ = (bitsRequired + 7) / 8;
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_, outer$, bitsRequired)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom *outer$, jint bitsRequired) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_withInt_, outer$, bitsRequired)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource)

@implementation LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer

- (instancetype)initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource:(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *)outer$
                                                                                                    withInt:(jint)numBytes {
  LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(self, outer$, numBytes);
  return self;
}

- (void)run {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(this$0_->entropy_)) setWithId:[((JavaSecuritySecureRandom *) nil_chk(this$0_->this$0_->baseRandom_)) generateSeedWithInt:numBytes_]];
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->this$0_->seedAvailable_)) setWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource:withInt:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "numBytes_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer = { "EntropyGatherer", "lib.org.bouncycastle.jcajce.provider.drbg", ptrTable, methods, fields, 7, 0x2, 2, 2, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer;
}

@end

void LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *self, LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->numBytes_ = numBytes;
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *new_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_, outer$, numBytes)
}

LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer *create_LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer_initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource *outer$, jint numBytes) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer, initWithLibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_withInt_, outer$, numBytes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderDrbgDRBG_HybridSecureRandom_SignallingEntropySource_EntropyGatherer)
