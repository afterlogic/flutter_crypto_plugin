//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/UserIDPacket.java
//

#include "Arrays.h"
#include "BCPGInputStream.h"
#include "BCPGOutputStream.h"
#include "ContainedPacket.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PacketTags.h"
#include "Strings.h"
#include "UserIDPacket.h"

@interface LibOrgBouncycastleBcpgUserIDPacket () {
 @public
  IOSByteArray *idData_;
}

@end

J2OBJC_FIELD_SETTER(LibOrgBouncycastleBcpgUserIDPacket, idData_, IOSByteArray *)

@implementation LibOrgBouncycastleBcpgUserIDPacket

- (instancetype)initWithLibOrgBouncycastleBcpgBCPGInputStream:(LibOrgBouncycastleBcpgBCPGInputStream *)inArg {
  LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)id_ {
  LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(self, id_);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)rawID {
  LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(self, rawID);
  return self;
}

- (NSString *)getID {
  return LibOrgBouncycastleUtilStrings_fromUTF8ByteArrayWithByteArray_(idData_);
}

- (IOSByteArray *)getRawID {
  return LibOrgBouncycastleUtilArrays_cloneWithByteArray_(idData_);
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[LibOrgBouncycastleBcpgUserIDPacket class]]) {
    return LibOrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(self->idData_, ((LibOrgBouncycastleBcpgUserIDPacket *) nil_chk(((LibOrgBouncycastleBcpgUserIDPacket *) o)))->idData_);
  }
  return false;
}

- (NSUInteger)hash {
  return LibOrgBouncycastleUtilArrays_hashCodeWithByteArray_(self->idData_);
}

- (void)encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:(LibOrgBouncycastleBcpgBCPGOutputStream *)outArg {
  [((LibOrgBouncycastleBcpgBCPGOutputStream *) nil_chk(outArg)) writePacketWithInt:LibOrgBouncycastleBcpgPacketTags_USER_ID withByteArray:idData_ withBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLibOrgBouncycastleBcpgBCPGInputStream:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(getID);
  methods[4].selector = @selector(getRawID);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(encodeWithLibOrgBouncycastleBcpgBCPGOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "idData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LLibOrgBouncycastleBcpgBCPGInputStream;", "LJavaIoIOException;", "LNSString;", "[B", "equals", "LNSObject;", "hashCode", "encode", "LLibOrgBouncycastleBcpgBCPGOutputStream;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgUserIDPacket = { "UserIDPacket", "lib.org.bouncycastle.bcpg", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgUserIDPacket;
}

@end

void LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgUserIDPacket *self, LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  LibOrgBouncycastleBcpgContainedPacket_init(self);
  self->idData_ = [((LibOrgBouncycastleBcpgBCPGInputStream *) nil_chk(inArg)) readAll];
}

LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithLibOrgBouncycastleBcpgBCPGInputStream_(LibOrgBouncycastleBcpgBCPGInputStream *inArg) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithLibOrgBouncycastleBcpgBCPGInputStream_, inArg)
}

void LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(LibOrgBouncycastleBcpgUserIDPacket *self, NSString *id_) {
  LibOrgBouncycastleBcpgContainedPacket_init(self);
  self->idData_ = LibOrgBouncycastleUtilStrings_toUTF8ByteArrayWithNSString_(id_);
}

LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(NSString *id_) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithNSString_, id_)
}

LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithNSString_(NSString *id_) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithNSString_, id_)
}

void LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(LibOrgBouncycastleBcpgUserIDPacket *self, IOSByteArray *rawID) {
  LibOrgBouncycastleBcpgContainedPacket_init(self);
  self->idData_ = LibOrgBouncycastleUtilArrays_cloneWithByteArray_(rawID);
}

LibOrgBouncycastleBcpgUserIDPacket *new_LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(IOSByteArray *rawID) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithByteArray_, rawID)
}

LibOrgBouncycastleBcpgUserIDPacket *create_LibOrgBouncycastleBcpgUserIDPacket_initWithByteArray_(IOSByteArray *rawID) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgUserIDPacket, initWithByteArray_, rawID)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgUserIDPacket)
