//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/bcpg/sig/Features.java
//

#include "Features.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SignatureSubpacket.h"
#include "SignatureSubpacketTags.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"

@interface LibOrgBouncycastleBcpgSigFeatures ()

+ (IOSByteArray *)featureToByteArrayWithByte:(jbyte)feature;

- (void)setSupportsFeatureWithByte:(jbyte)feature
                       withBoolean:(jboolean)support;

@end

__attribute__((unused)) static IOSByteArray *LibOrgBouncycastleBcpgSigFeatures_featureToByteArrayWithByte_(jbyte feature);

__attribute__((unused)) static void LibOrgBouncycastleBcpgSigFeatures_setSupportsFeatureWithByte_withBoolean_(LibOrgBouncycastleBcpgSigFeatures *self, jbyte feature, jboolean support);

@implementation LibOrgBouncycastleBcpgSigFeatures

+ (jbyte)FEATURE_MODIFICATION_DETECTION {
  return LibOrgBouncycastleBcpgSigFeatures_FEATURE_MODIFICATION_DETECTION;
}

+ (IOSByteArray *)featureToByteArrayWithByte:(jbyte)feature {
  return LibOrgBouncycastleBcpgSigFeatures_featureToByteArrayWithByte_(feature);
}

- (instancetype)initWithBoolean:(jboolean)critical
                    withBoolean:(jboolean)isLongLength
                  withByteArray:(IOSByteArray *)data {
  LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withBoolean_withByteArray_(self, critical, isLongLength, data);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)critical
                       withByte:(jbyte)feature {
  LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withByte_(self, critical, feature);
  return self;
}

- (jboolean)supportsModificationDetection {
  return [self supportsFeatureWithByte:LibOrgBouncycastleBcpgSigFeatures_FEATURE_MODIFICATION_DETECTION];
}

- (jboolean)supportsFeatureWithByte:(jbyte)feature {
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(data_))->size_; i++) {
    if (IOSByteArray_Get(data_, i) == feature) {
      return true;
    }
  }
  return false;
}

- (void)setSupportsFeatureWithByte:(jbyte)feature
                       withBoolean:(jboolean)support {
  LibOrgBouncycastleBcpgSigFeatures_setSupportsFeatureWithByte_withBoolean_(self, feature, support);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x1a, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(featureToByteArrayWithByte:);
  methods[1].selector = @selector(initWithBoolean:withBoolean:withByteArray:);
  methods[2].selector = @selector(initWithBoolean:withByte:);
  methods[3].selector = @selector(supportsModificationDetection);
  methods[4].selector = @selector(supportsFeatureWithByte:);
  methods[5].selector = @selector(setSupportsFeatureWithByte:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FEATURE_MODIFICATION_DETECTION", "B", .constantValue.asChar = LibOrgBouncycastleBcpgSigFeatures_FEATURE_MODIFICATION_DETECTION, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "featureToByteArray", "B", "ZZ[B", "ZB", "supportsFeature", "setSupportsFeature", "BZ" };
  static const J2ObjcClassInfo _LibOrgBouncycastleBcpgSigFeatures = { "Features", "lib.org.bouncycastle.bcpg.sig", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleBcpgSigFeatures;
}

@end

IOSByteArray *LibOrgBouncycastleBcpgSigFeatures_featureToByteArrayWithByte_(jbyte feature) {
  LibOrgBouncycastleBcpgSigFeatures_initialize();
  IOSByteArray *data = [IOSByteArray newArrayWithLength:1];
  *IOSByteArray_GetRef(data, 0) = feature;
  return data;
}

void LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withBoolean_withByteArray_(LibOrgBouncycastleBcpgSigFeatures *self, jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_FEATURES, critical, isLongLength, data);
}

LibOrgBouncycastleBcpgSigFeatures *new_LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigFeatures, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

LibOrgBouncycastleBcpgSigFeatures *create_LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withBoolean_withByteArray_(jboolean critical, jboolean isLongLength, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigFeatures, initWithBoolean_withBoolean_withByteArray_, critical, isLongLength, data)
}

void LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withByte_(LibOrgBouncycastleBcpgSigFeatures *self, jboolean critical, jbyte feature) {
  LibOrgBouncycastleBcpgSignatureSubpacket_initWithInt_withBoolean_withBoolean_withByteArray_(self, LibOrgBouncycastleBcpgSignatureSubpacketTags_FEATURES, critical, false, LibOrgBouncycastleBcpgSigFeatures_featureToByteArrayWithByte_(feature));
}

LibOrgBouncycastleBcpgSigFeatures *new_LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withByte_(jboolean critical, jbyte feature) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleBcpgSigFeatures, initWithBoolean_withByte_, critical, feature)
}

LibOrgBouncycastleBcpgSigFeatures *create_LibOrgBouncycastleBcpgSigFeatures_initWithBoolean_withByte_(jboolean critical, jbyte feature) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleBcpgSigFeatures, initWithBoolean_withByte_, critical, feature)
}

void LibOrgBouncycastleBcpgSigFeatures_setSupportsFeatureWithByte_withBoolean_(LibOrgBouncycastleBcpgSigFeatures *self, jbyte feature, jboolean support) {
  if (feature == 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"feature == 0");
  }
  if ([self supportsFeatureWithByte:feature] != support) {
    if (support == true) {
      IOSByteArray *temp = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(self->data_))->size_ + 1];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->data_, 0, temp, 0, self->data_->size_);
      *IOSByteArray_GetRef(temp, ((IOSByteArray *) nil_chk(self->data_))->size_) = feature;
      self->data_ = temp;
    }
    else {
      for (jint i = 0; i < ((IOSByteArray *) nil_chk(self->data_))->size_; i++) {
        if (IOSByteArray_Get(self->data_, i) == feature) {
          IOSByteArray *temp = [IOSByteArray newArrayWithLength:self->data_->size_ - 1];
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->data_, 0, temp, 0, i);
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->data_, i + 1, temp, i, temp->size_ - i);
          self->data_ = temp;
          break;
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleBcpgSigFeatures)
