//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/jcajce/provider/symmetric/GOST3412_2015.java
//

#include "AlgorithmProvider.h"
#include "BaseBlockCipher.h"
#include "BaseKeyGenerator.h"
#include "BaseMac.h"
#include "BufferedBlockCipher.h"
#include "CMac.h"
#include "CipherKeyGenerator.h"
#include "ConfigurableProvider.h"
#include "G3413CBCBlockCipher.h"
#include "G3413CFBBlockCipher.h"
#include "G3413CTRBlockCipher.h"
#include "G3413OFBBlockCipher.h"
#include "GOST3412_2015.h"
#include "GOST3412_2015Engine.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"

inline NSString *LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_get_PREFIX(void);
static NSString *LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings, PREFIX, NSString *)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen;LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015 = { "GOST3412_2015", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015 *self) {
  NSObject_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015 *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015 *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB = { "ECB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(self, new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init());
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_ECB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC = { "CBC", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withBoolean_withInt_(self, new_LibOrgBouncycastleCryptoModesG3413CBCBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init()), false, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CBC)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB = { "GCFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withBoolean_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesG3413CFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init())), false, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8 = { "GCFB8", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8 *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withBoolean_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesG3413CFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_withInt_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init(), 8)), false, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8 *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8 *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_GCFB8)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB = { "OFB", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withBoolean_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesG3413OFBBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init())), false, 128);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_OFB)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR = { "CTR", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseBlockCipher_initWithLibOrgBouncycastleCryptoBufferedBlockCipher_withInt_(self, new_LibOrgBouncycastleCryptoBufferedBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoModesG3413CTRBlockCipher_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init())), 128);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_CTR)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac = { "Mac", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac *self) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseMac_initWithLibOrgBouncycastleCryptoMac_(self, new_LibOrgBouncycastleCryptoMacsCMac_initWithLibOrgBouncycastleCryptoBlockCipher_(new_LibOrgBouncycastleCryptoEnginesGOST3412_2015Engine_init()));
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mac)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)keySize {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_initWithInt_(self, keySize);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen = { "KeyGen", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen;
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *self) {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_initWithInt_(self, 256);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen, init)
}

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_initWithInt_(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *self, jint keySize) {
  LibOrgBouncycastleJcajceProviderSymmetricUtilBaseKeyGenerator_initWithNSString_withInt_withLibOrgBouncycastleCryptoCipherKeyGenerator_(self, @"GOST3412-2015", keySize, new_LibOrgBouncycastleCryptoCipherKeyGenerator_init());
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen, initWithInt_, keySize)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen_initWithInt_(jint keySize) {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen, initWithInt_, keySize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_KeyGen)

J2OBJC_INITIALIZED_DEFN(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings)

@implementation LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  [((id<LibOrgBouncycastleJcajceProviderConfigConfigurableProvider>) nil_chk(provider)) addAlgorithmWithNSString:@"Cipher.GOST3412-2015" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$ECB")];
  [provider addAlgorithmWithNSString:@"Cipher.GOST3412-2015/CFB" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$GCFB")];
  [provider addAlgorithmWithNSString:@"Cipher.GOST3412-2015/CFB8" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$GCFB8")];
  [provider addAlgorithmWithNSString:@"Cipher.GOST3412-2015/OFB" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$OFB")];
  [provider addAlgorithmWithNSString:@"Cipher.GOST3412-2015/CBC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$CBC")];
  [provider addAlgorithmWithNSString:@"Cipher.GOST3412-2015/CTR" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$CTR")];
  [provider addAlgorithmWithNSString:@"KeyGenerator.GOST3412-2015" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$KeyGen")];
  
  ;
  [provider addAlgorithmWithNSString:@"Mac.GOST3412MAC" withNSString:JreStrcat("$$", LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, @"$Mac")];
  [provider addAlgorithmWithNSString:@"Alg.Alias.Mac.GOST3412-2015" withNSString:@"GOST3412MAC"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithLibOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "configure", "LLibOrgBouncycastleJcajceProviderConfigConfigurableProvider;", &LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX, "LLibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings = { "Mappings", "lib.org.bouncycastle.jcajce.provider.symmetric", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings;
}

+ (void)initialize {
  if (self == [LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings class]) {
    LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_PREFIX = [LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_class_() getName];
    J2OBJC_SET_INITIALIZED(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings)
  }
}

@end

void LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_init(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings *self) {
  LibOrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings *new_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_init() {
  J2OBJC_NEW_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings, init)
}

LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings *create_LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings_init() {
  J2OBJC_CREATE_IMPL(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleJcajceProviderSymmetricGOST3412_2015_Mappings)
