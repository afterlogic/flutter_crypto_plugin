//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/PublicKeyDataObject.java
//

#include "ASN1Encodable.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Sequence.h"
#include "Asn1EacRSAPublicKey.h"
#include "EACObjectIdentifiers.h"
#include "ECDSAPublicKey.h"
#include "J2ObjC_source.h"
#include "PublicKeyDataObject.h"

@implementation LibOrgBouncycastleAsn1EacPublicKeyDataObject

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (LibOrgBouncycastleAsn1EacPublicKeyDataObject *)getInstanceWithId:(id)obj {
  return LibOrgBouncycastleAsn1EacPublicKeyDataObject_getInstanceWithId_(obj);
}

- (LibOrgBouncycastleAsn1ASN1ObjectIdentifier *)getUsage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1EacPublicKeyDataObject;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getUsage);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getInstance", "LNSObject;" };
  static const J2ObjcClassInfo _LibOrgBouncycastleAsn1EacPublicKeyDataObject = { "PublicKeyDataObject", "lib.org.bouncycastle.asn1.eac", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_LibOrgBouncycastleAsn1EacPublicKeyDataObject;
}

@end

void LibOrgBouncycastleAsn1EacPublicKeyDataObject_init(LibOrgBouncycastleAsn1EacPublicKeyDataObject *self) {
  LibOrgBouncycastleAsn1ASN1Object_init(self);
}

LibOrgBouncycastleAsn1EacPublicKeyDataObject *LibOrgBouncycastleAsn1EacPublicKeyDataObject_getInstanceWithId_(id obj) {
  LibOrgBouncycastleAsn1EacPublicKeyDataObject_initialize();
  if ([obj isKindOfClass:[LibOrgBouncycastleAsn1EacPublicKeyDataObject class]]) {
    return (LibOrgBouncycastleAsn1EacPublicKeyDataObject *) obj;
  }
  if (obj != nil) {
    LibOrgBouncycastleAsn1ASN1Sequence *seq = LibOrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj);
    LibOrgBouncycastleAsn1ASN1ObjectIdentifier *usage = LibOrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([((LibOrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
    if ([((LibOrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(usage)) onWithLibOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(LibOrgBouncycastleAsn1EacEACObjectIdentifiers, id_TA_ECDSA)]) {
      return new_LibOrgBouncycastleAsn1EacECDSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(seq);
    }
    else {
      return new_LibOrgBouncycastleAsn1EacAsn1EacRSAPublicKey_initWithLibOrgBouncycastleAsn1ASN1Sequence_(seq);
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LibOrgBouncycastleAsn1EacPublicKeyDataObject)
