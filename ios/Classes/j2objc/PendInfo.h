//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/cmc/PendInfo.java
//

#ifndef PendInfo_H
#define PendInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class LibOrgBouncycastleAsn1ASN1GeneralizedTime;
@class LibOrgBouncycastleAsn1ASN1Primitive;

@interface LibOrgBouncycastleAsn1CmcPendInfo : LibOrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)pendToken
withLibOrgBouncycastleAsn1ASN1GeneralizedTime:(LibOrgBouncycastleAsn1ASN1GeneralizedTime *)pendTime;

+ (LibOrgBouncycastleAsn1CmcPendInfo *)getInstanceWithId:(id)o;

- (LibOrgBouncycastleAsn1ASN1GeneralizedTime *)getPendTime;

- (IOSByteArray *)getPendToken;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1CmcPendInfo)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CmcPendInfo_initWithByteArray_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_(LibOrgBouncycastleAsn1CmcPendInfo *self, IOSByteArray *pendToken, LibOrgBouncycastleAsn1ASN1GeneralizedTime *pendTime);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcPendInfo *new_LibOrgBouncycastleAsn1CmcPendInfo_initWithByteArray_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_(IOSByteArray *pendToken, LibOrgBouncycastleAsn1ASN1GeneralizedTime *pendTime) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcPendInfo *create_LibOrgBouncycastleAsn1CmcPendInfo_initWithByteArray_withLibOrgBouncycastleAsn1ASN1GeneralizedTime_(IOSByteArray *pendToken, LibOrgBouncycastleAsn1ASN1GeneralizedTime *pendTime);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CmcPendInfo *LibOrgBouncycastleAsn1CmcPendInfo_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CmcPendInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PendInfo_H
