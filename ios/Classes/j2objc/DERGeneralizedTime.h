//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/DERGeneralizedTime.java
//

#ifndef DERGeneralizedTime_H
#define DERGeneralizedTime_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1GeneralizedTime.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaUtilDate;
@class JavaUtilLocale;
@class LibOrgBouncycastleAsn1ASN1OutputStream;

@interface LibOrgBouncycastleAsn1DERGeneralizedTime : LibOrgBouncycastleAsn1ASN1GeneralizedTime

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)time;

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)time;

- (instancetype __nonnull)initWithNSString:(NSString *)time;

#pragma mark Package-Private

- (void)encodeWithLibOrgBouncycastleAsn1ASN1OutputStream:(LibOrgBouncycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilDate:(JavaUtilDate *)arg0
                            withJavaUtilLocale:(JavaUtilLocale *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1DERGeneralizedTime)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, IOSByteArray *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, JavaUtilDate *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(LibOrgBouncycastleAsn1DERGeneralizedTime *self, NSString *time);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *new_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1DERGeneralizedTime *create_LibOrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1DERGeneralizedTime)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DERGeneralizedTime_H
