//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/eac/Flags.java
//

#ifndef Flags_H
#define Flags_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilHashtable;

@interface LibOrgBouncycastleAsn1EacFlags : NSObject {
 @public
  jint value_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)v;

- (jint)getFlags;

- (jboolean)isSetWithInt:(jint)flag;

- (void)setWithInt:(jint)flag;

#pragma mark Package-Private

- (NSString *)decodeWithJavaUtilHashtable:(JavaUtilHashtable *)decodeMap;

@end

J2OBJC_EMPTY_STATIC_INIT(LibOrgBouncycastleAsn1EacFlags)

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacFlags_init(LibOrgBouncycastleAsn1EacFlags *self);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacFlags *new_LibOrgBouncycastleAsn1EacFlags_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacFlags *create_LibOrgBouncycastleAsn1EacFlags_init(void);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1EacFlags_initWithInt_(LibOrgBouncycastleAsn1EacFlags *self, jint v);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacFlags *new_LibOrgBouncycastleAsn1EacFlags_initWithInt_(jint v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1EacFlags *create_LibOrgBouncycastleAsn1EacFlags_initWithInt_(jint v);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1EacFlags)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Flags_H
