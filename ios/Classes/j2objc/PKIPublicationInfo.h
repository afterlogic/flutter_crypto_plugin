//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/org/bouncycastle/asn1/crmf/PKIPublicationInfo.java
//

#ifndef PKIPublicationInfo_H
#define PKIPublicationInfo_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ASN1Object.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaMathBigInteger;
@class LibOrgBouncycastleAsn1ASN1Integer;
@class LibOrgBouncycastleAsn1ASN1Primitive;
@class LibOrgBouncycastleAsn1CrmfSinglePubInfo;

@interface LibOrgBouncycastleAsn1CrmfPKIPublicationInfo : LibOrgBouncycastleAsn1ASN1Object
@property (readonly, class) LibOrgBouncycastleAsn1ASN1Integer *dontPublish NS_SWIFT_NAME(dontPublish);
@property (readonly, class) LibOrgBouncycastleAsn1ASN1Integer *pleasePublish NS_SWIFT_NAME(pleasePublish);

+ (LibOrgBouncycastleAsn1ASN1Integer *)dontPublish;

+ (LibOrgBouncycastleAsn1ASN1Integer *)pleasePublish;

#pragma mark Public

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1ASN1Integer:(LibOrgBouncycastleAsn1ASN1Integer *)action;

- (instancetype __nonnull)initWithJavaMathBigInteger:(JavaMathBigInteger *)action;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfSinglePubInfo:(LibOrgBouncycastleAsn1CrmfSinglePubInfo *)pubInfo;

- (instancetype __nonnull)initWithLibOrgBouncycastleAsn1CrmfSinglePubInfoArray:(IOSObjectArray *)pubInfos;

- (LibOrgBouncycastleAsn1ASN1Integer *)getAction;

+ (LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *)getInstanceWithId:(id)o;

- (IOSObjectArray *)getPubInfos;

- (LibOrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo)

inline LibOrgBouncycastleAsn1ASN1Integer *LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_get_dontPublish(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Integer *LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_dontPublish;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo, dontPublish, LibOrgBouncycastleAsn1ASN1Integer *)

inline LibOrgBouncycastleAsn1ASN1Integer *LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_get_pleasePublish(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT LibOrgBouncycastleAsn1ASN1Integer *LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_pleasePublish;
J2OBJC_STATIC_FIELD_OBJ_FINAL(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo, pleasePublish, LibOrgBouncycastleAsn1ASN1Integer *)

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_getInstanceWithId_(id o);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithJavaMathBigInteger_(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *self, JavaMathBigInteger *action);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *new_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithJavaMathBigInteger_(JavaMathBigInteger *action) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *create_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithJavaMathBigInteger_(JavaMathBigInteger *action);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *self, LibOrgBouncycastleAsn1ASN1Integer *action);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *new_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1ASN1Integer *action) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *create_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1ASN1Integer_(LibOrgBouncycastleAsn1ASN1Integer *action);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfo_(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *self, LibOrgBouncycastleAsn1CrmfSinglePubInfo *pubInfo);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *new_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfo_(LibOrgBouncycastleAsn1CrmfSinglePubInfo *pubInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *create_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfo_(LibOrgBouncycastleAsn1CrmfSinglePubInfo *pubInfo);

FOUNDATION_EXPORT void LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfoArray_(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *self, IOSObjectArray *pubInfos);

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *new_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfoArray_(IOSObjectArray *pubInfos) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT LibOrgBouncycastleAsn1CrmfPKIPublicationInfo *create_LibOrgBouncycastleAsn1CrmfPKIPublicationInfo_initWithLibOrgBouncycastleAsn1CrmfSinglePubInfoArray_(IOSObjectArray *pubInfos);

J2OBJC_TYPE_LITERAL_HEADER(LibOrgBouncycastleAsn1CrmfPKIPublicationInfo)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // PKIPublicationInfo_H
